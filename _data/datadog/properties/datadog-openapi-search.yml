openapi: 3.0.0
info:
  title: Datadog API Collection
  description: >-
    **Note**: The Datadog API Collection features a streamlined process for
    configuring authentication through [Collection
    variables](https://learning.postman.com/docs/sending-requests/variables/variables/#defining-collection-variables).
    This eliminates the previous need to configure and select the Datadog
    Authentication environment. To access the legacy Datadog API Collection and
    authentication process, see the [Legacy Datadog API
    Collection](https://www.postman.com/datadog/workspace/datadog-s-public-workspace/collection/31135111-690dad6a-a926-4eb5-a826-bd7140530209).


    If you're new to Postman, see the [Navigating
    Postman](https://learning.postman.com/docs/getting-started/basics/navigating-postman/)
    page to learn about the tools, views, and controls that help you manage your
    API projects.


    Datadog recommends using the **Validate API key** request to ensure that
    you’ve correctly configured the collection variables with your Datadog
    credentials.


    If you haven’t already, configure the Datadog API Collection’s `api_key` and
    `application_key` values with your valid [Datadog API and application
    key](https://docs.datadoghq.com/account_management/api-app-keys/) values,
    respectively:


    <img
    src="https://lh7-us.googleusercontent.com/YDIVdEB5ZmXJXMgTka3R9rQ4rBm_LHceARzLzQAT17ME88tPHIp5-3XpmRWMNqPYvRSh9ZPJN0mJIGmPTRi8bnpbkWW1kGMx270P8kg3fmSAHQqkucg-L2xd_RR98CMASng-H9m_hI3RBkI2ozVjErM"
    alt="The%20collection%20variables%20of%20the%20Datadog%20API%20Collection,%20with%20the%20api_key%20and%20application_key%20variables%20configured">


    With the collection variables configured, send the [Validate API
    key](https://www.postman.com/datadog/workspace/datadog-s-public-workspace/request/20651290-e4c2d752-526c-4686-a5eb-5a35e1321236)
    request to get your first 200 response code. Now you’re ready to explore the
    Datadog API!


    For the official documentation, see the [API
    reference](https://docs.datadoghq.com/api/latest/).


    This API collection was last updated on June 18, 2024.
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
  - url: https://{{subdomain}}.{{site}}
  - url: https://http-intake.logs.{{site}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Get started
    description: >-
      This folder provides instructions for the initial setup of your Datadog
      Postman environment.
  - name: 'Get started > Step 1: Fork the collection'
    description: >-
      1. [Fork this
      collection](https://www.postman.com/datadog/workspace/datadog-s-public-workspace/collection/20651290-809b13c1-4ada-46c1-af65-ab276c434068/fork).

      2. Optionally, update the default label.

      3. Confirm that **My Workspace** is selected in the **Workspace**
      dropdown.
          
      4. Click **Fork Collection**.
  - name: 'Get started > Step 2: Configure authentication'
    description: >-
      1. Retrieve or create your valid API and application key values from the
      [Organization Settings](https://app.datadoghq.com/organization-settings/)
      page in Datadog, or through the [Datadog
      API](https://docs.datadoghq.com/api/latest/key-management/).

      2. Select the **Datadog API Collection** in Postman.

      3. Click the **Variables** tab.

      4. Enter your API and application key values in the **Current value**
      field of the `api_key` and `application_key` variables, respectively:
          

      <img
      src="https://lh7-us.googleusercontent.com/UKyhmQE2XiYJ01KieWhuX0Tkr-FcTWaqW4lnmIJr_LQ7bm2yFTfuqcrf8mx00q_RZgYXhPbl98S-tRDWVrpE65CRrP9Fv1m_jvCi6Sr0aQWjX_3bGcw4bhsOFprNEADqyJZ-gQ9Dr2RE1MsoTxhmj1Y">


      5\. Click **Save**.
  - name: APM Retention Filters
    description: >-
      Manage configuration of [APM retention
      filters](https://app.datadoghq.com/apm/traces/retention-filters) for your
      organization. You need an API and application key with Admin rights to
      interact with this endpoint. See [retention
      filters](https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/#retention-filters)
      on the Trace Retention page for more information.
  - name: Audit
    description: Search your Audit Logs events over HTTP.
  - name: Authentication
    description: >-
      All requests to Datadog’s API must be authenticated.

      Requests that write data require reporting access and require an `API
      key`.

      Requests that read data require full access and also require an
      `application key`.


      **Note:** All Datadog API clients are configured by default to consume
      Datadog US site APIs.

      If you are on the Datadog EU site, set the environment variable
      `DATADOG_HOST` to

      `https://api.datadoghq.eu` or override this value directly when creating
      your client.


      [Manage your account’s API and application
      keys](https://app.datadoghq.com/organization-settings/) in Datadog, and
      see the [API and Application Keys
      page](https://docs.datadoghq.com/account_management/api-app-keys/) in the
      documentation.
  - name: AuthN Mappings
    description: >-
      [The AuthN Mappings
      API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)

      is used to automatically map groups of users to roles in Datadog using
      attributes

      sent from Identity Providers. Use these endpoints to manage your AuthN
      Mappings.
  - name: AWS Integration
    description: >-
      Configure your Datadog-AWS integration directly through the Datadog API.

      For more information, see the [AWS integration
      page](https://docs.datadoghq.com/integrations/amazon_web_services).
  - name: AWS Logs Integration
    description: >-
      Configure your Datadog-AWS-Logs integration directly through Datadog API.

      For more information, see the [AWS integration
      page](https://docs.datadoghq.com/integrations/amazon_web_services/#log-collection).
  - name: Azure Integration
    description: >-
      Configure your Datadog-Azure integration directly through the Datadog API.

      For more information, see the [Datadog-Azure integration
      page](https://docs.datadoghq.com/integrations/azure).
  - name: Case Management
    description: >-
      View and manage cases and projects within Case Management. See the [Case
      Management
      page](https://docs.datadoghq.com/service_management/case_management/) for
      more information.
  - name: CI Visibility Pipelines
    description: >-
      Search or aggregate your CI Visibility pipeline events and send them to
      your Datadog site over HTTP. See the [CI Pipeline Visibility in Datadog
      page](https://docs.datadoghq.com/continuous_integration/pipelines/) for
      more information.
  - name: CI Visibility Tests
    description: >-
      Search or aggregate your CI Visibility test events over HTTP. See the
      [Test Visibility in Datadog page](https://docs.datadoghq.com/tests/) for
      more information.
  - name: Cloud Cost Management
    description: >-
      The Cloud Cost Management API allows you to set up, edit, and delete Cloud
      Cost Management accounts for AWS and Azure. See the [Cloud Cost Management
      page](https://docs.datadoghq.com/cloud_cost_management/) for more
      information.
  - name: Cloud Workload Security
    description: >-
      Workload activity security rules for generating events using the Datadog
      security Agent. See the [Setting up CSM Workload Security
      page](https://docs.datadoghq.com/security/cloud_security_management/setup/csm_workload_security/)
      for more information.
  - name: Cloudflare Integration
    description: >-
      Manage your Datadog Cloudflare integration directly through the Datadog
      API. See the [Cloudflare integration
      page](https://docs.datadoghq.com/integrations/cloudflare/) for more
      information.
  - name: Confluent Cloud
    description: >-
      Manage your Datadog Confluent Cloud integration accounts and account
      resources directly through the Datadog API. See the [Confluent Cloud
      page](https://docs.datadoghq.com/integrations/confluent_cloud/) for more
      information.
  - name: Container Images
    description: >-
      The Container Images API allows you to query Container Image data for your
      organization. See the [Container Images View
      page](https://docs.datadoghq.com/infrastructure/containers/container_images/)
      for more information.
  - name: Containers
    description: >-
      The Containers API allows you to query container data for your
      organization. See the [Container Monitoring
      page](https://docs.datadoghq.com/containers/) for more information.
  - name: Dashboard Lists
    description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
  - name: Dashboards
    description: >-
      Manage all your dashboards, as well as access to your shared dashboards,
      through the API. See the [Dashboards
      page](https://docs.datadoghq.com/dashboards/) for more information.
  - name: Downtimes
    description: >-
      **Note**: Downtime V2 is currently in private beta. To request access,
      contact [Datadog support](https://docs.datadoghq.com/help/).


      [Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives

      you greater control over monitor notifications by allowing you to globally
      exclude

      scopes from alerting. Downtime settings, which can be scheduled with start
      and

      end times, prevent all alerting related to specified Datadog tags.
  - name: Embeddable Graphs
    description: >-
      Manage embeddable graphs through the API. See [Embeddable Graphs with
      Template
      Variables](https://docs.datadoghq.com/dashboards/guide/embeddable-graphs-with-template-variables/)
      for more information.
  - name: Events
    description: >-
      The Event Management API allows you to programmatically post events to the
      Events Explorer

      and fetch events from the Events Explorer. See the [Event Management
      page](https://docs.datadoghq.com/service_management/events/) for more
      information.
  - name: Fastly Integration
    description: >-
      Manage your Datadog Fastly integration accounts and services directly
      through the Datadog API. See the [Fastly integration
      page](https://docs.datadoghq.com/integrations/fastly/) for more
      information.
  - name: GCP Integration
    description: >-
      Configure your Datadog-Google Cloud Platform (GCP) integration directly

      through the Datadog API. Read more about the [Datadog-Google Cloud
      Platform
      integration](https://docs.datadoghq.com/integrations/google_cloud_platform).
  - name: Hosts
    description: >-
      Get information about your infrastructure hosts in Datadog, and mute or
      unmute any notifications from your hosts. See the [Infrastructure
      page](https://docs.datadoghq.com/infrastructure/) for more information.
  - name: IP Allowlist
    description: >-
      The IP allowlist API is used to manage the IP addresses that

      can access the Datadog API and web UI. It does not block

      access to intake APIs or public dashboards.


      This is an enterprise-only feature. Request access by

      contacting Datadog support, or see the [IP Allowlist
      page](https://docs.datadoghq.com/account_management/org_settings/ip_allowlist/)
      for more information.
  - name: IP Ranges
    description: Get a list of IP prefixes belonging to Datadog.
  - name: Key Management
    description: >-
      Manage your Datadog API and application keys. You need an API key and

      an application key for a user with the required permissions to interact

      with these endpoints. The full list of API and application keys can be

      seen on your [Datadog API
      page](https://app.datadoghq.com/account/settings#api).
  - name: Logs
    description: >-
      Search your logs and send them to your Datadog platform over HTTP. See the
      [Log Management page](https://docs.datadoghq.com/logs/) for more
      information.
  - name: Logs Archives
    description: |-
      Archives forward all the logs ingested to a cloud storage system.

      See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)
      for a list of the archives currently configured in Datadog.
  - name: Logs Custom Destinations
    description: >-
      Custom Destinations forward all the logs ingested to an external
      destination.


      See the [Custom Destinations
      Page](https://app.datadoghq.com/logs/pipelines/log-forwarding/custom-destinations)

      for a list of the custom destinations currently configured in web UI.
  - name: Logs Indexes
    description: >-
      Manage configuration of [log
      indexes](https://docs.datadoghq.com/logs/indexes/).

      You need an API and application key with Admin rights to interact with
      this endpoint.
  - name: Logs Metrics
    description: >-
      Manage configuration of [log-based
      metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for
      your organization.
  - name: Logs Pipelines
    description: >-
      Pipelines and processors operate on incoming logs, parsing

      and transforming them into structured attributes for easier querying.


      - See the [pipelines configuration
      page](https://app.datadoghq.com/logs/pipelines)
        for a list of the pipelines and processors currently configured in web UI.

      - Additional API-related information about processors can be found in the
        [processors documentation](https://docs.datadoghq.com/logs/log_configuration/processors/?tab=api#lookup-processor).

      - For more information about Pipelines, see the
        [pipeline documentation](https://docs.datadoghq.com/logs/log_configuration/pipelines).

      **Notes:**


      These endpoints are only available for admin users.

      Make sure to use an application key created by an admin.


      **Grok parsing rules may effect JSON output and require

      returned data to be configured before using in a request.**

      For example, if you are using the data returned from a

      request for another request body, and have a parsing rule

      that uses a regex pattern like `\s` for spaces, you will

      need to configure all escaped spaces as `%{space}` to use

      in the body data.
  - name: Metrics
    description: >-
      The metrics endpoint allows you to:


      - Post metrics data so it can be graphed on Datadog’s dashboards

      - Query metrics from any time period (timeseries and scalar)

      - Modify tag configurations for metrics

      - View tags and volumes for metrics


      **Note**: A graph can only contain a set number of points

      and as the timeframe over which a metric is viewed increases,

      aggregation between points occurs to stay below that set number.


      The Post, Patch, and Delete `manage_tags` API methods can only be
      performed by

      a user who has the `Manage Tags for Metrics` permission.


      See the [Metrics page](https://docs.datadoghq.com/metrics/) for more
      information.
  - name: Monitors
    description: >-
      [Monitors](https://docs.datadoghq.com/monitors) allow you to watch a
      metric or check that you care about and

      notifies your team when a defined threshold has exceeded.


      For more information, see [Creating
      Monitors](https://docs.datadoghq.com/monitors/create/types/) and

      [Tag Policies](https://docs.datadoghq.com/monitors/settings/).
  - name: Notebooks
    description: >-
      Interact with your notebooks through the API to make it easier to
      organize, find, and

      share all of your notebooks with your team and organization. For more
      information, see the

      [Notebooks documentation](https://docs.datadoghq.com/notebooks/).
  - name: Okta Integration
    description: >-
      Configure your [Datadog Okta
      integration](https://docs.datadoghq.com/integrations/okta/) directly
      through the Datadog API.
  - name: Opsgenie Integration
    description: >-
      Configure your [Datadog Opsgenie
      integration](https://docs.datadoghq.com/integrations/opsgenie/)

      directly through the Datadog API.
  - name: Organizations
    description: >-
      Create, edit, and manage your organizations. Read more about [multi-org
      accounts](https://docs.datadoghq.com/account_management/multi_organization).
  - name: PagerDuty Integration
    description: >-
      Configure your [Datadog-PagerDuty
      integration](https://docs.datadoghq.com/integrations/pagerduty/)

      directly through the Datadog API.
  - name: Powerpack
    description: >-
      The Powerpack endpoints allow you to:


      - Get a Powerpack

      - Create a Powerpack

      - Delete a Powerpack

      - Get a list of all Powerpacks


      The Patch and Delete API methods can only be performed on a Powerpack by

      a user who has the powerpack create permission for that specific
      Powerpack.


      Read [Scale Graphing Expertise with
      Powerpacks](https://docs.datadoghq.com/dashboards/guide/powerpacks-best-practices/)
      for more information.
  - name: Processes
    description: >-
      The processes API allows you to query processes data for your
      organization. See the [Live Processes
      page](https://docs.datadoghq.com/infrastructure/process/) for more
      information.
  - name: Restriction Policies
    description: >-
      A restriction policy defines the access control rules for a resource,
      mapping a set of relations

      (such as editor and viewer) to a set of allowed principals (such as roles,
      teams, or users).

      The restriction policy determines who is authorized to perform what
      actions on the resource.
  - name: Roles
    description: >-
      The Roles API is used to create and manage Datadog roles, what

      [global permissions](https://docs.datadoghq.com/account_management/rbac/)

      they grant, and which users belong to them.


      Permissions related to specific account assets can be granted to roles

      in the Datadog application without using this API. For example, granting

      read access on a specific log index to a role can be done in Datadog from
      the

      [Pipelines page](https://app.datadoghq.com/logs/pipelines).
  - name: RUM
    description: >-
      Manage your Real User Monitoring (RUM) applications, and search or
      aggregate your RUM events over HTTP. See the [RUM & Session Replay
      page](https://docs.datadoghq.com/real_user_monitoring/) for more
      information
  - name: Security Monitoring
    description: >-
      Create and manage your security rules, signals, filters, and more. See the
      [Datadog Security page](https://docs.datadoghq.com/security/) for more
      information.
  - name: Sensitive Data Scanner
    description: >-
      Create, update, delete, and retrieve sensitive data scanner groups and
      rules. See the [Sensitive Data Scanner
      page](https://docs.datadoghq.com/sensitive_data_scanner/) for more
      information.
  - name: Service Accounts
    description: >-
      Create, edit, and disable service accounts. See the [Service Accounts
      page](https://docs.datadoghq.com/account_management/org_settings/service_accounts/)
      for more information.
  - name: Service Checks
    description: >-
      The service check endpoint allows you to post check statuses for use with
      monitors.

      Service check messages are limited to 500 characters. If a check is posted
      with a message

      containing more than 500 characters, only the first 500 characters are
      displayed. Messages

      are limited for checks with a Critical or Warning status, they are dropped
      for checks with

      an OK status.


      - [Read more about Service Check monitors][1].

      - [Read more about Process Check monitors][2].

      - [Read more about Network monitors][3].

      - [Read more about Custom Check monitors][4].

      - [Read more about Service Checks and status codes][5].


      [1]: https://docs.datadoghq.com/monitors/types/service_check/

      [2]:
      https://docs.datadoghq.com/monitors/create/types/process_check/?tab=checkalert

      [3]:
      https://docs.datadoghq.com/monitors/create/types/network/?tab=checkalert

      [4]:
      https://docs.datadoghq.com/monitors/create/types/custom_check/?tab=checkalert

      [5]: https://docs.datadoghq.com/developers/service_checks/
  - name: Service Definition
    description: API to create, update, retrieve and delete service definitions.
  - name: Service Level Objective Corrections
    description: >-
      SLO Status Corrections allow you to prevent specific time periods from
      negatively impacting

      your SLO’s status and error budget. You can use Status Corrections for
      various purposes, such

      as removing planned maintenance windows, non-business hours, or other time
      periods that do

      not correspond to genuine issues. See [SLO status
      corrections](https://docs.datadoghq.com/service_management/service_level_objectives/#slo-status-corrections)
      for more information.
  - name: Service Level Objectives
    description: >-
      [Service Level
      Objectives](https://docs.datadoghq.com/monitors/service_level_objectives/#configuration)

      (or SLOs) are a key part of the site reliability engineering toolkit.

      SLOs provide a framework for defining clear targets around application
      performance,

      which ultimately help teams provide a consistent customer experience,

      balance feature development with platform stability,

      and improve communication with internal and external users.
  - name: Slack Integration
    description: >-
      Configure your [Datadog-Slack
      integration](https://docs.datadoghq.com/integrations/slack)

      directly through the Datadog API.
  - name: Snapshots
    description: Take graph snapshots using the API.
  - name: Spans
    description: Search and aggregate your spans from your Datadog platform over HTTP.
  - name: Spans Metrics
    description: >-
      Manage configuration of [span-based
      metrics](https://app.datadoghq.com/apm/traces/generate-metrics) for your
      organization. See [Generate Metrics from
      Spans](https://docs.datadoghq.com/tracing/trace_pipeline/generate_metrics/)
      for more information.
  - name: Synthetics
    description: >-
      Datadog Synthetics uses simulated user requests and browser rendering to
      help you ensure uptime,

      identify regional issues, and track your application performance. Datadog
      Synthetics tests come in

      two different flavors, [API
      tests](https://docs.datadoghq.com/synthetics/api_tests/)

      and [browser tests](https://docs.datadoghq.com/synthetics/browser_tests).
      You can use Datadog’s API to

      manage both test types programmatically.


      For more information about Synthetics, see the [Synthetics
      overview](https://docs.datadoghq.com/synthetics/).
  - name: Tags
    description: >-
      The tag endpoint allows you to assign tags to hosts,

      for example: `role:database`. Those tags are applied to

      all metrics sent by the host. Refer to hosts by name

      (`yourhost.example.com`) when fetching and applying

      tags to a particular host.


      The component of your infrastructure responsible for a tag is identified

      by a source. For example, some valid sources include nagios, hudson,
      jenkins,

      users, feed, chef, puppet, git, bitbucket, fabric, capistrano, etc.


      Read more about tags on [Getting Started with
      Tags](https://docs.datadoghq.com/getting_started/tagging/).
  - name: Teams
    description: >-
      View and manage teams within Datadog. See the [Teams
      page](https://docs.datadoghq.com/account_management/teams/) for more
      information.
  - name: Usage Metering
    description: >-
      The usage metering API allows you to get hourly, daily, and

      monthly usage across multiple facets of Datadog.

      This API is available to all Pro and Enterprise customers.


      **Note**: Usage data is delayed by up to 72 hours from when it was
      incurred.

      It is retained for 15 months.


      You can retrieve up to 24 hours of hourly usage data for multiple
      organizations,

      and up to two months of hourly usage data for a single organization in one
      request.

      Learn more on the [usage details
      documentation](https://docs.datadoghq.com/account_management/billing/usage_details/).
  - name: Users
    description: Create, edit, and disable users.
  - name: Webhooks Integration
    description: >-
      Configure your Datadog-Webhooks integration directly through the Datadog
      API.

      See the [Webhooks integration
      page](https://docs.datadoghq.com/integrations/webhooks) for more
      information.
paths:
  /api/v2/apm/config/retention-filters:
    get:
      tags:
        - APM
        - Apm
        - Configurations
        - Filters
        - Retention
      summary: 'List All APM Retention Filters '
      description: Get the list of APM retention filters.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 7RBOb7dLSYWI01yc3pIH8w
                    type: apm_retention_filter
                    attributes:
                      created_at: -23800587
                      created_by: consequat non laboris commodo
                      editable: true
                      enabled: true
                      execution_order: -8929860
                      filter:
                        query: '@http.status_code:200 service:my-service'
                      filter_type: spans-sampling-processor
                      modified_at: 57250191
                      modified_by: in ex nisi dolore
                      name: my retention filter
                      rate: 1
                  - id: 7RBOb7dLSYWI01yc3pIH8w
                    type: apm_retention_filter
                    attributes:
                      created_at: 5772941
                      created_by: consequat
                      editable: true
                      enabled: true
                      execution_order: 8243671
                      filter:
                        query: '@http.status_code:200 service:my-service'
                      filter_type: spans-sampling-processor
                      modified_at: -86739935
                      modified_by: anim ullamco Excepteur aliquip
                      name: my retention filter
                      rate: 1
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Apm
        - Configurations
        - Filter
        - Filters
        - Retention
      summary: 'Create A Retention Filter '
      description: |-
        Create a retention filter to index spans in your organization.
        Returns the retention filter definition when the request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: my retention filter
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    enabled: true
                    filter_type: spans-sampling-processor
                    rate: 1
                  type: apm_retention_filter
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 7RBOb7dLSYWI01yc3pIH8w
                  type: apm_retention_filter
                  attributes:
                    created_at: -50257320
                    created_by: amet sint
                    editable: true
                    enabled: true
                    execution_order: -85582523
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    filter_type: spans-sampling-processor
                    modified_at: 52601432
                    modified_by: consequat culpa fugiat eu
                    name: my retention filter
                    rate: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/apm/config/retention-filters/{filter_id}:
    get:
      tags:
        - APM
        - Apm
        - Configurations
        - Filter
        - Filters
        - Given
        - Retention
      summary: 'Get A Given APM Retention Filter '
      description: Get an APM retention filter.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: filter_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 7RBOb7dLSYWI01yc3pIH8w
                  type: apm_retention_filter
                  attributes:
                    created_at: -50257320
                    created_by: amet sint
                    editable: true
                    enabled: true
                    execution_order: -85582523
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    filter_type: spans-sampling-processor
                    modified_at: 52601432
                    modified_by: consequat culpa fugiat eu
                    name: my retention filter
                    rate: 1
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Apm
        - Configurations
        - Filter
        - Filters
        - Retention
      summary: 'Update A Retention Filter '
      description: Update a retention filter from your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: retention-filter-id
                  attributes:
                    name: my retention filter
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    enabled: true
                    filter_type: spans-sampling-processor
                    rate: 1
                  type: apm_retention_filter
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: filter_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 7RBOb7dLSYWI01yc3pIH8w
                  type: apm_retention_filter
                  attributes:
                    created_at: -50257320
                    created_by: amet sint
                    editable: true
                    enabled: true
                    execution_order: -85582523
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    filter_type: spans-sampling-processor
                    modified_at: 52601432
                    modified_by: consequat culpa fugiat eu
                    name: my retention filter
                    rate: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Apm
        - Configurations
        - Filter
        - Filters
        - Retention
      summary: 'Delete A Retention Filter '
      description: Delete a specific retention filter from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: filter_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/apm/config/retention-filters-execution-order:
    put:
      tags:
        - Apm
        - Configurations
        - Executions
        - Filters
        - Orders
        - Re order
        - Retention
      summary: 'Re-order Retention Filters '
      description: Re-order the execution order of retention filters.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - id: 7RBOb7dLSYWI01yc3pIH8w
                    type: apm_retention_filter
                  - id: 7RBOb7dLSYWI01yc3pIH8w
                    type: apm_retention_filter
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/audit/events/search:
    post:
      tags:
        - Audit
        - Events
        - Logs
        - Search
      summary: 'Search Audit Logs Events '
      description: >-
        List endpoint returns Audit Logs events that match an Audit search
        query.

        [Results are paginated][1].


        Use this endpoint to build complex Audit Logs events filtering and
        search.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  from: now-15m
                  query: '@type:session AND @session.type:user'
                  to: now
                options:
                  time_offset: 67121691
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
                sort: '-timestamp'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      message: aute
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: audit
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      message: ut velit ipsum
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: audit
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/audit/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/audit/events:
    get:
      tags:
        - Audit
        - Events
        - Logs
      summary: 'Get A List Of Audit Logs Events '
      description: >-
        List endpoint returns events that match a Audit Logs search query.

        [Results are paginated][1].


        Use this endpoint to see your latest Audit Logs events.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      message: aute
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: audit
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      message: ut velit ipsum
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: audit
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/audit/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/validate:
    get:
      tags:
        - Keys
        - Val
        - Validate
      summary: 'Validate API Key '
      description: >-
        Check if the API key (not the APP key) is valid. If invalid, a 403 is
        returned.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                valid: true
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/authn_mappings/{authn_mapping_id}:
    get:
      tags:
        - Authentication
        - Authn
        - Mapping
        - UUID
      summary: 'Get An Auth N Mapping By UUID '
      description: Get an AuthN Mapping specified by the AuthN Mapping UUID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: authn_mapping_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                  type: authn_mappings
                  attributes:
                    attribute_key: member-of
                    attribute_value: Development
                    created_at: '2022-03-27T05:34:57.971Z'
                    modified_at: '2018-01-30T20:52:29.320Z'
                    saml_assertion_attribute_id: '0'
                  relationships:
                    role:
                      data:
                        id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                        type: roles
                    saml_assertion_attribute:
                      data:
                        id: '0'
                        type: saml_assertion_attributes
                included:
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Authentication
        - Authn
        - Edit
        - Mapping
      summary: 'Edit An Auth N Mapping '
      description: Edit an AuthN Mapping.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                  type: authn_mappings
                  attributes:
                    attribute_key: member-of
                    attribute_value: Development
                  relationships:
                    role:
                      data:
                        id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                        type: roles
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: authn_mapping_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                  type: authn_mappings
                  attributes:
                    attribute_key: member-of
                    attribute_value: Development
                    created_at: '2022-03-27T05:34:57.971Z'
                    modified_at: '2018-01-30T20:52:29.320Z'
                    saml_assertion_attribute_id: '0'
                  relationships:
                    role:
                      data:
                        id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                        type: roles
                    saml_assertion_attribute:
                      data:
                        id: '0'
                        type: saml_assertion_attributes
                included:
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Authentication
        - Authn
        - Mapping
      summary: 'Delete An Auth N Mapping '
      description: Delete an AuthN Mapping specified by AuthN Mapping UUID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: authn_mapping_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/authn_mappings:
    get:
      tags:
        - Authentication
        - Authn
        - Mapping
      summary: 'List All Auth N Mappings '
      description: List all AuthN Mappings in the org.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                    type: authn_mappings
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
                      created_at: '2008-01-17T13:40:13.550Z'
                      modified_at: '1959-02-09T23:38:27.532Z'
                      saml_assertion_attribute_id: '0'
                    relationships:
                      role:
                        data:
                          id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                      saml_assertion_attribute:
                        data:
                          id: '0'
                          type: saml_assertion_attributes
                  - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                    type: authn_mappings
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
                      created_at: '1958-05-22T04:43:54.847Z'
                      modified_at: '1994-03-23T11:41:18.589Z'
                      saml_assertion_attribute_id: '0'
                    relationships:
                      role:
                        data:
                          id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                      saml_assertion_attribute:
                        data:
                          id: '0'
                          type: saml_assertion_attributes
                included:
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
                meta:
                  page:
                    total_count: -53695929
                    total_filtered_count: 2646825
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Authentication
        - Authn
        - Mapping
      summary: 'Create An Auth N Mapping '
      description: Create an AuthN Mapping.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: authn_mappings
                  attributes:
                    attribute_key: member-of
                    attribute_value: Development
                  relationships:
                    role:
                      data:
                        id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                        type: roles
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                  type: authn_mappings
                  attributes:
                    attribute_key: member-of
                    attribute_value: Development
                    created_at: '2022-03-27T05:34:57.971Z'
                    modified_at: '2018-01-30T20:52:29.320Z'
                    saml_assertion_attribute_id: '0'
                  relationships:
                    role:
                      data:
                        id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                        type: roles
                    saml_assertion_attribute:
                      data:
                        id: '0'
                        type: saml_assertion_attributes
                included:
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
                  - id: '0'
                    type: saml_assertion_attributes
                    attributes:
                      attribute_key: member-of
                      attribute_value: Development
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/filtering:
    get:
      tags:
        - AWS
        - Filtering
        - Filters
        - Integrations
        - Tags
      summary: 'Get All AWS Tag Filters '
      description: Get all AWS tag filters.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: query
          schema:
            type: integer
          description: (Required) Only return AWS filters that matches this `account_id`.
          example: '123456789012'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                filters:
                  - namespace: elb
                    tag_filter_str: prod*
                  - namespace: elb
                    tag_filter_str: prod*
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - AWS
        - Filter
        - Filtering
        - Integrations
        - Sets
        - Tags
      summary: 'Set An AWS Tag Filter '
      description: Set an AWS tag filter.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                account_id: '123456789012'
                namespace: elb
                tag_filter_str: prod*
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Entry
        - Filtering
        - Integrations
        - Tags
      summary: 'Delete A Tag Filtering Entry '
      description: Delete a tag filtering entry.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/generate_new_external_id:
    put:
      tags:
        - External
        - Generate
        - Integrations
      summary: 'Generate A New External ID '
      description: >-
        Generate a new AWS external ID for a given AWS account ID and role name
        pair.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                access_key_id: non cupidatat tempor
                account_id: '123456789012'
                account_specific_namespace_rules:
                  auto_scaling: false
                  opswork: false
                cspm_resource_collection_enabled: true
                excluded_regions:
                  - us-east-1
                  - us-west-2
                extended_resource_collection_enabled: true
                filter_tags:
                  - $KEY:$VALUE
                host_tags:
                  - $KEY:$VALUE
                metrics_collection_enabled: false
                role_name: DatadogAWSIntegrationRole
                secret_access_key: elit deserunt aliquip voluptate veniam
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                external_id: 'in Lorem '
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/available_namespace_rules:
    get:
      tags:
        - Available
        - Integrations
        - Namespaces
        - Rules
      summary: 'List Namespace Rules '
      description: >-
        List all namespace rules for a given Datadog-AWS integration. This
        endpoint takes no arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - namespace1
                - namespace2
                - namespace3
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws:
    get:
      tags:
        - AWS
        - Integrations
      summary: 'List All AWS Integrations '
      description: >-
        List all Datadog-AWS integrations available in your Datadog
        organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: query
          schema:
            type: string
          description: Only return AWS accounts that matches this `account_id`.
          example: exercitation consequat
        - name: role_name
          in: query
          schema:
            type: string
          description: Only return AWS accounts that matches this role_name.
          example: exercitation consequat
        - name: access_key_id
          in: query
          schema:
            type: string
          description: Only return AWS accounts that matches this `access_key_id`.
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                accounts:
                  - access_key_id: incididunt minim in dolor
                    account_id: '123456789012'
                    account_specific_namespace_rules:
                      auto_scaling: false
                      opswork: false
                    cspm_resource_collection_enabled: true
                    excluded_regions:
                      - us-east-1
                      - us-west-2
                    extended_resource_collection_enabled: true
                    filter_tags:
                      - $KEY:$VALUE
                    host_tags:
                      - $KEY:$VALUE
                    metrics_collection_enabled: false
                    role_name: DatadogAWSIntegrationRole
                    secret_access_key: commodo officia magna eiusmod nulla
                  - access_key_id: cupidatat officia no
                    account_id: '123456789012'
                    account_specific_namespace_rules:
                      auto_scaling: false
                      opswork: false
                    cspm_resource_collection_enabled: true
                    excluded_regions:
                      - us-east-1
                      - us-west-2
                    extended_resource_collection_enabled: true
                    filter_tags:
                      - $KEY:$VALUE
                    host_tags:
                      - $KEY:$VALUE
                    metrics_collection_enabled: false
                    role_name: DatadogAWSIntegrationRole
                    secret_access_key: dolor tempor i
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - AWS
        - Integrations
      summary: 'Delete An AWS Integration '
      description: >-
        Delete a Datadog-AWS integration matching the specified `account_id` and
        `role_name parameters`.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - AWS
        - Integrations
      summary: 'Create An AWS Integration '
      description: >-
        Create a Datadog-Amazon Web Services integration.

        Using the `POST` method updates your integration configuration

        by adding your new configuration to the existing one in your Datadog
        organization.

        A unique AWS Account ID for role based authentication.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                access_key_id: non cupidatat tempor
                account_id: '123456789012'
                account_specific_namespace_rules:
                  auto_scaling: false
                  opswork: false
                cspm_resource_collection_enabled: true
                excluded_regions:
                  - us-east-1
                  - us-west-2
                extended_resource_collection_enabled: true
                filter_tags:
                  - $KEY:$VALUE
                host_tags:
                  - $KEY:$VALUE
                metrics_collection_enabled: false
                role_name: DatadogAWSIntegrationRole
                secret_access_key: elit deserunt aliquip voluptate veniam
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                external_id: 'in Lorem '
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - AWS
        - Integrations
      summary: 'Update An AWS Integration '
      description: Update a Datadog-Amazon Web Services integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                access_key_id: non cupidatat tempor
                account_id: '123456789012'
                account_specific_namespace_rules:
                  auto_scaling: false
                  opswork: false
                cspm_resource_collection_enabled: true
                excluded_regions:
                  - us-east-1
                  - us-west-2
                extended_resource_collection_enabled: true
                filter_tags:
                  - $KEY:$VALUE
                host_tags:
                  - $KEY:$VALUE
                metrics_collection_enabled: false
                role_name: DatadogAWSIntegrationRole
                secret_access_key: elit deserunt aliquip voluptate veniam
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: query
          schema:
            type: string
          description: Only return AWS accounts that matches this `account_id`.
          example: exercitation consequat
        - name: role_name
          in: query
          schema:
            type: string
          description: |-
            Only return AWS accounts that match this `role_name`.
            Required if `account_id` is specified.
          example: exercitation consequat
        - name: access_key_id
          in: query
          schema:
            type: string
          description: |-
            Only return AWS accounts that matches this `access_key_id`.
            Required if none of the other two options are specified.
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/event_bridge:
    get:
      tags:
        - Amazon
        - Br
        - Bridges
        - Events
        - Ge
        - Integrations
        - Sources
      summary: 'Get All Amazon Event Bridge Sources '
      description: Get all Amazon EventBridge sources.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                accounts:
                  - accountId: '123456789012'
                    eventHubs:
                      - name: non u
                        region: quis
                      - name: tempor
                        region: aliquip magna culpa
                    tags:
                      - $KEY:$VALUE
                  - accountId: '123456789012'
                    eventHubs:
                      - name: sunt labore Excepteur
                        region: 'cillum cupidatat '
                      - name: Lorem velit deserunt in non
                        region: aliquip enim commodo exercitation
                    tags:
                      - $KEY:$VALUE
                isInstalled: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Amazon
        - Br
        - Bridges
        - Events
        - Ge
        - Integrations
        - Sources
      summary: 'Create An Amazon Event Bridge Source '
      description: Create an Amazon EventBridge source.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                account_id: '123456789012'
                create_event_bus: true
                event_generator_name: app-alerts
                region: us-east-1
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                event_source_name: app-alerts-zyxw3210
                has_bus: true
                region: us-east-1
                status: created
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Amazon
        - Br
        - Bridges
        - Events
        - Ge
        - Integrations
        - Sources
      summary: 'Delete An Amazon Event Bridge Source '
      description: Delete an Amazon EventBridge source.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: empty
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/logs:
    get:
      tags:
        - AWS
        - Integrations
        - Logs
      summary: 'List All AWS Logs Integrations '
      description: >-
        List all Datadog-AWS Logs integrations configured in your Datadog
        account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - account_id: '123456789101'
                  lambdas: []
                  services:
                    - s3
                    - elb
                    - elbv2
                    - cloudfront
                    - redshift
                    - lambda
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - ARN
        - AWS
        - Integrations
        - Lambda
        - Logs
      summary: 'Add AWS Log Lambda ARN '
      description: >-
        Attach the Lambda ARN of the Lambda created for the Datadog-AWS log
        collection to your AWS account ID to enable log collection.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                account_id: '1234567'
                lambda_arn: >-
                  arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - AWS
        - Integrations
        - Logs
      summary: 'Delete An AWS Logs Integration '
      description: >-
        Delete a Datadog-AWS logs configuration by removing the specific Lambda
        ARN associated with a given AWS account.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/logs/services:
    get:
      tags:
        - AWS
        - Integrations
        - Logs
        - Ready
        - Services
      summary: 'Get List Of AWS Log Ready Services '
      description: >-
        Get the list of current AWS services that Datadog offers automatic log
        collection. Use returned service IDs with the services parameter for the
        Enable an AWS service log collection API endpoint.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: s3
                  label: S3 Access Logs
                - id: elb
                  label: Classic ELB Access Logs
                - id: elbv2
                  label: Application ELB Access Logs
                - id: cloudfront
                  label: CloudFront Access Logs
                - id: redshift
                  label: Redshift Logs
                - id: lambda
                  label: Lambda Cloudwatch Logs
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - AWS
        - Enable
        - Integrations
        - Logs
        - Services
      summary: 'Enable An AWS Logs Integration '
      description: >-
        Enable automatic log collection for a list of services. This should be
        run after running `CreateAWSLambdaARN` to save the configuration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                account_id: '1234567'
                services:
                  - s3
                  - elb
                  - elbv2
                  - cloudfront
                  - redshift
                  - lambda
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/logs/services_async:
    post:
      tags:
        - Async
        - Checks
        - Integrations
        - Logs
        - Permissions
        - Services
      summary: 'Check Permissions For Log Services '
      description: >-
        Test if permissions are present to add log-forwarding triggers for the

        given services and AWS account. Input is the same as for
        `EnableAWSLogServices`.

        Done async, so can be repeatedly polled in a non-blocking fashion until

        the async request completes.


        - Returns a status of `created` when it's checking if the permissions
        exists
          in the AWS account.
        - Returns a status of `waiting` while checking.

        - Returns a status of `checked and ok` if the Lambda exists.

        - Returns a status of `error` if the Lambda does not exist.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                account_id: '1234567'
                services:
                  - s3
                  - elb
                  - elbv2
                  - cloudfront
                  - redshift
                  - lambda
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - code: no_such_config
                    message: AWS account 12345 has no Lambda config to update
                  - code: no_such_config
                    message: AWS account 12345 has no Lambda config to update
                status: created
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/aws/logs/check_async:
    post:
      tags:
        - AWS
        - Async
        - Checks
        - Exists
        - Functions
        - Integrations
        - Lambda
        - Logs
      summary: 'Check That An AWS Lambda Function Exists '
      description: >-
        Test if permissions are present to add a log-forwarding triggers for the
        given services and AWS account. The input

        is the same as for Enable an AWS service log collection. Subsequent
        requests will always repeat the above, so this

        endpoint can be polled intermittently instead of blocking.


        - Returns a status of 'created' when it's checking if the Lambda exists
        in the account.

        - Returns a status of 'waiting' while checking.

        - Returns a status of 'checked and ok' if the Lambda exists.

        - Returns a status of 'error' if the Lambda does not exist.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                account_id: '1234567'
                lambda_arn: >-
                  arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - code: no_such_config
                    message: AWS account 12345 has no Lambda config to update
                  - code: no_such_config
                    message: AWS account 12345 has no Lambda config to update
                status: created
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/azure:
    get:
      tags:
        - Azure
        - Integrations
      summary: 'List All Azure Integrations '
      description: List all Datadog-Azure integrations configured in your Datadog account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - app_service_plan_filters: key:value,filter:example
                  automute: true
                  client_id: testc7f6-1234-5678-9101-3fcbf464test
                  client_secret: testingx./Sw*g/Y33t..R1cH+hScMDt
                  container_app_filters: key:value,filter:example
                  cspm_enabled: true
                  custom_metrics_enabled: true
                  errors:
                    - '*'
                  host_filters: key:value,filter:example
                  new_client_id: new1c7f6-1234-5678-9101-3fcbf464test
                  new_tenant_name: new1c44-1234-5678-9101-cc00736ftest
                  resource_collection_enabled: true
                  tenant_name: testc44-1234-5678-9101-cc00736ftest
                - app_service_plan_filters: key:value,filter:example
                  automute: true
                  client_id: testc7f6-1234-5678-9101-3fcbf464test
                  client_secret: testingx./Sw*g/Y33t..R1cH+hScMDt
                  container_app_filters: key:value,filter:example
                  cspm_enabled: true
                  custom_metrics_enabled: true
                  errors:
                    - '*'
                  host_filters: key:value,filter:example
                  new_client_id: new1c7f6-1234-5678-9101-3fcbf464test
                  new_tenant_name: new1c44-1234-5678-9101-cc00736ftest
                  resource_collection_enabled: true
                  tenant_name: testc44-1234-5678-9101-cc00736ftest
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Azure
        - Integrations
      summary: 'Create An Azure Integration '
      description: >-
        Create a Datadog-Azure integration.


        Using the `POST` method updates your integration configuration by adding
        your new

        configuration to the existing one in your Datadog organization.


        Using the `PUT` method updates your integration configuration by
        replacing your

        current configuration with the new one sent to your Datadog
        organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                app_service_plan_filters: key:value,filter:example
                automute: true
                client_id: testc7f6-1234-5678-9101-3fcbf464test
                client_secret: testingx./Sw*g/Y33t..R1cH+hScMDt
                container_app_filters: key:value,filter:example
                cspm_enabled: true
                custom_metrics_enabled: true
                errors:
                  - '*'
                host_filters: key:value,filter:example
                new_client_id: new1c7f6-1234-5678-9101-3fcbf464test
                new_tenant_name: new1c44-1234-5678-9101-cc00736ftest
                resource_collection_enabled: true
                tenant_name: testc44-1234-5678-9101-cc00736ftest
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Azure
        - Integrations
      summary: 'Delete An Azure Integration '
      description: Delete a given Datadog-Azure integration from your Datadog account.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Azure
        - Integrations
      summary: 'Update An Azure Integration '
      description: >-
        Update a Datadog-Azure integration. Requires an existing `tenant_name`
        and `client_id`.

        Any other fields supplied will overwrite existing values. To overwrite
        `tenant_name` or `client_id`,

        use `new_tenant_name` and `new_client_id`. To leave a field unchanged,
        do not supply that field in the payload.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                app_service_plan_filters: key:value,filter:example
                automute: true
                client_id: testc7f6-1234-5678-9101-3fcbf464test
                client_secret: testingx./Sw*g/Y33t..R1cH+hScMDt
                container_app_filters: key:value,filter:example
                cspm_enabled: true
                custom_metrics_enabled: true
                errors:
                  - '*'
                host_filters: key:value,filter:example
                new_client_id: new1c7f6-1234-5678-9101-3fcbf464test
                new_tenant_name: new1c44-1234-5678-9101-cc00736ftest
                resource_collection_enabled: true
                tenant_name: testc44-1234-5678-9101-cc00736ftest
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/azure/host_filters:
    post:
      tags:
        - Azure
        - Filters
        - Host
        - Integrations
      summary: 'Update Azure Integration Host Filters '
      description: >-
        Update the defined list of host filters for a given Datadog-Azure
        integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                app_service_plan_filters: key:value,filter:example
                automute: true
                client_id: testc7f6-1234-5678-9101-3fcbf464test
                client_secret: testingx./Sw*g/Y33t..R1cH+hScMDt
                container_app_filters: key:value,filter:example
                cspm_enabled: true
                custom_metrics_enabled: true
                errors:
                  - '*'
                host_filters: key:value,filter:example
                new_client_id: new1c7f6-1234-5678-9101-3fcbf464test
                new_tenant_name: new1c44-1234-5678-9101-cc00736ftest
                resource_collection_enabled: true
                tenant_name: testc44-1234-5678-9101-cc00736ftest
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/projects:
    post:
      tags:
        - Cases
        - Projects
      summary: 'Create A Project '
      description: Create a project.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: Security Investigation
                    key: SEC
                  type: project
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: project
                  attributes:
                    key: CASEM
                    name: in magna commodo
                  relationships:
                    member_team:
                      data:
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                    member_user:
                      data: []
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Cases
        - Projects
      summary: 'Get All Projects '
      description: Get all projects.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                    type: project
                    attributes:
                      key: CASEM
                      name: p
                    relationships:
                      member_team:
                        data:
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                        links:
                          related: >-
                            /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                      member_user:
                        data: []
                  - id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                    type: project
                    attributes:
                      key: CASEM
                      name: adipisicing aliquip
                    relationships:
                      member_team:
                        data:
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                        links:
                          related: >-
                            /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                      member_user:
                        data: []
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases:
    get:
      tags:
        - Cases
        - Search
      summary: 'Search Cases '
      description: Search cases.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                    type: case
                    attributes:
                      archived_at: '1985-08-11T20:46:39.143Z'
                      closed_at: '2021-12-31T23:48:33.090Z'
                      created_at: '2018-12-04T05:57:43.137Z'
                      description: sunt anim
                      jira_issue:
                        result:
                          issue_id: aliqua consequat ullamco eiusmod sit
                          issue_key: aute et sed pariatur dolore
                          issue_url: elit voluptate ad pariatur ut
                          project_key: amet et ea
                        status: COMPLETED
                      key: CASEM-4523
                      modified_at: '1988-01-19T07:49:55.635Z'
                      priority: NOT_DEFINED
                      service_now_ticket:
                        result:
                          sys_target_link: Excepteur aute sit
                        status: COMPLETED
                      status: OPEN
                      title: Memory leak investigation on API
                      type: STANDARD
                    relationships:
                      assignee:
                        data:
                          id: 00000000-0000-0000-0000-000000000000
                          type: user
                      created_by:
                        data:
                          id: 00000000-0000-0000-0000-000000000000
                          type: user
                      modified_by:
                        data:
                          id: 00000000-0000-0000-0000-000000000000
                          type: user
                      project:
                        data:
                          id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                          type: project
                  - id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                    type: case
                    attributes:
                      archived_at: '1983-04-03T21:35:09.533Z'
                      closed_at: '2002-08-06T05:37:18.511Z'
                      created_at: '1969-04-23T07:31:24.601Z'
                      description: ut dolore nulla irure magna
                      jira_issue:
                        result:
                          issue_id: officia qui
                          issue_key: ut tempor aute nulla dolore
                          issue_url: ipsum sed ea
                          project_key: nisi laborum aliqua aliquip
                        status: COMPLETED
                      key: CASEM-4523
                      modified_at: '1981-04-28T11:27:43.475Z'
                      priority: NOT_DEFINED
                      service_now_ticket:
                        result:
                          sys_target_link: sit voluptate
                        status: COMPLETED
                      status: OPEN
                      title: Memory leak investigation on API
                      type: STANDARD
                    relationships:
                      assignee:
                        data:
                          id: 00000000-0000-0000-0000-000000000000
                          type: user
                      created_by:
                        data:
                          id: 00000000-0000-0000-0000-000000000000
                          type: user
                      modified_by:
                        data:
                          id: 00000000-0000-0000-0000-000000000000
                          type: user
                      project:
                        data:
                          id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                          type: project
                meta:
                  page:
                    current: 88255233
                    size: -65574765
                    total: 95606219
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Case
        - Cases
      summary: 'Create A Case '
      description: Create a Case
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    title: Security breach investigation
                    type: STANDARD
                    description: adipisicing dolore ut
                    priority: NOT_DEFINED
                  type: case
                  relationships:
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/{case_id}:
    get:
      tags:
        - Case
        - Cases
        - Details
      summary: 'Get The Details Of A Case '
      description: Get the details of case by `case_id`
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: case_id
          in: path
          schema:
            type: string
          required: true
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/projects/{project_id}:
    get:
      tags:
        - Cases
        - Details
        - Projects
      summary: 'Get The Details Of A Project '
      description: Get the details of a project by `project_id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          example: e555e290-ed65-49bd-ae18-8acbfcf18db7
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: project
                  attributes:
                    key: CASEM
                    name: in magna commodo
                  relationships:
                    member_team:
                      data:
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                    member_user:
                      data: []
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Cases
        - Projects
      summary: 'Remove A Project '
      description: Remove a project using the project's `id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: project_id
          in: path
          schema:
            type: string
          required: true
          example: e555e290-ed65-49bd-ae18-8acbfcf18db7
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/{case_id}/status:
    post:
      tags:
        - Case
        - Cases
        - Status
      summary: 'Update Case Status '
      description: Update case status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    status: OPEN
                  type: case
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: case_id
          in: path
          schema:
            type: string
          required: true
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/{case_id}/priority:
    post:
      tags:
        - Case
        - Cases
        - Priorities
      summary: 'Update Case Priority '
      description: Update case priority
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    priority: NOT_DEFINED
                  type: case
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: case_id
          in: path
          schema:
            type: string
          required: true
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/{case_id}/assign:
    post:
      tags:
        - Assign
        - Case
        - Cases
      summary: 'Assign Case '
      description: Assign case to a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    assignee_id: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
                  type: case
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: case_id
          in: path
          schema:
            type: string
          required: true
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/{case_id}/unassign:
    post:
      tags:
        - Case
        - Cases
        - Unassign
      summary: 'Unassign Case '
      description: Unassign case
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: case
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: case_id
          in: path
          schema:
            type: string
          required: true
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/{case_id}/archive:
    post:
      tags:
        - Archive
        - Case
        - Cases
      summary: 'Archive Case '
      description: Archive case
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: case
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: case_id
          in: path
          schema:
            type: string
          required: true
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cases/{case_id}/unarchive:
    post:
      tags:
        - Case
        - Cases
        - Unarchive
      summary: 'Unarchive Case '
      description: Unarchive case
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: case
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: case_id
          in: path
          schema:
            type: string
          required: true
          example: f98a5a5b-e0ff-45d4-b2f5-afe6e74de504
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: case
                  attributes:
                    archived_at: '1972-02-07T06:51:36.690Z'
                    closed_at: '1981-10-17T04:11:48.546Z'
                    created_at: '1966-07-08T23:25:43.801Z'
                    description: cupidatat adipisicing nulla
                    jira_issue:
                      result:
                        issue_id: sint Excepteur laborum
                        issue_key: minim quis exerc
                        issue_url: consectetur do
                        project_key: et veniam sit in
                      status: COMPLETED
                    key: CASEM-4523
                    modified_at: '2009-03-17T14:19:20.952Z'
                    priority: NOT_DEFINED
                    service_now_ticket:
                      result:
                        sys_target_link: irure pariatur laboris Duis
                      status: COMPLETED
                    status: OPEN
                    title: Memory leak investigation on API
                    type: STANDARD
                  relationships:
                    assignee:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    created_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    modified_by:
                      data:
                        id: 00000000-0000-0000-0000-000000000000
                        type: user
                    project:
                      data:
                        id: e555e290-ed65-49bd-ae18-8acbfcf18db7
                        type: project
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/ci/pipeline:
    post:
      tags:
        - Events
        - Pipelines
        - Send
      summary: 'Send Pipeline Event '
      description: >-
        Send your pipeline event to your Datadog platform over HTTP. For details
        about how pipeline executions are modeled and what execution types we
        support, see [Pipeline Data Model And Execution
        Types](https://docs.datadoghq.com/continuous_integration/guides/pipeline_data_model/).


        Pipeline events can be submitted with a timestamp that is up to 18 hours
        in the past.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    resource:
                      level: pipeline
                      unique_id: 3eacb6f3-ff04-4e10-8a9c-46e6d054024a
                      name: Deploy to AWS
                      url: >-
                        https://my-ci-provider.example/pipelines/my-pipeline/run/1
                      start: '2023-05-31T15:30:00Z'
                      end: '2023-05-31T15:30:00Z'
                      status: success
                      partial_retry: false
                      error:
                        domain: user
                        message: 'minim sunt '
                        stack: pariatur tempor dolore Excepteur
                        type: ut
                      git:
                        repository_url: https://github.com/username/repository
                        sha: da39a3ee5e6b4b0d3255bfef95601890afd80709
                        author_email: author@example.com
                        author_name: John Doe
                        author_time: '2023-05-31T15:30:00Z'
                        branch: feature-1
                        commit_time: '2023-05-31T15:30:00Z'
                        committer_email: committer@example.com
                        committer_name: ut Lorem non id velit
                        default_branch: main
                        message: Instrumenting tests with CI Visibility.
                        tag: v1.0.0
                      is_manual: false
                      is_resumed: false
                      metrics:
                        - bundle_size:370
                        - build_time:50021
                      node:
                        hostname: www.example.com
                        labels:
                          - ubuntu-18.04
                          - n2.large
                        name: Ut enim commodo do
                        workspace: /home/workspace/code/my-repo
                      parameters:
                        LOG_LEVEL: debug
                      parent_pipeline:
                        id: 93bfeb70-af47-424d-908a-948d3f08e37f
                        url: https://ci-platform.com/pipelines/123456789
                      pipeline_id: '#023'
                      previous_attempt:
                        id: 93bfeb70-af47-424d-908a-948d3f08e37f
                        url: https://ci-platform.com/pipelines/123456789
                      queue_time: 1004
                      tags:
                        - team:backend
                        - type:deployment
                    env: non incididunt
                    service: non do incididunt fugiat
                  type: cipipeline_resource_request
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '408':
          description: Request Timeout
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '413':
          description: Request Entity Too Large
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
  /api/v2/ci/pipelines/events:
    get:
      tags:
        - Events
        - Pipelines
      summary: 'Get A List Of Pipelines Events '
      description: >-
        List endpoint returns CI Visibility pipeline events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to see your latest pipeline events.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      ci_level: pipeline
                      tags:
                        - team:A
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: cipipeline
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      ci_level: pipeline
                      tags:
                        - team:A
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: cipipeline
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/ci/pipelines/events/search:
    post:
      tags:
        - Events
        - Pipelines
        - Search
      summary: 'Search Pipelines Events '
      description: >-
        List endpoint returns CI Visibility pipeline events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to build complex events filtering and search.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  from: now-15m
                  query: '@ci.provider.name:github AND @ci.status:error'
                  to: now
                options:
                  time_offset: 49743317
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
                sort: timestamp
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      ci_level: pipeline
                      tags:
                        - team:A
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: cipipeline
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      ci_level: pipeline
                      tags:
                        - team:A
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: cipipeline
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/ci/pipelines/analytics/aggregate:
    post:
      tags:
        - Aggregate
        - Analytics
        - Events
        - Pipelines
      summary: 'Aggregate Pipelines Events '
      description: >-
        Use this API endpoint to aggregate CI Visibility pipeline events into
        buckets of computed metrics and timeseries.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                compute:
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                filter:
                  from: now-15m
                  query: '@ci.provider.name:github AND @ci.status:error'
                  to: now
                group_by:
                  - facet: '@ci.status'
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: quis occaecat Duis
                    sort:
                      aggregation: count
                      order: asc
                    total: false
                  - facet: '@ci.status'
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: ut elit ex
                    sort:
                      aggregation: count
                      order: asc
                    total: false
                options:
                  time_offset: -19067111
                  timezone: GMT
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  buckets:
                    - by:
                        '@ci.provider.name': gitlab
                        '@ci.status': success
                      computes:
                        incididunt_27: eu do velit
                    - by:
                        '@ci.provider.name': gitlab
                        '@ci.status': success
                      computes:
                        quisb: culpa aliquip ullamco laborum
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/ci/tests/events:
    get:
      tags:
        - Events
        - Tests
      summary: 'Get A List Of Tests Events '
      description: >-
        List endpoint returns CI Visibility test events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to see your latest test events.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      tags:
                        - team:A
                      test_level: test
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: citest
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      tags:
                        - team:A
                      test_level: test
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: citest
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/ci/tests/events/search:
    post:
      tags:
        - Events
        - Search
        - Tests
      summary: 'Search Tests Events '
      description: >-
        List endpoint returns CI Visibility test events that match a [search
        query](https://docs.datadoghq.com/continuous_integration/explorer/search_syntax/).

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to build complex events filtering and search.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  from: now-15m
                  query: '@test.service:web-ui-tests AND @test.status:fail'
                  to: now
                options:
                  time_offset: -15428975
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
                sort: '-timestamp'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      tags:
                        - team:A
                      test_level: test
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: citest
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      tags:
                        - team:A
                      test_level: test
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: citest
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/ci/tests/analytics/aggregate:
    post:
      tags:
        - Aggregate
        - Analytics
        - Events
        - Tests
      summary: 'Aggregate Tests Events '
      description: >-
        The API endpoint to aggregate CI Visibility test events into buckets of
        computed metrics and timeseries.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                compute:
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                filter:
                  from: now-15m
                  query: '@test.service:web-ui-tests AND @test.status:fail'
                  to: now
                group_by:
                  - facet: '@test.service'
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: aliquip occaecat mollit labore eiusmod
                    sort:
                      aggregation: count
                      order: asc
                    total: true
                  - facet: '@test.service'
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: sint
                    sort:
                      aggregation: count
                      order: asc
                    total: false
                options:
                  time_offset: -86649455
                  timezone: GMT
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  buckets:
                    - by:
                        '@test.service': web-ui-tests
                        '@test.status': skip
                      computes:
                        proident__7: sit enim incididunt minim laboris
                        aliqua_45: consectetur do consequat
                    - by:
                        '@test.service': web-ui-tests
                        '@test.status': skip
                      computes:
                        et_c: aliqua ea aliquip occaecat labore
                        dolorec4: non
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/ci/tests/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cost/aws_cur_config:
    get:
      tags:
        - AWS
        - CUR
        - Cloud
        - Configurations
        - Cost
        - Cur
        - Management
      summary: 'List Cloud Cost Management AWS CUR Configs '
      description: List the AWS CUR configs.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      account_id: '123456789123'
                      bucket_name: dd-cost-bucket
                      bucket_region: us-east-1
                      report_name: dd-report-name
                      report_prefix: dd-report-prefix
                      status: active
                      created_at: 3003-00-21T53:22:15p221501
                      error_messages:
                        - nostr
                        - Duis irure aliqua adipisicing sunt
                      status_updated_at: 6182-25-65T81:32:62u370225
                      updated_at: 1802-53-02T24:71:18f889888
                    type: aws_cur_config
                    id: -23362762
                  - attributes:
                      account_id: '123456789123'
                      bucket_name: dd-cost-bucket
                      bucket_region: us-east-1
                      report_name: dd-report-name
                      report_prefix: dd-report-prefix
                      status: active
                      created_at: 1866-40-73T89:60:65[828002
                      error_messages:
                        - 'proident '
                        - quis
                      status_updated_at: 4460-37-32T41:76:92Z894610
                      updated_at: 9636-39-41T74:80:12@059992
                    type: aws_cur_config
                    id: -93854240
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - AWS
        - CUR
        - Cloud
        - Configurations
        - Cost
        - Cur
        - Management
      summary: 'Create Cloud Cost Management AWS CUR Config '
      description: Create a Cloud Cost Management account for an AWS CUR config.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    account_id: '123456789123'
                    bucket_name: dd-cost-bucket
                    report_name: dd-report-name
                    report_prefix: dd-report-prefix
                    bucket_region: us-east-1
                    is_enabled: true
                    months: -19136611
                  type: aws_cur_config_post_request
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    account_id: '123456789123'
                    bucket_name: dd-cost-bucket
                    bucket_region: us-east-1
                    report_name: dd-report-name
                    report_prefix: dd-report-prefix
                    status: active
                    created_at: 6648-18-54T34:69:57q821696
                    error_messages:
                      - eu tempor
                      - culpa Lorem tempor
                    status_updated_at: 5577-71-88T25:09:13x547100
                    updated_at: 0394-72-15T86:84:55E807590
                  type: aws_cur_config
                  id: 92337614
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cost/aws_cur_config/{cloud_account_id}:
    patch:
      tags:
        - AWS
        - Accounts
        - CUR
        - Cloud
        - Configurations
        - Cost
        - Cur
        - Management
      summary: 'Update Cloud Cost Management AWS CUR Config '
      description: Update the status of an AWS CUR config (active/archived).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    is_enabled: true
                  type: aws_cur_config_patch_request
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: cloud_account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      account_id: '123456789123'
                      bucket_name: dd-cost-bucket
                      bucket_region: us-east-1
                      report_name: dd-report-name
                      report_prefix: dd-report-prefix
                      status: active
                      created_at: 3003-00-21T53:22:15p221501
                      error_messages:
                        - nostr
                        - Duis irure aliqua adipisicing sunt
                      status_updated_at: 6182-25-65T81:32:62u370225
                      updated_at: 1802-53-02T24:71:18f889888
                    type: aws_cur_config
                    id: -23362762
                  - attributes:
                      account_id: '123456789123'
                      bucket_name: dd-cost-bucket
                      bucket_region: us-east-1
                      report_name: dd-report-name
                      report_prefix: dd-report-prefix
                      status: active
                      created_at: 1866-40-73T89:60:65[828002
                      error_messages:
                        - 'proident '
                        - quis
                      status_updated_at: 4460-37-32T41:76:92Z894610
                      updated_at: 9636-39-41T74:80:12@059992
                    type: aws_cur_config
                    id: -93854240
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - AWS
        - Accounts
        - CUR
        - Cloud
        - Configurations
        - Cost
        - Cur
        - Management
      summary: 'Delete Cloud Cost Management AWS CUR Config '
      description: Archive a Cloud Cost Management Account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: cloud_account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cost/aws_related_accounts:
    get:
      tags:
        - AWS
        - Accounts
        - Cost
        - Related
      summary: 'List Related AWS Accounts '
      description: >-
        List the AWS accounts in an organization by calling
        'organizations:ListAccounts' from the specified management account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: filter[management_account_id]
          in: query
          schema:
            type: integer
          description: (Required) The ID of the management account to filter by.
          example: '123456789123'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: '123456789123'
                    type: aws_account
                    attributes:
                      has_datadog_integration: true
                      name: pariatur eu
                  - id: '123456789123'
                    type: aws_account
                    attributes:
                      has_datadog_integration: false
                      name: veniam pariatur culpa
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cost/azure_uc_config:
    get:
      tags:
        - Azure
        - Cloud
        - Configurations
        - Cost
        - Management
        - Uc
      summary: 'List Cloud Cost Management Azure Configs '
      description: List the Azure configs.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      configs:
                        - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          dataset_type: actual
                          export_name: dd-actual-export
                          export_path: dd-export-path
                          scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                          status: active
                          storage_account: dd-storage-account
                          storage_container: dd-storage-container
                          created_at: 8000-28-67T79:26:10,292939
                          error_messages:
                            - ullamco in
                            - laboris culpa
                          id: -96013795
                          status_updated_at: 1126-78-25T25:83:21T097834
                          updated_at: 8555-97-82T98:12:84Z350623
                        - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          dataset_type: actual
                          export_name: dd-actual-export
                          export_path: dd-export-path
                          scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                          status: active
                          storage_account: dd-storage-account
                          storage_container: dd-storage-container
                          created_at: 8006-45-09T07:08:11<833339
                          error_messages:
                            - aute exercitation Exc
                            - minim sunt nulla Lorem
                          id: 95479747
                          status_updated_at: 3033-12-00T32:46:111085083
                          updated_at: 0046-40-40T79:07:85q718389
                      id: -52155486
                    type: azure_uc_configs
                    id: -58329652
                  - attributes:
                      configs:
                        - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          dataset_type: actual
                          export_name: dd-actual-export
                          export_path: dd-export-path
                          scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                          status: active
                          storage_account: dd-storage-account
                          storage_container: dd-storage-container
                          created_at: 3618-01-70T47:67:40@019288
                          error_messages:
                            - et
                            - consequat sit
                          id: 53891658
                          status_updated_at: 1027-50-89T84:04:77~215412
                          updated_at: 4117-09-63T27:98:81g395045
                        - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                          dataset_type: actual
                          export_name: dd-actual-export
                          export_path: dd-export-path
                          scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                          status: active
                          storage_account: dd-storage-account
                          storage_container: dd-storage-container
                          created_at: 7804-88-94T37:60:87d676916
                          error_messages:
                            - in velit ipsum ullamco
                            - cupidatat aliqua
                          id: -10316910
                          status_updated_at: 8873-58-37T01:55:082575741
                          updated_at: 7243-31-99T27:12:89k859761
                      id: 74954298
                    type: azure_uc_configs
                    id: -38823066
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Azure
        - Cloud
        - Configurations
        - Cost
        - Management
        - Uc
      summary: 'Create Cloud Cost Management Azure Configs '
      description: Create a Cloud Cost Management account for an Azure config.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                    actual_bill_config:
                      export_name: dd-actual-export
                      export_path: dd-export-path
                      storage_account: dd-storage-account
                      storage_container: dd-storage-container
                    amortized_bill_config:
                      export_name: dd-actual-export
                      export_path: dd-export-path
                      storage_account: dd-storage-account
                      storage_container: dd-storage-container
                    client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                    scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                    is_enabled: true
                  type: azure_uc_config_post_request
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    configs:
                      - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        dataset_type: actual
                        export_name: dd-actual-export
                        export_path: dd-export-path
                        scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                        status: active
                        storage_account: dd-storage-account
                        storage_container: dd-storage-container
                        created_at: 4207-50-28T59:00:15"208196
                        error_messages:
                          - sint veniam fugiat
                          - et ut dolor
                        id: 30416057
                        status_updated_at: 7329-36-37T50:69:19/973099
                        updated_at: 0744-51-87T07:21:369929670
                      - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        dataset_type: actual
                        export_name: dd-actual-export
                        export_path: dd-export-path
                        scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                        status: active
                        storage_account: dd-storage-account
                        storage_container: dd-storage-container
                        created_at: 1718-98-60T82:92:83D697280
                        error_messages:
                          - Ut minim a
                          - nostrud exercitation in
                        id: -94794649
                        status_updated_at: 3222-12-18T79:01:65'740189
                        updated_at: 8227-45-44T80:55:31E439824
                    id: 99623396
                  type: azure_uc_configs
                  id: -23661734
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cost/azure_uc_config/{cloud_account_id}:
    patch:
      tags:
        - Accounts
        - Azure
        - Cloud
        - Configurations
        - Cost
        - Management
        - Uc
      summary: 'Update Cloud Cost Management Azure Config '
      description: Update the status of an  Azure config (active/archived).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    is_enabled: true
                  type: azure_uc_config_patch_request
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: cloud_account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    configs:
                      - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        dataset_type: actual
                        export_name: dd-actual-export
                        export_path: dd-export-path
                        scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                        status: active
                        storage_account: dd-storage-account
                        storage_container: dd-storage-container
                        created_at: 4207-50-28T59:00:15"208196
                        error_messages:
                          - sint veniam fugiat
                          - et ut dolor
                        id: 30416057
                        status_updated_at: 7329-36-37T50:69:19/973099
                        updated_at: 0744-51-87T07:21:369929670
                      - account_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        client_id: 1234abcd-1234-abcd-1234-1234abcd1234
                        dataset_type: actual
                        export_name: dd-actual-export
                        export_path: dd-export-path
                        scope: subscriptions/1234abcd-1234-abcd-1234-1234abcd1234
                        status: active
                        storage_account: dd-storage-account
                        storage_container: dd-storage-container
                        created_at: 1718-98-60T82:92:83D697280
                        error_messages:
                          - Ut minim a
                          - nostrud exercitation in
                        id: -94794649
                        status_updated_at: 3222-12-18T79:01:65'740189
                        updated_at: 8227-45-44T80:55:31E439824
                    id: 99623396
                  type: azure_uc_configs
                  id: -23661734
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Azure
        - Cloud
        - Configurations
        - Cost
        - Management
        - Uc
      summary: 'Delete Cloud Cost Management Azure Config '
      description: Archive a Cloud Cost Management Account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: cloud_account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/cost/enabled:
    get:
      tags:
        - Cloud
        - Cost
        - Enabled
      summary: 'Cloud Cost Enabled '
      description: Get the Cloud Cost Management activity.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    is_enabled: true
                  type: cloud_cost_activity
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security/cloud_workload/policy/download:
    get:
      tags:
        - Cloud
        - Downloads
        - Latest
        - Policies
        - Security
        - Workloads
      summary: 'Get The Latest Cloud Workload Security Policy '
      description: >-
        The download endpoint generates a Cloud Workload Security policy file
        from your currently active

        Cloud Workload Security rules, and downloads them as a .policy file.
        This file can then be deployed to

        your Agents to update the policy running in your environment.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/yaml
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/yaml
          content:
            text/plain:
              schema:
                type: string
              example: pariatur consequat
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/remote_config/products/cws/policy/download:
    get:
      tags:
        - CSM
        - Configurations
        - Cws
        - Downloads
        - Latest
        - Policies
        - Products
        - Remote
        - Threats
      summary: 'Get The Latest CSM Threats Policy '
      description: >-
        The download endpoint generates a CSM Threats policy file from your
        currently active

        CSM Threats rules, and downloads them as a `.policy` file. This file can
        then be deployed to

        your Agents to update the policy running in your environment.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/zip
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/zip
          content:
            text/plain:
              schema:
                type: string
              example: pariatur consequat
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/cloud_workload_security/agent_rules/{agent_rule_id}:
    get:
      tags:
        - Agent
        - Cloud
        - Monitoring
        - Rules
        - Security
        - Workloads
      summary: 'Get A Cloud Workload Security Agent Rule '
      description: Get the details of a specific Agent rule.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agent_rule_id
          in: path
          schema:
            type: string
          required: true
          example: 3b5-v82-ns6
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    actions:
                      - filter: deserunt qui dolor pariatur
                        kill:
                          signal: velit
                      - filter: adipisicing
                        kill:
                          signal: in anim cillum voluptate
                    agentConstraint: nulla
                    category: Process Activity
                    creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    creationDate: 1624366480320
                    creator:
                      handle: datadog.user@example.com
                      name: Datadog User
                    defaultRule: false
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                    filters:
                      - adipisi
                      - dolor ipsum laborum
                    name: my_agent_rule
                    updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    updateDate: 1624366480320
                    updatedAt: 1624366480320
                    updater:
                      handle: datadog.user@example.com
                      name: Datadog User
                    version: 23
                  id: 3dd-0uc-h1s
                  type: agent_rule
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Agent
        - Cloud
        - Monitoring
        - Rules
        - Security
        - Workloads
      summary: 'Update A Cloud Workload Security Agent Rule '
      description: |-
        Update a specific Agent rule.
        Returns the Agent rule object when the request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                  type: agent_rule
                  id: 3dd-0uc-h1s
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agent_rule_id
          in: path
          schema:
            type: string
          required: true
          example: 3b5-v82-ns6
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    actions:
                      - filter: deserunt qui dolor pariatur
                        kill:
                          signal: velit
                      - filter: adipisicing
                        kill:
                          signal: in anim cillum voluptate
                    agentConstraint: nulla
                    category: Process Activity
                    creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    creationDate: 1624366480320
                    creator:
                      handle: datadog.user@example.com
                      name: Datadog User
                    defaultRule: false
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                    filters:
                      - adipisi
                      - dolor ipsum laborum
                    name: my_agent_rule
                    updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    updateDate: 1624366480320
                    updatedAt: 1624366480320
                    updater:
                      handle: datadog.user@example.com
                      name: Datadog User
                    version: 23
                  id: 3dd-0uc-h1s
                  type: agent_rule
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Agent
        - Cloud
        - Monitoring
        - Rules
        - Security
        - Workloads
      summary: 'Delete A Cloud Workload Security Agent Rule '
      description: Delete a specific Agent rule.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agent_rule_id
          in: path
          schema:
            type: string
          required: true
          example: 3b5-v82-ns6
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/remote_config/products/cws/agent_rules/{agent_rule_id}:
    get:
      tags:
        - Agent
        - CSM
        - Configurations
        - Cws
        - Products
        - Remote
        - Rules
        - Threats
      summary: 'Get A CSM Threats Agent Rule '
      description: >-
        Get the details of a specific Cloud Security Management Threats Agent
        rule.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agent_rule_id
          in: path
          schema:
            type: string
          required: true
          example: 3b5-v82-ns6
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    actions:
                      - filter: deserunt qui dolor pariatur
                        kill:
                          signal: velit
                      - filter: adipisicing
                        kill:
                          signal: in anim cillum voluptate
                    agentConstraint: nulla
                    category: Process Activity
                    creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    creationDate: 1624366480320
                    creator:
                      handle: datadog.user@example.com
                      name: Datadog User
                    defaultRule: false
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                    filters:
                      - adipisi
                      - dolor ipsum laborum
                    name: my_agent_rule
                    updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    updateDate: 1624366480320
                    updatedAt: 1624366480320
                    updater:
                      handle: datadog.user@example.com
                      name: Datadog User
                    version: 23
                  id: 3dd-0uc-h1s
                  type: agent_rule
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Agent
        - CSM
        - Configurations
        - Cws
        - Products
        - Remote
        - Rules
        - Threats
      summary: 'Update A CSM Threats Agent Rule '
      description: |-
        Update a specific Cloud Security Management Threats Agent rule.
        Returns the Agent rule object when the request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                  type: agent_rule
                  id: 3dd-0uc-h1s
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agent_rule_id
          in: path
          schema:
            type: string
          required: true
          example: 3b5-v82-ns6
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    actions:
                      - filter: deserunt qui dolor pariatur
                        kill:
                          signal: velit
                      - filter: adipisicing
                        kill:
                          signal: in anim cillum voluptate
                    agentConstraint: nulla
                    category: Process Activity
                    creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    creationDate: 1624366480320
                    creator:
                      handle: datadog.user@example.com
                      name: Datadog User
                    defaultRule: false
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                    filters:
                      - adipisi
                      - dolor ipsum laborum
                    name: my_agent_rule
                    updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    updateDate: 1624366480320
                    updatedAt: 1624366480320
                    updater:
                      handle: datadog.user@example.com
                      name: Datadog User
                    version: 23
                  id: 3dd-0uc-h1s
                  type: agent_rule
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Agent
        - CSM
        - Configurations
        - Cws
        - Products
        - Remote
        - Rules
        - Threats
      summary: 'Delete A CSM Threats Agent Rule '
      description: Delete a specific Cloud Security Management Threats Agent rule.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agent_rule_id
          in: path
          schema:
            type: string
          required: true
          example: 3b5-v82-ns6
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/cloud_workload_security/agent_rules:
    get:
      tags:
        - Agent
        - Cloud
        - Monitoring
        - Rules
        - Security
        - Workloads
      summary: 'Get All Cloud Workload Security Agent Rules '
      description: Get the list of Agent rules.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      actions:
                        - filter: est
                          kill:
                            signal: nostrud
                        - filter: voluptate esse sint ut
                          kill:
                            signal: magn
                      agentConstraint: officia dolore cillum do
                      category: Process Activity
                      creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      creationDate: 1624366480320
                      creator:
                        handle: datadog.user@example.com
                        name: Datadog User
                      defaultRule: false
                      description: My Agent rule
                      enabled: true
                      expression: exec.file.name == \"sh\"
                      filters:
                        - pariatur ipsum
                        - reprehender
                      name: my_agent_rule
                      updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      updateDate: 1624366480320
                      updatedAt: 1624366480320
                      updater:
                        handle: datadog.user@example.com
                        name: Datadog User
                      version: 23
                    id: 3dd-0uc-h1s
                    type: agent_rule
                  - attributes:
                      actions:
                        - filter: occaecat dolor cupidatat veniam
                          kill:
                            signal: cillum tempor
                        - filter: exercitation incididunt elit
                          kill:
                            signal: consequat esse veniam
                      agentConstraint: adipisicing sunt ut
                      category: Process Activity
                      creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      creationDate: 1624366480320
                      creator:
                        handle: datadog.user@example.com
                        name: Datadog User
                      defaultRule: false
                      description: My Agent rule
                      enabled: true
                      expression: exec.file.name == \"sh\"
                      filters:
                        - in magna laboris occaec
                        - ut reprehenderit aute quis
                      name: my_agent_rule
                      updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      updateDate: 1624366480320
                      updatedAt: 1624366480320
                      updater:
                        handle: datadog.user@example.com
                        name: Datadog User
                      version: 23
                    id: 3dd-0uc-h1s
                    type: agent_rule
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Agent
        - Cloud
        - Monitoring
        - Rules
        - Security
        - Workloads
      summary: 'Create A Cloud Workload Security Agent Rule '
      description: Create a new Agent rule with the given parameters.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: my_agent_rule
                    expression: exec.file.name == \"sh\"
                    description: My Agent rule
                    enabled: true
                  type: agent_rule
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    actions:
                      - filter: deserunt qui dolor pariatur
                        kill:
                          signal: velit
                      - filter: adipisicing
                        kill:
                          signal: in anim cillum voluptate
                    agentConstraint: nulla
                    category: Process Activity
                    creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    creationDate: 1624366480320
                    creator:
                      handle: datadog.user@example.com
                      name: Datadog User
                    defaultRule: false
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                    filters:
                      - adipisi
                      - dolor ipsum laborum
                    name: my_agent_rule
                    updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    updateDate: 1624366480320
                    updatedAt: 1624366480320
                    updater:
                      handle: datadog.user@example.com
                      name: Datadog User
                    version: 23
                  id: 3dd-0uc-h1s
                  type: agent_rule
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/remote_config/products/cws/agent_rules:
    get:
      tags:
        - Agent
        - CSM
        - Configurations
        - Cws
        - Products
        - Remote
        - Rules
        - Threats
      summary: 'Get All CSM Threats Agent Rules '
      description: Get the list of Cloud Security Management Threats Agent rules.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      actions:
                        - filter: est
                          kill:
                            signal: nostrud
                        - filter: voluptate esse sint ut
                          kill:
                            signal: magn
                      agentConstraint: officia dolore cillum do
                      category: Process Activity
                      creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      creationDate: 1624366480320
                      creator:
                        handle: datadog.user@example.com
                        name: Datadog User
                      defaultRule: false
                      description: My Agent rule
                      enabled: true
                      expression: exec.file.name == \"sh\"
                      filters:
                        - pariatur ipsum
                        - reprehender
                      name: my_agent_rule
                      updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      updateDate: 1624366480320
                      updatedAt: 1624366480320
                      updater:
                        handle: datadog.user@example.com
                        name: Datadog User
                      version: 23
                    id: 3dd-0uc-h1s
                    type: agent_rule
                  - attributes:
                      actions:
                        - filter: occaecat dolor cupidatat veniam
                          kill:
                            signal: cillum tempor
                        - filter: exercitation incididunt elit
                          kill:
                            signal: consequat esse veniam
                      agentConstraint: adipisicing sunt ut
                      category: Process Activity
                      creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      creationDate: 1624366480320
                      creator:
                        handle: datadog.user@example.com
                        name: Datadog User
                      defaultRule: false
                      description: My Agent rule
                      enabled: true
                      expression: exec.file.name == \"sh\"
                      filters:
                        - in magna laboris occaec
                        - ut reprehenderit aute quis
                      name: my_agent_rule
                      updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                      updateDate: 1624366480320
                      updatedAt: 1624366480320
                      updater:
                        handle: datadog.user@example.com
                        name: Datadog User
                      version: 23
                    id: 3dd-0uc-h1s
                    type: agent_rule
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Agent
        - CSM
        - Configurations
        - Cws
        - Products
        - Remote
        - Rules
        - Threats
      summary: 'Create A CSM Threats Agent Rule '
      description: >-
        Create a new Cloud Security Management Threats Agent rule with the given
        parameters.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: my_agent_rule
                    expression: exec.file.name == \"sh\"
                    description: My Agent rule
                    enabled: true
                  type: agent_rule
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    actions:
                      - filter: deserunt qui dolor pariatur
                        kill:
                          signal: velit
                      - filter: adipisicing
                        kill:
                          signal: in anim cillum voluptate
                    agentConstraint: nulla
                    category: Process Activity
                    creationAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    creationDate: 1624366480320
                    creator:
                      handle: datadog.user@example.com
                      name: Datadog User
                    defaultRule: false
                    description: My Agent rule
                    enabled: true
                    expression: exec.file.name == \"sh\"
                    filters:
                      - adipisi
                      - dolor ipsum laborum
                    name: my_agent_rule
                    updateAuthorUuId: e51c9744-d158-11ec-ad23-da7ad0900002
                    updateDate: 1624366480320
                    updatedAt: 1624366480320
                    updater:
                      handle: datadog.user@example.com
                      name: Datadog User
                    version: 23
                  id: 3dd-0uc-h1s
                  type: agent_rule
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/cloudflare/accounts:
    get:
      tags:
        - Accounts
        - Cloudflare
        - Integrations
      summary: 'List Cloudflare Accounts '
      description: List Cloudflare accounts.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      name: test-name
                      email: test-email@example.com
                      resources:
                        - web
                        - dns
                      zones:
                        - zone_id_1
                        - zone_id_2
                    id: c1a8e059bfd1e911cf10b626340c9a54
                    type: cloudflare-accounts
                  - attributes:
                      name: test-name
                      email: test-email@example.com
                      resources:
                        - web
                        - dns
                      zones:
                        - zone_id_1
                        - zone_id_2
                    id: c1a8e059bfd1e911cf10b626340c9a54
                    type: cloudflare-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Accounts
        - Cloudflare
        - Integrations
      summary: 'Add Cloudflare Account '
      description: Create a Cloudflare account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    api_key: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
                    name: test-name
                    email: test-email@example.com
                    resources:
                      - web
                      - dns
                    zones:
                      - zone_id_1
                      - zone_id_2
                  type: cloudflare-accounts
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    name: test-name
                    email: test-email@example.com
                    resources:
                      - web
                      - dns
                    zones:
                      - zone_id_1
                      - zone_id_2
                  id: c1a8e059bfd1e911cf10b626340c9a54
                  type: cloudflare-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/cloudflare/accounts/{account_id}:
    get:
      tags:
        - Accounts
        - Cloudflare
        - Integrations
      summary: 'Get Cloudflare Account '
      description: Get a Cloudflare account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    name: test-name
                    email: test-email@example.com
                    resources:
                      - web
                      - dns
                    zones:
                      - zone_id_1
                      - zone_id_2
                  id: c1a8e059bfd1e911cf10b626340c9a54
                  type: cloudflare-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Accounts
        - Cloudflare
        - Integrations
      summary: 'Update Cloudflare Account '
      description: Update a Cloudflare account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    api_key: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
                    email: test-email@example.com
                    resources:
                      - web
                      - dns
                    zones:
                      - zone_id_1
                      - zone_id_2
                  type: cloudflare-accounts
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    name: test-name
                    email: test-email@example.com
                    resources:
                      - web
                      - dns
                    zones:
                      - zone_id_1
                      - zone_id_2
                  id: c1a8e059bfd1e911cf10b626340c9a54
                  type: cloudflare-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Cloudflare
        - Integrations
      summary: 'Delete Cloudflare Account '
      description: Delete a Cloudflare account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources/{resource_id}:
    patch:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
        - Resources
      summary: 'Update Resource In Confluent Account '
      description: >-
        Update a Confluent resource with the provided resource id for the
        account associated with the provided account ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    resource_type: kafka
                    enable_custom_metrics: false
                    tags:
                      - myTag
                      - myTag2:myValue
                  type: confluent-cloud-resources
                  id: resource-id-123
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: resource_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    resource_type: kafka
                    enable_custom_metrics: false
                    id: resource_id_abc123
                    tags:
                      - myTag
                      - myTag2:myValue
                  type: confluent-cloud-resources
                  id: resource_id_abc123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
        - Resources
      summary: 'Get Resource From Confluent Account '
      description: >-
        Get a Confluent resource with the provided resource id for the account
        associated with the provided account ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: resource_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    resource_type: kafka
                    enable_custom_metrics: false
                    id: resource_id_abc123
                    tags:
                      - myTag
                      - myTag2:myValue
                  type: confluent-cloud-resources
                  id: resource_id_abc123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
        - Resources
      summary: 'Delete Resource From Confluent Account '
      description: >-
        Delete a Confluent resource with the provided resource id for the
        account associated with the provided account ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: resource_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources:
    post:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
        - Resources
      summary: 'Add Resource To Confluent Account '
      description: >-
        Create a Confluent resource for the account associated with the provided
        ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    resource_type: kafka
                    enable_custom_metrics: false
                    tags:
                      - myTag
                      - myTag2:myValue
                  type: confluent-cloud-resources
                  id: resource-id-123
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    resource_type: kafka
                    enable_custom_metrics: false
                    id: resource_id_abc123
                    tags:
                      - myTag
                      - myTag2:myValue
                  type: confluent-cloud-resources
                  id: resource_id_abc123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
        - Resources
      summary: 'List Confluent Account Resources '
      description: >-
        Get a Confluent resource for the account associated with the provided
        ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      resource_type: kafka
                      enable_custom_metrics: false
                      id: resource_id_abc123
                      tags:
                        - myTag
                        - myTag2:myValue
                    type: confluent-cloud-resources
                    id: resource_id_abc123
                  - attributes:
                      resource_type: kafka
                      enable_custom_metrics: false
                      id: resource_id_abc123
                      tags:
                        - myTag
                        - myTag2:myValue
                    type: confluent-cloud-resources
                    id: resource_id_abc123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/confluent-cloud/accounts/{account_id}:
    patch:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
      summary: 'Update Confluent Account '
      description: Update the Confluent account with the provided account ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    api_key: TESTAPIKEY123
                    api_secret: test-api-secret-123
                    tags:
                      - myTag
                      - myTag2:myValue
                  type: confluent-cloud-accounts
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    api_key: TESTAPIKEY123
                    resources:
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource_id_abc123
                        tags:
                          - myTag
                          - myTag2:myValue
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource_id_abc123
                        tags:
                          - myTag
                          - myTag2:myValue
                    tags:
                      - myTag
                      - myTag2:myValue
                  id: account_id_abc123
                  type: confluent-cloud-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
      summary: 'Get Confluent Account '
      description: Get the Confluent account with the provided account ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    api_key: TESTAPIKEY123
                    resources:
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource_id_abc123
                        tags:
                          - myTag
                          - myTag2:myValue
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource_id_abc123
                        tags:
                          - myTag
                          - myTag2:myValue
                    tags:
                      - myTag
                      - myTag2:myValue
                  id: account_id_abc123
                  type: confluent-cloud-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
      summary: 'Delete Confluent Account '
      description: Delete a Confluent account with the provided account ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/confluent-cloud/accounts:
    post:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
      summary: 'Add Confluent Account '
      description: Create a Confluent account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    api_key: TESTAPIKEY123
                    api_secret: test-api-secret-123
                    resources:
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource-id-123
                        tags:
                          - myTag
                          - myTag2:myValue
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource-id-123
                        tags:
                          - myTag
                          - myTag2:myValue
                    tags:
                      - myTag
                      - myTag2:myValue
                  type: confluent-cloud-accounts
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    api_key: TESTAPIKEY123
                    resources:
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource_id_abc123
                        tags:
                          - myTag
                          - myTag2:myValue
                      - resource_type: kafka
                        enable_custom_metrics: false
                        id: resource_id_abc123
                        tags:
                          - myTag
                          - myTag2:myValue
                    tags:
                      - myTag
                      - myTag2:myValue
                  id: account_id_abc123
                  type: confluent-cloud-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Accounts
        - Cloud
        - Confluent
        - Integrations
      summary: 'List Confluent Accounts '
      description: List Confluent accounts.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      api_key: TESTAPIKEY123
                      resources:
                        - resource_type: kafka
                          enable_custom_metrics: false
                          id: resource_id_abc123
                          tags:
                            - myTag
                            - myTag2:myValue
                        - resource_type: kafka
                          enable_custom_metrics: false
                          id: resource_id_abc123
                          tags:
                            - myTag
                            - myTag2:myValue
                      tags:
                        - myTag
                        - myTag2:myValue
                    id: account_id_abc123
                    type: confluent-cloud-accounts
                  - attributes:
                      api_key: TESTAPIKEY123
                      resources:
                        - resource_type: kafka
                          enable_custom_metrics: false
                          id: resource_id_abc123
                          tags:
                            - myTag
                            - myTag2:myValue
                        - resource_type: kafka
                          enable_custom_metrics: false
                          id: resource_id_abc123
                          tags:
                            - myTag
                            - myTag2:myValue
                      tags:
                        - myTag
                        - myTag2:myValue
                    id: account_id_abc123
                    type: confluent-cloud-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/container_images:
    get:
      tags:
        - Container
        - Images
      summary: 'Get All Container Images '
      description: Get all Container Images for your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      container_count: 83395304
                      image_flavors:
                        - built_at: pariatur sit labore commodo
                          os_architecture: 'dolore '
                          os_name: id est ut
                          os_version: occaecat
                          size: -15722494
                        - built_at: id
                          os_architecture: deserunt
                          os_name: quis in esse ut amet
                          os_version: cupid
                          size: 42967562
                      image_tags:
                        - Lorem proident Excepteur tempor
                        - ullamco sunt eiusmod
                      images_built_at:
                        - ut occaecat et voluptat
                        - dolore
                      name: labore sunt
                      os_architectures:
                        - amd64
                        - amd64
                      os_names:
                        - linux
                        - linux
                      os_versions:
                        - Ut
                        - ut adipisicing pariatur aliqua
                      published_at: ipsum eiusmod aute
                      registry: ea veniam dolor sit ad
                      repo_digest: in elit
                      repository: ad deserunt veniam Ut
                      short_image: qui commodo
                      sizes:
                        - 5866265
                        - -23217186
                      sources:
                        - occaecat in ea Lorem culpa
                        - elit labore eu consequat
                      tags:
                        - laborum irure enim
                        - magna
                      vulnerability_count:
                        asset_id: consectetur ut officia
                        critical: 2421307
                        high: 8248750
                        low: -9333311
                        medium: 35469251
                        none: -55354970
                        unknown: -34645275
                    id: dolore adipisicing
                    type: container_image
                  - attributes:
                      container_count: -93137991
                      image_flavors:
                        - built_at: eu ullamco et tempor incididunt
                          os_architecture: aliqua tempor in quis
                          os_name: sunt
                          os_version: minim ullamco quis dolore
                          size: -51068253
                        - built_at: ipsum esse
                          os_architecture: anim commodo ad proident
                          os_name: qui reprehenderit
                          os_version: ad labore tempor fugiat
                          size: 80828788
                      image_tags:
                        - fugiat eu velit ullamc
                        - nisi reprehenderit
                      images_built_at:
                        - enim Lorem laboris pariatur
                        - esse
                      name: nulla dolore labore anim
                      os_architectures:
                        - amd64
                        - amd64
                      os_names:
                        - linux
                        - linux
                      os_versions:
                        - nulla ea enim
                        - qui ullamco sed adipisicing
                      published_at: consectetur Lorem adipisicing reprehenderit
                      registry: quis non labore in
                      repo_digest: irure aliquip officia
                      repository: adipisicing Duis
                      short_image: si
                      sizes:
                        - -1790351
                        - 92675202
                      sources:
                        - dolor laboris ullamco aliqua
                        - ut culpa laboris consectetur anim
                      tags:
                        - consectetur qui
                        - et
                      vulnerability_count:
                        asset_id: occaecat in reprehenderit aliqua
                        critical: 74849913
                        high: 41705598
                        low: 32420708
                        medium: 21829495
                        none: 501732
                        unknown: -44876298
                    id: amet dolore ullamco
                    type: container_image
                links:
                  first: officia eu
                  last: voluptate
                  next: Lorem mollit s
                  prev: est mollit
                  self: cupid
                meta:
                  pagination:
                    cursor: adipisicing voluptate culpa ullamco
                    limit: 5141
                    next_cursor: eiusm
                    prev_cursor: cillum cup
                    total: 50593531
                    type: cursor_limit
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/containers:
    get:
      tags:
        - Containers
      summary: 'Get All Containers '
      description: Get all containers for your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      container_id: fugiat laborum sed elit
                      created_at: occaecat
                      host: officia deserunt
                      image_digest: deserunt Ut sunt occaecat
                      image_name: velit laborum ut
                      image_tags:
                        - enim sunt Excepteur pariatur
                        - occaecat fugiat elit
                      name: commodo reprehenderit aute nisi
                      started_at: minim ipsum ad Excepteur
                      state: commodo mollit exercitation cillum
                      tags:
                        - ad esse laboris reprehenderit
                        - culpa in cillum
                    id: occaecat cillum veniam
                    type: container
                  - attributes:
                      container_id: eiusmod magna ut anim
                      created_at: id sit in in velit
                      host: nisi deserunt
                      image_digest: dolor cillum magna
                      image_name: consectetur mollit Lorem laborum in
                      image_tags:
                        - exercitation Duis cillum eu
                        - laboris irure magna amet
                      name: sunt officia in cupidatat
                      started_at: magna eu
                      state: amet sed aliqua sint
                      tags:
                        - ut Lorem mollit labore
                        - quis deserunt anim irure
                    id: Duis ut incididunt laborum
                    type: container
                links:
                  first: ex commodo sit
                  last: cupidatat ipsum pariatur
                  next: non aliquip
                  prev: fugiat ex
                  self: ipsum nisi sunt qui
                meta:
                  pagination:
                    cursor: labore incididunt irure
                    limit: 4902
                    next_cursor: occaecat
                    prev_cursor: ut fugiat tempor eli
                    total: 78209577
                    type: cursor_limit
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/dashboard/lists/manual:
    get:
      tags:
        - Dashboard
        - Manual
      summary: 'Get All Dashboard Lists '
      description: Fetch all of your existing dashboard list definitions.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dashboard_lists:
                  - name: My Dashboard
                    author:
                      email: tempor
                      handle: ex ullamco occaecat
                      name: nostrud ea Lorem eu
                    created: '1985-09-26T12:56:46.954Z'
                    dashboard_count: -66540670
                    id: -481941
                    is_favorite: false
                    modified: '1960-04-30T03:38:15.768Z'
                    type: manual_dashboard_list
                  - name: My Dashboard
                    author:
                      email: exercitation
                      handle: in nisi incididunt sunt
                      name: occaecat ex
                    created: '2004-09-05T08:55:40.192Z'
                    dashboard_count: 64043891
                    id: 92153132
                    is_favorite: false
                    modified: '1958-06-15T05:48:50.423Z'
                    type: manual_dashboard_list
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Dashboard
        - Manual
      summary: 'Create A Dashboard List '
      description: Create an empty dashboard list.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: My Dashboard
                author:
                  email: reprehenderit veniam
                  handle: fugiat ex minim qui
                  name: sint ullamco
                created: '1982-10-23T10:00:36.966Z'
                dashboard_count: 92719114
                id: -92359742
                is_favorite: true
                modified: '1948-10-23T05:55:37.830Z'
                type: manual_dashboard_list
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My Dashboard
                author:
                  email: reprehenderit veniam
                  handle: fugiat ex minim qui
                  name: sint ullamco
                created: '1982-10-23T10:00:36.966Z'
                dashboard_count: 92719114
                id: -92359742
                is_favorite: true
                modified: '1948-10-23T05:55:37.830Z'
                type: manual_dashboard_list
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards:
    get:
      tags:
        - Dashboard
        - Dashboards
        - Items
        - Manual
      summary: 'Get Items Of A Dashboard List '
      description: Fetch the dashboard list’s dashboard definitions.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: dashboard_list_id
          in: path
          schema:
            type: integer
          required: true
          example: '97337406'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dashboards: []
                total: -87873014
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Dashboard
        - Dashboards
        - Items
        - Manual
      summary: 'Add Items To A Dashboard List '
      description: Add dashboards to an existing dashboard list.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dashboards:
                  - type: host_timeboard
                    id: q5j-nti-fv6
                  - type: host_timeboard
                    id: q5j-nti-fv6
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: dashboard_list_id
          in: path
          schema:
            type: integer
          required: true
          example: '97337406'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                added_dashboards_to_list:
                  - type: host_timeboard
                    id: q5j-nti-fv6
                  - type: host_timeboard
                    id: q5j-nti-fv6
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Dashboard
        - Dashboards
        - Items
        - Manual
      summary: 'Update Items Of A Dashboard List '
      description: Update dashboards of an existing dashboard list.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dashboards:
                  - type: host_timeboard
                    id: q5j-nti-fv6
                  - type: host_timeboard
                    id: q5j-nti-fv6
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: dashboard_list_id
          in: path
          schema:
            type: integer
          required: true
          example: '97337406'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dashboards:
                  - type: host_timeboard
                    id: q5j-nti-fv6
                  - type: host_timeboard
                    id: q5j-nti-fv6
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Dashboard
        - Dashboards
        - Items
        - Manual
      summary: 'Delete Items From A Dashboard List '
      description: Delete dashboards from an existing dashboard list.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: dashboard_list_id
          in: path
          schema:
            type: integer
          required: true
          example: '97337406'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deleted_dashboards_from_list:
                  - type: host_timeboard
                    id: q5j-nti-fv6
                  - type: host_timeboard
                    id: q5j-nti-fv6
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/dashboard/lists/manual/{list_id}:
    get:
      tags:
        - Dashboard
        - Manual
      summary: 'Get A Dashboard List '
      description: Fetch an existing dashboard list's definition.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My Dashboard
                author:
                  email: reprehenderit veniam
                  handle: fugiat ex minim qui
                  name: sint ullamco
                created: '1982-10-23T10:00:36.966Z'
                dashboard_count: 92719114
                id: -92359742
                is_favorite: true
                modified: '1948-10-23T05:55:37.830Z'
                type: manual_dashboard_list
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Dashboard
        - Manual
      summary: 'Update A Dashboard List '
      description: Update the name of a dashboard list.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: My Dashboard
                author:
                  email: reprehenderit veniam
                  handle: fugiat ex minim qui
                  name: sint ullamco
                created: '1982-10-23T10:00:36.966Z'
                dashboard_count: 92719114
                id: -92359742
                is_favorite: true
                modified: '1948-10-23T05:55:37.830Z'
                type: manual_dashboard_list
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My Dashboard
                author:
                  email: reprehenderit veniam
                  handle: fugiat ex minim qui
                  name: sint ullamco
                created: '1982-10-23T10:00:36.966Z'
                dashboard_count: 92719114
                id: -92359742
                is_favorite: true
                modified: '1948-10-23T05:55:37.830Z'
                type: manual_dashboard_list
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Dashboard
        - Manual
      summary: 'Delete A Dashboard List '
      description: Delete a dashboard list.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deleted_dashboard_list_id: 7398122
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/dashboard:
    post:
      tags:
        - Dashboard
      summary: 'Create A New Dashboard '
      description: >-
        Create a dashboard using the specified options. When defining queries in
        your widgets, take note of which queries should have the `as_count()` or
        `as_rate()` modifiers appended.

        Refer to the following
        [documentation](https://docs.datadoghq.com/developers/metrics/type_modifiers/?tab=count#in-application-modifiers)
        for more information on these modifiers.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: ''
                layout_type: ordered
                widgets:
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: mollit consectetur
                      title_align: center
                      title_size: Lorem magna
                    id: -61780097
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: Ut pariatur ipsum
                      title_align: left
                      title_size: dolor
                    id: 27923501
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                author_handle: test@datadoghq.com
                author_name: John Doe
                created_at: '1953-09-02T02:49:43.272Z'
                description: in sit tempor
                id: 123-abc-456
                modified_at: '2017-05-19T18:05:09.015Z'
                notify_list:
                  - officia in aliqua consectetur
                  - ut nostrud dolor est cillum
                reflow_type: auto
                tags:
                  - sed irure Lorem proident ullamco
                  - inc
                template_variable_presets:
                  - name: dolor tempor officia esse
                    template_variables:
                      - name: esse labori
                        values:
                          - culpa anim
                      - name: exercitation sit
                        values:
                          - pariatur Excepteur veniam commodo
                  - name: nisi elit
                    template_variables:
                      - name: sunt si
                        values:
                          - Lorem ex ullamco tempor
                      - name: ex ad cillum
                        values:
                          - qui Ut
                template_variables:
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                url: /dashboard/123-abc-456/example-dashboard-title
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title: ''
                layout_type: ordered
                widgets:
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: mollit consectetur
                      title_align: center
                      title_size: Lorem magna
                    id: -61780097
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: Ut pariatur ipsum
                      title_align: left
                      title_size: dolor
                    id: 27923501
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                author_handle: test@datadoghq.com
                author_name: John Doe
                created_at: '1953-09-02T02:49:43.272Z'
                description: in sit tempor
                id: 123-abc-456
                modified_at: '2017-05-19T18:05:09.015Z'
                notify_list:
                  - officia in aliqua consectetur
                  - ut nostrud dolor est cillum
                reflow_type: auto
                tags:
                  - sed irure Lorem proident ullamco
                  - inc
                template_variable_presets:
                  - name: dolor tempor officia esse
                    template_variables:
                      - name: esse labori
                        values:
                          - culpa anim
                      - name: exercitation sit
                        values:
                          - pariatur Excepteur veniam commodo
                  - name: nisi elit
                    template_variables:
                      - name: sunt si
                        values:
                          - Lorem ex ullamco tempor
                      - name: ex ad cillum
                        values:
                          - qui Ut
                template_variables:
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                url: /dashboard/123-abc-456/example-dashboard-title
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Dashboard
        - Dashboards
      summary: 'Get All Dashboards '
      description: >-
        Get all dashboards.


        **Note**: This query will only return custom created or cloned
        dashboards.

        This query will not return preset dashboards.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dashboards:
                  - author_handle: culpa laboris velit et
                    created_at: '2008-05-17T01:35:57.983Z'
                    description: in tempor
                    id: laborum cupidatat
                    layout_type: ordered
                    modified_at: '2012-02-12T13:36:16.149Z'
                    title: nostrud ullamco pariatur dolore adipisicing
                    url: in irure
                  - author_handle: eu in
                    created_at: '2012-11-19T15:11:07.469Z'
                    description: sint dolor reprehenderit
                    id: labore esse cupidatat
                    layout_type: ordered
                    modified_at: '1978-02-17T17:21:23.245Z'
                    title: ad quis sit
                    url: cupidatat nisi est
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Dashboard
        - Dashboards
      summary: 'Delete Dashboards '
      description: >-
        Delete dashboards using the specified IDs. If there are any failures, no
        dashboards will be deleted (partial success is not allowed).
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Dashboard
        - Dashboards
        - Restore
      summary: 'Restore Deleted Dashboards '
      description: >-
        Restore dashboards using the specified IDs. If there are any failures,
        no dashboards will be restored (partial success is not allowed).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - id: 123-abc-456
                    type: dashboard
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/dashboard/{dashboard_id}:
    get:
      tags:
        - Dashboard
      summary: 'Get A Dashboard '
      description: Get a dashboard using the specified ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: dashboard_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title: ''
                layout_type: ordered
                widgets:
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: mollit consectetur
                      title_align: center
                      title_size: Lorem magna
                    id: -61780097
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: Ut pariatur ipsum
                      title_align: left
                      title_size: dolor
                    id: 27923501
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                author_handle: test@datadoghq.com
                author_name: John Doe
                created_at: '1953-09-02T02:49:43.272Z'
                description: in sit tempor
                id: 123-abc-456
                modified_at: '2017-05-19T18:05:09.015Z'
                notify_list:
                  - officia in aliqua consectetur
                  - ut nostrud dolor est cillum
                reflow_type: auto
                tags:
                  - sed irure Lorem proident ullamco
                  - inc
                template_variable_presets:
                  - name: dolor tempor officia esse
                    template_variables:
                      - name: esse labori
                        values:
                          - culpa anim
                      - name: exercitation sit
                        values:
                          - pariatur Excepteur veniam commodo
                  - name: nisi elit
                    template_variables:
                      - name: sunt si
                        values:
                          - Lorem ex ullamco tempor
                      - name: ex ad cillum
                        values:
                          - qui Ut
                template_variables:
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                url: /dashboard/123-abc-456/example-dashboard-title
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Dashboard
      summary: 'Update A Dashboard '
      description: Update a dashboard using the specified ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: ''
                layout_type: ordered
                widgets:
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: mollit consectetur
                      title_align: center
                      title_size: Lorem magna
                    id: -61780097
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: Ut pariatur ipsum
                      title_align: left
                      title_size: dolor
                    id: 27923501
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                author_handle: test@datadoghq.com
                author_name: John Doe
                created_at: '1953-09-02T02:49:43.272Z'
                description: in sit tempor
                id: 123-abc-456
                modified_at: '2017-05-19T18:05:09.015Z'
                notify_list:
                  - officia in aliqua consectetur
                  - ut nostrud dolor est cillum
                reflow_type: auto
                tags:
                  - sed irure Lorem proident ullamco
                  - inc
                template_variable_presets:
                  - name: dolor tempor officia esse
                    template_variables:
                      - name: esse labori
                        values:
                          - culpa anim
                      - name: exercitation sit
                        values:
                          - pariatur Excepteur veniam commodo
                  - name: nisi elit
                    template_variables:
                      - name: sunt si
                        values:
                          - Lorem ex ullamco tempor
                      - name: ex ad cillum
                        values:
                          - qui Ut
                template_variables:
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                url: /dashboard/123-abc-456/example-dashboard-title
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: dashboard_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                title: ''
                layout_type: ordered
                widgets:
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: mollit consectetur
                      title_align: center
                      title_size: Lorem magna
                    id: -61780097
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                  - definition:
                      type: alert_graph
                      alert_id: ''
                      viz_type: timeseries
                      time:
                        live_span: 5m
                      title: Ut pariatur ipsum
                      title_align: left
                      title_size: dolor
                    id: 27923501
                    layout:
                      x: 0
                      'y': 0
                      width: 0
                      height: 0
                      is_column_break: false
                author_handle: test@datadoghq.com
                author_name: John Doe
                created_at: '1953-09-02T02:49:43.272Z'
                description: in sit tempor
                id: 123-abc-456
                modified_at: '2017-05-19T18:05:09.015Z'
                notify_list:
                  - officia in aliqua consectetur
                  - ut nostrud dolor est cillum
                reflow_type: auto
                tags:
                  - sed irure Lorem proident ullamco
                  - inc
                template_variable_presets:
                  - name: dolor tempor officia esse
                    template_variables:
                      - name: esse labori
                        values:
                          - culpa anim
                      - name: exercitation sit
                        values:
                          - pariatur Excepteur veniam commodo
                  - name: nisi elit
                    template_variables:
                      - name: sunt si
                        values:
                          - Lorem ex ullamco tempor
                      - name: ex ad cillum
                        values:
                          - qui Ut
                template_variables:
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                  - name: host1
                    available_values:
                      - my-host
                      - host1
                      - host2
                    defaults:
                      - my-host-1
                      - my-host-2
                    prefix: host
                url: /dashboard/123-abc-456/example-dashboard-title
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Dashboard
      summary: 'Delete A Dashboard '
      description: Delete a dashboard using the specified ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: dashboard_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deleted_dashboard_id: et magna ipsum
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/dashboard/public:
    post:
      tags:
        - Dashboard
        - Public
        - Shared
      summary: 'Create A Shared Dashboard '
      description: >-
        Share a specified private dashboard, generating a URL at which it can be
        publicly viewed.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                dashboard_id: 123-abc-456
                dashboard_type: custom_timeboard
                share_type: open
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dashboard_id: 123-abc-456
                dashboard_type: custom_timeboard
                author:
                  handle: test@datadoghq.com
                  name: esse labore dolore aute
                created_at: '2020-04-24T12:42:48.981Z'
                global_time:
                  live_span: 1h
                global_time_selectable_enabled: false
                public_url: sunt cillum
                selectable_template_vars:
                  - default_value: '*'
                    name: exampleVar
                    prefix: test
                    visible_tags:
                      - selectableValue1
                      - selectableValue2
                share_list:
                  - test@datadoghq.com
                  - test2@email.com
                share_type: open
                token: adipisicing consequat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/dashboard/public/{token}:
    get:
      tags:
        - Dashboard
        - Public
        - Shared
        - Tokens
      summary: 'Get A Shared Dashboard '
      description: >-
        Fetch an existing shared dashboard's sharing metadata associated with
        the specified token.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dashboard_id: 123-abc-456
                dashboard_type: custom_timeboard
                author:
                  handle: test@datadoghq.com
                  name: esse labore dolore aute
                created_at: '2020-04-24T12:42:48.981Z'
                global_time:
                  live_span: 1h
                global_time_selectable_enabled: false
                public_url: sunt cillum
                selectable_template_vars:
                  - default_value: '*'
                    name: exampleVar
                    prefix: test
                    visible_tags:
                      - selectableValue1
                      - selectableValue2
                share_list:
                  - test@datadoghq.com
                  - test2@email.com
                share_type: open
                token: adipisicing consequat
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Dashboard
        - Public
        - Shared
        - Tokens
      summary: 'Update A Shared Dashboard '
      description: Update a shared dashboard associated with the specified token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                global_time:
                  live_span: 1h
                share_list:
                  - test@datadoghq.com
                  - test2@datadoghq.com
                share_type: invite
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dashboard_id: 123-abc-456
                dashboard_type: custom_timeboard
                author:
                  handle: test@datadoghq.com
                  name: esse labore dolore aute
                created_at: '2020-04-24T12:42:48.981Z'
                global_time:
                  live_span: 1h
                global_time_selectable_enabled: false
                public_url: sunt cillum
                selectable_template_vars:
                  - default_value: '*'
                    name: exampleVar
                    prefix: test
                    visible_tags:
                      - selectableValue1
                      - selectableValue2
                share_list:
                  - test@datadoghq.com
                  - test2@email.com
                share_type: open
                token: adipisicing consequat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Dashboard
        - Public
        - Revoke
        - Shared
        - Tokens
        - URL
      summary: 'Revoke A Shared Dashboard URL '
      description: >-
        Revoke the public URL for a dashboard (rendering it private) associated
        with the specified token.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deleted_public_dashboard_token: sunt do tempor
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/dashboard/public/{token}/invitation:
    post:
      tags:
        - Dashboard
        - Emails
        - Invitation
        - Public
        - Send
        - Shared
        - Tokens
      summary: 'Send Shared Dashboard Invitation Email '
      description: >-
        Send emails to specified email addresses containing links to access a
        given authenticated shared dashboard. Email addresses must already
        belong to the authenticated shared dashboard's share_list.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - attributes:
                      email: test@datadoghq.com
                    type: public_dashboard_invitation
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      email: test@datadoghq.com
                    type: public_dashboard_invitation
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Dashboard
        - Invitation
        - Invitations
        - Public
        - Shared
        - Tokens
      summary: 'Get All Invitations For A Shared Dashboard '
      description: >-
        Describe the invitations that exist for the given shared dashboard
        (paginated).
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      email: test@datadoghq.com
                    type: public_dashboard_invitation
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Dashboard
        - Invitation
        - Invitations
        - Public
        - Revoke
        - Shared
        - Tokens
      summary: 'Revoke Shared Dashboard Invitations '
      description: >-
        Revoke previously sent invitation emails and active sessions used to
        access a given shared dashboard for specific email addresses.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: token
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/downtime:
    get:
      tags:
        - Downtime
        - Downtimes
      summary: 'Get All Downtimes '
      description: Get all scheduled downtimes.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      canceled: 2020-01-02T03:04:05.282979+0000
                      created: 2020-01-02T03:04:05.282979+0000
                      display_timezone: America/New_York
                      message: Message about the downtime
                      modified: 2020-01-02T03:04:05.282979+0000
                      monitor_identifier:
                        monitor_id: 123
                      mute_first_recovery_notification: false
                      notify_end_states:
                        - alert
                        - warn
                      notify_end_types:
                        - canceled
                        - expired
                      schedule:
                        recurrences:
                          - duration: 123d
                            rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                            start: 2020-01-02T03:04
                        current_downtime:
                          end: '2020-01-02T03:04:00.000Z'
                          start: '2020-01-02T03:04:00.000Z'
                        timezone: America/New_York
                      scope: env:(staging OR prod) AND datacenter:us-east-1
                      status: active
                    id: 00000000-0000-1234-0000-000000000000
                    relationships:
                      created_by:
                        data:
                          id: 00000000-0000-1234-0000-000000000000
                          type: users
                      monitor:
                        data:
                          id: '12345'
                          type: monitors
                    type: downtime
                  - attributes:
                      canceled: 2020-01-02T03:04:05.282979+0000
                      created: 2020-01-02T03:04:05.282979+0000
                      display_timezone: America/New_York
                      message: Message about the downtime
                      modified: 2020-01-02T03:04:05.282979+0000
                      monitor_identifier:
                        monitor_id: 123
                      mute_first_recovery_notification: false
                      notify_end_states:
                        - alert
                        - warn
                      notify_end_types:
                        - canceled
                        - expired
                      schedule:
                        recurrences:
                          - duration: 123d
                            rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                            start: 2020-01-02T03:04
                        current_downtime:
                          end: '2020-01-02T03:04:00.000Z'
                          start: '2020-01-02T03:04:00.000Z'
                        timezone: America/New_York
                      scope: env:(staging OR prod) AND datacenter:us-east-1
                      status: active
                    id: 00000000-0000-1234-0000-000000000000
                    relationships:
                      created_by:
                        data:
                          id: 00000000-0000-1234-0000-000000000000
                          type: users
                      monitor:
                        data:
                          id: '12345'
                          type: monitors
                    type: downtime
                included:
                  - attributes:
                      created_at: '1955-04-22T16:11:51.568Z'
                      disabled: false
                      email: esse ut
                      handle: des
                      icon: sed Excepteur ex
                      modified_at: '2010-07-30T04:31:51.727Z'
                      name: consequat anim
                      service_account: false
                      status: quis elit id adipisicing voluptate
                      title: amet magna nostrud
                      verified: false
                    id: adipisicing sed
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1961-04-17T07:59:29.050Z'
                      disabled: false
                      email: eu
                      handle: amet
                      icon: proident ipsum labore pariatur do
                      modified_at: '1957-12-19T08:55:09.761Z'
                      name: anim Exce
                      service_account: false
                      status: eli
                      title: commodo Excepteur in
                      verified: false
                    id: reprehenderit sint sit et Lorem
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                meta:
                  page:
                    total_filtered_count: 43080922
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Downtime
        - Schedules
      summary: 'Schedule A Downtime '
      description: Schedule a downtime.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: downtime
                  attributes:
                    scope: env:(staging OR prod) AND datacenter:us-east-1
                    monitor_identifier:
                      monitor_id: 123
                    display_timezone: America/New_York
                    message: Message about the downtime
                    mute_first_recovery_notification: false
                    notify_end_states:
                      - alert
                      - warn
                    notify_end_types:
                      - canceled
                      - expired
                    schedule:
                      recurrences:
                        - duration: 123d
                          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                          start: 2020-01-02T03:04
                        - duration: 123d
                          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                          start: 2020-01-02T03:04
                      timezone: America/New_York
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    canceled: 2020-01-02T03:04:05.282979+0000
                    created: 2020-01-02T03:04:05.282979+0000
                    display_timezone: America/New_York
                    message: Message about the downtime
                    modified: 2020-01-02T03:04:05.282979+0000
                    monitor_identifier:
                      monitor_id: 123
                    mute_first_recovery_notification: false
                    notify_end_states:
                      - alert
                      - warn
                    notify_end_types:
                      - canceled
                      - expired
                    schedule:
                      recurrences:
                        - duration: 123d
                          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                          start: 2020-01-02T03:04
                      current_downtime:
                        end: '2020-01-02T03:04:00.000Z'
                        start: '2020-01-02T03:04:00.000Z'
                      timezone: America/New_York
                    scope: env:(staging OR prod) AND datacenter:us-east-1
                    status: active
                  id: 00000000-0000-1234-0000-000000000000
                  relationships:
                    created_by:
                      data:
                        id: 00000000-0000-1234-0000-000000000000
                        type: users
                    monitor:
                      data:
                        id: '12345'
                        type: monitors
                  type: downtime
                included:
                  - attributes:
                      created_at: '1991-09-04T01:17:36.668Z'
                      disabled: false
                      email: minim
                      handle: in fugiat Ut
                      icon: dolore nostrud
                      modified_at: '1948-02-16T11:04:06.701Z'
                      name: aliqua adipisicing labore ut
                      service_account: true
                      status: aute Excepteur
                      title: velit pariatur quis
                      verified: true
                    id: ad in
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1981-01-28T15:38:15.884Z'
                      disabled: true
                      email: Excepteur non
                      handle: irure culpa pariatur
                      icon: sit aliquip amet quis
                      modified_at: '2017-12-22T11:05:10.255Z'
                      name: cillum
                      service_account: false
                      status: aliquip irure
                      title: ea aliquip esse
                      verified: false
                    id: non
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/downtime/{downtime_id}:
    delete:
      tags:
        - Cancels
        - Downtime
      summary: 'Cancel A Downtime '
      description: Cancel a downtime.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: downtime_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Downtime
      summary: 'Get A Downtime '
      description: Get downtime detail by `downtime_id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: downtime_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    canceled: 2020-01-02T03:04:05.282979+0000
                    created: 2020-01-02T03:04:05.282979+0000
                    display_timezone: America/New_York
                    message: Message about the downtime
                    modified: 2020-01-02T03:04:05.282979+0000
                    monitor_identifier:
                      monitor_id: 123
                    mute_first_recovery_notification: false
                    notify_end_states:
                      - alert
                      - warn
                    notify_end_types:
                      - canceled
                      - expired
                    schedule:
                      recurrences:
                        - duration: 123d
                          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                          start: 2020-01-02T03:04
                      current_downtime:
                        end: '2020-01-02T03:04:00.000Z'
                        start: '2020-01-02T03:04:00.000Z'
                      timezone: America/New_York
                    scope: env:(staging OR prod) AND datacenter:us-east-1
                    status: active
                  id: 00000000-0000-1234-0000-000000000000
                  relationships:
                    created_by:
                      data:
                        id: 00000000-0000-1234-0000-000000000000
                        type: users
                    monitor:
                      data:
                        id: '12345'
                        type: monitors
                  type: downtime
                included:
                  - attributes:
                      created_at: '1991-09-04T01:17:36.668Z'
                      disabled: false
                      email: minim
                      handle: in fugiat Ut
                      icon: dolore nostrud
                      modified_at: '1948-02-16T11:04:06.701Z'
                      name: aliqua adipisicing labore ut
                      service_account: true
                      status: aute Excepteur
                      title: velit pariatur quis
                      verified: true
                    id: ad in
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1981-01-28T15:38:15.884Z'
                      disabled: true
                      email: Excepteur non
                      handle: irure culpa pariatur
                      icon: sit aliquip amet quis
                      modified_at: '2017-12-22T11:05:10.255Z'
                      name: cillum
                      service_account: false
                      status: aliquip irure
                      title: ea aliquip esse
                      verified: false
                    id: non
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Downtime
      summary: 'Update A Downtime '
      description: Update a downtime by `downtime_id`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: 00000000-0000-1234-0000-000000000000
                  type: downtime
                  attributes:
                    display_timezone: America/New_York
                    message: Message about the downtime
                    monitor_identifier:
                      monitor_id: 123
                    mute_first_recovery_notification: false
                    notify_end_states:
                      - alert
                      - warn
                    notify_end_types:
                      - canceled
                      - expired
                    schedule:
                      recurrences:
                        - duration: 123d
                          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                          start: 2020-01-02T03:04
                        - duration: 123d
                          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                          start: 2020-01-02T03:04
                      timezone: America/New_York
                    scope: env:(staging OR prod) AND datacenter:us-east-1
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: downtime_id
          in: path
          schema:
            type: string
          required: true
          example: 00e000000-0000-1234-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    canceled: 2020-01-02T03:04:05.282979+0000
                    created: 2020-01-02T03:04:05.282979+0000
                    display_timezone: America/New_York
                    message: Message about the downtime
                    modified: 2020-01-02T03:04:05.282979+0000
                    monitor_identifier:
                      monitor_id: 123
                    mute_first_recovery_notification: false
                    notify_end_states:
                      - alert
                      - warn
                    notify_end_types:
                      - canceled
                      - expired
                    schedule:
                      recurrences:
                        - duration: 123d
                          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
                          start: 2020-01-02T03:04
                      current_downtime:
                        end: '2020-01-02T03:04:00.000Z'
                        start: '2020-01-02T03:04:00.000Z'
                      timezone: America/New_York
                    scope: env:(staging OR prod) AND datacenter:us-east-1
                    status: active
                  id: 00000000-0000-1234-0000-000000000000
                  relationships:
                    created_by:
                      data:
                        id: 00000000-0000-1234-0000-000000000000
                        type: users
                    monitor:
                      data:
                        id: '12345'
                        type: monitors
                  type: downtime
                included:
                  - attributes:
                      created_at: '1991-09-04T01:17:36.668Z'
                      disabled: false
                      email: minim
                      handle: in fugiat Ut
                      icon: dolore nostrud
                      modified_at: '1948-02-16T11:04:06.701Z'
                      name: aliqua adipisicing labore ut
                      service_account: true
                      status: aute Excepteur
                      title: velit pariatur quis
                      verified: true
                    id: ad in
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1981-01-28T15:38:15.884Z'
                      disabled: true
                      email: Excepteur non
                      handle: irure culpa pariatur
                      icon: sit aliquip amet quis
                      modified_at: '2017-12-22T11:05:10.255Z'
                      name: cillum
                      service_account: false
                      status: aliquip irure
                      title: ea aliquip esse
                      verified: false
                    id: non
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/monitor/{monitor_id}/downtime_matches:
    get:
      tags:
        - Active
        - Downtime
        - Downtimes
        - Matches
        - Monitors
      summary: 'Get Active Downtimes For A Monitor '
      description: Get all active downtimes for the specified monitor.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_id
          in: path
          schema:
            type: integer
          required: true
          example: '97337406'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      end: '2020-01-02T03:04:00.000Z'
                      groups:
                        - service:postgres
                        - team:frontend
                      scope: env:(staging OR prod) AND datacenter:us-east-1
                      start: '2020-01-02T03:04:00.000Z'
                    id: 00000000-0000-1234-0000-000000000000
                    type: downtime_match
                  - attributes:
                      end: '2020-01-02T03:04:00.000Z'
                      groups:
                        - service:postgres
                        - team:frontend
                      scope: env:(staging OR prod) AND datacenter:us-east-1
                      start: '2020-01-02T03:04:00.000Z'
                    id: 00000000-0000-1234-0000-000000000000
                    type: downtime_match
                meta:
                  page:
                    total_filtered_count: 27755850
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/graph/embed:
    get:
      tags:
        - Embed
        - Embeds
        - Graphs
      summary: 'Get All Embeds '
      description: Gets a list of previously created embeddable graphs.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                embedded_graphs:
                  - dash_name: l
                    dash_url: laborum cillum
                    embed_id: irure reprehenderit
                    graph_title: consectetur
                    html: dolor
                    revoked: true
                    shared_by: 6511234
                  - dash_name: culpa sed laborum reprehenderit do
                    dash_url: sunt
                    embed_id: est exercitation aute ex consectetur
                    graph_title: in consectetur Lorem ex commodo
                    html: proident laborum
                    revoked: true
                    shared_by: -26399485
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Embed
        - Graphs
      summary: 'Create Embed '
      description: >-
        Creates a new embeddable graph.


        Note: If an embed already exists for the exact same query in a given
        organization,

        the older embed is returned instead of creating a new embed.


        If you are interested in using template variables, see

        [Embeddable Graphs with Template
        Variables](https://docs.datadoghq.com/dashboards/faq/embeddable-graphs-with-template-variables).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                graph_json: ''
                legend: 'no'
                size: medium
                timeframe: 1_hour
                title: Embed created through API
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dash_name: nostrud consequat
                dash_url: labore commodo
                embed_id: officia dolor deserunt ipsum
                graph_title: qui eu aliqua et
                html: eu
                revoked: false
                shared_by: -79332285
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/graph/embed/{embed_id}:
    get:
      tags:
        - Embed
        - Graphs
        - Specific
      summary: 'Get Specific Embed '
      description: Get the HTML fragment for a previously generated embed with `embed_id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: embed_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dash_name: nostrud consequat
                dash_url: labore commodo
                embed_id: officia dolor deserunt ipsum
                graph_title: qui eu aliqua et
                html: eu
                revoked: false
                shared_by: -79332285
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/graph/embed/{embed_id}/enable:
    get:
      tags:
        - Embed
        - Enable
        - Graphs
      summary: 'Enable Embed '
      description: Enable a specified embed.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: embed_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: Embed 00000000000 successfully enabled.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/graph/embed/{embed_id}/revoke:
    get:
      tags:
        - Embed
        - Graphs
        - Revoke
      summary: 'Revoke Embed '
      description: Revoke a specified embed.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: embed_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: Embed 0000000000000 successfully revoked.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/events:
    get:
      tags:
        - Events
      summary: 'Get A List Of Events '
      description: >-
        List endpoint returns events that match an events search query.

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to see your latest events.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        aggregation_key: 'anim '
                        date_happened: 34131615
                        device_name: dolore
                        duration: -3490969
                        event_object: Did you hear the news today?
                        evt:
                          id: '6509751066204996294'
                          name: enim adipisicing
                          source_id: 36
                          type: error_tracking_alert
                        hostname: nostrud tempor aliquip ullamco
                        monitor:
                          created_at: 1646318692000
                          group_status: 992511772
                          groups:
                            - eu
                            - et cillum eu
                          id: 61273461
                          message: culpa cillum consectetur sed
                          modified: -69089922
                          name: Duis deserunt adipisicing
                          query: dolor paria
                          tags:
                            - environment:test
                          templated_name: tempor mollit
                          type: nostrud ad consectetur sunt deserunt
                        monitor_groups:
                          - cupidatat sunt ve
                          - occaecat eiusmod
                        monitor_id: 82090319
                        priority: normal
                        related_event_id: 17210895
                        service: datadog-api
                        source_type_name: dolor sunt esse
                        sourcecategory: commodo adipisicing deserunt pariatur
                        status: info
                        tags:
                          - environment:test
                        timestamp: 1652274265000
                        title: Oh boy!
                      message: enim in nisi fugiat exercitation
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: event
                  - attributes:
                      attributes:
                        aggregation_key: aliqua ipsum
                        date_happened: 11484583
                        device_name: consectetur Ut laboris in
                        duration: -77273431
                        event_object: Did you hear the news today?
                        evt:
                          id: '6509751066204996294'
                          name: ut
                          source_id: 36
                          type: error_tracking_alert
                        hostname: adipisicing nisi cillum
                        monitor:
                          created_at: 1646318692000
                          group_status: 248029277
                          groups:
                            - esse id non anim nulla
                            - sed dolor adipisicing
                          id: 81019116
                          message: Excepteur velit eu ipsum
                          modified: -24111011
                          name: Excepteur laboris proident dolor quis
                          query: velit occaecat
                          tags:
                            - environment:test
                          templated_name: ex cillum sed in
                          type: Excepteur est Dui
                        monitor_groups:
                          - in et irure ullamco consequat
                          - exercitation cupidatat aute consequat Excepteur
                        monitor_id: -35356990
                        priority: normal
                        related_event_id: -37351005
                        service: datadog-api
                        source_type_name: deserunt commodo
                        sourcecategory: voluptate aliqua eiusmod
                        status: info
                        tags:
                          - environment:test
                        timestamp: 1652274265000
                        title: Oh boy!
                      message: enim ut ad Ut et
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: event
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid. Results
                        hold data from the other indexes.
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid. Results
                        hold data from the other indexes.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/events:
    post:
      tags:
        - Events
        - Posts
      summary: 'Post An Event '
      description: |-
        This endpoint allows you to post events to the stream.
        Tag them, set priority and event aggregate them with other events.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Did you hear the news today?
                text: Oh boy!
                aggregation_key: deserunt culpa id
                alert_type: info
                date_happened: 38473209
                device_name: volupta
                host: est mollit elit
                priority: normal
                related_event_id: 49876778
                source_type_name: tempor esse veniam
                tags:
                  - environment:test
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                event:
                  alert_type: info
                  date_happened: 63184545
                  device_name: officia enim ut adipisicing Excepteur
                  host: in in dolore
                  id: -4940968
                  id_str: nisi eu irure
                  payload: '{}'
                  priority: normal
                  source_type_name: Lorem deserunt mollit in velit
                  tags:
                    - environment:test
                  text: Oh boy!
                  title: Did you hear the news today?
                  url: nisi
                status: incididunt ut laborum
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/events/{event_id}:
    get:
      tags:
        - Events
      summary: 'Get An Event '
      description: >-
        This endpoint allows you to query for event details.


        **Note**: If the event you’re querying contains markdown formatting of
        any kind,

        you may see characters such as `%`,`\`,`n` in your output.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: event_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                event:
                  alert_type: info
                  date_happened: 63184545
                  device_name: officia enim ut adipisicing Excepteur
                  host: in in dolore
                  id: -4940968
                  id_str: nisi eu irure
                  payload: '{}'
                  priority: normal
                  source_type_name: Lorem deserunt mollit in velit
                  tags:
                    - environment:test
                  text: Oh boy!
                  title: Did you hear the news today?
                  url: nisi
                status: incididunt ut laborum
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/events/search:
    post:
      tags:
        - Events
        - Search
      summary: 'Search Events '
      description: >-
        List endpoint returns events that match an events search query.

        [Results are paginated similarly to
        logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to build complex events filtering and search.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  from: now-15m
                  query: service:web* AND @http.status_code:[200 TO 299]
                  to: now
                options:
                  timeOffset: 18904794
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
                sort: '-timestamp'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        aggregation_key: 'anim '
                        date_happened: 34131615
                        device_name: dolore
                        duration: -3490969
                        event_object: Did you hear the news today?
                        evt:
                          id: '6509751066204996294'
                          name: enim adipisicing
                          source_id: 36
                          type: error_tracking_alert
                        hostname: nostrud tempor aliquip ullamco
                        monitor:
                          created_at: 1646318692000
                          group_status: 992511772
                          groups:
                            - eu
                            - et cillum eu
                          id: 61273461
                          message: culpa cillum consectetur sed
                          modified: -69089922
                          name: Duis deserunt adipisicing
                          query: dolor paria
                          tags:
                            - environment:test
                          templated_name: tempor mollit
                          type: nostrud ad consectetur sunt deserunt
                        monitor_groups:
                          - cupidatat sunt ve
                          - occaecat eiusmod
                        monitor_id: 82090319
                        priority: normal
                        related_event_id: 17210895
                        service: datadog-api
                        source_type_name: dolor sunt esse
                        sourcecategory: commodo adipisicing deserunt pariatur
                        status: info
                        tags:
                          - environment:test
                        timestamp: 1652274265000
                        title: Oh boy!
                      message: enim in nisi fugiat exercitation
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: event
                  - attributes:
                      attributes:
                        aggregation_key: aliqua ipsum
                        date_happened: 11484583
                        device_name: consectetur Ut laboris in
                        duration: -77273431
                        event_object: Did you hear the news today?
                        evt:
                          id: '6509751066204996294'
                          name: ut
                          source_id: 36
                          type: error_tracking_alert
                        hostname: adipisicing nisi cillum
                        monitor:
                          created_at: 1646318692000
                          group_status: 248029277
                          groups:
                            - esse id non anim nulla
                            - sed dolor adipisicing
                          id: 81019116
                          message: Excepteur velit eu ipsum
                          modified: -24111011
                          name: Excepteur laboris proident dolor quis
                          query: velit occaecat
                          tags:
                            - environment:test
                          templated_name: ex cillum sed in
                          type: Excepteur est Dui
                        monitor_groups:
                          - in et irure ullamco consequat
                          - exercitation cupidatat aute consequat Excepteur
                        monitor_id: -35356990
                        priority: normal
                        related_event_id: -37351005
                        service: datadog-api
                        source_type_name: deserunt commodo
                        sourcecategory: voluptate aliqua eiusmod
                        status: info
                        tags:
                          - environment:test
                        timestamp: 1652274265000
                        title: Oh boy!
                      message: enim ut ad Ut et
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: event
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid. Results
                        hold data from the other indexes.
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid. Results
                        hold data from the other indexes.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/fastly/accounts:
    get:
      tags:
        - Accounts
        - Fastly
        - Integrations
      summary: 'List Fastly Accounts '
      description: List Fastly accounts.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      name: test-name
                      services:
                        - id: 6abc7de6893AbcDe9fghIj
                          tags:
                            - myTag
                            - myTag2:myValue
                        - id: 6abc7de6893AbcDe9fghIj
                          tags:
                            - myTag
                            - myTag2:myValue
                    id: abc123
                    type: fastly-accounts
                  - attributes:
                      name: test-name
                      services:
                        - id: 6abc7de6893AbcDe9fghIj
                          tags:
                            - myTag
                            - myTag2:myValue
                        - id: 6abc7de6893AbcDe9fghIj
                          tags:
                            - myTag
                            - myTag2:myValue
                    id: abc123
                    type: fastly-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Accounts
        - Fastly
        - Integrations
      summary: 'Add Fastly Account '
      description: Create a Fastly account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    api_key: ABCDEFG123
                    name: test-name
                    services:
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                  type: fastly-accounts
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    name: test-name
                    services:
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                  id: abc123
                  type: fastly-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/fastly/accounts/{account_id}:
    get:
      tags:
        - Accounts
        - Fastly
        - Integrations
      summary: 'Get Fastly Account '
      description: Get a Fastly account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    name: test-name
                    services:
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                  id: abc123
                  type: fastly-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Accounts
        - Fastly
        - Integrations
      summary: 'Update Fastly Account '
      description: Update a Fastly account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    api_key: ABCDEFG123
                  type: fastly-accounts
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    name: test-name
                    services:
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                      - id: 6abc7de6893AbcDe9fghIj
                        tags:
                          - myTag
                          - myTag2:myValue
                  id: abc123
                  type: fastly-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Fastly
        - Integrations
      summary: 'Delete Fastly Account '
      description: Delete a Fastly account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/fastly/accounts/{account_id}/services:
    get:
      tags:
        - Accounts
        - Fastly
        - Integrations
        - Services
      summary: 'List Fastly Services '
      description: List Fastly services for an account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - data:
                      id: abc123
                      type: fastly-services
                      attributes:
                        tags:
                          - myTag
                          - myTag2:myValue
                  - data:
                      id: abc123
                      type: fastly-services
                      attributes:
                        tags:
                          - myTag
                          - myTag2:myValue
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Accounts
        - Fastly
        - Integrations
        - Services
      summary: 'Add Fastly Service '
      description: Create a Fastly service for an account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: abc123
                  type: fastly-services
                  attributes:
                    tags:
                      - myTag
                      - myTag2:myValue
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: abc123
                  type: fastly-services
                  attributes:
                    tags:
                      - myTag
                      - myTag2:myValue
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/fastly/accounts/{account_id}/services/{service_id}:
    get:
      tags:
        - Accounts
        - Fastly
        - Integrations
        - Services
      summary: 'Get Fastly Service '
      description: Get a Fastly service for an account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: service_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: abc123
                  type: fastly-services
                  attributes:
                    tags:
                      - myTag
                      - myTag2:myValue
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Accounts
        - Fastly
        - Integrations
        - Services
      summary: 'Update Fastly Service '
      description: Update a Fastly service for an account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: abc123
                  type: fastly-services
                  attributes:
                    tags:
                      - myTag
                      - myTag2:myValue
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: service_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: abc123
                  type: fastly-services
                  attributes:
                    tags:
                      - myTag
                      - myTag2:myValue
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Fastly
        - Integrations
        - Services
      summary: 'Delete Fastly Service '
      description: Delete a Fastly service for an account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: service_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integration/gcp/accounts:
    get:
      tags:
        - Accounts
        - GCP
        - Gcp
        - Integrations
        - STS enabled
        - Services
      summary: 'List All GCP STS-enabled Service Accounts '
      description: >-
        List all GCP STS-enabled service accounts configured in your Datadog
        account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      account_tags:
                        - magna ullamco culpa dolore sunt
                        - tempor
                      automute: false
                      client_email: >-
                        datadog-service-account@test-project.iam.gserviceaccount.com
                      cloud_run_revision_filters:
                        - $KEY:$VALUE
                      host_filters:
                        - eu dolore
                        - qui enim
                      is_cspm_enabled: false
                      is_security_command_center_enabled: true
                      resource_collection_enabled: false
                    id: d291291f-12c2-22g4-j290-123456678897
                    meta:
                      accessible_projects:
                        - pariatur
                        - incididu
                    type: gcp_service_account
                  - attributes:
                      account_tags:
                        - in consectet
                        - amet Lorem est do
                      automute: true
                      client_email: >-
                        datadog-service-account@test-project.iam.gserviceaccount.com
                      cloud_run_revision_filters:
                        - $KEY:$VALUE
                      host_filters:
                        - et velit aut
                        - reprehenderit eiusmod ut
                      is_cspm_enabled: false
                      is_security_command_center_enabled: true
                      resource_collection_enabled: false
                    id: d291291f-12c2-22g4-j290-123456678897
                    meta:
                      accessible_projects:
                        - culpa Ut incididunt ad
                        - dolor sed ut consectetur do
                    type: gcp_service_account
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Accounts
        - Entry
        - Gcp
        - Integrations
        - Services
      summary: 'Create A New Entry For Your Service Account '
      description: Create a new entry within Datadog for your STS enabled service account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    account_tags:
                      - laborum elit irure anim nisi
                      - voluptate fugiat
                    automute: false
                    client_email: >-
                      datadog-service-account@test-project.iam.gserviceaccount.com
                    cloud_run_revision_filters:
                      - $KEY:$VALUE
                    host_filters:
                      - ut
                      - non n
                    is_cspm_enabled: false
                    is_security_command_center_enabled: true
                    resource_collection_enabled: false
                  type: gcp_service_account
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    account_tags:
                      - Lorem laboris fugiat
                      - dolor ea proident
                    automute: true
                    client_email: >-
                      datadog-service-account@test-project.iam.gserviceaccount.com
                    cloud_run_revision_filters:
                      - $KEY:$VALUE
                    host_filters:
                      - 'cillum '
                      - ut
                    is_cspm_enabled: true
                    is_security_command_center_enabled: true
                    resource_collection_enabled: false
                  id: d291291f-12c2-22g4-j290-123456678897
                  meta:
                    accessible_projects:
                      - 'dolor '
                      - Duis
                  type: gcp_service_account
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integration/gcp/accounts/{account_id}:
    delete:
      tags:
        - Accounts
        - Enabled
        - GCP
        - Gcp
        - Integrations
        - STS
      summary: 'Delete An STS Enabled GCP Account '
      description: Delete an STS enabled GCP account from within Datadog.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Accounts
        - Gcp
        - Integrations
        - STS
        - Services
      summary: 'Update STS Service Account '
      description: Update an STS enabled service account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    account_tags:
                      - cillum ea dolor tempor
                      - in nulla Duis
                    automute: false
                    client_email: >-
                      datadog-service-account@test-project.iam.gserviceaccount.com
                    cloud_run_revision_filters:
                      - $KEY:$VALUE
                    host_filters:
                      - qui
                      - in ipsum veniam
                    is_cspm_enabled: true
                    is_security_command_center_enabled: true
                    resource_collection_enabled: true
                  id: d291291f-12c2-22g4-j290-123456678897
                  type: gcp_service_account
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    account_tags:
                      - Lorem laboris fugiat
                      - dolor ea proident
                    automute: true
                    client_email: >-
                      datadog-service-account@test-project.iam.gserviceaccount.com
                    cloud_run_revision_filters:
                      - $KEY:$VALUE
                    host_filters:
                      - 'cillum '
                      - ut
                    is_cspm_enabled: true
                    is_security_command_center_enabled: true
                    resource_collection_enabled: false
                  id: d291291f-12c2-22g4-j290-123456678897
                  meta:
                    accessible_projects:
                      - 'dolor '
                      - Duis
                  type: gcp_service_account
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integration/gcp/sts_delegate:
    post:
      tags:
        - Datadog
        - Delegate
        - GCP
        - Gcp
        - Integrations
        - Principals
        - Sts
      summary: 'Create A Datadog GCP Principal '
      description: Create a Datadog GCP principal.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    delegate_account_email: >-
                      ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
                  id: >-
                    ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
                  type: gcp_sts_delegate
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Accounts
        - Delegate
        - Gcp
        - Integrations
        - Sts
      summary: 'List Delegate Account '
      description: >-
        List your Datadog-GCP STS delegate account configured in your Datadog
        account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    delegate_account_email: >-
                      ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
                  id: >-
                    ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
                  type: gcp_sts_delegate
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/hosts:
    get:
      tags:
        - Hosts
        - Organizations
      summary: 'Get All Hosts For Your Organization '
      description: |-
        This endpoint allows searching for hosts by name, alias, or tag.
        Hosts live within the past 3 hours are included by default.
        Retention is 7 days.
        Results are paginated with a max of 1000 results at a time.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                host_list:
                  - aliases:
                      - mycoolhost-1
                      - mycoolhost-1
                    apps:
                      - agent
                      - agent
                    aws_name: mycoolhost-1
                    host_name: i-deadbeef
                    id: 123456
                    is_muted: false
                    last_reported_time: 1565000000
                    meta:
                      agent_checks:
                        - - ntp
                          - ntp
                          - ntp:d884b5186b651429
                          - OK
                          - ''
                          - ''
                        - - ntp
                          - ntp
                          - ntp:d884b5186b651429
                          - OK
                          - ''
                          - ''
                      agent_version: 7.32.3
                      cpuCores: 1
                      fbsdV:
                        - FreeBSD
                        - FreeBSD
                      gohai: >-
                        {"cpu":{"cache_size":"8192
                        KB","cpu_cores":"1","cpu_logical_processors":"1","family":"6","mhz":"2712.000","model":"142","model_name":"Intel(R)
                        Core(TM) i7-8559U CPU @
                        2.70GHz","stepping":"10","vendor_id":"GenuineIntel"},"filesystem":[{"kb_size":"3966896","mounted_on":"/dev","name":"udev"},{"kb_size":"797396","mounted_on":"/run","name":"tmpfs"},{"kb_size":"64800356","mounted_on":"/","name":"/dev/mapper/vagrant--vg-root"},{"kb_size":"3986972","mounted_on":"/dev/shm","name":"tmpfs"},{"kb_size":"5120","mounted_on":"/run/lock","name":"tmpfs"},{"kb_size":"3986972","mounted_on":"/sys/fs/cgroup","name":"tmpfs"},{"kb_size":"488245288","mounted_on":"/vagrant","name":"vagrant"},{"kb_size":"797392","mounted_on":"/run/user/1000","name":"tmpfs"}],"memory":{"swap_total":"1003516kB","total":"7973944kB"},"network":{"interfaces":[{"ipv4":"10.0.2.15","ipv4-network":"10.0.2.0/24","ipv6":"fe80::a00:27ff:fec2:be11","ipv6-network":"fe80::/64","macaddress":"08:00:27:c2:be:11","name":"eth0"},{"ipv4":"192.168.122.1","ipv4-network":"192.168.122.0/24","macaddress":"52:54:00:6f:1c:bf","name":"virbr0"}],"ipaddress":"10.0.2.15","ipaddressv6":"fe80::a00:27ff:fec2:be11","macaddress":"08:00:27:c2:be:11"},"platform":{"GOOARCH":"amd64","GOOS":"linux","goV":"1.16.7","hardware_platform":"x86_64","hostname":"vagrant","kernel_name":"Linux","kernel_release":"4.15.0-29-generic","kernel_version":"#31-Ubuntu
                        SMP Tue Jul 17 15:39:52 UTC
                        2018","machine":"x86_64","os":"GNU/Linux","processor":"x86_64","pythonV":"2.7.15rc1"}}
                      install_method:
                        installer_version: install_script-1.7.1
                        tool: install_script
                        tool_version: install_script
                      macV:
                        - Mac
                        - Mac
                      machine: amd64
                      nixV:
                        - Ubuntu
                        - Ubuntu
                      platform: linux
                      processor: Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz
                      pythonV: 3.8.11
                      socket-fqdn: vagrant.vm.
                      socket-hostname: vagrant
                      winV:
                        - Windows
                        - Windows
                    metrics:
                      cpu: 99
                      iowait: 3.2
                      load: 0.5
                    mute_timeout: 64695743
                    name: i-hostname
                    sources:
                      - aws
                      - aws
                    tags_by_source:
                      dolorecdc:
                        - test.example.com.host
                        - test.example.com.host
                      ut_1c:
                        - test.example.com.host
                        - test.example.com.host
                      aliqua_4:
                        - test.example.com.host
                        - test.example.com.host
                    up: true
                  - aliases:
                      - mycoolhost-1
                      - mycoolhost-1
                    apps:
                      - agent
                      - agent
                    aws_name: mycoolhost-1
                    host_name: i-deadbeef
                    id: 123456
                    is_muted: false
                    last_reported_time: 1565000000
                    meta:
                      agent_checks:
                        - - ntp
                          - ntp
                          - ntp:d884b5186b651429
                          - OK
                          - ''
                          - ''
                        - - ntp
                          - ntp
                          - ntp:d884b5186b651429
                          - OK
                          - ''
                          - ''
                      agent_version: 7.32.3
                      cpuCores: 1
                      fbsdV:
                        - FreeBSD
                        - FreeBSD
                      gohai: >-
                        {"cpu":{"cache_size":"8192
                        KB","cpu_cores":"1","cpu_logical_processors":"1","family":"6","mhz":"2712.000","model":"142","model_name":"Intel(R)
                        Core(TM) i7-8559U CPU @
                        2.70GHz","stepping":"10","vendor_id":"GenuineIntel"},"filesystem":[{"kb_size":"3966896","mounted_on":"/dev","name":"udev"},{"kb_size":"797396","mounted_on":"/run","name":"tmpfs"},{"kb_size":"64800356","mounted_on":"/","name":"/dev/mapper/vagrant--vg-root"},{"kb_size":"3986972","mounted_on":"/dev/shm","name":"tmpfs"},{"kb_size":"5120","mounted_on":"/run/lock","name":"tmpfs"},{"kb_size":"3986972","mounted_on":"/sys/fs/cgroup","name":"tmpfs"},{"kb_size":"488245288","mounted_on":"/vagrant","name":"vagrant"},{"kb_size":"797392","mounted_on":"/run/user/1000","name":"tmpfs"}],"memory":{"swap_total":"1003516kB","total":"7973944kB"},"network":{"interfaces":[{"ipv4":"10.0.2.15","ipv4-network":"10.0.2.0/24","ipv6":"fe80::a00:27ff:fec2:be11","ipv6-network":"fe80::/64","macaddress":"08:00:27:c2:be:11","name":"eth0"},{"ipv4":"192.168.122.1","ipv4-network":"192.168.122.0/24","macaddress":"52:54:00:6f:1c:bf","name":"virbr0"}],"ipaddress":"10.0.2.15","ipaddressv6":"fe80::a00:27ff:fec2:be11","macaddress":"08:00:27:c2:be:11"},"platform":{"GOOARCH":"amd64","GOOS":"linux","goV":"1.16.7","hardware_platform":"x86_64","hostname":"vagrant","kernel_name":"Linux","kernel_release":"4.15.0-29-generic","kernel_version":"#31-Ubuntu
                        SMP Tue Jul 17 15:39:52 UTC
                        2018","machine":"x86_64","os":"GNU/Linux","processor":"x86_64","pythonV":"2.7.15rc1"}}
                      install_method:
                        installer_version: install_script-1.7.1
                        tool: install_script
                        tool_version: install_script
                      macV:
                        - Mac
                        - Mac
                      machine: amd64
                      nixV:
                        - Ubuntu
                        - Ubuntu
                      platform: linux
                      processor: Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz
                      pythonV: 3.8.11
                      socket-fqdn: vagrant.vm.
                      socket-hostname: vagrant
                      winV:
                        - Windows
                        - Windows
                    metrics:
                      cpu: 99
                      iowait: 3.2
                      load: 0.5
                    mute_timeout: 75321571
                    name: i-hostname
                    sources:
                      - aws
                      - aws
                    tags_by_source:
                      eiusmod_0:
                        - test.example.com.host
                        - test.example.com.host
                      dolor_7:
                        - test.example.com.host
                        - test.example.com.host
                    up: true
                total_matching: 1
                total_returned: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/hosts/totals:
    get:
      tags:
        - Active
        - Hosts
        - Numbers
        - Totals
      summary: 'Get The Total Number Of Active Hosts '
      description: >-
        This endpoint returns the total number of active and up hosts in your
        Datadog account.

        Active means the host has reported in the past hour, and up means it has
        reported in the past two hours.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                total_active: -99519322
                total_up: -29118149
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/host/{host_name}/mute:
    post:
      tags:
        - Host
        - Mute
        - Names
      summary: 'Mute A Host '
      description: >-
        Mute a host. **Note:** This creates a [Downtime
        V2](https://docs.datadoghq.com/api/latest/downtimes/#schedule-a-downtime)
        for the host.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                end: 1579098130
                message: Muting this host for a test!
                override: false
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: host_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                action: Muted
                end: 1579098130
                hostname: test.host
                message: Muting this host for a test!
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/host/{host_name}/unmute:
    post:
      tags:
        - Host
        - Names
        - Unmute
      summary: 'Unmute A Host '
      description: Unmutes a host. This endpoint takes no JSON arguments.
      requestBody:
        content: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: host_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                action: Muted
                end: 1579098130
                hostname: test.host
                message: Muting this host for a test!
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/ip_allowlist:
    get:
      tags:
        - Allowlist
        - IP
      summary: 'Get IP Allowlist '
      description: Returns the IP allowlist and its enabled or disabled state.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: ip_allowlist
                  attributes:
                    enabled: false
                    entries:
                      - data:
                          type: ip_allowlist_entry
                          attributes:
                            cidr_block: enim laborum
                            created_at: '1972-06-07T14:46:34.210Z'
                            modified_at: '1988-01-07T19:10:13.916Z'
                            note: consectetur
                          id: nisi tempor anim
                      - data:
                          type: ip_allowlist_entry
                          attributes:
                            cidr_block: elit proident aliqua
                            created_at: '1993-08-08T22:37:24.691Z'
                            modified_at: '1997-01-15T07:09:33.666Z'
                            note: sint officia
                          id: dolore enim qui exercitation ni
                  id: quis amet
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Allowlist
        - IP
      summary: 'Update IP Allowlist '
      description: Edit the entries in the IP allowlist, and enable or disable it.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: ip_allowlist
                  attributes:
                    enabled: true
                    entries:
                      - data:
                          type: ip_allowlist_entry
                          attributes:
                            cidr_block: ex dolor
                            created_at: '2009-12-03T11:44:52.134Z'
                            modified_at: '1959-12-24T16:13:38.278Z'
                            note: id elit
                          id: velit consectetur E
                      - data:
                          type: ip_allowlist_entry
                          attributes:
                            cidr_block: in eiusmod
                            created_at: '1966-12-20T11:32:11.805Z'
                            modified_at: '2021-08-20T00:58:12.658Z'
                            note: ea e
                          id: magna labore
                  id: elit enim
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: ip_allowlist
                  attributes:
                    enabled: false
                    entries:
                      - data:
                          type: ip_allowlist_entry
                          attributes:
                            cidr_block: enim laborum
                            created_at: '1972-06-07T14:46:34.210Z'
                            modified_at: '1988-01-07T19:10:13.916Z'
                            note: consectetur
                          id: nisi tempor anim
                      - data:
                          type: ip_allowlist_entry
                          attributes:
                            cidr_block: elit proident aliqua
                            created_at: '1993-08-08T22:37:24.691Z'
                            modified_at: '1997-01-15T07:09:33.666Z'
                            note: sint officia
                          id: dolore enim qui exercitation ni
                  id: quis amet
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /:
    get:
      tags:
        - IP
        - Ranges
      summary: 'List IP Ranges '
      description: Get information about Datadog IP ranges.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                agents:
                  prefixes_ipv4:
                    - sint nostrud
                    - in non aliqua
                  prefixes_ipv6:
                    - ipsum
                    - aute nostrud nisi Duis sint
                api:
                  prefixes_ipv4:
                    - reprehenderit ut aliquip culpa officia
                    - in ipsum ea occaecat
                  prefixes_ipv6:
                    - dolor consectetur
                    - ullamco pariatur
                apm:
                  prefixes_ipv4:
                    - in Lorem
                    - ipsum
                  prefixes_ipv6:
                    - Duis
                    - eu proident sit dolore
                global:
                  prefixes_ipv4:
                    - sint et
                    - dolore ullamco amet qui Ut
                  prefixes_ipv6:
                    - velit laboris exercitation consequat nulla
                    - in dolor cupidatat
                logs:
                  prefixes_ipv4:
                    - ad Lorem amet
                    - ut
                  prefixes_ipv6:
                    - labore occaecat nulla pariatur
                    - Lorem dolor
                modified: 2019-10-31-20-00-00
                orchestrator:
                  prefixes_ipv4:
                    - qui laborum cillum ex
                    - ea Lor
                  prefixes_ipv6:
                    - dolor nostrud
                    - cupidatat do dolore enim
                process:
                  prefixes_ipv4:
                    - consectetur n
                    - minim i
                  prefixes_ipv6:
                    - voluptate irure dolor elit
                    - et Duis ad tempor adipisicing
                remote-configuration:
                  prefixes_ipv4:
                    - eiusmod
                    - eiusmod Excepteur elit in
                  prefixes_ipv6:
                    - cupidatat mollit consequat
                    - quis mollit in
                synthetics:
                  prefixes_ipv4:
                    - mollit est id do
                    - officia pariatur occaecat
                  prefixes_ipv4_by_location:
                    quis_b78:
                      - et
                      - fugiat Lorem
                  prefixes_ipv6:
                    - laboris officia aute
                    - id tempor
                  prefixes_ipv6_by_location:
                    ipsumf:
                      - Excepteur sit in eiusmod elit
                      - ut nisi
                    do_c:
                      - ad
                      - fugiat proident
                synthetics-private-locations:
                  prefixes_ipv4:
                    - nisi deserunt
                    - est in ullamco
                  prefixes_ipv6:
                    - deserun
                    - magna nostrud reprehenderit dolor consequat
                version: 11
                webhooks:
                  prefixes_ipv4:
                    - nisi Duis laboris
                    - tempor dolor nisi
                  prefixes_ipv6:
                    - enim
                    - sed irure
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/current_user/application_keys/{app_key_id}:
    delete:
      tags:
        - Applications
        - Current
        - Keys
        - Owned
        - Users
      summary: 'Delete An Application Key Owned By Current User '
      description: Delete an application key owned by current user
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Applications
        - Current
        - Edit
        - Keys
        - Owned
        - Users
      summary: 'Edit An Application Key Owned By Current User '
      description: Edit an application key owned by current user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: 00112233-4455-6677-8899-aabbccddeeff
                  type: application_keys
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: et ad cillum t
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: minim in ipsum mollit
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2023-03-27T01:31:32.607Z'
                      disabled: true
                      email: in
                      handle: anim nostrud voluptate esse
                      icon: quis ea
                      modified_at: '1977-03-03T23:21:21.295Z'
                      name: eu dolore labore Duis nisi
                      service_account: false
                      status: exercitation dolor Excepteur
                      title: in enim esse quis consectetur
                      verified: false
                    id: est cupidatat mollit velit
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1944-12-10T14:07:03.278Z'
                      disabled: false
                      email: sed aliqua
                      handle: voluptate adipisicing dolor tempor
                      icon: cillum do mollit
                      modified_at: '1983-07-06T02:46:58.072Z'
                      name: culpa est
                      service_account: false
                      status: eiusmod do
                      title: nulla magna proident
                      verified: false
                    id: proident nisi occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Applications
        - Current
        - Keys
        - Owned
        - Users
      summary: 'Get One Application Key Owned By Current User '
      description: Get an application key owned by current user
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: et ad cillum t
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: minim in ipsum mollit
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2023-03-27T01:31:32.607Z'
                      disabled: true
                      email: in
                      handle: anim nostrud voluptate esse
                      icon: quis ea
                      modified_at: '1977-03-03T23:21:21.295Z'
                      name: eu dolore labore Duis nisi
                      service_account: false
                      status: exercitation dolor Excepteur
                      title: in enim esse quis consectetur
                      verified: false
                    id: est cupidatat mollit velit
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1944-12-10T14:07:03.278Z'
                      disabled: false
                      email: sed aliqua
                      handle: voluptate adipisicing dolor tempor
                      icon: cillum do mollit
                      modified_at: '1983-07-06T02:46:58.072Z'
                      name: culpa est
                      service_account: false
                      status: eiusmod do
                      title: nulla magna proident
                      verified: false
                    id: proident nisi occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/api_keys:
    get:
      tags:
        - Keys
      summary: 'Get All API Keys '
      description: List all API keys available for your account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      category: exercitation Excepteur
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      modified_at: '2020-11-23T10:00:00.000Z'
                      name: API Key for submitting metrics
                      remote_config_read_enabled: false
                    id: voluptate cupidatat esse
                    relationships:
                      created_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                      modified_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: api_keys
                  - attributes:
                      category: dolore veniam
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      modified_at: '2020-11-23T10:00:00.000Z'
                      name: API Key for submitting metrics
                      remote_config_read_enabled: true
                    id: exercitation do quis officia
                    relationships:
                      created_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                      modified_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: api_keys
                included:
                  - attributes:
                      created_at: '1984-12-17T07:04:27.304Z'
                      disabled: false
                      email: tempor aliqua
                      handle: eu elit Ut amet
                      icon: labore l
                      modified_at: '1990-02-12T03:44:40.115Z'
                      name: nostrud deserunt tempor proident
                      service_account: false
                      status: commodo consequat
                      title: in sit Ut ad dolor
                      verified: true
                    id: dolore
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2005-11-27T22:13:29.945Z'
                      disabled: false
                      email: aute nisi ipsum
                      handle: dolor eu voluptate occaecat
                      icon: sunt ullamco do velit
                      modified_at: '2009-04-15T14:52:08.249Z'
                      name: quis Lorem
                      service_account: false
                      status: fugiat deserunt commodo quis
                      title: labore
                      verified: true
                    id: aute sunt sed sint
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                meta:
                  max_allowed: -83556793
                  page:
                    total_filtered_count: 59250628
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Keys
      summary: 'Create An API Key '
      description: Create an API key.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: API Key for submitting metrics
                  type: api_keys
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    category: labore in consequat
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: eu quis ullamco
                    last4: abcd
                    modified_at: '2020-11-23T10:00:00.000Z'
                    name: API Key for submitting metrics
                    remote_config_read_enabled: false
                  id: pariatur elit aute fugiat
                  relationships:
                    created_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                    modified_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: api_keys
                included:
                  - attributes:
                      created_at: '1954-02-08T22:21:36.630Z'
                      disabled: true
                      email: sunt in
                      handle: voluptate nisi reprehenderit enim
                      icon: incididunt ut eiusmod
                      modified_at: '1985-04-07T13:40:41.162Z'
                      name: mollit
                      service_account: false
                      status: adipisicing irure nisi
                      title: officia do
                      verified: true
                    id: id anim incididunt ullamco dolor
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1971-04-19T13:50:39.290Z'
                      disabled: false
                      email: commodo eiusmod adipisicing pariatur
                      handle: sit ipsum Lorem
                      icon: ut consectetur laborum
                      modified_at: '1968-01-08T09:10:30.083Z'
                      name: quis laboris
                      service_account: true
                      status: pariatur fugiat ut ex labore
                      title: in cillum laboris officia voluptate
                      verified: true
                    id: nulla ea
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/api_keys/{api_key_id}:
    get:
      tags:
        - Keys
      summary: 'Get API Key '
      description: Get an API key.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: api_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    category: labore in consequat
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: eu quis ullamco
                    last4: abcd
                    modified_at: '2020-11-23T10:00:00.000Z'
                    name: API Key for submitting metrics
                    remote_config_read_enabled: false
                  id: pariatur elit aute fugiat
                  relationships:
                    created_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                    modified_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: api_keys
                included:
                  - attributes:
                      created_at: '1954-02-08T22:21:36.630Z'
                      disabled: true
                      email: sunt in
                      handle: voluptate nisi reprehenderit enim
                      icon: incididunt ut eiusmod
                      modified_at: '1985-04-07T13:40:41.162Z'
                      name: mollit
                      service_account: false
                      status: adipisicing irure nisi
                      title: officia do
                      verified: true
                    id: id anim incididunt ullamco dolor
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1971-04-19T13:50:39.290Z'
                      disabled: false
                      email: commodo eiusmod adipisicing pariatur
                      handle: sit ipsum Lorem
                      icon: ut consectetur laborum
                      modified_at: '1968-01-08T09:10:30.083Z'
                      name: quis laboris
                      service_account: true
                      status: pariatur fugiat ut ex labore
                      title: in cillum laboris officia voluptate
                      verified: true
                    id: nulla ea
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Edit
        - Keys
      summary: 'Edit An API Key '
      description: Update an API key.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: API Key for submitting metrics
                  id: 00112233-4455-6677-8899-aabbccddeeff
                  type: api_keys
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: api_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    category: labore in consequat
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: eu quis ullamco
                    last4: abcd
                    modified_at: '2020-11-23T10:00:00.000Z'
                    name: API Key for submitting metrics
                    remote_config_read_enabled: false
                  id: pariatur elit aute fugiat
                  relationships:
                    created_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                    modified_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: api_keys
                included:
                  - attributes:
                      created_at: '1954-02-08T22:21:36.630Z'
                      disabled: true
                      email: sunt in
                      handle: voluptate nisi reprehenderit enim
                      icon: incididunt ut eiusmod
                      modified_at: '1985-04-07T13:40:41.162Z'
                      name: mollit
                      service_account: false
                      status: adipisicing irure nisi
                      title: officia do
                      verified: true
                    id: id anim incididunt ullamco dolor
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1971-04-19T13:50:39.290Z'
                      disabled: false
                      email: commodo eiusmod adipisicing pariatur
                      handle: sit ipsum Lorem
                      icon: ut consectetur laborum
                      modified_at: '1968-01-08T09:10:30.083Z'
                      name: quis laboris
                      service_account: true
                      status: pariatur fugiat ut ex labore
                      title: in cillum laboris officia voluptate
                      verified: true
                    id: nulla ea
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Keys
      summary: 'Delete An API Key '
      description: Delete an API key.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: api_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/current_user/application_keys:
    post:
      tags:
        - Applications
        - Current
        - Keys
        - Users
      summary: 'Create An Application Key For Current User '
      description: Create an application key for current user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  type: application_keys
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: et ad cillum t
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: minim in ipsum mollit
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2023-03-27T01:31:32.607Z'
                      disabled: true
                      email: in
                      handle: anim nostrud voluptate esse
                      icon: quis ea
                      modified_at: '1977-03-03T23:21:21.295Z'
                      name: eu dolore labore Duis nisi
                      service_account: false
                      status: exercitation dolor Excepteur
                      title: in enim esse quis consectetur
                      verified: false
                    id: est cupidatat mollit velit
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1944-12-10T14:07:03.278Z'
                      disabled: false
                      email: sed aliqua
                      handle: voluptate adipisicing dolor tempor
                      icon: cillum do mollit
                      modified_at: '1983-07-06T02:46:58.072Z'
                      name: culpa est
                      service_account: false
                      status: eiusmod do
                      title: nulla magna proident
                      verified: false
                    id: proident nisi occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Applications
        - Current
        - Keys
        - Owned
        - Users
      summary: 'Get All Application Keys Owned By Current User '
      description: List all application keys available for current user
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      name: Application Key for managing dashboards
                      scopes:
                        - dashboards_read
                        - dashboards_write
                        - dashboards_public_share
                    id: nostrud
                    relationships:
                      owned_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: application_keys
                  - attributes:
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      name: Application Key for managing dashboards
                      scopes:
                        - dashboards_read
                        - dashboards_write
                        - dashboards_public_share
                    id: magna ut
                    relationships:
                      owned_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: application_keys
                included:
                  - attributes:
                      created_at: '1961-12-26T09:33:04.908Z'
                      disabled: false
                      email: eu ut dolore aute
                      handle: sunt anim veniam fugiat
                      icon: sunt fugiat Lorem adipisicing sit
                      modified_at: '2010-02-06T08:06:38.022Z'
                      name: mollit reprehenderit dolor cupidatat
                      service_account: false
                      status: incididunt esse
                      title: sed officia pariatur
                      verified: true
                    id: reprehenderit cillum adipisi
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1983-11-29T18:09:08.094Z'
                      disabled: false
                      email: Duis
                      handle: sunt ut do
                      icon: velit sit
                      modified_at: '1951-11-07T11:04:55.182Z'
                      name: qui labore
                      service_account: true
                      status: id aute velit dolor
                      title: et Excepteur
                      verified: true
                    id: in amet qui aute
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                meta:
                  max_allowed_per_user: -38029116
                  page:
                    total_filtered_count: 22366699
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/application_keys:
    get:
      tags:
        - Applications
        - Keys
      summary: 'Get All Application Keys '
      description: List all application keys available for your org
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      name: Application Key for managing dashboards
                      scopes:
                        - dashboards_read
                        - dashboards_write
                        - dashboards_public_share
                    id: nostrud
                    relationships:
                      owned_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: application_keys
                  - attributes:
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      name: Application Key for managing dashboards
                      scopes:
                        - dashboards_read
                        - dashboards_write
                        - dashboards_public_share
                    id: magna ut
                    relationships:
                      owned_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: application_keys
                included:
                  - attributes:
                      created_at: '1961-12-26T09:33:04.908Z'
                      disabled: false
                      email: eu ut dolore aute
                      handle: sunt anim veniam fugiat
                      icon: sunt fugiat Lorem adipisicing sit
                      modified_at: '2010-02-06T08:06:38.022Z'
                      name: mollit reprehenderit dolor cupidatat
                      service_account: false
                      status: incididunt esse
                      title: sed officia pariatur
                      verified: true
                    id: reprehenderit cillum adipisi
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1983-11-29T18:09:08.094Z'
                      disabled: false
                      email: Duis
                      handle: sunt ut do
                      icon: velit sit
                      modified_at: '1951-11-07T11:04:55.182Z'
                      name: qui labore
                      service_account: true
                      status: id aute velit dolor
                      title: et Excepteur
                      verified: true
                    id: in amet qui aute
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                meta:
                  max_allowed_per_user: -38029116
                  page:
                    total_filtered_count: 22366699
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/application_key:
    post:
      tags:
        - Applications
        - Keys
      summary: 'Create An Application Key '
      description: Create an application key with a given name.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                hash: 1234512345123459cda4eb9ced49a3d84fd0138c
                name: example user
                owner: example.com
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                application_key:
                  hash: 1234512345123459cda4eb9ced49a3d84fd0138c
                  name: app_key
                  owner: test_user
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/application_keys/{app_key_id}:
    get:
      tags:
        - Applications
        - Keys
      summary: 'Get An Application Key '
      description: Get an application key for your org.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: et ad cillum t
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: minim in ipsum mollit
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2023-03-27T01:31:32.607Z'
                      disabled: true
                      email: in
                      handle: anim nostrud voluptate esse
                      icon: quis ea
                      modified_at: '1977-03-03T23:21:21.295Z'
                      name: eu dolore labore Duis nisi
                      service_account: false
                      status: exercitation dolor Excepteur
                      title: in enim esse quis consectetur
                      verified: false
                    id: est cupidatat mollit velit
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1944-12-10T14:07:03.278Z'
                      disabled: false
                      email: sed aliqua
                      handle: voluptate adipisicing dolor tempor
                      icon: cillum do mollit
                      modified_at: '1983-07-06T02:46:58.072Z'
                      name: culpa est
                      service_account: false
                      status: eiusmod do
                      title: nulla magna proident
                      verified: false
                    id: proident nisi occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Applications
        - Edit
        - Keys
      summary: 'Edit An Application Key '
      description: Edit an application key
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: 00112233-4455-6677-8899-aabbccddeeff
                  type: application_keys
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: et ad cillum t
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: minim in ipsum mollit
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2023-03-27T01:31:32.607Z'
                      disabled: true
                      email: in
                      handle: anim nostrud voluptate esse
                      icon: quis ea
                      modified_at: '1977-03-03T23:21:21.295Z'
                      name: eu dolore labore Duis nisi
                      service_account: false
                      status: exercitation dolor Excepteur
                      title: in enim esse quis consectetur
                      verified: false
                    id: est cupidatat mollit velit
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1944-12-10T14:07:03.278Z'
                      disabled: false
                      email: sed aliqua
                      handle: voluptate adipisicing dolor tempor
                      icon: cillum do mollit
                      modified_at: '1983-07-06T02:46:58.072Z'
                      name: culpa est
                      service_account: false
                      status: eiusmod do
                      title: nulla magna proident
                      verified: false
                    id: proident nisi occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Applications
        - Keys
      summary: 'Delete An Application Key '
      description: Delete an application key
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs:
    post:
      tags:
        - Logs
        - Send
      summary: 'Send Logs '
      description: >-
        Send your logs to your Datadog platform over HTTP. Limits per HTTP
        request are:


        - Maximum content size per payload (uncompressed): 5MB

        - Maximum size for a single log: 1MB

        - Maximum array size if sending multiple logs in an array: 1000 entries


        Any log exceeding 1MB is accepted and truncated by Datadog:

        - For a single log request, the API truncates the log at 1MB and returns
        a 2xx.

        - For a multi-logs request, the API processes all logs, truncates only
        logs larger than 1MB, and returns a 2xx.


        Datadog recommends sending your logs compressed.

        Add the `Content-Encoding: gzip` header to the request when sending
        compressed logs.

        Log events can be submitted with a timestamp that is up to 18 hours in
        the past.


        The status codes answered by the HTTP API are:

        - 202: Accepted: the request has been accepted for processing

        - 400: Bad request (likely an issue in the payload formatting)

        - 401: Unauthorized (likely a missing API Key)

        - 403: Permission issue (likely using an invalid API Key)

        - 408: Request Timeout, request should be retried after some time

        - 413: Payload too large (batch is above 5MB uncompressed)

        - 429: Too Many Requests, request should be retried after some time

        - 500: Internal Server Error, the server encountered an unexpected
        condition that prevented it from fulfilling the request, request should
        be retried after some time

        - 503: Service Unavailable, the server is not ready to handle the
        request probably because it is overloaded, request should be retried
        after some time
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - ddsource: nginx
                  ddtags: env:staging,version:5.1
                  hostname: i-012345678
                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                  service: payment
                - ddsource: nginx
                  ddtags: env:staging,version:5.1
                  hostname: i-012345679
                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] World
                  service: payment
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ddtags
          in: query
          schema:
            type: string
          description: >-
            Log tags can be passed as query parameters with `text/plain` content
            type.
          example: <string>
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '408':
          description: Request Timeout
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '413':
          description: Request Entity Too Large
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
        '503':
          description: Service Unavailable
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
                  - detail: Malformed payload
                    status: '400'
                    title: Bad Request
  /api/v2/logs/analytics/aggregate:
    post:
      tags:
        - Aggregate
        - Analytics
        - Events
        - Logs
      summary: 'Aggregate Events '
      description: >-
        The API endpoint to aggregate events into buckets and compute metrics
        and timeseries.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                compute:
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                filter:
                  from: now-15m
                  indexes:
                    - main
                    - web
                  query: service:web* AND @http.status_code:[200 TO 299]
                  storage_tier: indexes
                  to: now
                group_by:
                  - facet: host
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: laborum magna qui
                    sort:
                      aggregation: count
                      order: asc
                    total: true
                  - facet: host
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: sit quis proident
                    sort:
                      aggregation: count
                      order: asc
                    total: true
                options:
                  timeOffset: 90728825
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  buckets:
                    - by:
                        '@state': success
                        '@version': abc
                      computes:
                        consequat_6: labo
                        consequat_e: id eu Excepteur quis
                        ipsumb: ex veniam est in
                    - by:
                        '@state': success
                        '@version': abc
                      computes:
                        commodo_: magna dolor
                        veniam_d: culpa dolore
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/events/search:
    post:
      tags:
        - Events
        - Logs
        - Search
      summary: 'Search Logs '
      description: >-
        List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        Use this endpoint to build complex logs filtering and search.


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list
        API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  from: now-15m
                  indexes:
                    - main
                    - web
                  query: service:web* AND @http.status_code:[200 TO 299]
                  storage_tier: indexes
                  to: now
                options:
                  timeOffset: 77319958
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
                sort: timestamp
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      host: i-0123
                      message: Host connected to remote
                      service: agent
                      status: INFO
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: log
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      host: i-0123
                      message: Host connected to remote
                      service: agent
                      status: INFO
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: log
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/events:
    get:
      tags:
        - Events
        - Logs
      summary: 'Get A List Of Logs '
      description: >-
        List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        Use this endpoint to see your latest logs.


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list
        API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      host: i-0123
                      message: Host connected to remote
                      service: agent
                      status: INFO
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: log
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      host: i-0123
                      message: Host connected to remote
                      service: agent
                      status: INFO
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: log
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/archives:
    get:
      tags:
        - Archives
        - Configurations
        - Logs
      summary: 'Get All Archives '
      description: Get the list of configured logs archives with their definitions.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: archives
                    attributes:
                      name: Nginx Archive
                      query: source:nginx
                      destination:
                        storage_account: account-name
                        container: container-name
                        integration:
                          tenant_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                          client_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                        type: azure
                        path: nisi officia magna in voluptate
                        region: ipsum non sed culpa magna
                      include_tags: false
                      rehydration_max_scan_size_in_gb: 100
                      rehydration_tags:
                        - team:intake
                        - team:app
                      state: WORKING
                    id: a2zcMylnM4OCHpYusxIi3g
                  - type: archives
                    attributes:
                      name: Nginx Archive
                      query: source:nginx
                      destination:
                        storage_account: account-name
                        container: container-name
                        integration:
                          tenant_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                          client_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                        type: azure
                        path: ut in
                        region: i
                      include_tags: false
                      rehydration_max_scan_size_in_gb: 100
                      rehydration_tags:
                        - team:intake
                        - team:app
                      state: WORKING
                    id: a2zcMylnM4OCHpYusxIi3g
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Archive
        - Archives
        - Configurations
        - Logs
      summary: 'Create An Archive '
      description: Create an archive in your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: archives
                  attributes:
                    name: Nginx Archive
                    query: source:nginx
                    destination:
                      storage_account: account-name
                      container: container-name
                      integration:
                        tenant_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                        client_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                      type: azure
                      path: magna Lorem amet incididunt
                      region: non quis fugiat adipisicing
                    include_tags: false
                    rehydration_max_scan_size_in_gb: 100
                    rehydration_tags:
                      - team:intake
                      - team:app
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: archives
                  attributes:
                    name: Nginx Archive
                    query: source:nginx
                    destination:
                      storage_account: account-name
                      container: container-name
                      integration:
                        tenant_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                        client_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                      type: azure
                      path: laborum voluptate elit consectetur
                      region: Lorem ut tempor deserunt
                    include_tags: false
                    rehydration_max_scan_size_in_gb: 100
                    rehydration_tags:
                      - team:intake
                      - team:app
                    state: WORKING
                  id: a2zcMylnM4OCHpYusxIi3g
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/archives/{archive_id}:
    get:
      tags:
        - Archive
        - Archives
        - Configurations
        - Logs
      summary: 'Get An Archive '
      description: Get a specific archive from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archive_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: archives
                  attributes:
                    name: Nginx Archive
                    query: source:nginx
                    destination:
                      storage_account: account-name
                      container: container-name
                      integration:
                        tenant_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                        client_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                      type: azure
                      path: laborum voluptate elit consectetur
                      region: Lorem ut tempor deserunt
                    include_tags: false
                    rehydration_max_scan_size_in_gb: 100
                    rehydration_tags:
                      - team:intake
                      - team:app
                    state: WORKING
                  id: a2zcMylnM4OCHpYusxIi3g
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Archive
        - Archives
        - Configurations
        - Logs
      summary: 'Update An Archive '
      description: >-
        Update a given archive configuration.


        **Note**: Using this method updates your archive configuration by
        **replacing**

        your current configuration with the new one sent to your Datadog
        organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: archives
                  attributes:
                    name: Nginx Archive
                    query: source:nginx
                    destination:
                      storage_account: account-name
                      container: container-name
                      integration:
                        tenant_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                        client_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                      type: azure
                      path: magna Lorem amet incididunt
                      region: non quis fugiat adipisicing
                    include_tags: false
                    rehydration_max_scan_size_in_gb: 100
                    rehydration_tags:
                      - team:intake
                      - team:app
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archive_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: archives
                  attributes:
                    name: Nginx Archive
                    query: source:nginx
                    destination:
                      storage_account: account-name
                      container: container-name
                      integration:
                        tenant_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                        client_id: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
                      type: azure
                      path: laborum voluptate elit consectetur
                      region: Lorem ut tempor deserunt
                    include_tags: false
                    rehydration_max_scan_size_in_gb: 100
                    rehydration_tags:
                      - team:intake
                      - team:app
                    state: WORKING
                  id: a2zcMylnM4OCHpYusxIi3g
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Archive
        - Archives
        - Configurations
        - Logs
      summary: 'Delete An Archive '
      description: Delete a given archive from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archive_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/archives/{archive_id}/readers:
    get:
      tags:
        - Archive
        - Archives
        - Configurations
        - Logs
        - Read
        - Readers
        - Roles
      summary: 'List Read Roles For An Archive '
      description: Returns all read roles a given archive is restricted to.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archive_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: roles
                    attributes:
                      created_at: '1968-09-18T01:31:40.786Z'
                      modified_at: '1945-02-17T17:16:27.246Z'
                      name: aliqua labore anim
                      user_count: 6399991
                    id: dolor nulla
                    relationships:
                      permissions:
                        data:
                          - id: cillum quis
                            type: permissions
                          - id: commodo est et mollit adipisicing
                            type: permissions
                  - type: roles
                    attributes:
                      created_at: '2023-08-22T23:11:33.485Z'
                      modified_at: '2017-08-19T12:50:37.782Z'
                      name: aliqua enim amet nulla
                      user_count: -83939923
                    id: consectetur non magna
                    relationships:
                      permissions:
                        data:
                          - id: amet nisi in
                            type: permissions
                          - id: in consequat deserunt nisi
                            type: permissions
                meta:
                  page:
                    total_count: 78520069
                    total_filtered_count: 88420530
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Archive
        - Archives
        - Configurations
        - Grants""
        - Logs
        - Readers
        - Roles
      summary: 'Grant Role To An Archive '
      description: >-
        Adds a read role to an archive. ([Roles
        API](https://docs.datadoghq.com/api/v2/roles/))
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                  type: roles
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archive_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Archive
        - Archives
        - Configurations
        - Logs
        - Readers
        - Revoke
        - Roles
      summary: 'Revoke Role From An Archive '
      description: >-
        Removes a role from an archive. ([Roles
        API](https://docs.datadoghq.com/api/v2/roles/))
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archive_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/archive-order:
    get:
      tags:
        - Archive
        - Configurations
        - Logs
        - Orders
      summary: 'Get Archive Order '
      description: |-
        Get the current order of your archives.
        This endpoint takes no JSON arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: archive_order
                  attributes:
                    archive_ids:
                      - a2zcMylnM4OCHpYusxIi1g
                      - a2zcMylnM4OCHpYusxIi2g
                      - a2zcMylnM4OCHpYusxIi3g
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Archive
        - Configurations
        - Logs
        - Orders
      summary: 'Update Archive Order '
      description: >-
        Update the order of your archives. Since logs are processed
        sequentially, reordering an archive may change

        the structure and content of the data processed by other archives.


        **Note**: Using the `PUT` method updates your archive's order by
        replacing the current order

        with the new one.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: archive_order
                  attributes:
                    archive_ids:
                      - a2zcMylnM4OCHpYusxIi1g
                      - a2zcMylnM4OCHpYusxIi2g
                      - a2zcMylnM4OCHpYusxIi3g
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: archive_order
                  attributes:
                    archive_ids:
                      - a2zcMylnM4OCHpYusxIi1g
                      - a2zcMylnM4OCHpYusxIi2g
                      - a2zcMylnM4OCHpYusxIi3g
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/custom-destinations:
    get:
      tags:
        - Configurations
        - Custom
        - Destinations
        - Logs
      summary: 'Get All Custom Destinations '
      description: >-
        Get the list of configured custom destinations in your organization with
        their definitions.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      enabled: true
                      forward_tags: true
                      forward_tags_restriction_list:
                        - datacenter
                        - host
                      forward_tags_restriction_list_type: ALLOW_LIST
                      forwarder_destination:
                        type: http
                        endpoint: https://example.com
                        auth:
                          type: basic
                      name: Nginx logs
                      query: source:nginx
                    id: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
                    type: custom_destination
                  - attributes:
                      enabled: true
                      forward_tags: true
                      forward_tags_restriction_list:
                        - datacenter
                        - host
                      forward_tags_restriction_list_type: ALLOW_LIST
                      forwarder_destination:
                        type: http
                        endpoint: https://example.com
                        auth:
                          type: basic
                      name: Nginx logs
                      query: source:nginx
                    id: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
                    type: custom_destination
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Configurations
        - Custom
        - Destinations
        - Logs
      summary: 'Create A Custom Destination '
      description: Create a custom destination in your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: custom_destination
                  attributes:
                    name: Nginx logs
                    forwarder_destination:
                      type: http
                      endpoint: https://example.com
                      auth:
                        type: basic
                        username: datadog-custom-destination-username
                        password: datadog-custom-destination-password
                    enabled: true
                    forward_tags: true
                    forward_tags_restriction_list:
                      - datacenter
                      - host
                    forward_tags_restriction_list_type: ALLOW_LIST
                    query: source:nginx
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    enabled: true
                    forward_tags: true
                    forward_tags_restriction_list:
                      - datacenter
                      - host
                    forward_tags_restriction_list_type: ALLOW_LIST
                    forwarder_destination:
                      type: http
                      endpoint: https://example.com
                      auth:
                        type: basic
                    name: Nginx logs
                    query: source:nginx
                  id: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
                  type: custom_destination
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/custom-destinations/{custom_destination_id}:
    get:
      tags:
        - Configurations
        - Custom
        - Destinations
        - Logs
      summary: 'Get A Custom Destination '
      description: Get a specific custom destination in your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_destination_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    enabled: true
                    forward_tags: true
                    forward_tags_restriction_list:
                      - datacenter
                      - host
                    forward_tags_restriction_list_type: ALLOW_LIST
                    forwarder_destination:
                      type: http
                      endpoint: https://example.com
                      auth:
                        type: basic
                    name: Nginx logs
                    query: source:nginx
                  id: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
                  type: custom_destination
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Configurations
        - Custom
        - Destinations
        - Logs
      summary: 'Update A Custom Destination '
      description: >-
        Update the given fields of a specific custom destination in your
        organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: custom_destination
                  id: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
                  attributes:
                    enabled: true
                    forward_tags: true
                    forward_tags_restriction_list:
                      - datacenter
                      - host
                    forward_tags_restriction_list_type: ALLOW_LIST
                    forwarder_destination:
                      type: http
                      endpoint: https://example.com
                      auth:
                        type: basic
                        username: datadog-custom-destination-username
                        password: datadog-custom-destination-password
                    name: Nginx logs
                    query: source:nginx
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_destination_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    enabled: true
                    forward_tags: true
                    forward_tags_restriction_list:
                      - datacenter
                      - host
                    forward_tags_restriction_list_type: ALLOW_LIST
                    forwarder_destination:
                      type: http
                      endpoint: https://example.com
                      auth:
                        type: basic
                    name: Nginx logs
                    query: source:nginx
                  id: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
                  type: custom_destination
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Custom
        - Destinations
        - Logs
      summary: 'Delete A Custom Destination '
      description: Delete a specific custom destination in your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_destination_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/logs/config/indexes:
    get:
      tags:
        - Configurations
        - Indexes
        - Logs
      summary: 'Get All Indexes '
      description: >-
        The Index object describes the configuration of a log index.

        This endpoint returns an array of the `LogIndex` objects of your
        organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                indexes:
                  - name: main
                    filter:
                      query: source:python
                    daily_limit: 300000000
                    daily_limit_reset:
                      reset_time: '14:00'
                      reset_utc_offset: '+02:00'
                    daily_limit_warning_threshold_percentage: 70
                    exclusion_filters:
                      - name: payment
                        filter:
                          sample_rate: 1
                          query: '*'
                        is_enabled: false
                      - name: payment
                        filter:
                          sample_rate: 1
                          query: '*'
                        is_enabled: false
                    is_rate_limited: false
                    num_retention_days: 15
                  - name: main
                    filter:
                      query: source:python
                    daily_limit: 300000000
                    daily_limit_reset:
                      reset_time: '14:00'
                      reset_utc_offset: '+02:00'
                    daily_limit_warning_threshold_percentage: 70
                    exclusion_filters:
                      - name: payment
                        filter:
                          sample_rate: 1
                          query: '*'
                        is_enabled: true
                      - name: payment
                        filter:
                          sample_rate: 1
                          query: '*'
                        is_enabled: false
                    is_rate_limited: false
                    num_retention_days: 15
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Configurations
        - Index
        - Indexes
        - Logs
      summary: 'Create An Index '
      description: >-
        Creates a new index. Returns the Index object passed in the request body
        when the request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: main
                filter:
                  query: source:python
                daily_limit: 300000000
                daily_limit_reset:
                  reset_time: '14:00'
                  reset_utc_offset: '+02:00'
                daily_limit_warning_threshold_percentage: 70
                exclusion_filters:
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                is_rate_limited: false
                num_retention_days: 15
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: main
                filter:
                  query: source:python
                daily_limit: 300000000
                daily_limit_reset:
                  reset_time: '14:00'
                  reset_utc_offset: '+02:00'
                daily_limit_warning_threshold_percentage: 70
                exclusion_filters:
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                is_rate_limited: false
                num_retention_days: 15
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/logs/config/indexes/{name}:
    get:
      tags:
        - Configurations
        - Index
        - Indexes
        - Logs
        - Names
      summary: 'Get An Index '
      description: >-
        Get one log index from your organization. This endpoint takes no JSON
        arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: main
                filter:
                  query: source:python
                daily_limit: 300000000
                daily_limit_reset:
                  reset_time: '14:00'
                  reset_utc_offset: '+02:00'
                daily_limit_warning_threshold_percentage: 70
                exclusion_filters:
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                is_rate_limited: false
                num_retention_days: 15
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Configurations
        - Index
        - Indexes
        - Logs
        - Names
      summary: 'Update An Index '
      description: >-
        Update an index as identified by its name.

        Returns the Index object passed in the request body when the request is
        successful.


        Using the `PUT` method updates your index’s configuration by
        **replacing**

        your current configuration with the new one sent to your Datadog
        organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  query: source:python
                daily_limit: 300000000
                daily_limit_reset:
                  reset_time: '14:00'
                  reset_utc_offset: '+02:00'
                daily_limit_warning_threshold_percentage: 70
                disable_daily_limit: false
                exclusion_filters:
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: false
                num_retention_days: 15
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: main
                filter:
                  query: source:python
                daily_limit: 300000000
                daily_limit_reset:
                  reset_time: '14:00'
                  reset_utc_offset: '+02:00'
                daily_limit_warning_threshold_percentage: 70
                exclusion_filters:
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                  - name: payment
                    filter:
                      sample_rate: 1
                      query: '*'
                    is_enabled: true
                is_rate_limited: false
                num_retention_days: 15
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
  /api/v1/logs/config/index-order:
    get:
      tags:
        - Configurations
        - Index
        - Indexes
        - Logs
        - Orders
      summary: 'Get Indexes Order '
      description: >-
        Get the current order of your log indexes. This endpoint takes no JSON
        arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                index_names:
                  - main
                  - payments
                  - web
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Configurations
        - Index
        - Indexes
        - Logs
        - Orders
      summary: 'Update Indexes Order '
      description: >-
        This endpoint updates the index order of your organization.

        It returns the index order object passed in the request body when the
        request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                index_names:
                  - main
                  - payments
                  - web
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                index_names:
                  - main
                  - payments
                  - web
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/metrics:
    get:
      tags:
        - Configurations
        - Log based
        - Logs
        - Metrics
      summary: 'Get All Log-based Metrics '
      description: Get the list of configured log-based metrics with their definitions.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      compute:
                        aggregation_type: distribution
                        include_percentiles: true
                        path: '@duration'
                      filter:
                        query: service:web* AND @http.status_code:[200 TO 299]
                      group_by:
                        - path: '@http.status_code'
                          tag_name: status_code
                        - path: '@http.status_code'
                          tag_name: status_code
                    id: logs.page.load.count
                    type: logs_metrics
                  - attributes:
                      compute:
                        aggregation_type: distribution
                        include_percentiles: true
                        path: '@duration'
                      filter:
                        query: service:web* AND @http.status_code:[200 TO 299]
                      group_by:
                        - path: '@http.status_code'
                          tag_name: status_code
                        - path: '@http.status_code'
                          tag_name: status_code
                    id: logs.page.load.count
                    type: logs_metrics
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Configurations
        - Log based
        - Logs
        - Metrics
      summary: 'Create A Log-based Metric '
      description: >-
        Create a metric based on your ingested logs in your organization.

        Returns the log-based metric object from the request body when the
        request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: logs.page.load.count
                  type: logs_metrics
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: true
                      path: '@duration'
                    filter:
                      query: service:web* AND @http.status_code:[200 TO 299]
                    group_by:
                      - path: '@http.status_code'
                        tag_name: status_code
                      - path: '@http.status_code'
                        tag_name: status_code
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: true
                      path: '@duration'
                    filter:
                      query: service:web* AND @http.status_code:[200 TO 299]
                    group_by:
                      - path: '@http.status_code'
                        tag_name: status_code
                      - path: '@http.status_code'
                        tag_name: status_code
                  id: logs.page.load.count
                  type: logs_metrics
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/logs/config/metrics/{metric_id}:
    get:
      tags:
        - Configurations
        - Log based
        - Logs
        - Metrics
      summary: 'Get A Log-based Metric '
      description: Get a specific log-based metric from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: true
                      path: '@duration'
                    filter:
                      query: service:web* AND @http.status_code:[200 TO 299]
                    group_by:
                      - path: '@http.status_code'
                        tag_name: status_code
                      - path: '@http.status_code'
                        tag_name: status_code
                  id: logs.page.load.count
                  type: logs_metrics
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Configurations
        - Log based
        - Logs
        - Metrics
      summary: 'Update A Log-based Metric '
      description: >-
        Update a specific log-based metric from your organization.

        Returns the log-based metric object from the request body when the
        request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: logs_metrics
                  attributes:
                    compute:
                      include_percentiles: true
                    filter:
                      query: service:web* AND @http.status_code:[200 TO 299]
                    group_by:
                      - path: '@http.status_code'
                        tag_name: status_code
                      - path: '@http.status_code'
                        tag_name: status_code
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: true
                      path: '@duration'
                    filter:
                      query: service:web* AND @http.status_code:[200 TO 299]
                    group_by:
                      - path: '@http.status_code'
                        tag_name: status_code
                      - path: '@http.status_code'
                        tag_name: status_code
                  id: logs.page.load.count
                  type: logs_metrics
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Log based
        - Logs
        - Metrics
      summary: 'Delete A Log-based Metric '
      description: Delete a specific log-based metric from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/logs/config/pipeline-order:
    get:
      tags:
        - Configurations
        - Logs
        - Orders
        - Pipelines
      summary: 'Get Pipeline Order '
      description: |-
        Get the current order of your pipelines.
        This endpoint takes no JSON arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                pipeline_ids:
                  - tags
                  - org_ids
                  - products
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Configurations
        - Logs
        - Orders
        - Pipelines
      summary: 'Update Pipeline Order '
      description: >-
        Update the order of your pipelines. Since logs are processed
        sequentially, reordering a pipeline may change

        the structure and content of the data processed by other pipelines and
        their processors.


        **Note**: Using the `PUT` method updates your pipeline order by
        replacing your current order

        with the new one sent to your Datadog organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pipeline_ids:
                  - tags
                  - org_ids
                  - products
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                pipeline_ids:
                  - tags
                  - org_ids
                  - products
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/logs/config/pipelines:
    get:
      tags:
        - Configurations
        - Logs
        - Pipelines
      summary: 'Get All Pipelines '
      description: |-
        Get all pipelines from your organization.
        This endpoint takes no JSON arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: ''
                  filter:
                    query: source:python
                  id: incididunt non
                  is_enabled: false
                  is_read_only: false
                  processors:
                    - source: message
                      grok:
                        match_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                        support_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                      type: grok-parser
                      is_enabled: false
                      name: cupidatat ex sed
                      samples:
                        - id pariatur ut
                        - ea eiusmod Duis
                    - source: message
                      grok:
                        match_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                        support_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                      type: grok-parser
                      is_enabled: false
                      name: dolor eiusmod
                      samples:
                        - ut reprehenderit nulla Duis
                        - elit Duis esse
                  type: pipeline
                - name: ''
                  filter:
                    query: source:python
                  id: labore do Lorem cupidatat
                  is_enabled: false
                  is_read_only: false
                  processors:
                    - source: message
                      grok:
                        match_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                        support_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                      type: grok-parser
                      is_enabled: false
                      name: culpa velit irure
                      samples:
                        - sit consequat dolor pariatur
                        - quis occaecat dolor sed
                    - source: message
                      grok:
                        match_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                        support_rules: |
                          rule_name_1 foo
                          rule_name_2 bar
                      type: grok-parser
                      is_enabled: false
                      name: id occaecat sint
                      samples:
                        - dolor Lorem
                        - esse mollit
                  type: pipeline
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Configurations
        - Logs
        - Pipelines
      summary: 'Create A Pipeline '
      description: Create a pipeline in your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: ''
                filter:
                  query: source:python
                id: ''
                is_enabled: false
                is_read_only: true
                processors:
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: nulla tempor
                    samples:
                      - ipsum Duis
                      - dolore culpa ea est
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: sunt officia
                    samples:
                      - ex ullamco occaecat exercitation
                      - esse aute
                type: pipeline
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: ''
                filter:
                  query: source:python
                id: ''
                is_enabled: false
                is_read_only: true
                processors:
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: nulla tempor
                    samples:
                      - ipsum Duis
                      - dolore culpa ea est
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: sunt officia
                    samples:
                      - ex ullamco occaecat exercitation
                      - esse aute
                type: pipeline
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/logs/config/pipelines/{pipeline_id}:
    get:
      tags:
        - Configurations
        - Logs
        - Pipelines
      summary: 'Get A Pipeline '
      description: |-
        Get a specific pipeline from your organization.
        This endpoint takes no JSON arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pipeline_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: ''
                filter:
                  query: source:python
                id: ''
                is_enabled: false
                is_read_only: true
                processors:
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: nulla tempor
                    samples:
                      - ipsum Duis
                      - dolore culpa ea est
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: sunt officia
                    samples:
                      - ex ullamco occaecat exercitation
                      - esse aute
                type: pipeline
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Logs
        - Pipelines
      summary: 'Delete A Pipeline '
      description: |-
        Delete a given pipeline from your organization.
        This endpoint takes no JSON arguments.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pipeline_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Configurations
        - Logs
        - Pipelines
      summary: 'Update A Pipeline '
      description: >-
        Update a given pipeline configuration to change it’s processors or their
        order.


        **Note**: Using this method updates your pipeline configuration by
        **replacing**

        your current configuration with the new one sent to your Datadog
        organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: ''
                filter:
                  query: source:python
                id: ''
                is_enabled: false
                is_read_only: true
                processors:
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: nulla tempor
                    samples:
                      - ipsum Duis
                      - dolore culpa ea est
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: sunt officia
                    samples:
                      - ex ullamco occaecat exercitation
                      - esse aute
                type: pipeline
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pipeline_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: ''
                filter:
                  query: source:python
                id: ''
                is_enabled: false
                is_read_only: true
                processors:
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: nulla tempor
                    samples:
                      - ipsum Duis
                      - dolore culpa ea est
                  - source: message
                    grok:
                      match_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                      support_rules: |
                        rule_name_1 foo
                        rule_name_2 bar
                    type: grok-parser
                    is_enabled: false
                    name: sunt officia
                    samples:
                      - ex ullamco occaecat exercitation
                      - esse aute
                type: pipeline
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics/{metric_name}/tags:
    post:
      tags:
        - Configurations
        - Metrics
        - Names
        - Tags
      summary: 'Create A Tag Configuration '
      description: >-
        Create and define a list of queryable tag keys for an existing
        count/gauge/rate/distribution metric.

        Optionally, include percentile aggregations on any distribution metric
        or configure custom aggregations

        on any count, rate, or gauge metric. By setting `exclude_tags_mode` to
        true the behavior is changed

        from an allow-list to a deny-list, and tags in the defined list will not
        be queryable.

        Can only be used with application keys of users with the `Manage Tags
        for Metrics` permission.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: test.metric.latency
                  type: manage_tags
                  attributes:
                    tags:
                      - app
                      - datacenter
                    metric_type: count
                    aggregations:
                      - space: sum
                        time: sum
                      - space: sum
                        time: count
                    exclude_tags_mode: false
                    include_percentiles: true
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    aggregations:
                      - space: avg
                        time: avg
                    created_at: '2020-03-25T09:48:37.463835Z'
                    metric_type: gauge
                    modified_at: '2020-04-25T09:48:37.463835Z'
                    tags:
                      - app
                      - datacenter
                  type: manage_tags
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Configurations
        - Metrics
        - Names
        - Tags
      summary: 'List Tag Configuration By Name '
      description: Returns the tag configuration for the given metric name.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    aggregations:
                      - space: avg
                        time: avg
                    created_at: '2020-03-25T09:48:37.463835Z'
                    metric_type: gauge
                    modified_at: '2020-04-25T09:48:37.463835Z'
                    tags:
                      - app
                      - datacenter
                  type: manage_tags
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Configurations
        - Metrics
        - Names
        - Tags
      summary: 'Update A Tag Configuration '
      description: >-
        Update the tag configuration of a metric or percentile aggregations of a
        distribution metric or custom aggregations

        of a count, rate, or gauge metric. By setting `exclude_tags_mode` to
        true the behavior is changed

        from an allow-list to a deny-list, and tags in the defined list will not
        be queryable.

        Can only be used with application keys from users with the `Manage Tags
        for Metrics` permission. This endpoint requires

        a tag configuration to be created first.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: test.metric.latency
                  type: manage_tags
                  attributes:
                    aggregations:
                      - space: sum
                        time: sum
                      - space: sum
                        time: count
                    exclude_tags_mode: true
                    include_percentiles: true
                    tags:
                      - app
                      - datacenter
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    aggregations:
                      - space: avg
                        time: avg
                    created_at: '2020-03-25T09:48:37.463835Z'
                    metric_type: gauge
                    modified_at: '2020-04-25T09:48:37.463835Z'
                    tags:
                      - app
                      - datacenter
                  type: manage_tags
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Metrics
        - Names
        - Tags
      summary: 'Delete A Tag Configuration '
      description: |-
        Deletes a metric's tag configuration. Can only be used with application
        keys from users with the `Manage Tags for Metrics` permission.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/metrics:
    get:
      tags:
        - Active
        - Metrics
      summary: 'Get Active Metrics List '
      description: Get the list of actively reporting metrics from a given time until now.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: number
          description: (Required) Seconds since the Unix epoch.
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                from: deserunt eiusmod labore do
                metrics:
                  - irure et sit
                  - laboris eiusmod consectetur pariatur
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/query/timeseries:
    post:
      tags:
        - Across
        - Data
        - Multiple
        - Products
        - Queries
        - Time Series
      summary: 'Query Timeseries Data Across Multiple Products '
      description: |-
        Query timeseries data across various data sources and
        process the data by applying formulas and functions.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: timeseries_request
                  attributes:
                    to: 1568923200000
                    from: 1568899800000
                    queries:
                      - data_source: metrics
                        query: avg:system.cpu.user{*} by {env}
                        name: irure nulla non pariatur anim
                      - data_source: metrics
                        query: avg:system.cpu.user{*} by {env}
                        name: enim in
                    formulas:
                      - formula: a+b
                        limit:
                          count: 10
                          order: desc
                      - formula: a+b
                        limit:
                          count: 10
                          order: desc
                    interval: 5000
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    series:
                      - group_tags:
                          - env:production
                          - env:production
                        query_index: 0
                        unit:
                          - family: time
                            name: minute
                            plural: minutes
                            scale_factor: 60
                            short_name: min
                          - family: time
                            name: minute
                            plural: minutes
                            scale_factor: 60
                            short_name: min
                      - group_tags:
                          - env:production
                          - env:production
                        query_index: 0
                        unit:
                          - family: time
                            name: minute
                            plural: minutes
                            scale_factor: 60
                            short_name: min
                          - family: time
                            name: minute
                            plural: minutes
                            scale_factor: 60
                            short_name: min
                    times:
                      - 1568899800000
                      - 1568899800000
                    values:
                      - - 1575317847
                        - 0.5
                      - - 1575317847
                        - 0.5
                  type: timeseries_response
                errors: voluptate
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/distribution_points:
    post:
      tags:
        - Distributions
        - Points
        - Submit
      summary: 'Submit Distribution Points '
      description: >-
        The distribution points end-point allows you to post distribution data
        that can be graphed on Datadog’s dashboards.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n  \"series\": [\n    {\n      \"metric\":
                \"system.load.1.dist\",\n      \"points\": [\n       
                [\n          1636629071,\n          [\n           
                1.0,\n            2.0\n          ]\n        ]\n      ]\n    }\n 
                ]\n}"
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: text/json
        - name: Accept
          in: header
          schema:
            type: string
          example: text/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "status": "ok"
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '408':
          description: Request Timeout
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '413':
          description: Request Entity Too Large
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/series:
    post:
      tags:
        - Metrics
        - Series
        - Submit
      summary: 'Submit Metrics '
      description: >-
        The metrics end-point allows you to post time-series data that can be
        graphed on Datadog’s dashboards.

        The maximum payload size is 500 kilobytes (512000 bytes). Compressed
        payloads must have a decompressed size of less than 5 megabytes (5242880
        bytes).


        If you’re submitting metrics directly to the Datadog API without using
        DogStatsD, expect:


        - 64 bits for the timestamp

        - 64 bits for the value

        - 20 bytes for the metric names

        - 50 bytes for the timeseries

        - The full payload is approximately 100 bytes.


        Host name is one of the resources in the Resources field.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                series:
                  - metric: <string>
                    points:
                      - timestamp: <long>
                        value: <double>
                      - timestamp: <long>
                        value: <double>
                    interval: <long>
                    metadata:
                      origin:
                        metric_type: 0
                        product: 0
                        service: 0
                    resources:
                      - name: <string>
                        type: <string>
                      - name: <string>
                        type: <string>
                    source_type_name: <string>
                    tags:
                      - <string>
                      - <string>
                    type: 3
                    unit: <string>
                  - metric: <string>
                    points:
                      - timestamp: <long>
                        value: <double>
                      - timestamp: <long>
                        value: <double>
                    interval: <long>
                    metadata:
                      origin:
                        metric_type: 0
                        product: 0
                        service: 0
                    resources:
                      - name: <string>
                        type: <string>
                      - name: <string>
                        type: <string>
                    source_type_name: <string>
                    tags:
                      - <string>
                      - <string>
                    type: 0
                    unit: <string>
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - esse veniam
                  - minim quis consequat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '408':
          description: Request Timeout
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '413':
          description: Request Entity Too Large
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/metrics/{metric_name}:
    get:
      tags:
        - Metadata
        - Metrics
        - Names
      summary: 'Get Metric Metadata '
      description: Get metadata about a specific metric.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: ad adipisicing nostrud do
                integration: mollit
                per_unit: second
                short_name: et nulla sed aute
                statsd_interval: 20591110
                type: count
                unit: byte
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Edit
        - Metadata
        - Metrics
        - Names
      summary: 'Edit Metric Metadata '
      description: >-
        Edit metadata of a specific metric. Find out more about [supported
        types](https://docs.datadoghq.com/developers/metrics).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: ad adipisicing nostrud do
                integration: mollit
                per_unit: second
                short_name: et nulla sed aute
                statsd_interval: 20591110
                type: count
                unit: byte
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: ad adipisicing nostrud do
                integration: mollit
                per_unit: second
                short_name: et nulla sed aute
                statsd_interval: 20591110
                type: count
                unit: byte
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/query/scalar:
    post:
      tags:
        - Across
        - Data
        - Multiple
        - Products
        - Queries
        - Scalar
      summary: 'Query Scalar Data Across Multiple Products '
      description: >-
        Query scalar values (as seen on Query Value, Table, and Toplist
        widgets).

        Multiple data sources are supported with the ability to

        process the data using formulas and functions.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: scalar_request
                  attributes:
                    to: 1568923200000
                    from: 1568899800000
                    queries:
                      - data_source: metrics
                        query: avg:system.cpu.user{*} by {env}
                        aggregator: avg
                        name: ipsum nostrud sint officia ut
                      - data_source: metrics
                        query: avg:system.cpu.user{*} by {env}
                        aggregator: avg
                        name: sed nisi pariatur nostrud
                    formulas:
                      - formula: a+b
                        limit:
                          count: 10
                          order: desc
                      - formula: a+b
                        limit:
                          count: 10
                          order: desc
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    columns:
                      - name: env
                        type: group
                        values:
                          - - production
                          - - staging
                      - name: env
                        type: group
                        values:
                          - - production
                          - - staging
                  type: scalar_response
                errors: Excepteur non qui sed consectetur
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/search:
    get:
      tags:
        - Metrics
        - Search
      summary: 'Search Metrics '
      description: Search for metrics from the last 24 hours in Datadog.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) Query string to search metrics upon. Can optionally be
            prefixed with `metrics:`.
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  metrics:
                    - nostrud of
                    - eu in
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics:
    get:
      tags:
        - Metrics
      summary: 'Get A List Of Metrics '
      description: >-
        Returns all metrics that can be configured in the Metrics Summary page
        or with Metrics without Limits™ (matching additional filters if
        specified).
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: metrics
                  - type: metrics
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/query:
    get:
      tags:
        - Points
        - Queries
        - Time Series
      summary: 'Query Timeseries Points '
      description: Query timeseries points.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from
          in: query
          schema:
            type: number
          description: >-
            (Required) Start of the queried time period, seconds since the Unix
            epoch.
          example: '-32260706'
        - name: to
          in: query
          schema:
            type: number
          description: >-
            (Required) End of the queried time period, seconds since the Unix
            epoch.
          example: '-32260706'
        - name: query
          in: query
          schema:
            type: string
          description: (Required) Query string.
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: consequat
                from_date: 12405727
                group_by:
                  - ut dolor Duis ut nisi
                  - ea voluptate amet
                message: adipisicing
                query: fugiat ad
                res_type: time_series
                series:
                  - aggr: avg
                    display_name: system.cpu.idle
                    end: -17222094
                    expression: system.cpu.idle{host:foo,env:test}
                    interval: 37816942
                    length: 71743677
                    metric: system.cpu.idle
                    pointlist:
                      - - 1681683300000
                        - 77.62145685254418
                    query_index: 8668719
                    scope: host:foo,env:test
                    start: -98648042
                    tag_set:
                      - deserunt
                      - nulla exercitation
                    unit:
                      - family: time
                        name: minute
                        plural: minutes
                        scale_factor: 60
                        short_name: min
                      - family: time
                        name: minute
                        plural: minutes
                        scale_factor: 60
                        short_name: min
                  - aggr: avg
                    display_name: system.cpu.idle
                    end: 41876136
                    expression: system.cpu.idle{host:foo,env:test}
                    interval: 80784699
                    length: 73368489
                    metric: system.cpu.idle
                    pointlist:
                      - - 1681683300000
                        - 77.62145685254418
                    query_index: -6394571
                    scope: host:foo,env:test
                    start: -46563278
                    tag_set:
                      - do non in proident adipisicing
                      - Excepteur
                    unit:
                      - family: time
                        name: minute
                        plural: minutes
                        scale_factor: 60
                        short_name: min
                      - family: time
                        name: minute
                        plural: minutes
                        scale_factor: 60
                        short_name: min
                status: ok
                to_date: -96667383
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics/{metric_name}/all-tags:
    get:
      tags:
        - Metrics
        - Names
        - Tags
      summary: 'List Tags By Metric Name '
      description: View indexed tag key-value pairs for a given metric name.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    tags:
                      - sport:golf
                      - sport:football
                      - animal:dog
                  id: test.metric.latency
                  type: metrics
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics/{metric_name}/active-configurations:
    get:
      tags:
        - Active
        - Aggregations
        - Configurations
        - Metrics
        - Names
        - Tags
      summary: 'List Active Tags And Aggregations '
      description: >-
        List tags and aggregations that are actively queried on dashboards and
        monitors for a given metric name.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    active_aggregations:
                      - space: sum
                        time: sum
                      - space: sum
                        time: count
                    active_tags:
                      - app
                      - datacenter
                  id: test.metric.latency
                  type: actively_queried_configurations
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics/{metric_name}/volumes:
    get:
      tags:
        - Distinct
        - Metrics
        - Names
        - Volumes
      summary: 'List Distinct Metric Volumes By Metric Name '
      description: >-
        View distinct metrics volumes for the given metric name.


        Custom metrics generated in-app from other products will return `null`
        for ingested volumes.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    distinct_volume: 10
                  id: test.metric.latency
                  type: distinct_metric_volumes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics/config/bulk-tags:
    post:
      tags:
        - Bulk
        - Configurations
        - Configure
        - Metrics
        - Multiple
        - Tags
      summary: 'Configure Tags For Multiple Metrics '
      description: >-
        Create and define a list of queryable tag keys for a set of existing
        count, gauge, rate, and distribution metrics.

        Metrics are selected by passing a metric name prefix. Use the Delete
        method of this API path to remove tag configurations.

        Results can be sent to a set of account email addresses, just like the
        same operation in the Datadog web app.

        If multiple calls include the same metric, the last configuration
        applied (not by submit order) is used, do not

        expect deterministic ordering of concurrent calls. The
        `exclude_tags_mode` value will set all metrics that match the prefix to

        the same exclusion state, metric tag configurations do not support mixed
        inclusion and exclusion for tags on the same metric.

        Can only be used with application keys of users with the `Manage Tags
        for Metrics` permission.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: kafka.lag
                  type: metric_bulk_configure_tags
                  attributes:
                    emails:
                      - sue@example.com
                      - bob@example.com
                    exclude_tags_mode: true
                    tags:
                      - host
                      - pod_name
                      - is_shadow
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: kafka.lag
                  type: metric_bulk_configure_tags
                  attributes:
                    emails:
                      - sue@example.com
                      - bob@example.com
                    exclude_tags_mode: false
                    status: Accepted
                    tags:
                      - host
                      - pod_name
                      - is_shadow
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Bulk
        - Configurations
        - Metrics
        - Multiple
        - Tags
      summary: 'Delete Tags For Multiple Metrics '
      description: >-
        Delete all custom lists of queryable tag keys for a set of existing
        count, gauge, rate, and distribution metrics.

        Metrics are selected by passing a metric name prefix.

        Results can be sent to a set of account email addresses, just like the
        same operation in the Datadog web app.

        Can only be used with application keys of users with the `Manage Tags
        for Metrics` permission.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: kafka.lag
                  type: metric_bulk_configure_tags
                  attributes:
                    emails:
                      - sue@example.com
                      - bob@example.com
                    exclude_tags_mode: false
                    status: Accepted
                    tags:
                      - host
                      - pod_name
                      - is_shadow
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics/{metric_name}/estimate:
    get:
      tags:
        - Cardinality
        - Configurations
        - Estimates
        - Estimator
        - Metrics
        - Names
        - Tags
      summary: 'Tag Configuration Cardinality Estimator '
      description: >-
        Returns the estimated cardinality for a metric with a given tag,
        percentile and number of aggregations configuration using Metrics
        without Limits&trade;.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    estimate_type: distribution
                    estimated_at: '2022-04-27T09:48:37.463835Z'
                    estimated_output_series: 50
                  id: test.metric.latency
                  type: metric_cardinality_estimate
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/metrics/{metric_name}/assets:
    get:
      tags:
        - Assets
        - Metrics
        - Names
        - Related
      summary: 'Related Assets To A Metric '
      description: >-
        Returns dashboards, monitors, notebooks, and SLOs that a metric is
        stored in, if any.  Updated every 24 hours.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_name
          in: path
          schema:
            type: string
          required: true
          example: dist.http.endpoint.request
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: test.metric.latency
                  type: metrics
                  relationships:
                    dashboards:
                      data:
                        - id: xxx-yyy-zzz
                          type: dashboards
                        - id: xxx-yyy-zzz
                          type: dashboards
                    monitors:
                      data:
                        - id: '1775073'
                          type: monitors
                        - id: '1775073'
                          type: monitors
                    notebooks:
                      data:
                        - id: '12345'
                          type: notebooks
                        - id: '12345'
                          type: notebooks
                    slos:
                      data:
                        - id: 9ffef113b389520db54391d67d652dfb
                          type: slos
                        - id: 9ffef113b389520db54391d67d652dfb
                          type: slos
                included:
                  - id: xxx-yyy-zzz
                    type: dashboards
                    attributes:
                      popularity: 3.9081399422225482
                      title: f
                  - id: xxx-yyy-zzz
                    type: dashboards
                    attributes:
                      popularity: 1.02405634518829
                      title: occaecat eu
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor:
    post:
      tags:
        - Monitors
      summary: 'Create A Monitor '
      description: >-
        Create a monitor using the specified options.


        #### Monitor Types


        The type of monitor chosen from:


        - anomaly: `query alert`

        - APM: `query alert` or `trace-analytics alert`

        - composite: `composite`

        - custom: `service check`

        - event: `event alert`

        - forecast: `query alert`

        - host: `service check`

        - integration: `query alert` or `service check`

        - live process: `process alert`

        - logs: `log alert`

        - metric: `query alert`

        - network: `service check`

        - outlier: `query alert`

        - process: `service check`

        - rum: `rum alert`

        - SLO: `slo alert`

        - watchdog: `event-v2 alert`

        - event-v2: `event-v2 alert`

        - audit: `audit alert`

        - error-tracking: `error-tracking alert`

        - database-monitoring: `database-monitoring alert`


        **Notes**:

        - Synthetic monitors are created through the Synthetics API. See the
        [Synthetics API](https://docs.datadoghq.com/api/latest/synthetics/)
        documentation for more information.

        - Log monitors require an unscoped App Key.


        #### Query Types


        ##### Metric Alert Query


        Example: `time_aggr(time_window):space_aggr:metric{tags} [by {key}]
        operator #`


        - `time_aggr`: avg, sum, max, min, change, or pct_change

        - `time_window`: `last_#m` (with `#` between 1 and 10080 depending on
        the monitor type) or `last_#h`(with `#` between 1 and 168 depending on
        the monitor type) or `last_1d`, or `last_1w`

        - `space_aggr`: avg, sum, min, or max

        - `tags`: one or more tags (comma-separated), or *

        - `key`: a 'key' in key:value tag syntax; defines a separate alert for
        each tag in the group (multi-alert)

        - `operator`: <, <=, >, >=, ==, or !=

        - `#`: an integer or decimal number used to set the threshold


        If you are using the `_change_` or `_pct_change_` time aggregator,
        instead use `change_aggr(time_aggr(time_window),

        timeshift):space_aggr:metric{tags} [by {key}] operator #` with:


        - `change_aggr` change, pct_change

        - `time_aggr` avg, sum, max, min [Learn
        more](https://docs.datadoghq.com/monitors/create/types/#define-the-conditions)

        - `time_window` last\_#m (between 1 and 2880 depending on the monitor
        type), last\_#h (between 1 and 48 depending on the monitor type), or
        last_#d (1 or 2)

        - `timeshift` #m_ago (5, 10, 15, or 30), #h_ago (1, 2, or 4), or 1d_ago


        Use this to create an outlier monitor using the following query:

        `avg(last_30m):outliers(avg:system.cpu.user{role:es-events-data} by
        {host}, 'dbscan', 7) > 0`


        ##### Service Check Query


        Example: `"check".over(tags).last(count).by(group).count_by_status()`


        - `check` name of the check, for example `datadog.agent.up`

        - `tags` one or more quoted tags (comma-separated), or "*". for example:
        `.over("env:prod", "role:db")`; `over` cannot be blank.

        - `count` must be at greater than or equal to your max threshold
        (defined in the `options`). It is limited to 100.

        For example, if you've specified to notify on 1 critical, 3 ok, and 2
        warn statuses, `count` should be at least 3.

        - `group` must be specified for check monitors. Per-check grouping is
        already explicitly known for some service checks.

        For example, Postgres integration monitors are tagged by `db`, `host`,
        and `port`, and Network monitors by `host`, `instance`, and `url`. See
        [Service Checks](https://docs.datadoghq.com/api/latest/service-checks/)
        documentation for more information.


        ##### Event Alert Query


        **Note:** The Event Alert Query has been replaced by the Event V2 Alert
        Query. For more information, see the [Event Migration
        guide](https://docs.datadoghq.com/service_management/events/guides/migrating_to_new_events_features/).


        ##### Event V2 Alert Query


        Example: `events(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg` and
        `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### Process Alert Query


        Example: `processes(search).over(tags).rollup('count').last(timeframe)
        operator #`


        - `search` free text search string for querying processes.

        Matching processes match results on the [Live
        Processes](https://docs.datadoghq.com/infrastructure/process/?tab=linuxwindows)
        page.

        - `tags` one or more tags (comma-separated)

        - `timeframe` the timeframe to roll up the counts. Examples: 10m, 4h.
        Supported timeframes: s, m, h and d

        - `operator` <, <=, >, >=, ==, or !=

        - `#` an integer or decimal number used to set the threshold


        ##### Logs Alert Query


        Example: `logs(query).index(index_name).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `index_name` For multi-index organizations, the log index in which the
        request is performed.

        - `rollup_method` The stats roll-up method - supports `count`, `avg` and
        `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### Composite Query


        Example: `12345 && 67890`, where `12345` and `67890` are the IDs of
        non-composite monitors


        * `name` [*required*, *default* = **dynamic, based on query**]: The name
        of the alert.

        * `message` [*required*, *default* = **dynamic, based on query**]: A
        message to include with notifications for this monitor.

        Email notifications can be sent to specific users by using the same
        '@username' notation as events.

        * `tags` [*optional*, *default* = **empty list**]: A list of tags to
        associate with your monitor.

        When getting all monitor details via the API, use the `monitor_tags`
        argument to filter results by these tags.

        It is only available via the API and isn't visible or editable in the
        Datadog UI.


        ##### SLO Alert Query


        Example: `error_budget("slo_id").over("time_window") operator #`


        - `slo_id`: The alphanumeric SLO ID of the SLO you are configuring the
        alert for.

        - `time_window`: The time window of the SLO target you wish to alert on.
        Valid options: `7d`, `30d`, `90d`.

        - `operator`: `>=` or `>`


        ##### Audit Alert Query


        Example: `audits(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg` and
        `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### CI Pipelines Alert Query


        Example: `ci-pipelines(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### CI Tests Alert Query


        Example: `ci-tests(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        ##### Error Tracking Alert Query


        Example(RUM): `error-tracking-rum(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`

        Example(APM Traces):
        `error-tracking-traces(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.


        **Database Monitoring Alert Query**


        Example: `database-monitoring(query).rollup(rollup_method[,
        measure]).last(time_window) operator #`


        - `query` The search query - following the [Log search
        syntax](https://docs.datadoghq.com/logs/search_syntax/).

        - `rollup_method` The stats roll-up method - supports `count`, `avg`,
        and `cardinality`.

        - `measure` For `avg` and cardinality `rollup_method` - specify the
        measure or the facet name you want to use.

        - `time_window` #m (between 1 and 2880), #h (between 1 and 48).

        - `operator` `<`, `<=`, `>`, `>=`, `==`, or `!=`.

        - `#` an integer or decimal number used to set the threshold.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                message: You may need to add web hosts if this is consistently high.
                name: Bytes received on host0
                options:
                  no_data_timeframe: 20
                  notify_no_data: true
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                tags:
                  - app:webserver
                  - frontend
                type: query alert
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: query alert
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                created: '1977-02-24T00:55:39.149Z'
                creator:
                  email: eu do sit ex
                  handle: aliquip cupidatat ut ut
                  name: aute anim esse mollit et
                deleted: '2005-10-04T10:03:03.282Z'
                id: -85100539
                matching_downtimes:
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                message: nisi sed Ut
                modified: '1994-05-25T16:32:06.852Z'
                multi: true
                name: My monitor
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: sint aliquip
                  evaluation_delay: -32193217
                  group_retention_duration: sunt magna
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: -74956346
                  no_data_timeframe: 10290724
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - laboris amet mollit
                    - 'laboris '
                  notify_no_data: false
                  on_missing_data: show_and_notify_no_data
                  renotify_interval: null
                  renotify_occurrences: 53731472
                  renotify_statuses:
                    - alert
                    - alert
                  require_full_window: false
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: laborum dolor ut
                    trigger_window: occaecat veniam
                  thresholds:
                    critical: 52502101.190716386
                    critical_recovery: 33037203.80033295
                    ok: 14658043.747987643
                    unknown: 2305380.307081431
                    warning: 54314333.28059968
                    warning_recovery: 14656234.927481294
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ullamco sunt
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: nulla ea aliquip
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sed dolor
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: veniam ullamco voluptate magna mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: Warn
                priority: 2
                restricted_roles:
                  - Lorem exercitation
                  - sunt consectetur Excepteur
                state:
                  groups:
                    idd:
                      last_nodata_ts: -84384069
                      last_notified_ts: -21864917
                      last_resolved_ts: -84458867
                      last_triggered_ts: 97076299
                      name: id mollit commodo
                      status: Alert
                    adipisicing_8:
                      last_nodata_ts: -58086015
                      last_notified_ts: -22268177
                      last_resolved_ts: -43962499
                      last_triggered_ts: -58469500
                      name: quis
                      status: Alert
                tags:
                  - dolor exercitation Lorem veniam
                  - eu cupidat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Details
        - Monitors
      summary: 'Get All Monitor Details '
      description: Get details about the specified monitor from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - type: query alert
                  query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                  created: '1968-12-22T10:23:44.547Z'
                  creator:
                    email: Lorem
                    handle: ea ad
                    name: exercitation occaecat fugiat
                  deleted: '1957-11-20T09:35:51.648Z'
                  id: -52785033
                  matching_downtimes:
                    - id: 1625
                      end: 1412792983
                      scope:
                        - env:staging
                      start: 1412792983
                    - id: 1625
                      end: 1412792983
                      scope:
                        - env:staging
                      start: 1412792983
                  message: fugiat aute
                  modified: '2016-02-23T08:25:10.298Z'
                  multi: true
                  name: My monitor
                  options:
                    aggregation:
                      group_by: host
                      metric: metrics.name
                      type: count
                    enable_logs_sample: true
                    enable_samples: true
                    escalation_message: sit Lorem
                    evaluation_delay: 81702297
                    group_retention_duration: culpa est
                    groupby_simple_monitor: false
                    include_tags: true
                    min_failure_duration: 0
                    min_location_failed: 1
                    new_group_delay: 83284399
                    no_data_timeframe: 38198133
                    notification_preset_name: show_all
                    notify_audit: false
                    notify_by:
                      - id nostrud labore laboris sint
                      - Lorem exercitation labore
                    notify_no_data: true
                    on_missing_data: default
                    renotify_interval: null
                    renotify_occurrences: -75196602
                    renotify_statuses:
                      - alert
                      - warn
                    require_full_window: true
                    scheduling_options:
                      custom_schedule:
                        recurrences:
                          - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                            start: '2023-08-31T16:30:00'
                            timezone: Europe/Paris
                          - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                            start: '2023-08-31T16:30:00'
                            timezone: Europe/Paris
                      evaluation_window:
                        day_starts: '04:00'
                        hour_starts: 0
                        month_starts: 1
                    threshold_windows:
                      recovery_window: dolore anim veniam
                      trigger_window: et reprehenderit Ut
                    thresholds:
                      critical: -93227660.1225225
                      critical_recovery: 54848571.83284998
                      ok: 42528324.94726676
                      unknown: 25234544.24275866
                      warning: 31677783.689706236
                      warning_recovery: 12934179.164734736
                    timeout_h: null
                    variables:
                      - data_source: rum
                        compute:
                          aggregation: avg
                          interval: 60000
                          metric: '@duration'
                        name: query_errors
                        group_by:
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: quis non pariatur consequat
                              order: desc
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: irure adipisicing aliqua
                              order: desc
                        indexes:
                          - days-3
                          - days-7
                        search:
                          query: service:query
                      - data_source: rum
                        compute:
                          aggregation: avg
                          interval: 60000
                          metric: '@duration'
                        name: query_errors
                        group_by:
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: minim
                              order: desc
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: eiusmod
                              order: desc
                        indexes:
                          - days-3
                          - days-7
                        search:
                          query: service:query
                  overall_state: Warn
                  priority: 2
                  restricted_roles:
                    - esse qui Ut eiusmod officia
                    - cupidatat deserunt labore elit
                  state:
                    groups:
                      commodo_7:
                        last_nodata_ts: 76648341
                        last_notified_ts: -58294565
                        last_resolved_ts: -86848018
                        last_triggered_ts: -87357474
                        name: elit tempor nulla
                        status: Alert
                      Ut9e:
                        last_nodata_ts: -56064388
                        last_notified_ts: 82661693
                        last_resolved_ts: 1205946
                        last_triggered_ts: -36844347
                        name: ut
                        status: Warn
                      esse_1:
                        last_nodata_ts: 63786855
                        last_notified_ts: -97622539
                        last_resolved_ts: -32537264
                        last_triggered_ts: 46932555
                        name: in
                        status: Unknown
                      tempor6:
                        last_nodata_ts: 8598206
                        last_notified_ts: -33351692
                        last_resolved_ts: -69521487
                        last_triggered_ts: 42717159
                        name: fugiat aliquip consequat dolore
                        status: No Data
                  tags:
                    - tempor ut
                    - ea elit officia
                - type: query alert
                  query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                  created: '2004-01-02T04:48:18.523Z'
                  creator:
                    email: es
                    handle: temp
                    name: tempor dolore anim in
                  deleted: '2008-08-15T21:08:26.899Z'
                  id: -51965098
                  matching_downtimes:
                    - id: 1625
                      end: 1412792983
                      scope:
                        - env:staging
                      start: 1412792983
                    - id: 1625
                      end: 1412792983
                      scope:
                        - env:staging
                      start: 1412792983
                  message: ut
                  modified: '2005-03-10T13:34:28.799Z'
                  multi: true
                  name: My monitor
                  options:
                    aggregation:
                      group_by: host
                      metric: metrics.name
                      type: count
                    enable_logs_sample: true
                    enable_samples: false
                    escalation_message: nisi dolor cillum quis proident
                    evaluation_delay: 98247874
                    group_retention_duration: esse labore non eu
                    groupby_simple_monitor: false
                    include_tags: true
                    min_failure_duration: 0
                    min_location_failed: 1
                    new_group_delay: 83568537
                    no_data_timeframe: 38046740
                    notification_preset_name: show_all
                    notify_audit: false
                    notify_by:
                      - quis aute
                      - et incididunt deserunt in
                    notify_no_data: false
                    on_missing_data: show_and_notify_no_data
                    renotify_interval: null
                    renotify_occurrences: -83601397
                    renotify_statuses:
                      - warn
                      - warn
                    require_full_window: false
                    scheduling_options:
                      custom_schedule:
                        recurrences:
                          - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                            start: '2023-08-31T16:30:00'
                            timezone: Europe/Paris
                          - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                            start: '2023-08-31T16:30:00'
                            timezone: Europe/Paris
                      evaluation_window:
                        day_starts: '04:00'
                        hour_starts: 0
                        month_starts: 1
                    threshold_windows:
                      recovery_window: dolor enim dolore
                      trigger_window: aliqua non in veniam
                    thresholds:
                      critical: 24133850.051977217
                      critical_recovery: 27864124.367435932
                      ok: 84223880.08315665
                      unknown: 31175934.015187636
                      warning: 83948037.84049499
                      warning_recovery: -23758868.821760252
                    timeout_h: null
                    variables:
                      - data_source: rum
                        compute:
                          aggregation: avg
                          interval: 60000
                          metric: '@duration'
                        name: query_errors
                        group_by:
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: laboris ipsum consequat occ
                              order: desc
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: nostrud ea in
                              order: desc
                        indexes:
                          - days-3
                          - days-7
                        search:
                          query: service:query
                      - data_source: rum
                        compute:
                          aggregation: avg
                          interval: 60000
                          metric: '@duration'
                        name: query_errors
                        group_by:
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: dolore pariatur esse magna
                              order: desc
                          - facet: status
                            limit: 10
                            sort:
                              aggregation: avg
                              metric: in sint dolor
                              order: desc
                        indexes:
                          - days-3
                          - days-7
                        search:
                          query: service:query
                  overall_state: No Data
                  priority: 2
                  restricted_roles:
                    - ex in
                    - ex velit sed veniam
                  state:
                    groups:
                      aliqua16:
                        last_nodata_ts: -65843386
                        last_notified_ts: -89493790
                        last_resolved_ts: 27985684
                        last_triggered_ts: 16421307
                        name: Excepteur
                        status: No Data
                      culpa6e4:
                        last_nodata_ts: -16909202
                        last_notified_ts: 98113790
                        last_resolved_ts: 43085013
                        last_triggered_ts: -97185607
                        name: anim
                        status: Ignored
                  tags:
                    - sint culpa sunt cillum
                    - irure dolore adipisicing
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/search:
    get:
      tags:
        - Monitors
        - Search
      summary: 'Monitors Search '
      description: Search and filter your monitors details.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                counts:
                  muted:
                    - count: 3
                      name: false
                    - count: 3
                      name: true
                  status:
                    - count: 4
                      name: No Data
                    - count: 2
                      name: OK
                  tag:
                    - count: 6
                      name: service:cassandra
                  type:
                    - count: 6
                      name: metric
                metadata:
                  page: 0
                  page_count: 6
                  per_page: 30
                  total_count: 6
                monitors:
                  - classification: metric
                    creator:
                      handle: john@datadoghq.com
                      name: John Doe
                    id: 2699850
                    last_triggered_ts: null
                    metrics:
                      - system.cpu.user
                    name: >-
                      Cassandra CPU is high on {{host.name}} in
                      {{availability-zone.name}}
                    notifications:
                      - handle: jane@datadoghq.com
                        name: Jane Doe
                    org_id: 1234
                    scopes:
                      - '!availability-zone:us-east-1c'
                      - name:cassandra
                    status: No Data
                    tags:
                      - service:cassandra
                    type: query alert
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/{monitor_id}/unmute:
    post:
      tags:
        - Monitors
        - Unmute
      summary: 'Unmute A Monitor '
      description: Unmute the specified monitor.
      requestBody:
        content: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: query alert
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                created: '1977-02-24T00:55:39.149Z'
                creator:
                  email: eu do sit ex
                  handle: aliquip cupidatat ut ut
                  name: aute anim esse mollit et
                deleted: '2005-10-04T10:03:03.282Z'
                id: -85100539
                matching_downtimes:
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                message: nisi sed Ut
                modified: '1994-05-25T16:32:06.852Z'
                multi: true
                name: My monitor
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: sint aliquip
                  evaluation_delay: -32193217
                  group_retention_duration: sunt magna
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: -74956346
                  no_data_timeframe: 10290724
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - laboris amet mollit
                    - 'laboris '
                  notify_no_data: false
                  on_missing_data: show_and_notify_no_data
                  renotify_interval: null
                  renotify_occurrences: 53731472
                  renotify_statuses:
                    - alert
                    - alert
                  require_full_window: false
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: laborum dolor ut
                    trigger_window: occaecat veniam
                  thresholds:
                    critical: 52502101.190716386
                    critical_recovery: 33037203.80033295
                    ok: 14658043.747987643
                    unknown: 2305380.307081431
                    warning: 54314333.28059968
                    warning_recovery: 14656234.927481294
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ullamco sunt
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: nulla ea aliquip
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sed dolor
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: veniam ullamco voluptate magna mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: Warn
                priority: 2
                restricted_roles:
                  - Lorem exercitation
                  - sunt consectetur Excepteur
                state:
                  groups:
                    idd:
                      last_nodata_ts: -84384069
                      last_notified_ts: -21864917
                      last_resolved_ts: -84458867
                      last_triggered_ts: 97076299
                      name: id mollit commodo
                      status: Alert
                    adipisicing_8:
                      last_nodata_ts: -58086015
                      last_notified_ts: -22268177
                      last_resolved_ts: -43962499
                      last_triggered_ts: -58469500
                      name: quis
                      status: Alert
                tags:
                  - dolor exercitation Lorem veniam
                  - eu cupidat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/groups/search:
    get:
      tags:
        - Groups
        - Monitors
        - Search
      summary: 'Monitors Group Search '
      description: Search and filter your monitor groups details.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                counts:
                  status:
                    - count: 2
                      name: OK
                  type:
                    - count: 2
                      name: metric
                groups:
                  - group: '*'
                    group_tags:
                      - '*'
                    last_nodata_ts: 0
                    last_triggered_ts: 1525702966
                    monitor_id: 2738266
                    monitor_name: '[demo] Cassandra disk usage is high on {{host.name}}'
                    status: OK
                  - group: '*'
                    group_tags:
                      - '*'
                    last_nodata_ts: 0
                    last_triggered_ts: 1525703008
                    monitor_id: 1576648
                    monitor_name: '[demo] Disk usage is high on {{host.name}}'
                    status: OK
                metadata:
                  page: 0
                  page_count: 2
                  per_page: 30
                  total_count: 2
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/{monitor_id}/mute:
    post:
      tags:
        - Monitors
        - Mute
      summary: 'Mute A Monitor '
      description: Mute the specified monitor.
      requestBody:
        content: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: query alert
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                created: '1977-02-24T00:55:39.149Z'
                creator:
                  email: eu do sit ex
                  handle: aliquip cupidatat ut ut
                  name: aute anim esse mollit et
                deleted: '2005-10-04T10:03:03.282Z'
                id: -85100539
                matching_downtimes:
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                message: nisi sed Ut
                modified: '1994-05-25T16:32:06.852Z'
                multi: true
                name: My monitor
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: sint aliquip
                  evaluation_delay: -32193217
                  group_retention_duration: sunt magna
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: -74956346
                  no_data_timeframe: 10290724
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - laboris amet mollit
                    - 'laboris '
                  notify_no_data: false
                  on_missing_data: show_and_notify_no_data
                  renotify_interval: null
                  renotify_occurrences: 53731472
                  renotify_statuses:
                    - alert
                    - alert
                  require_full_window: false
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: laborum dolor ut
                    trigger_window: occaecat veniam
                  thresholds:
                    critical: 52502101.190716386
                    critical_recovery: 33037203.80033295
                    ok: 14658043.747987643
                    unknown: 2305380.307081431
                    warning: 54314333.28059968
                    warning_recovery: 14656234.927481294
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ullamco sunt
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: nulla ea aliquip
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sed dolor
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: veniam ullamco voluptate magna mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: Warn
                priority: 2
                restricted_roles:
                  - Lorem exercitation
                  - sunt consectetur Excepteur
                state:
                  groups:
                    idd:
                      last_nodata_ts: -84384069
                      last_notified_ts: -21864917
                      last_resolved_ts: -84458867
                      last_triggered_ts: 97076299
                      name: id mollit commodo
                      status: Alert
                    adipisicing_8:
                      last_nodata_ts: -58086015
                      last_notified_ts: -22268177
                      last_resolved_ts: -43962499
                      last_triggered_ts: -58469500
                      name: quis
                      status: Alert
                tags:
                  - dolor exercitation Lorem veniam
                  - eu cupidat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/{monitor_id}:
    put:
      tags:
        - Edit
        - Monitors
      summary: 'Edit A Monitor '
      description: Edit the specified monitor.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                created: '1993-07-21T21:29:58.741Z'
                creator:
                  email: eiusmod voluptate
                  handle: culpa
                  name: esse reprehenderit ipsum sint dolore
                deleted: '1965-03-27T04:51:25.618Z'
                id: -63263235
                message: labore in in qui sunt
                modified: '1960-03-20T03:01:54.183Z'
                multi: true
                name: in occaecat nisi eu
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: consectetur tempor
                  evaluation_delay: -42603795
                  group_retention_duration: adipisicing cupidatat velit ut
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: 96658016
                  no_data_timeframe: 39732332
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - 'magna '
                    - veniam laborum pariatur sit
                  notify_no_data: false
                  on_missing_data: resolve
                  renotify_interval: null
                  renotify_occurrences: 3214573
                  renotify_statuses:
                    - warn
                    - alert
                  require_full_window: true
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: id c
                    trigger_window: non magna sit sint
                  thresholds:
                    critical: -7632835.822436631
                    critical_recovery: 50170022.018034786
                    ok: -76505324.0473898
                    unknown: -33289595.34021245
                    warning: 76763516.50591391
                    warning_recovery: -16497973.94595392
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ex dolore veniam aute commodo
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: velit mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: minim ut
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sint Duis
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: OK
                priority: 3
                query: velit
                restricted_roles:
                  - Lorem aute adipisicing
                  - deserunt
                state:
                  groups:
                    consectetur__c:
                      last_nodata_ts: 75222090
                      last_notified_ts: 29957460
                      last_resolved_ts: -96783174
                      last_triggered_ts: -97134818
                      name: laborum voluptate adipisicing in
                      status: Warn
                    est__8c:
                      last_nodata_ts: 81346729
                      last_notified_ts: 5414640
                      last_resolved_ts: 45577499
                      last_triggered_ts: 18421167
                      name: ad
                      status: Ignored
                    sunt_62:
                      last_nodata_ts: -64964994
                      last_notified_ts: 28255214
                      last_resolved_ts: -89851776
                      last_triggered_ts: 20227576
                      name: velit dolor ullamco dolore non
                      status: Unknown
                tags:
                  - fugiat nost
                  - cillu
                type: query alert
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_id
          in: path
          schema:
            type: integer
          required: true
          example: '666486743'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: query alert
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                created: '1977-02-24T00:55:39.149Z'
                creator:
                  email: eu do sit ex
                  handle: aliquip cupidatat ut ut
                  name: aute anim esse mollit et
                deleted: '2005-10-04T10:03:03.282Z'
                id: -85100539
                matching_downtimes:
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                message: nisi sed Ut
                modified: '1994-05-25T16:32:06.852Z'
                multi: true
                name: My monitor
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: sint aliquip
                  evaluation_delay: -32193217
                  group_retention_duration: sunt magna
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: -74956346
                  no_data_timeframe: 10290724
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - laboris amet mollit
                    - 'laboris '
                  notify_no_data: false
                  on_missing_data: show_and_notify_no_data
                  renotify_interval: null
                  renotify_occurrences: 53731472
                  renotify_statuses:
                    - alert
                    - alert
                  require_full_window: false
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: laborum dolor ut
                    trigger_window: occaecat veniam
                  thresholds:
                    critical: 52502101.190716386
                    critical_recovery: 33037203.80033295
                    ok: 14658043.747987643
                    unknown: 2305380.307081431
                    warning: 54314333.28059968
                    warning_recovery: 14656234.927481294
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ullamco sunt
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: nulla ea aliquip
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sed dolor
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: veniam ullamco voluptate magna mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: Warn
                priority: 2
                restricted_roles:
                  - Lorem exercitation
                  - sunt consectetur Excepteur
                state:
                  groups:
                    idd:
                      last_nodata_ts: -84384069
                      last_notified_ts: -21864917
                      last_resolved_ts: -84458867
                      last_triggered_ts: 97076299
                      name: id mollit commodo
                      status: Alert
                    adipisicing_8:
                      last_nodata_ts: -58086015
                      last_notified_ts: -22268177
                      last_resolved_ts: -43962499
                      last_triggered_ts: -58469500
                      name: quis
                      status: Alert
                tags:
                  - dolor exercitation Lorem veniam
                  - eu cupidat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Details
        - Monitor's
        - Monitors
      summary: 'Get A Monitor''s Details '
      description: Get details about the specified monitor from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_id
          in: path
          schema:
            type: integer
          required: true
          example: '666486743'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                type: query alert
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                created: '1977-02-24T00:55:39.149Z'
                creator:
                  email: eu do sit ex
                  handle: aliquip cupidatat ut ut
                  name: aute anim esse mollit et
                deleted: '2005-10-04T10:03:03.282Z'
                id: -85100539
                matching_downtimes:
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                message: nisi sed Ut
                modified: '1994-05-25T16:32:06.852Z'
                multi: true
                name: My monitor
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: sint aliquip
                  evaluation_delay: -32193217
                  group_retention_duration: sunt magna
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: -74956346
                  no_data_timeframe: 10290724
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - laboris amet mollit
                    - 'laboris '
                  notify_no_data: false
                  on_missing_data: show_and_notify_no_data
                  renotify_interval: null
                  renotify_occurrences: 53731472
                  renotify_statuses:
                    - alert
                    - alert
                  require_full_window: false
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: laborum dolor ut
                    trigger_window: occaecat veniam
                  thresholds:
                    critical: 52502101.190716386
                    critical_recovery: 33037203.80033295
                    ok: 14658043.747987643
                    unknown: 2305380.307081431
                    warning: 54314333.28059968
                    warning_recovery: 14656234.927481294
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ullamco sunt
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: nulla ea aliquip
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sed dolor
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: veniam ullamco voluptate magna mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: Warn
                priority: 2
                restricted_roles:
                  - Lorem exercitation
                  - sunt consectetur Excepteur
                state:
                  groups:
                    idd:
                      last_nodata_ts: -84384069
                      last_notified_ts: -21864917
                      last_resolved_ts: -84458867
                      last_triggered_ts: 97076299
                      name: id mollit commodo
                      status: Alert
                    adipisicing_8:
                      last_nodata_ts: -58086015
                      last_notified_ts: -22268177
                      last_resolved_ts: -43962499
                      last_triggered_ts: -58469500
                      name: quis
                      status: Alert
                tags:
                  - dolor exercitation Lorem veniam
                  - eu cupidat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Monitors
      summary: 'Delete A Monitor '
      description: Delete the specified monitor
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_id
          in: path
          schema:
            type: integer
          required: true
          example: '666486743'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deleted_monitor_id: 666486743
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/can_delete:
    get:
      tags:
        - Checks
        - Monitors
      summary: 'Check If A Monitor Can Be Deleted '
      description: Check if the given monitors can be deleted.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_ids
          in: query
          schema:
            type: string
          description: (Required) The IDs of the monitor to check.
          example: 666486743,666486743
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data: {}
                errors:
                  Ut60:
                    - exercitation sit Ut
                    - fugiat mollit adipisicing
                  occaecat_4e:
                    - elit reprehenderit veniam
                    - minim dolore sunt in
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data: {}
                errors:
                  Ut60:
                    - exercitation sit Ut
                    - fugiat mollit adipisicing
                  occaecat_4e:
                    - elit reprehenderit veniam
                    - minim dolore sunt in
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/validate:
    post:
      tags:
        - Monitors
        - Val
        - Validate
      summary: 'Validate A Monitor '
      description: |-
        Validate the monitor provided in the request.

        **Note**: Log monitors require an unscoped App Key.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                type: query alert
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                created: '1977-02-24T00:55:39.149Z'
                creator:
                  email: eu do sit ex
                  handle: aliquip cupidatat ut ut
                  name: aute anim esse mollit et
                deleted: '2005-10-04T10:03:03.282Z'
                id: -85100539
                matching_downtimes:
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                message: nisi sed Ut
                modified: '1994-05-25T16:32:06.852Z'
                multi: true
                name: My monitor
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: sint aliquip
                  evaluation_delay: -32193217
                  group_retention_duration: sunt magna
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: -74956346
                  no_data_timeframe: 10290724
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - laboris amet mollit
                    - 'laboris '
                  notify_no_data: false
                  on_missing_data: show_and_notify_no_data
                  renotify_interval: null
                  renotify_occurrences: 53731472
                  renotify_statuses:
                    - alert
                    - alert
                  require_full_window: false
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: laborum dolor ut
                    trigger_window: occaecat veniam
                  thresholds:
                    critical: 52502101.190716386
                    critical_recovery: 33037203.80033295
                    ok: 14658043.747987643
                    unknown: 2305380.307081431
                    warning: 54314333.28059968
                    warning_recovery: 14656234.927481294
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ullamco sunt
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: nulla ea aliquip
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sed dolor
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: veniam ullamco voluptate magna mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: Warn
                priority: 2
                restricted_roles:
                  - Lorem exercitation
                  - sunt consectetur Excepteur
                state:
                  groups:
                    idd:
                      last_nodata_ts: -84384069
                      last_notified_ts: -21864917
                      last_resolved_ts: -84458867
                      last_triggered_ts: 97076299
                      name: id mollit commodo
                      status: Alert
                    adipisicing_8:
                      last_nodata_ts: -58086015
                      last_notified_ts: -22268177
                      last_resolved_ts: -43962499
                      last_triggered_ts: -58469500
                      name: quis
                      status: Alert
                tags:
                  - dolor exercitation Lorem veniam
                  - eu cupidat
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/monitor/{monitor_id}/validate:
    post:
      tags:
        - Existing
        - Monitors
        - Val
        - Validate
      summary: 'Validate An Existing Monitor '
      description: Validate the monitor provided in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                type: query alert
                query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                created: '1977-02-24T00:55:39.149Z'
                creator:
                  email: eu do sit ex
                  handle: aliquip cupidatat ut ut
                  name: aute anim esse mollit et
                deleted: '2005-10-04T10:03:03.282Z'
                id: -85100539
                matching_downtimes:
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                  - id: 1625
                    end: 1412792983
                    scope:
                      - env:staging
                    start: 1412792983
                message: nisi sed Ut
                modified: '1994-05-25T16:32:06.852Z'
                multi: true
                name: My monitor
                options:
                  aggregation:
                    group_by: host
                    metric: metrics.name
                    type: count
                  enable_logs_sample: false
                  enable_samples: false
                  escalation_message: sint aliquip
                  evaluation_delay: -32193217
                  group_retention_duration: sunt magna
                  groupby_simple_monitor: false
                  include_tags: true
                  min_failure_duration: 0
                  min_location_failed: 1
                  new_group_delay: -74956346
                  no_data_timeframe: 10290724
                  notification_preset_name: show_all
                  notify_audit: false
                  notify_by:
                    - laboris amet mollit
                    - 'laboris '
                  notify_no_data: false
                  on_missing_data: show_and_notify_no_data
                  renotify_interval: null
                  renotify_occurrences: 53731472
                  renotify_statuses:
                    - alert
                    - alert
                  require_full_window: false
                  scheduling_options:
                    custom_schedule:
                      recurrences:
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                        - rrule: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
                          start: '2023-08-31T16:30:00'
                          timezone: Europe/Paris
                    evaluation_window:
                      day_starts: '04:00'
                      hour_starts: 0
                      month_starts: 1
                  threshold_windows:
                    recovery_window: laborum dolor ut
                    trigger_window: occaecat veniam
                  thresholds:
                    critical: 52502101.190716386
                    critical_recovery: 33037203.80033295
                    ok: 14658043.747987643
                    unknown: 2305380.307081431
                    warning: 54314333.28059968
                    warning_recovery: 14656234.927481294
                  timeout_h: null
                  variables:
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: ullamco sunt
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: nulla ea aliquip
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                    - data_source: rum
                      compute:
                        aggregation: avg
                        interval: 60000
                        metric: '@duration'
                      name: query_errors
                      group_by:
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: sed dolor
                            order: desc
                        - facet: status
                          limit: 10
                          sort:
                            aggregation: avg
                            metric: veniam ullamco voluptate magna mollit
                            order: desc
                      indexes:
                        - days-3
                        - days-7
                      search:
                        query: service:query
                overall_state: Warn
                priority: 2
                restricted_roles:
                  - Lorem exercitation
                  - sunt consectetur Excepteur
                state:
                  groups:
                    idd:
                      last_nodata_ts: -84384069
                      last_notified_ts: -21864917
                      last_resolved_ts: -84458867
                      last_triggered_ts: 97076299
                      name: id mollit commodo
                      status: Alert
                    adipisicing_8:
                      last_nodata_ts: -58086015
                      last_notified_ts: -22268177
                      last_resolved_ts: -43962499
                      last_triggered_ts: -58469500
                      name: quis
                      status: Alert
                tags:
                  - dolor exercitation Lorem veniam
                  - eu cupidat
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: monitor_id
          in: path
          schema:
            type: integer
          required: true
          example: '666486743'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/monitor/policy/{policy_id}:
    get:
      tags:
        - Configurations
        - Monitors
        - Policies
      summary: 'Get A Monitor Configuration Policy '
      description: Get a monitor configuration policy by `policy_id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: policy_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    policy:
                      tag_key: datacenter
                      tag_key_required: true
                      valid_tag_values:
                        - prod
                        - staging
                    policy_type: tag
                  id: 00000000-0000-1234-0000-000000000000
                  type: monitor-config-policy
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Configurations
        - Edit
        - Monitors
        - Policies
      summary: 'Edit A Monitor Configuration Policy '
      description: Edit a monitor configuration policy.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: 00000000-0000-1234-0000-000000000000
                  type: monitor-config-policy
                  attributes:
                    policy_type: tag
                    policy:
                      tag_key: datacenter
                      tag_key_required: true
                      valid_tag_values:
                        - prod
                        - staging
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: policy_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    policy:
                      tag_key: datacenter
                      tag_key_required: true
                      valid_tag_values:
                        - prod
                        - staging
                    policy_type: tag
                  id: 00000000-0000-1234-0000-000000000000
                  type: monitor-config-policy
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Monitors
        - Policies
      summary: 'Delete A Monitor Configuration Policy '
      description: Delete a monitor configuration policy.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: policy_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/monitor/policy:
    get:
      tags:
        - Configurations
        - Monitors
        - Policies
      summary: 'Get All Monitor Configuration Policies '
      description: Get all monitor configuration policies.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      policy:
                        tag_key: datacenter
                        tag_key_required: true
                        valid_tag_values:
                          - prod
                          - staging
                      policy_type: tag
                    id: 00000000-0000-1234-0000-000000000000
                    type: monitor-config-policy
                  - attributes:
                      policy:
                        tag_key: datacenter
                        tag_key_required: true
                        valid_tag_values:
                          - prod
                          - staging
                      policy_type: tag
                    id: 00000000-0000-1234-0000-000000000000
                    type: monitor-config-policy
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Configurations
        - Monitors
        - Policies
      summary: 'Create A Monitor Configuration Policy '
      description: Create a monitor configuration policy.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: monitor-config-policy
                  attributes:
                    policy_type: tag
                    policy:
                      tag_key: datacenter
                      tag_key_required: true
                      valid_tag_values:
                        - prod
                        - staging
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    policy:
                      tag_key: datacenter
                      tag_key_required: true
                      valid_tag_values:
                        - prod
                        - staging
                    policy_type: tag
                  id: 00000000-0000-1234-0000-000000000000
                  type: monitor-config-policy
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/notebooks:
    post:
      tags:
        - Notebook
        - Notebooks
      summary: 'Create A Notebook '
      description: Create a notebook using the specified options.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    cells:
                      - attributes:
                          definition:
                            text: |-
                              ## Some test markdown

                              With some example content.
                            type: markdown
                        type: notebook_cells
                      - attributes:
                          definition:
                            requests:
                              - display_type: line
                                q: avg:system.load.1{*}
                                style:
                                  line_type: solid
                                  line_width: normal
                                  palette: dog_classic
                            show_legend: true
                            type: timeseries
                            yaxis:
                              scale: linear
                          graph_size: m
                          split_by:
                            keys: []
                            tags: []
                          time: null
                        type: notebook_cells
                    name: Example Notebook
                    time:
                      live_span: 1h
                  type: notebooks
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 123456
                  type: notebooks
                  attributes:
                    cells:
                      - id: abcd1234
                        type: notebook_cells
                        attributes:
                          definition:
                            type: markdown
                            text: |-
                              # Example Header 
                              example content
                      - id: abcd1234
                        type: notebook_cells
                        attributes:
                          definition:
                            type: markdown
                            text: |-
                              # Example Header 
                              example content
                    time:
                      live_span: 1h
                    name: Example Notebook
                    author:
                      created_at: '1953-03-28T11:41:14.995Z'
                      disabled: false
                      email: magna ut
                      handle: incididunt
                      icon: anim dolore reprehenderit
                      name: cupidatat
                      status: non aliqua incididunt et eu
                      title: et commodo sunt minim
                      verified: false
                    created: '2021-02-24T23:14:15.173964+00:00'
                    metadata:
                      is_template: false
                      take_snapshots: false
                      type: investigation
                    modified: '2021-02-24T23:15:23.274966+00:00'
                    status: published
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Notebooks
      summary: 'Get All Notebooks '
      description: >-
        Get all notebooks. This can also be used to search for notebooks with a
        particular `query` in the notebook

        `name` or author `handle`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 123456
                    type: notebooks
                    attributes:
                      name: Example Notebook
                      author:
                        created_at: '2011-12-12T10:52:03.592Z'
                        disabled: true
                        email: sunt sint Excepteur
                        handle: te
                        icon: cillum aliqua
                        name: in
                        status: est nisi la
                        title: officia tempor
                        verified: true
                      cells:
                        - id: abcd1234
                          type: notebook_cells
                          attributes:
                            definition:
                              type: markdown
                              text: |-
                                # Example Header 
                                example content
                        - id: abcd1234
                          type: notebook_cells
                          attributes:
                            definition:
                              type: markdown
                              text: |-
                                # Example Header 
                                example content
                      created: '2021-02-24T23:14:15.173964+00:00'
                      metadata:
                        is_template: false
                        take_snapshots: false
                        type: investigation
                      modified: '2021-02-24T23:15:23.274966+00:00'
                      status: published
                      time:
                        live_span: 1h
                  - id: 123456
                    type: notebooks
                    attributes:
                      name: Example Notebook
                      author:
                        created_at: '1956-06-22T11:49:27.925Z'
                        disabled: true
                        email: ut ullamco
                        handle: magna l
                        icon: dolor Lor
                        name: velit
                        status: mollit laboris ex
                        title: consequat eiusmod sit elit
                        verified: true
                      cells:
                        - id: abcd1234
                          type: notebook_cells
                          attributes:
                            definition:
                              type: markdown
                              text: |-
                                # Example Header 
                                example content
                        - id: abcd1234
                          type: notebook_cells
                          attributes:
                            definition:
                              type: markdown
                              text: |-
                                # Example Header 
                                example content
                      created: '2021-02-24T23:14:15.173964+00:00'
                      metadata:
                        is_template: false
                        take_snapshots: false
                        type: investigation
                      modified: '2021-02-24T23:15:23.274966+00:00'
                      status: published
                      time:
                        live_span: 1h
                meta:
                  page:
                    total_count: -13304344
                    total_filtered_count: 81448508
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/notebooks/{notebook_id}:
    delete:
      tags:
        - Notebook
        - Notebooks
      summary: 'Delete A Notebook '
      description: Delete a notebook using the specified ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: notebook_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Notebook
        - Notebooks
      summary: 'Update A Notebook '
      description: Update a notebook using the specified ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    cells:
                      - attributes:
                          definition:
                            text: |-
                              ## Some updated test markdown

                              With some example content.
                            type: markdown
                        type: notebook_cells
                      - attributes:
                          definition:
                            requests:
                              - display_type: bars
                                q: avg:system.load.1{*}
                                style:
                                  line_type: solid
                                  line_width: normal
                                  palette: warm
                            show_legend: true
                            type: timeseries
                            yaxis:
                              scale: linear
                          graph_size: m
                          split_by:
                            keys: []
                            tags: []
                          time: null
                        id: abcd1234
                        type: notebook_cells
                    name: Example Notebook
                    time:
                      live_span: 1h
                  type: notebooks
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: notebook_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 123456
                  type: notebooks
                  attributes:
                    cells:
                      - id: abcd1234
                        type: notebook_cells
                        attributes:
                          definition:
                            type: markdown
                            text: |-
                              # Example Header 
                              example content
                      - id: abcd1234
                        type: notebook_cells
                        attributes:
                          definition:
                            type: markdown
                            text: |-
                              # Example Header 
                              example content
                    time:
                      live_span: 1h
                    name: Example Notebook
                    author:
                      created_at: '1953-03-28T11:41:14.995Z'
                      disabled: false
                      email: magna ut
                      handle: incididunt
                      icon: anim dolore reprehenderit
                      name: cupidatat
                      status: non aliqua incididunt et eu
                      title: et commodo sunt minim
                      verified: false
                    created: '2021-02-24T23:14:15.173964+00:00'
                    metadata:
                      is_template: false
                      take_snapshots: false
                      type: investigation
                    modified: '2021-02-24T23:15:23.274966+00:00'
                    status: published
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Notebook
        - Notebooks
      summary: 'Get A Notebook '
      description: Get a notebook using the specified notebook ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: notebook_id
          in: path
          schema:
            type: number
          required: true
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 123456
                  type: notebooks
                  attributes:
                    cells:
                      - id: abcd1234
                        type: notebook_cells
                        attributes:
                          definition:
                            type: markdown
                            text: |-
                              # Example Header 
                              example content
                      - id: abcd1234
                        type: notebook_cells
                        attributes:
                          definition:
                            type: markdown
                            text: |-
                              # Example Header 
                              example content
                    time:
                      live_span: 1h
                    name: Example Notebook
                    author:
                      created_at: '1953-03-28T11:41:14.995Z'
                      disabled: false
                      email: magna ut
                      handle: incididunt
                      icon: anim dolore reprehenderit
                      name: cupidatat
                      status: non aliqua incididunt et eu
                      title: et commodo sunt minim
                      verified: false
                    created: '2021-02-24T23:14:15.173964+00:00'
                    metadata:
                      is_template: false
                      take_snapshots: false
                      type: investigation
                    modified: '2021-02-24T23:15:23.274966+00:00'
                    status: published
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/okta/accounts:
    get:
      tags:
        - Accounts
        - Integrations
        - Okta
      summary: 'List Okta Accounts '
      description: List Okta accounts.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      auth_method: oauth
                      domain: https://example.okta.com/
                      name: Okta-Prod
                      api_key: qui esse Lorem
                      client_id: do reprehenderit
                      client_secret: incididunt anim aute consequat sint
                    id: f749daaf-682e-4208-a38d-c9b43162c609
                    type: okta-accounts
                  - attributes:
                      auth_method: oauth
                      domain: https://example.okta.com/
                      name: Okta-Prod
                      api_key: non in officia eiusmod
                      client_id: velit eu occaecat dolore ut
                      client_secret: sed ex sunt culpa
                    id: f749daaf-682e-4208-a38d-c9b43162c609
                    type: okta-accounts
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Accounts
        - Integrations
        - Okta
      summary: 'Add Okta Account '
      description: Create an Okta account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    auth_method: oauth
                    domain: https://example.okta.com/
                    name: Okta-Prod
                    api_key: aute dolor magna labore
                    client_id: sunt
                    client_secret: amet labore est laboris l
                  type: okta-accounts
                  id: f749daaf-682e-4208-a38d-c9b43162c609
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    auth_method: oauth
                    domain: https://example.okta.com/
                    name: Okta-Prod
                    api_key: voluptate eius
                    client_id: voluptate
                    client_secret: minim ullamco exercitation anim ut
                  type: okta-accounts
                  id: f749daaf-682e-4208-a38d-c9b43162c609
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integrations/okta/accounts/{account_id}:
    get:
      tags:
        - Accounts
        - Integrations
        - Okta
      summary: 'Get Okta Account '
      description: Get an Okta account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    auth_method: oauth
                    domain: https://example.okta.com/
                    name: Okta-Prod
                    api_key: voluptate eius
                    client_id: voluptate
                    client_secret: minim ullamco exercitation anim ut
                  type: okta-accounts
                  id: f749daaf-682e-4208-a38d-c9b43162c609
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Accounts
        - Integrations
        - Okta
      summary: 'Update Okta Account '
      description: Update an Okta account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    auth_method: oauth
                    domain: https://dev-test.okta.com/
                    api_key: aliqua in eiusmod m
                    client_id: ad irure esse velit labore
                    client_secret: elit ea id ex reprehenderit
                  type: okta-accounts
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    auth_method: oauth
                    domain: https://example.okta.com/
                    name: Okta-Prod
                    api_key: voluptate eius
                    client_id: voluptate
                    client_secret: minim ullamco exercitation anim ut
                  type: okta-accounts
                  id: f749daaf-682e-4208-a38d-c9b43162c609
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Integrations
        - Okta
      summary: 'Delete Okta Account '
      description: Delete an Okta account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integration/opsgenie/services:
    get:
      tags:
        - Integrations
        - Objects
        - Opsgenie
        - Services
      summary: 'Get All Service Objects '
      description: Get a list of all services from the Datadog Opsgenie integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: 596da4af-0563-4097-90ff-07230c3f9db3
                    type: opsgenie-service
                    attributes:
                      custom_url: null
                      name: fake-opsgenie-service-name
                      region: us
                  - id: 596da4af-0563-4097-90ff-07230c3f9db3
                    type: opsgenie-service
                    attributes:
                      custom_url: null
                      name: fake-opsgenie-service-name
                      region: us
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Integrations
        - Objects
        - Opsgenie
        - Services
      summary: 'Create A New Service Object '
      description: Create a new service object in the Opsgenie integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: opsgenie-service
                  attributes:
                    name: fake-opsgenie-service-name
                    opsgenie_api_key: 00000000-0000-0000-0000-000000000000
                    region: us
                    custom_url: https://example.com
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 596da4af-0563-4097-90ff-07230c3f9db3
                  type: opsgenie-service
                  attributes:
                    custom_url: null
                    name: fake-opsgenie-service-name
                    region: us
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/integration/opsgenie/services/{integration_service_id}:
    get:
      tags:
        - Integrations
        - Objects
        - Opsgenie
        - Services
        - Single
      summary: 'Get A Single Service Object '
      description: Get a single service from the Datadog Opsgenie integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: integration_service_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 596da4af-0563-4097-90ff-07230c3f9db3
                  type: opsgenie-service
                  attributes:
                    custom_url: null
                    name: fake-opsgenie-service-name
                    region: us
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Integrations
        - Objects
        - Opsgenie
        - Services
        - Single
      summary: 'Update A Single Service Object '
      description: Update a single service object in the Datadog Opsgenie integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: 596da4af-0563-4097-90ff-07230c3f9db3
                  type: opsgenie-service
                  attributes:
                    custom_url: https://example.com
                    name: fake-opsgenie-service-name
                    opsgenie_api_key: 00000000-0000-0000-0000-000000000000
                    region: us
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: integration_service_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 596da4af-0563-4097-90ff-07230c3f9db3
                  type: opsgenie-service
                  attributes:
                    custom_url: null
                    name: fake-opsgenie-service-name
                    region: us
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Integrations
        - Objects
        - Opsgenie
        - Services
        - Single
      summary: 'Delete A Single Service Object '
      description: Delete a single service object in the Datadog Opsgenie integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: integration_service_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/org:
    post:
      tags:
        - Child
        - Organizations
      summary: 'Create A Child Organization '
      description: >-
        Create a child organization.


        This endpoint requires the

        [multi-organization
        account](https://docs.datadoghq.com/account_management/multi_organization/)

        feature and must be enabled by

        [contacting support](https://docs.datadoghq.com/help/).


        Once a new child organization is created, you can interact with it

        by using the `org.public_id`, `api_key.key`, and

        `application_key.hash` provided in the response.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: New child org
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                api_key:
                  created: '2019-08-02 15:31:07'
                  created_by: john@example.com
                  key: 1234512345123456abcabc912349abcd
                  name: example user
                application_key:
                  hash: 1234512345123459cda4eb9ced49a3d84fd0138c
                  name: example user
                  owner: example.com
                org:
                  created: '2019-09-26T17:28:28Z'
                  description: some description
                  name: New child org
                  public_id: abcdef12345
                  settings:
                    private_widget_share: false
                    saml:
                      enabled: false
                    saml_autocreate_access_role: ro
                    saml_autocreate_users_domains:
                      domains:
                        - example.com
                        - example.com
                      enabled: false
                    saml_can_be_enabled: false
                    saml_idp_endpoint: https://my.saml.endpoint
                    saml_idp_initiated_login:
                      enabled: false
                    saml_idp_metadata_uploaded: false
                    saml_login_url: https://my.saml.login.url
                    saml_strict_mode:
                      enabled: false
                  trial: false
                user:
                  access_role: ro
                  disabled: false
                  email: test@datadoghq.com
                  handle: test@datadoghq.com
                  icon: /path/to/matching/gravatar/icon
                  name: test user
                  verified: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Managed
        - Organizations
      summary: 'List Your Managed Organizations '
      description: This endpoint returns data on your top-level organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                orgs:
                  - created: '2019-09-26T17:28:28Z'
                    description: some description
                    name: New child org
                    public_id: abcdef12345
                    settings:
                      private_widget_share: false
                      saml:
                        enabled: false
                      saml_autocreate_access_role: ro
                      saml_autocreate_users_domains:
                        domains:
                          - example.com
                          - example.com
                        enabled: false
                      saml_can_be_enabled: false
                      saml_idp_endpoint: https://my.saml.endpoint
                      saml_idp_initiated_login:
                        enabled: false
                      saml_idp_metadata_uploaded: false
                      saml_login_url: https://my.saml.login.url
                      saml_strict_mode:
                        enabled: false
                    trial: false
                  - created: '2019-09-26T17:28:28Z'
                    description: some description
                    name: New child org
                    public_id: abcdef12345
                    settings:
                      private_widget_share: false
                      saml:
                        enabled: false
                      saml_autocreate_access_role: ro
                      saml_autocreate_users_domains:
                        domains:
                          - example.com
                          - example.com
                        enabled: false
                      saml_can_be_enabled: false
                      saml_idp_endpoint: https://my.saml.endpoint
                      saml_idp_initiated_login:
                        enabled: false
                      saml_idp_metadata_uploaded: false
                      saml_login_url: https://my.saml.login.url
                      saml_strict_mode:
                        enabled: false
                    trial: false
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/org/{public_id}:
    get:
      tags:
        - Information
        - Organizations
        - Public
      summary: 'Get Organization Information '
      description: Get organization information.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: abc123
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                org:
                  created: '2019-09-26T17:28:28Z'
                  description: some description
                  name: New child org
                  public_id: abcdef12345
                  settings:
                    private_widget_share: false
                    saml:
                      enabled: false
                    saml_autocreate_access_role: ro
                    saml_autocreate_users_domains:
                      domains:
                        - example.com
                        - example.com
                      enabled: false
                    saml_can_be_enabled: false
                    saml_idp_endpoint: https://my.saml.endpoint
                    saml_idp_initiated_login:
                      enabled: false
                    saml_idp_metadata_uploaded: false
                    saml_login_url: https://my.saml.login.url
                    saml_strict_mode:
                      enabled: false
                  trial: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Organizations
        - Public
      summary: 'Update Your Organization '
      description: Update your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                created: '2019-09-26T17:28:28Z'
                description: some description
                name: New child org
                public_id: abcdef12345
                settings:
                  private_widget_share: false
                  saml:
                    enabled: false
                  saml_autocreate_access_role: ro
                  saml_autocreate_users_domains:
                    domains:
                      - example.com
                      - example.com
                    enabled: false
                  saml_can_be_enabled: false
                  saml_idp_endpoint: https://my.saml.endpoint
                  saml_idp_initiated_login:
                    enabled: false
                  saml_idp_metadata_uploaded: false
                  saml_login_url: https://my.saml.login.url
                  saml_strict_mode:
                    enabled: false
                trial: false
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: abc123
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                org:
                  created: '2019-09-26T17:28:28Z'
                  description: some description
                  name: New child org
                  public_id: abcdef12345
                  settings:
                    private_widget_share: false
                    saml:
                      enabled: false
                    saml_autocreate_access_role: ro
                    saml_autocreate_users_domains:
                      domains:
                        - example.com
                        - example.com
                      enabled: false
                    saml_can_be_enabled: false
                    saml_idp_endpoint: https://my.saml.endpoint
                    saml_idp_initiated_login:
                      enabled: false
                    saml_idp_metadata_uploaded: false
                    saml_login_url: https://my.saml.login.url
                    saml_strict_mode:
                      enabled: false
                  trial: false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/saml_configurations/idp_metadata:
    post:
      tags:
        - Configurations
        - Metadata
        - Saml
        - Uploads
      summary: 'Upload Id P Metadata '
      description: >-
        Endpoint for uploading IdP metadata for SAML setup.


        Use this endpoint to upload or replace IdP metadata for SAML login
        configuration.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                idp_file:
                  type: string
                  description: The IdP metadata XML file
                  example: tempor fugiat amet
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/org/{public_id}/downgrade:
    post:
      tags:
        - Child
        - Downgrade
        - Organizations
        - Public
        - Spin off
      summary: 'Spin-off Child Organization '
      description: >-
        Only available for MSP customers. Removes a child organization from the
        hierarchy of the master organization and places the child organization
        on a 30-day trial.
      requestBody:
        content: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: abc123
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: labore ad commodo
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/pagerduty/configuration/services:
    post:
      tags:
        - Configurations
        - Integrations
        - Objects
        - Pagerduty
        - Services
      summary: 'Create A New Service Object '
      description: Create a new service object in the PagerDuty integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                service_name: ''
                service_key: ''
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                service_name: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/pagerduty/configuration/services/{service_name}:
    get:
      tags:
        - Configurations
        - Integrations
        - Names
        - Objects
        - Pagerduty
        - Services
        - Single
      summary: 'Get A Single Service Object '
      description: Get service name in the Datadog-PagerDuty integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                service_name: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Configurations
        - Integrations
        - Names
        - Objects
        - Pagerduty
        - Services
        - Single
      summary: 'Update A Single Service Object '
      description: Update a single service object in the Datadog-PagerDuty integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                service_key: ''
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Integrations
        - Names
        - Objects
        - Pagerduty
        - Services
        - Single
      summary: 'Delete A Single Service Object '
      description: Delete a single service object in the Datadog-PagerDuty integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/powerpacks:
    get:
      tags:
        - Powerpacks
      summary: 'Get All Powerpacks '
      description: Get a list of all powerpacks.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      group_widget:
                        definition:
                          widgets:
                            - definition:
                                content: example
                                type: note
                              layout:
                                height: 5
                                width: 10
                                x: 0
                                'y': 0
                          layout_type: ordered
                          type: group
                          show_title: true
                          title: Sample Powerpack
                        layout:
                          x: 0
                          'y': 0
                          width: 0
                          height: 0
                        live_span: 5m
                      name: Sample Powerpack
                      description: Powerpack for ABC
                      tags:
                        - tag:foo1
                      template_variables:
                        - defaults:
                            - '*'
                          name: test
                    id: labore elit qui Lorem
                    relationships:
                      author:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: powerpack
                  - attributes:
                      group_widget:
                        definition:
                          widgets:
                            - definition:
                                content: example
                                type: note
                              layout:
                                height: 5
                                width: 10
                                x: 0
                                'y': 0
                          layout_type: ordered
                          type: group
                          show_title: true
                          title: Sample Powerpack
                        layout:
                          x: 0
                          'y': 0
                          width: 0
                          height: 0
                        live_span: 5m
                      name: Sample Powerpack
                      description: Powerpack for ABC
                      tags:
                        - tag:foo1
                      template_variables:
                        - defaults:
                            - '*'
                          name: test
                    id: id dolore mollit nostrud
                    relationships:
                      author:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: powerpack
                included:
                  - attributes:
                      created_at: '1945-08-04T17:17:02.460Z'
                      disabled: true
                      email: sint cillum labore et nisi
                      handle: dolore qui sit
                      icon: sed
                      modified_at: '1963-02-04T22:26:01.153Z'
                      name: incididunt aliqua exercitation nulla
                      service_account: true
                      status: fugiat aliquip
                      title: sunt Lorem in in
                      verified: true
                    id: ut occaecat elit ea Ut
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2006-04-21T08:44:06.628Z'
                      disabled: false
                      email: adipisicing ad in esse
                      handle: magna esse eiusmod consectetur
                      icon: proident elit
                      modified_at: '1957-07-31T13:28:48.899Z'
                      name: in
                      service_account: true
                      status: eu anim quis velit ad
                      title: Ut sint
                      verified: true
                    id: dolor et nulla
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                links:
                  first: ullamco Duis et nisi
                  last: >-
                    https://app.datadoghq.com/api/v2/powerpacks?page[offset]=0&page[limit]=25
                  next: >-
                    https://app.datadoghq.com/api/v2/powerpacks?page[offset]=25&page[limit]=25
                  prev: ad
                  self: https://app.datadoghq.com/api/v2/powerpacks
                meta:
                  pagination:
                    first_offset: 7318215
                    last_offset: -64388293
                    limit: 56192801
                    next_offset: 35193708
                    offset: 1861722
                    prev_offset: 81475855
                    total: 53267914
                    type: veniam et officia occaecat dolore
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Powerpack
        - Powerpacks
      summary: 'Create A New Powerpack '
      description: Create a powerpack.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    group_widget:
                      definition:
                        widgets:
                          - definition:
                              content: example
                              type: note
                            layout:
                              height: 5
                              width: 10
                              x: 0
                              'y': 0
                        layout_type: ordered
                        type: group
                        show_title: true
                        title: Sample Powerpack
                      layout:
                        x: 0
                        'y': 0
                        width: 0
                        height: 0
                      live_span: 5m
                    name: Sample Powerpack
                    description: Powerpack for ABC
                    tags:
                      - tag:foo1
                    template_variables:
                      - defaults:
                          - '*'
                        name: test
                  id: cillum
                  relationships:
                    author:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: powerpack
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    group_widget:
                      definition:
                        widgets:
                          - definition:
                              content: example
                              type: note
                            layout:
                              height: 5
                              width: 10
                              x: 0
                              'y': 0
                        layout_type: ordered
                        type: group
                        show_title: true
                        title: Sample Powerpack
                      layout:
                        x: 0
                        'y': 0
                        width: 0
                        height: 0
                      live_span: 5m
                    name: Sample Powerpack
                    description: Powerpack for ABC
                    tags:
                      - tag:foo1
                    template_variables:
                      - defaults:
                          - '*'
                        name: test
                  id: in conse
                  relationships:
                    author:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: powerpack
                included:
                  - attributes:
                      created_at: '2008-08-22T13:04:00.288Z'
                      disabled: false
                      email: dolor anim
                      handle: ea culpa
                      icon: veniam Lorem
                      modified_at: '1955-07-19T10:55:30.782Z'
                      name: cupidatat officia fugiat
                      service_account: true
                      status: nulla Duis
                      title: ipsum
                      verified: false
                    id: enim consectetur dolore
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2002-08-21T05:57:54.208Z'
                      disabled: true
                      email: ullamco aliquip
                      handle: labore adipisicing sunt culpa
                      icon: do
                      modified_at: '1962-12-03T20:37:58.554Z'
                      name: in exercita
                      service_account: true
                      status: voluptate anim
                      title: adipisicing
                      verified: false
                    id: consectetur
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/powerpacks/{powerpack_id}:
    delete:
      tags:
        - Powerpack
        - Powerpacks
      summary: 'Delete A Powerpack '
      description: Delete a powerpack.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: powerpack_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Powerpack
        - Powerpacks
      summary: 'Get A Powerpack '
      description: Get a powerpack.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: powerpack_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    group_widget:
                      definition:
                        widgets:
                          - definition:
                              content: example
                              type: note
                            layout:
                              height: 5
                              width: 10
                              x: 0
                              'y': 0
                        layout_type: ordered
                        type: group
                        show_title: true
                        title: Sample Powerpack
                      layout:
                        x: 0
                        'y': 0
                        width: 0
                        height: 0
                      live_span: 5m
                    name: Sample Powerpack
                    description: Powerpack for ABC
                    tags:
                      - tag:foo1
                    template_variables:
                      - defaults:
                          - '*'
                        name: test
                  id: in conse
                  relationships:
                    author:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: powerpack
                included:
                  - attributes:
                      created_at: '2008-08-22T13:04:00.288Z'
                      disabled: false
                      email: dolor anim
                      handle: ea culpa
                      icon: veniam Lorem
                      modified_at: '1955-07-19T10:55:30.782Z'
                      name: cupidatat officia fugiat
                      service_account: true
                      status: nulla Duis
                      title: ipsum
                      verified: false
                    id: enim consectetur dolore
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2002-08-21T05:57:54.208Z'
                      disabled: true
                      email: ullamco aliquip
                      handle: labore adipisicing sunt culpa
                      icon: do
                      modified_at: '1962-12-03T20:37:58.554Z'
                      name: in exercita
                      service_account: true
                      status: voluptate anim
                      title: adipisicing
                      verified: false
                    id: consectetur
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Powerpack
        - Powerpacks
      summary: 'Update A Powerpack '
      description: Update a powerpack.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    group_widget:
                      definition:
                        widgets:
                          - definition:
                              content: example
                              type: note
                            layout:
                              height: 5
                              width: 10
                              x: 0
                              'y': 0
                        layout_type: ordered
                        type: group
                        show_title: true
                        title: Sample Powerpack
                      layout:
                        x: 0
                        'y': 0
                        width: 0
                        height: 0
                      live_span: 5m
                    name: Sample Powerpack
                    description: Powerpack for ABC
                    tags:
                      - tag:foo1
                    template_variables:
                      - defaults:
                          - '*'
                        name: test
                  id: cillum
                  relationships:
                    author:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: powerpack
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: powerpack_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    group_widget:
                      definition:
                        widgets:
                          - definition:
                              content: example
                              type: note
                            layout:
                              height: 5
                              width: 10
                              x: 0
                              'y': 0
                        layout_type: ordered
                        type: group
                        show_title: true
                        title: Sample Powerpack
                      layout:
                        x: 0
                        'y': 0
                        width: 0
                        height: 0
                      live_span: 5m
                    name: Sample Powerpack
                    description: Powerpack for ABC
                    tags:
                      - tag:foo1
                    template_variables:
                      - defaults:
                          - '*'
                        name: test
                  id: in conse
                  relationships:
                    author:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: powerpack
                included:
                  - attributes:
                      created_at: '2008-08-22T13:04:00.288Z'
                      disabled: false
                      email: dolor anim
                      handle: ea culpa
                      icon: veniam Lorem
                      modified_at: '1955-07-19T10:55:30.782Z'
                      name: cupidatat officia fugiat
                      service_account: true
                      status: nulla Duis
                      title: ipsum
                      verified: false
                    id: enim consectetur dolore
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2002-08-21T05:57:54.208Z'
                      disabled: true
                      email: ullamco aliquip
                      handle: labore adipisicing sunt culpa
                      icon: do
                      modified_at: '1962-12-03T20:37:58.554Z'
                      name: in exercita
                      service_account: true
                      status: voluptate anim
                      title: adipisicing
                      verified: false
                    id: consectetur
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/processes:
    get:
      tags:
        - Processes
      summary: 'Get All Processes '
      description: Get all processes for your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      cmdline: ut proident sint
                      host: adipisicing
                      pid: 78981866
                      ppid: 50790226
                      start: enim
                      tags:
                        - eiusmod sunt tempor
                        - consequat esse
                      timestamp: reprehenderit sint Du
                      user: magna
                    id: ullamco dolore magna
                    type: process
                  - attributes:
                      cmdline: dolore
                      host: tempor
                      pid: -98305511
                      ppid: 61940497
                      start: eu laborum eiusmod
                      tags:
                        - eu sint ex
                        - quis in
                      timestamp: in velit irure incididunt
                      user: dolore pariatur
                    id: reprehenderit proident
                    type: process
                meta:
                  page:
                    after: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd
                    size: 595
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/restriction_policy/{resource_id}:
    post:
      tags:
        - Policies
        - Resources
        - Restrictions
      summary: 'Update A Restriction Policy '
      description: |-
        Updates the restriction policy associated with a resource.

        #### Supported resources
        Restriction policies can be applied to the following resources:
        - Connections: `connection`
        - Dashboards: `dashboard`
        - Notebooks: `notebook`
        - Security Rules: `security-rule`
        - Service Level Objectives: `slo`

        #### Supported relations for resources
        Resource Type            | Supported Relations
        -------------------|--------------------------
        Connections              | `viewer`, `editor`, `resolver`
        Dashboards               | `viewer`, `editor`
        Notebooks                | `viewer`, `editor`
        Security Rules           | `viewer`, `editor`
        Service Level Objectives | `viewer`, `editor`
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: restriction_policy
                  id: dashboard:abc-def-ghi
                  attributes: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: resource_id
          in: path
          schema:
            type: string
          required: true
          example: dashboard:abc-def-ghi
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: restriction_policy
                  id: dashboard:abc-def-ghi
                  attributes: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Policies
        - Resources
        - Restrictions
      summary: 'Get A Restriction Policy '
      description: Retrieves the restriction policy associated with a specified resource.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: resource_id
          in: path
          schema:
            type: string
          required: true
          example: dashboard:abc-def-ghi
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: restriction_policy
                  id: dashboard:abc-def-ghi
                  attributes: {}
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Policies
        - Resources
        - Restrictions
      summary: 'Delete A Restriction Policy '
      description: Deletes the restriction policy associated with a specified resource.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: resource_id
          in: path
          schema:
            type: string
          required: true
          example: dashboard:abc-def-ghi
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/permissions:
    get:
      tags:
        - Permissions
      summary: 'List Permissions '
      description: Returns a list of all permissions, including name, description, and ID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: permissions
                    attributes:
                      created: '1972-03-11T01:22:33.040Z'
                      description: officia quis qui Excepteur
                      display_name: anim sint velit aute et
                      display_type: aliquip voluptate eu in
                      group_name: dolor cillum labore ma
                      name: culpa veniam
                      restricted: true
                    id: dolore occaecat laboris non
                  - type: permissions
                    attributes:
                      created: '2020-04-07T16:00:13.055Z'
                      description: Duis mollit occaecat
                      display_name: in dolor elit
                      display_type: 'sed '
                      group_name: ut dolore Lorem
                      name: nulla
                      restricted: true
                    id: commodo non labore
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/roles:
    get:
      tags:
        - Roles
      summary: 'List Roles '
      description: Returns all roles, including their names and their unique identifiers.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: roles
                    attributes:
                      created_at: '1968-09-18T01:31:40.786Z'
                      modified_at: '1945-02-17T17:16:27.246Z'
                      name: aliqua labore anim
                      user_count: 6399991
                    id: dolor nulla
                    relationships:
                      permissions:
                        data:
                          - id: cillum quis
                            type: permissions
                          - id: commodo est et mollit adipisicing
                            type: permissions
                  - type: roles
                    attributes:
                      created_at: '2023-08-22T23:11:33.485Z'
                      modified_at: '2017-08-19T12:50:37.782Z'
                      name: aliqua enim amet nulla
                      user_count: -83939923
                    id: consectetur non magna
                    relationships:
                      permissions:
                        data:
                          - id: amet nisi in
                            type: permissions
                          - id: in consequat deserunt nisi
                            type: permissions
                meta:
                  page:
                    total_count: 78520069
                    total_filtered_count: 88420530
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Roles
      summary: 'Create Role '
      description: Create a new role for your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: developers
                    created_at: '1994-02-12T16:59:27.016Z'
                    modified_at: '1983-03-19T17:56:16.965Z'
                  relationships:
                    permissions:
                      data:
                        - id: nisi consequat culpa ut
                          type: permissions
                        - id: tempor
                          type: permissions
                    users:
                      data: []
                  type: roles
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: roles
                  attributes:
                    name: developers
                    created_at: '1952-03-16T03:35:41.140Z'
                    modified_at: '1947-10-06T20:12:51.643Z'
                  id: tempor nulla reprehenderit consequat Duis
                  relationships:
                    permissions:
                      data:
                        - id: ipsum dolore voluptate
                          type: permissions
                        - id: incididunt sunt
                          type: permissions
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/roles/{role_id}:
    get:
      tags:
        - Roles
      summary: 'Get A Role '
      description: Get a role in the organization specified by the role’s `role_id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: roles
                  attributes:
                    created_at: '1970-01-14T09:57:50.131Z'
                    modified_at: '1945-05-16T00:07:56.329Z'
                    name: nostrud veniam
                    user_count: 77202812
                  id: aliquip ut pariatur ex
                  relationships:
                    permissions:
                      data:
                        - id: Duis ullamco ut reprehenderit culpa
                          type: permissions
                        - id: dolor sit
                          type: permissions
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Roles
      summary: 'Update A Role '
      description: >-
        Edit a role. Can only be used with application keys belonging to
        administrators.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    created_at: '1968-12-07T14:20:00.282Z'
                    modified_at: '2006-11-28T16:48:12.244Z'
                    name: in
                  type: roles
                  id: 00000000-0000-1111-0000-000000000000
                  relationships:
                    permissions:
                      data:
                        - id: nisi adipisicing sed anim
                          type: permissions
                        - id: sit magna
                          type: permissions
                    users:
                      data: []
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: roles
                  attributes:
                    created_at: '1979-01-17T07:00:05.940Z'
                    modified_at: '1958-11-03T02:21:34.716Z'
                    name: Ut anim elit nisi
                  id: occaecat
                  relationships:
                    permissions:
                      data:
                        - id: sed voluptate non labore
                          type: permissions
                        - id: in fugiat laborum
                          type: permissions
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Roles
      summary: 'Delete Role '
      description: Disables a role.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/roles/{role_id}/permissions:
    get:
      tags:
        - Permissions
        - Roles
      summary: 'List Permissions For A Role '
      description: Returns a list of all permissions for a single role.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: permissions
                    attributes:
                      created: '1972-03-11T01:22:33.040Z'
                      description: officia quis qui Excepteur
                      display_name: anim sint velit aute et
                      display_type: aliquip voluptate eu in
                      group_name: dolor cillum labore ma
                      name: culpa veniam
                      restricted: true
                    id: dolore occaecat laboris non
                  - type: permissions
                    attributes:
                      created: '2020-04-07T16:00:13.055Z'
                      description: Duis mollit occaecat
                      display_name: in dolor elit
                      display_type: 'sed '
                      group_name: ut dolore Lorem
                      name: nulla
                      restricted: true
                    id: commodo non labore
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Grants""
        - Permission
        - Permissions
        - Roles
      summary: 'Grant Permission To A Role '
      description: Adds a permission to a role.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: elit aliq
                  type: permissions
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: permissions
                    attributes:
                      created: '1972-03-11T01:22:33.040Z'
                      description: officia quis qui Excepteur
                      display_name: anim sint velit aute et
                      display_type: aliquip voluptate eu in
                      group_name: dolor cillum labore ma
                      name: culpa veniam
                      restricted: true
                    id: dolore occaecat laboris non
                  - type: permissions
                    attributes:
                      created: '2020-04-07T16:00:13.055Z'
                      description: Duis mollit occaecat
                      display_name: in dolor elit
                      display_type: 'sed '
                      group_name: ut dolore Lorem
                      name: nulla
                      restricted: true
                    id: commodo non labore
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Permission
        - Permissions
        - Revoke
        - Roles
      summary: 'Revoke Permission '
      description: Removes a permission from a role.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: permissions
                    attributes:
                      created: '1972-03-11T01:22:33.040Z'
                      description: officia quis qui Excepteur
                      display_name: anim sint velit aute et
                      display_type: aliquip voluptate eu in
                      group_name: dolor cillum labore ma
                      name: culpa veniam
                      restricted: true
                    id: dolore occaecat laboris non
                  - type: permissions
                    attributes:
                      created: '2020-04-07T16:00:13.055Z'
                      description: Duis mollit occaecat
                      display_name: in dolor elit
                      display_type: 'sed '
                      group_name: ut dolore Lorem
                      name: nulla
                      restricted: true
                    id: commodo non labore
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/roles/{role_id}/users:
    get:
      tags:
        - Roles
        - Users
      summary: 'Get All Users Of A Role '
      description: Gets all users of a role.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '2016-06-21T01:04:16.799Z'
                      disabled: true
                      email: laborum labore nulla
                      handle: sed anim ipsum
                      icon: elit nisi dolore Excepteur ut
                      modified_at: '1987-05-21T03:58:08.624Z'
                      name: Lorem
                      service_account: false
                      status: consequat Ut aliquip
                      title: aliqua tempor
                      verified: false
                    id: adipisicing Duis
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2019-02-23T06:01:44.457Z'
                      disabled: false
                      email: sint eiusmod Ut consequat
                      handle: occaecat ullamco incididunt eu
                      icon: Ut dolor
                      modified_at: '1946-04-15T11:31:03.027Z'
                      name: non id
                      service_account: true
                      status: Excepteur D
                      title: mollit in aute anim proident
                      verified: true
                    id: ei
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1957-02-12T18:48:25.171Z'
                      description: consequat in commodo adipisicing
                      disabled: true
                      modified_at: '2005-01-30T19:04:56.267Z'
                      name: consequat sit
                      public_id: tempor consequat proident
                      sharing: cillum proident incididunt
                      url: a
                    id: eiusmod ut Lorem fugiat
                  - type: orgs
                    attributes:
                      created_at: '2015-10-18T08:46:20.466Z'
                      description: in ut
                      disabled: true
                      modified_at: '1979-12-20T09:40:53.251Z'
                      name: mollit irure ad ipsum
                      public_id: dolor id
                      sharing: elit nulla
                      url: nisi in
                    id: deserunt amet
                meta:
                  page:
                    total_count: -17566972
                    total_filtered_count: 91760735
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Roles
        - Users
      summary: 'Add A User To A Role '
      description: Adds a user to a role.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: 00000000-0000-0000-2345-000000000000
                  type: users
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '2016-06-21T01:04:16.799Z'
                      disabled: true
                      email: laborum labore nulla
                      handle: sed anim ipsum
                      icon: elit nisi dolore Excepteur ut
                      modified_at: '1987-05-21T03:58:08.624Z'
                      name: Lorem
                      service_account: false
                      status: consequat Ut aliquip
                      title: aliqua tempor
                      verified: false
                    id: adipisicing Duis
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2019-02-23T06:01:44.457Z'
                      disabled: false
                      email: sint eiusmod Ut consequat
                      handle: occaecat ullamco incididunt eu
                      icon: Ut dolor
                      modified_at: '1946-04-15T11:31:03.027Z'
                      name: non id
                      service_account: true
                      status: Excepteur D
                      title: mollit in aute anim proident
                      verified: true
                    id: ei
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1957-02-12T18:48:25.171Z'
                      description: consequat in commodo adipisicing
                      disabled: true
                      modified_at: '2005-01-30T19:04:56.267Z'
                      name: consequat sit
                      public_id: tempor consequat proident
                      sharing: cillum proident incididunt
                      url: a
                    id: eiusmod ut Lorem fugiat
                  - type: orgs
                    attributes:
                      created_at: '2015-10-18T08:46:20.466Z'
                      description: in ut
                      disabled: true
                      modified_at: '1979-12-20T09:40:53.251Z'
                      name: mollit irure ad ipsum
                      public_id: dolor id
                      sharing: elit nulla
                      url: nisi in
                    id: deserunt amet
                meta:
                  page:
                    total_count: -17566972
                    total_filtered_count: 91760735
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Roles
        - Users
      summary: 'Remove A User From A Role '
      description: Removes a user from a role.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '2016-06-21T01:04:16.799Z'
                      disabled: true
                      email: laborum labore nulla
                      handle: sed anim ipsum
                      icon: elit nisi dolore Excepteur ut
                      modified_at: '1987-05-21T03:58:08.624Z'
                      name: Lorem
                      service_account: false
                      status: consequat Ut aliquip
                      title: aliqua tempor
                      verified: false
                    id: adipisicing Duis
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2019-02-23T06:01:44.457Z'
                      disabled: false
                      email: sint eiusmod Ut consequat
                      handle: occaecat ullamco incididunt eu
                      icon: Ut dolor
                      modified_at: '1946-04-15T11:31:03.027Z'
                      name: non id
                      service_account: true
                      status: Excepteur D
                      title: mollit in aute anim proident
                      verified: true
                    id: ei
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1957-02-12T18:48:25.171Z'
                      description: consequat in commodo adipisicing
                      disabled: true
                      modified_at: '2005-01-30T19:04:56.267Z'
                      name: consequat sit
                      public_id: tempor consequat proident
                      sharing: cillum proident incididunt
                      url: a
                    id: eiusmod ut Lorem fugiat
                  - type: orgs
                    attributes:
                      created_at: '2015-10-18T08:46:20.466Z'
                      description: in ut
                      disabled: true
                      modified_at: '1979-12-20T09:40:53.251Z'
                      name: mollit irure ad ipsum
                      public_id: dolor id
                      sharing: elit nulla
                      url: nisi in
                    id: deserunt amet
                meta:
                  page:
                    total_count: -17566972
                    total_filtered_count: 91760735
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/roles/{role_id}/clone:
    post:
      tags:
        - Clone
        - Cloning
        - Existing
        - Roles
      summary: 'Create A New Role By Cloning An Existing Role '
      description: Clone an existing role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: roles
                  attributes:
                    name: cloned-role
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: role_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  type: roles
                  attributes:
                    created_at: '1970-01-14T09:57:50.131Z'
                    modified_at: '1945-05-16T00:07:56.329Z'
                    name: nostrud veniam
                    user_count: 77202812
                  id: aliquip ut pariatur ex
                  relationships:
                    permissions:
                      data:
                        - id: Duis ullamco ut reprehenderit culpa
                          type: permissions
                        - id: dolor sit
                          type: permissions
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/rum/events/search:
    post:
      tags:
        - Events
        - RUM
        - Search
      summary: 'Search RUM Events '
      description: >-
        List endpoint returns RUM events that match a RUM search query.

        [Results are paginated][1].


        Use this endpoint to build complex RUM events filtering and search.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  from: now-15m
                  query: '@type:session AND @session.type:user'
                  to: now
                options:
                  time_offset: 20406456
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
                sort: '-timestamp'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: rum
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: rum
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/rum/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/rum/events:
    get:
      tags:
        - Events
        - RUM
      summary: 'Get A List Of RUM Events '
      description: >-
        List endpoint returns events that match a RUM search query.

        [Results are paginated][1].


        Use this endpoint to see your latest RUM events.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: rum
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      service: web-app
                      tags:
                        - team:A
                      timestamp: '2019-01-02T09:42:36.320Z'
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: rum
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/rum/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/rum/analytics/aggregate:
    post:
      tags:
        - Aggregate
        - Analytics
        - Events
        - RUM
      summary: 'Aggregate RUM Events '
      description: >-
        The API endpoint to aggregate RUM events into buckets of computed
        metrics and timeseries.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                compute:
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                  - aggregation: pc90
                    interval: 5m
                    metric: '@duration'
                    type: total
                filter:
                  from: now-15m
                  query: '@type:session AND @session.type:user'
                  to: now
                group_by:
                  - facet: '@view.time_spent'
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: nulla aute Ut dolor
                    sort:
                      aggregation: count
                      order: asc
                    total: true
                  - facet: '@view.time_spent'
                    histogram:
                      interval: 10
                      min: 50
                      max: 100
                    limit: 10
                    missing: minim
                    sort:
                      aggregation: count
                      order: asc
                    total: false
                options:
                  time_offset: 44886083
                  timezone: GMT
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  buckets:
                    - by:
                        '@session.type': user
                        '@type': view
                      computes:
                        Duis_e: ut reprehenderit et id occaecat
                        minim27: eiusmod sed
                    - by:
                        '@session.type': user
                        '@type': view
                      computes:
                        Duis_046: consectetur sed id
                        irure_a5: reprehenderit laborum sit
                        in_e2b: consequat cillum
                        commodo_f4c: mollit
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/rum/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/rum/applications/{id}:
    patch:
      tags:
        - Applications
        - RUM
      summary: 'Update A RUM Application '
      description: Update the RUM application with given ID in your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: abcd1234-0000-0000-abcd-1234abcd5678
                  type: rum_application_update
                  attributes:
                    name: updated_name_for_my_existing_rum_application
                    type: browser
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    application_id: abcd1234-0000-0000-abcd-1234abcd5678
                    client_token: abcd1234efgh5678ijkl90abcd1234efgh0
                    created_at: 1659479836169
                    created_by_handle: john.doe
                    name: my_rum_application
                    org_id: 999
                    type: browser
                    updated_at: 1659479836169
                    updated_by_handle: jane.doe
                    hash: dolor enim non
                    is_active: true
                  id: abcd1234-0000-0000-abcd-1234abcd5678
                  type: rum_application
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Applications
        - RUM
      summary: 'Get A RUM Application '
      description: Get the RUM application with given ID in your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    application_id: abcd1234-0000-0000-abcd-1234abcd5678
                    client_token: abcd1234efgh5678ijkl90abcd1234efgh0
                    created_at: 1659479836169
                    created_by_handle: john.doe
                    name: my_rum_application
                    org_id: 999
                    type: browser
                    updated_at: 1659479836169
                    updated_by_handle: jane.doe
                    hash: dolor enim non
                    is_active: true
                  id: abcd1234-0000-0000-abcd-1234abcd5678
                  type: rum_application
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Applications
        - RUM
      summary: 'Delete A RUM Application '
      description: Delete an existing RUM application in your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/rum/applications:
    post:
      tags:
        - Applications
        - RUM
      summary: 'Create A New RUM Application '
      description: Create a new RUM application in your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: my_new_rum_application
                    type: browser
                  type: rum_application_create
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    application_id: abcd1234-0000-0000-abcd-1234abcd5678
                    client_token: abcd1234efgh5678ijkl90abcd1234efgh0
                    created_at: 1659479836169
                    created_by_handle: john.doe
                    name: my_rum_application
                    org_id: 999
                    type: browser
                    updated_at: 1659479836169
                    updated_by_handle: jane.doe
                    hash: dolor enim non
                    is_active: true
                  id: abcd1234-0000-0000-abcd-1234abcd5678
                  type: rum_application
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Applications
        - RUM
      summary: 'List All The RUM Applications '
      description: List all the RUM applications in your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      application_id: abcd1234-0000-0000-abcd-1234abcd5678
                      created_at: 1659479836169
                      created_by_handle: john.doe
                      name: my_rum_application
                      org_id: 999
                      type: browser
                      updated_at: 1659479836169
                      updated_by_handle: jane.doe
                      hash: id
                      is_active: true
                    type: rum_application
                    id: abcd1234-0000-0000-abcd-1234abcd5678
                  - attributes:
                      application_id: abcd1234-0000-0000-abcd-1234abcd5678
                      created_at: 1659479836169
                      created_by_handle: john.doe
                      name: my_rum_application
                      org_id: 999
                      type: browser
                      updated_at: 1659479836169
                      updated_by_handle: jane.doe
                      hash: est ipsum Duis non irure
                      is_active: true
                    type: rum_application
                    id: abcd1234-0000-0000-abcd-1234abcd5678
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/configuration/suppressions:
    post:
      tags:
        - Configurations
        - Monitoring
        - Rules
        - Security
        - Suppressions
      summary: 'Create A Suppression Rule '
      description: Create a new suppression rule.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: suppressions
                  attributes:
                    name: Custom suppression
                    enabled: true
                    rule_query: type:log_detection source:cloudtrail
                    data_exclusion_query: source:cloudtrail account_id:12345
                    description: >-
                      This rule suppresses low-severity signals in staging
                      environments.
                    expiration_date: 1703187336000
                    suppression_query: env:staging status:low
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    creation_date: 63281172
                    creator:
                      handle: john.doe@datadoghq.com
                      name: John Doe
                    data_exclusion_query: source:cloudtrail account_id:12345
                    description: >-
                      This rule suppresses low-severity signals in staging
                      environments.
                    enabled: true
                    expiration_date: 1703187336000
                    name: Custom suppression
                    rule_query: type:log_detection source:cloudtrail
                    suppression_query: env:staging status:low
                    update_date: -72115631
                    updater:
                      handle: john.doe@datadoghq.com
                      name: John Doe
                    version: 42
                  id: 3dd-0uc-h1s
                  type: suppressions
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Configurations
        - Monitoring
        - Rules
        - Security
        - Suppressions
      summary: 'Get All Suppression Rules '
      description: Get the list of all suppression rules.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      creation_date: -38291780
                      creator:
                        handle: john.doe@datadoghq.com
                        name: John Doe
                      data_exclusion_query: source:cloudtrail account_id:12345
                      description: >-
                        This rule suppresses low-severity signals in staging
                        environments.
                      enabled: true
                      expiration_date: 1703187336000
                      name: Custom suppression
                      rule_query: type:log_detection source:cloudtrail
                      suppression_query: env:staging status:low
                      update_date: -43269466
                      updater:
                        handle: john.doe@datadoghq.com
                        name: John Doe
                      version: 42
                    id: 3dd-0uc-h1s
                    type: suppressions
                  - attributes:
                      creation_date: 62214863
                      creator:
                        handle: john.doe@datadoghq.com
                        name: John Doe
                      data_exclusion_query: source:cloudtrail account_id:12345
                      description: >-
                        This rule suppresses low-severity signals in staging
                        environments.
                      enabled: true
                      expiration_date: 1703187336000
                      name: Custom suppression
                      rule_query: type:log_detection source:cloudtrail
                      suppression_query: env:staging status:low
                      update_date: 56572904
                      updater:
                        handle: john.doe@datadoghq.com
                        name: John Doe
                      version: 42
                    id: 3dd-0uc-h1s
                    type: suppressions
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/configuration/suppressions/{suppression_id}:
    delete:
      tags:
        - Configurations
        - Monitoring
        - Rules
        - Security
        - Suppressions
      summary: 'Delete A Suppression Rule '
      description: Delete a specific suppression rule.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: suppression_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Configurations
        - Monitoring
        - Rules
        - Security
        - Suppressions
      summary: 'Get A Suppression Rule '
      description: Get the details of a specific suppression rule.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: suppression_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    creation_date: 63281172
                    creator:
                      handle: john.doe@datadoghq.com
                      name: John Doe
                    data_exclusion_query: source:cloudtrail account_id:12345
                    description: >-
                      This rule suppresses low-severity signals in staging
                      environments.
                    enabled: true
                    expiration_date: 1703187336000
                    name: Custom suppression
                    rule_query: type:log_detection source:cloudtrail
                    suppression_query: env:staging status:low
                    update_date: -72115631
                    updater:
                      handle: john.doe@datadoghq.com
                      name: John Doe
                    version: 42
                  id: 3dd-0uc-h1s
                  type: suppressions
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Configurations
        - Monitoring
        - Rules
        - Security
        - Suppressions
      summary: 'Update A Suppression Rule '
      description: Update a specific suppression rule.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: suppressions
                  attributes:
                    data_exclusion_query: source:cloudtrail account_id:12345
                    description: >-
                      This rule suppresses low-severity signals in staging
                      environments.
                    enabled: true
                    expiration_date: 1703187336000
                    name: Custom suppression
                    rule_query: type:log_detection source:cloudtrail
                    suppression_query: env:staging status:low
                    version: -47860080
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: suppression_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    creation_date: 63281172
                    creator:
                      handle: john.doe@datadoghq.com
                      name: John Doe
                    data_exclusion_query: source:cloudtrail account_id:12345
                    description: >-
                      This rule suppresses low-severity signals in staging
                      environments.
                    enabled: true
                    expiration_date: 1703187336000
                    name: Custom suppression
                    rule_query: type:log_detection source:cloudtrail
                    suppression_query: env:staging status:low
                    update_date: -72115631
                    updater:
                      handle: john.doe@datadoghq.com
                      name: John Doe
                    version: 42
                  id: 3dd-0uc-h1s
                  type: suppressions
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/security_analytics/signals/{signal_id}/add_to_incident:
    patch:
      tags:
        - Analytics
        - Ent
        - Inc
        - Incident
        - Security
        - Signals
      summary: 'Add A Security Signal To An Incident '
      description: >-
        Add a security signal to an incident. This makes it possible to search
        for signals by incident within the signal explorer and to view the
        signals on the incident timeline.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                incident_id: 2066
                add_to_signal_timeline: false
                version: -91301781
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: signal_id
          in: path
          schema:
            type: string
          required: true
          example: proident qui
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: ullamco pariatur qui
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/signals/{signal_id}/state:
    patch:
      tags:
        - Change
        - Monitoring
        - Security
        - Signals
        - States
        - Triage
      summary: 'Change The Triage State Of A Security Signal '
      description: Change the triage state of a security signal.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    state: open
                    archive_comment: occaecat dolore dolor
                    archive_reason: investigated_case_opened
                    version: 69132151
                  id:
                    description: The unique ID of the security signal.
                  type: signal_metadata
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: signal_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    assignee:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: magna dolore enim
                      icon: /path/to/matching/gravatar/icon
                      id: -81125027
                      name: exercitation sit nu
                    state: open
                    incident_ids:
                      - 2066
                      - 2066
                    archive_comment: enim velit dolor sunt
                    archive_comment_timestamp: 14076736
                    archive_comment_user:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: sunt commodo tempor
                      icon: /path/to/matching/gravatar/icon
                      id: 29939320
                      name: proident ut
                    archive_reason: testing_or_maintenance
                    state_update_timestamp: 26809301
                    state_update_user:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: Ut elit cillum
                      icon: /path/to/matching/gravatar/icon
                      id: 46596410
                      name: dolor aliqua laboris aute ut
                  id: 'dolore '
                  type: signal_metadata
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/rules:
    post:
      tags:
        - Detections
        - Monitoring
        - Rules
        - Security
      summary: 'Create A Detection Rule '
      description: Create a detection rule.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: My security monitoring rule.
                isEnabled: true
                queries: []
                options:
                  complianceRuleOptions:
                    complexRule: false
                    regoRule:
                      policy: |
                        package datadog

                        import data.datadog.output as dd_output
                        import future.keywords.contains
                        import future.keywords.if
                        import future.keywords.in

                        eval(resource) = "skip" if {
                          # Logic that evaluates to true if the resource should be skipped
                          true
                        } else = "pass" {
                          # Logic that evaluates to true if the resource is compliant
                          true
                        } else = "fail" {
                          # Logic that evaluates to true if the resource is not compliant
                          true
                        }

                        # This part remains unchanged for all rules
                        results contains result if {
                          some resource in input.resources[input.main_resource_type]
                          result := dd_output.format(resource, eval(resource))
                        }
                      resourceTypes:
                        - gcp_iam_service_account
                        - gcp_iam_policy
                    resourceType: aws_acm
                    qui__d: {}
                    in6de: {}
                    dolor8a: {}
                    esse_b2: {}
                  decreaseCriticalityBasedOnEnv: false
                  detectionMethod: threshold
                  evaluationWindow: 900
                  hardcodedEvaluatorType: log4shell
                  impossibleTravelOptions:
                    baselineUserLocations: true
                  keepAlive: 300
                  maxSignalDuration: 3600
                  newValueOptions:
                    forgetAfter: 7
                    learningDuration: 0
                    learningMethod: duration
                    learningThreshold: 0
                  thirdPartyRuleOptions:
                    defaultNotifications:
                      - Excepteur consectetur qui
                      - irure laborum
                    defaultStatus: critical
                    rootQueries:
                      - groupByFields:
                          - pariatur amet veniam sed
                          - consequat ex ullamc
                        query: source:cloudtrail
                      - groupByFields:
                          - ex cillum sit deserunt
                          - nostrud ut magna
                        query: source:cloudtrail
                    signalTitleTemplate: nisi in sint
                cases: []
                message: ''
                filters:
                  - action: suppress
                    query: elit
                  - action: suppress
                    query: reprehenderit ut qui
                hasExtendedTitle: true
                tags:
                  - env:prod
                  - team:security
                type: log_detection
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                cases:
                  - condition: est do re
                    name: ullamco incididunt ad labori
                    notifications:
                      - magna irure Duis
                      - et cillum elit
                    status: critical
                  - condition: in sint cul
                    name: ipsum et
                    notifications:
                      - laboris aliqua
                      - pariat
                    status: critical
                complianceSignalOptions:
                  defaultActivationStatus: true
                  defaultGroupByFields:
                    - ea et tempor esse Ut
                    - laboris dolor sed magna
                  userActivationStatus: true
                  userGroupByFields:
                    - dolore cillum dolore
                    - in commodo
                createdAt: 99398764
                creationAuthorId: -89063095
                defaultTags:
                  - security:attacks
                deprecationDate: 36206961
                filters:
                  - action: suppress
                    query: reprehenderit
                  - action: suppress
                    query: Ut consequat dolor velit irure
                hasExtendedTitle: false
                id: aliquip exercitation ci
                isDefault: false
                isDeleted: false
                isEnabled: false
                message: velit sed
                name: ad tempor dolore in
                options:
                  complianceRuleOptions:
                    complexRule: true
                    regoRule:
                      policy: |
                        package datadog

                        import data.datadog.output as dd_output
                        import future.keywords.contains
                        import future.keywords.if
                        import future.keywords.in

                        eval(resource) = "skip" if {
                          # Logic that evaluates to true if the resource should be skipped
                          true
                        } else = "pass" {
                          # Logic that evaluates to true if the resource is compliant
                          true
                        } else = "fail" {
                          # Logic that evaluates to true if the resource is not compliant
                          true
                        }

                        # This part remains unchanged for all rules
                        results contains result if {
                          some resource in input.resources[input.main_resource_type]
                          result := dd_output.format(resource, eval(resource))
                        }
                      resourceTypes:
                        - gcp_iam_service_account
                        - gcp_iam_policy
                    resourceType: aws_acm
                  decreaseCriticalityBasedOnEnv: false
                  detectionMethod: new_value
                  evaluationWindow: 60
                  hardcodedEvaluatorType: log4shell
                  impossibleTravelOptions:
                    baselineUserLocations: true
                  keepAlive: 900
                  maxSignalDuration: 0
                  newValueOptions:
                    forgetAfter: 21
                    learningDuration: 0
                    learningMethod: duration
                    learningThreshold: 0
                  thirdPartyRuleOptions:
                    defaultNotifications:
                      - pariatur proident nulla irure
                      - ut ea
                    defaultStatus: critical
                    rootQueries:
                      - groupByFields:
                          - est veniam
                          - id
                        query: source:cloudtrail
                      - groupByFields:
                          - laboris et commodo
                          - consequat elit et eiusmod aliqua
                        query: source:cloudtrail
                    signalTitleTemplate: ea
                queries:
                  - aggregation: cardinality
                    distinctFields:
                      - aliquip
                      - exercitation consectetur
                    groupByFields:
                      - consectetur sint
                      - minim adipi
                    hasOptionalGroupByFields: false
                    metric: culpa magna anim
                    metrics:
                      - velit amet ex
                      - eu nisi ex
                    name: exercitation commodo Lore
                    query: a > 3
                  - aggregation: cardinality
                    distinctFields:
                      - occaecat Excepteur et voluptate
                      - in sunt do
                    groupByFields:
                      - dolore deserunt quis
                      - in amet ea
                    hasOptionalGroupByFields: false
                    metric: labore eu
                    metrics:
                      - dolor fugiat deserunt
                      - deserunt magna si
                    name: commodo sed amet consectetur aliquip
                    query: a > 3
                tags:
                  - incididunt pariatur
                  - in fugiat cupidatat
                type: infrastructure_configuration
                updateAuthorId: -18426378
                version: -21596179
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Monitoring
        - Rules
        - Security
      summary: 'List Rules '
      description: List rules.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page[size]
          in: query
          schema:
            type: integer
          description: Size for a given page. The maximum allowed value is 100.
          example: '10'
        - name: page[number]
          in: query
          schema:
            type: integer
          description: Specific page number to return.
          example: '0'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - cases:
                      - condition: ut sunt nisi magna
                        name: nostrud cillum
                        notifications:
                          - Duis in minim cillum mollit
                          - ex do
                        status: critical
                      - condition: tempor in do voluptate
                        name: cillum ut
                        notifications:
                          - ad enim
                          - ad magna officia
                        status: critical
                    complianceSignalOptions:
                      defaultActivationStatus: true
                      defaultGroupByFields:
                        - culpa adipisicing nisi
                        - tempor fugiat nulla dolor amet
                      userActivationStatus: false
                      userGroupByFields:
                        - minim nostrud sit deserunt
                        - in laborum id nulla a
                    createdAt: 64336768
                    creationAuthorId: -41807389
                    defaultTags:
                      - security:attacks
                    deprecationDate: 60090627
                    filters:
                      - action: suppress
                        query: elit in ad
                      - action: require
                        query: magna quis
                    hasExtendedTitle: false
                    id: ea ipsum elit nulla
                    isDefault: true
                    isDeleted: true
                    isEnabled: false
                    message: aliquip magna officia
                    name: irure magna sint
                    options:
                      complianceRuleOptions:
                        complexRule: true
                        regoRule:
                          policy: |
                            package datadog

                            import data.datadog.output as dd_output
                            import future.keywords.contains
                            import future.keywords.if
                            import future.keywords.in

                            eval(resource) = "skip" if {
                              # Logic that evaluates to true if the resource should be skipped
                              true
                            } else = "pass" {
                              # Logic that evaluates to true if the resource is compliant
                              true
                            } else = "fail" {
                              # Logic that evaluates to true if the resource is not compliant
                              true
                            }

                            # This part remains unchanged for all rules
                            results contains result if {
                              some resource in input.resources[input.main_resource_type]
                              result := dd_output.format(resource, eval(resource))
                            }
                          resourceTypes:
                            - gcp_iam_service_account
                            - gcp_iam_policy
                        resourceType: aws_acm
                      decreaseCriticalityBasedOnEnv: false
                      detectionMethod: new_value
                      evaluationWindow: 900
                      hardcodedEvaluatorType: log4shell
                      impossibleTravelOptions:
                        baselineUserLocations: true
                      keepAlive: 600
                      maxSignalDuration: 7200
                      newValueOptions:
                        forgetAfter: 28
                        learningDuration: 0
                        learningMethod: duration
                        learningThreshold: 0
                      thirdPartyRuleOptions:
                        defaultNotifications:
                          - irure laborum labore sint
                          - commodo aliquip Duis
                        defaultStatus: critical
                        rootQueries:
                          - groupByFields:
                              - qui laboris
                              - Lorem consequat
                            query: source:cloudtrail
                          - groupByFields:
                              - sint quis velit
                              - pariatur magna
                            query: source:cloudtrail
                        signalTitleTemplate: enim quis
                    queries:
                      - aggregation: new_value
                        distinctFields:
                          - occaecat
                          - in eiusmod exercitation nulla
                        groupByFields:
                          - ipsum nostrud culpa
                          - nisi Ut laboris aliquip laborum
                        hasOptionalGroupByFields: false
                        metric: laboris tempor ipsum in ullamco
                        metrics:
                          - Duis laboris
                          - consequat ut
                        name: velit
                        query: a > 3
                      - aggregation: max
                        distinctFields:
                          - nostrud commodo exercitation
                          - esse reprehenderit
                        groupByFields:
                          - dolor deserunt
                          - in pariatur enim anim sed
                        hasOptionalGroupByFields: false
                        metric: nostrud
                        metrics:
                          - Lorem Ut elit eu
                          - qui cillum ea occaecat
                        name: ''
                        query: a > 3
                    tags:
                      - ut aliquip
                      - quis in labore
                    type: log_detection
                    updateAuthorId: -63506190
                    version: 56661783
                  - cases:
                      - condition: esse magna eiusmod laborum
                        name: adipisicing fugiat magna nostrud nulla
                        notifications:
                          - elit nostrud aliqua
                          - proident non
                        status: critical
                      - condition: eiusmod cupidatat qui ullamco
                        name: laborum enim exercitation amet
                        notifications:
                          - labore reprehenderit est dolor
                          - sed cupidatat
                        status: critical
                    complianceSignalOptions:
                      defaultActivationStatus: false
                      defaultGroupByFields:
                        - enim sint
                        - aliquip incididunt eu
                      userActivationStatus: false
                      userGroupByFields:
                        - officia
                        - ad Duis
                    createdAt: -43865276
                    creationAuthorId: 94316939
                    defaultTags:
                      - security:attacks
                    deprecationDate: -43963918
                    filters:
                      - action: require
                        query: adipisicing esse
                      - action: suppress
                        query: reprehenderit nisi
                    hasExtendedTitle: true
                    id: adipisicing commodo sint laboris qui
                    isDefault: false
                    isDeleted: false
                    isEnabled: false
                    message: reprehenderit ullamco sed in
                    name: veniam nostrud
                    options:
                      complianceRuleOptions:
                        complexRule: false
                        regoRule:
                          policy: |
                            package datadog

                            import data.datadog.output as dd_output
                            import future.keywords.contains
                            import future.keywords.if
                            import future.keywords.in

                            eval(resource) = "skip" if {
                              # Logic that evaluates to true if the resource should be skipped
                              true
                            } else = "pass" {
                              # Logic that evaluates to true if the resource is compliant
                              true
                            } else = "fail" {
                              # Logic that evaluates to true if the resource is not compliant
                              true
                            }

                            # This part remains unchanged for all rules
                            results contains result if {
                              some resource in input.resources[input.main_resource_type]
                              result := dd_output.format(resource, eval(resource))
                            }
                          resourceTypes:
                            - gcp_iam_service_account
                            - gcp_iam_policy
                        resourceType: aws_acm
                      decreaseCriticalityBasedOnEnv: false
                      detectionMethod: new_value
                      evaluationWindow: 600
                      hardcodedEvaluatorType: log4shell
                      impossibleTravelOptions:
                        baselineUserLocations: true
                      keepAlive: 600
                      maxSignalDuration: 3600
                      newValueOptions:
                        forgetAfter: 21
                        learningDuration: 0
                        learningMethod: duration
                        learningThreshold: 0
                      thirdPartyRuleOptions:
                        defaultNotifications:
                          - Duis exercitation occaecat
                          - ex tempor proident id
                        defaultStatus: critical
                        rootQueries:
                          - groupByFields:
                              - id
                              - ut nostrud adipisicing ullamco tempor
                            query: source:cloudtrail
                          - groupByFields:
                              - reprehenderit Duis
                              - voluptate labore amet consequat sed
                            query: source:cloudtrail
                        signalTitleTemplate: reprehenderit cupidatat nisi
                    queries:
                      - aggregation: none
                        distinctFields:
                          - ad reprehenderit aute amet
                          - reprehenderit esse
                        groupByFields:
                          - commodo et ex occaecat
                          - 'exercitation veniam cupidatat dolore '
                        hasOptionalGroupByFields: false
                        metric: dolore magna sit
                        metrics:
                          - ex magna Excepteur
                          - reprehenderit
                        name: dolor tempor irure
                        query: a > 3
                      - aggregation: geo_data
                        distinctFields:
                          - deserunt fugiat culpa aliqu
                          - 'in aliquip reprehenderit id '
                        groupByFields:
                          - consequat sunt Lorem labore
                          - culpa in velit deserunt
                        hasOptionalGroupByFields: false
                        metric: nisi
                        metrics:
                          - exercitation in U
                          - ''
                        name: 'anim Duis '
                        query: a > 3
                    tags:
                      - adipisicing id velit esse consequat
                      - dolore
                    type: log_detection
                    updateAuthorId: -57160072
                    version: -98312975
                meta:
                  page:
                    total_count: 5242165
                    total_filtered_count: -13026220
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/rules/{rule_id}:
    get:
      tags:
        - Details
        - Monitoring
        - Rule's
        - Rules
        - Security
      summary: 'Get A Rule''s Details '
      description: Get a rule's details.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rule_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                cases:
                  - condition: est do re
                    name: ullamco incididunt ad labori
                    notifications:
                      - magna irure Duis
                      - et cillum elit
                    status: critical
                  - condition: in sint cul
                    name: ipsum et
                    notifications:
                      - laboris aliqua
                      - pariat
                    status: critical
                complianceSignalOptions:
                  defaultActivationStatus: true
                  defaultGroupByFields:
                    - ea et tempor esse Ut
                    - laboris dolor sed magna
                  userActivationStatus: true
                  userGroupByFields:
                    - dolore cillum dolore
                    - in commodo
                createdAt: 99398764
                creationAuthorId: -89063095
                defaultTags:
                  - security:attacks
                deprecationDate: 36206961
                filters:
                  - action: suppress
                    query: reprehenderit
                  - action: suppress
                    query: Ut consequat dolor velit irure
                hasExtendedTitle: false
                id: aliquip exercitation ci
                isDefault: false
                isDeleted: false
                isEnabled: false
                message: velit sed
                name: ad tempor dolore in
                options:
                  complianceRuleOptions:
                    complexRule: true
                    regoRule:
                      policy: |
                        package datadog

                        import data.datadog.output as dd_output
                        import future.keywords.contains
                        import future.keywords.if
                        import future.keywords.in

                        eval(resource) = "skip" if {
                          # Logic that evaluates to true if the resource should be skipped
                          true
                        } else = "pass" {
                          # Logic that evaluates to true if the resource is compliant
                          true
                        } else = "fail" {
                          # Logic that evaluates to true if the resource is not compliant
                          true
                        }

                        # This part remains unchanged for all rules
                        results contains result if {
                          some resource in input.resources[input.main_resource_type]
                          result := dd_output.format(resource, eval(resource))
                        }
                      resourceTypes:
                        - gcp_iam_service_account
                        - gcp_iam_policy
                    resourceType: aws_acm
                  decreaseCriticalityBasedOnEnv: false
                  detectionMethod: new_value
                  evaluationWindow: 60
                  hardcodedEvaluatorType: log4shell
                  impossibleTravelOptions:
                    baselineUserLocations: true
                  keepAlive: 900
                  maxSignalDuration: 0
                  newValueOptions:
                    forgetAfter: 21
                    learningDuration: 0
                    learningMethod: duration
                    learningThreshold: 0
                  thirdPartyRuleOptions:
                    defaultNotifications:
                      - pariatur proident nulla irure
                      - ut ea
                    defaultStatus: critical
                    rootQueries:
                      - groupByFields:
                          - est veniam
                          - id
                        query: source:cloudtrail
                      - groupByFields:
                          - laboris et commodo
                          - consequat elit et eiusmod aliqua
                        query: source:cloudtrail
                    signalTitleTemplate: ea
                queries:
                  - aggregation: cardinality
                    distinctFields:
                      - aliquip
                      - exercitation consectetur
                    groupByFields:
                      - consectetur sint
                      - minim adipi
                    hasOptionalGroupByFields: false
                    metric: culpa magna anim
                    metrics:
                      - velit amet ex
                      - eu nisi ex
                    name: exercitation commodo Lore
                    query: a > 3
                  - aggregation: cardinality
                    distinctFields:
                      - occaecat Excepteur et voluptate
                      - in sunt do
                    groupByFields:
                      - dolore deserunt quis
                      - in amet ea
                    hasOptionalGroupByFields: false
                    metric: labore eu
                    metrics:
                      - dolor fugiat deserunt
                      - deserunt magna si
                    name: commodo sed amet consectetur aliquip
                    query: a > 3
                tags:
                  - incididunt pariatur
                  - in fugiat cupidatat
                type: infrastructure_configuration
                updateAuthorId: -18426378
                version: -21596179
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Existing
        - Monitoring
        - Rules
        - Security
      summary: 'Update An Existing Rule '
      description: >-
        Update an existing rule. When updating `cases`, `queries` or `options`,
        the whole field

        must be included. For example, when modifying a query all queries must
        be included.

        Default rules can only be updated to be enabled, to change
        notifications, or to update

        the tags (default tags cannot be removed).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                cases:
                  - condition: ad
                    name: aliquip velit aute
                    notifications:
                      - cupidatat eu aute
                      - sint ex
                    status: critical
                  - condition: do
                    name: amet occaecat commodo laboris veniam
                    notifications:
                      - sit proident ex sunt
                      - aliqua amet
                    status: critical
                complianceSignalOptions:
                  defaultActivationStatus: true
                  defaultGroupByFields:
                    - proident sit
                    - enim pariatur ci
                  userActivationStatus: false
                  userGroupByFields:
                    - ipsum voluptate Ut tempor sunt
                    - culpa officia dolor
                filters:
                  - action: suppress
                    query: Ut ea
                  - action: suppress
                    query: ullamco exercitation
                hasExtendedTitle: true
                isEnabled: true
                message: laborum voluptate dolore pariatur
                name: ea sunt
                options:
                  complianceRuleOptions:
                    complexRule: false
                    regoRule:
                      policy: |
                        package datadog

                        import data.datadog.output as dd_output
                        import future.keywords.contains
                        import future.keywords.if
                        import future.keywords.in

                        eval(resource) = "skip" if {
                          # Logic that evaluates to true if the resource should be skipped
                          true
                        } else = "pass" {
                          # Logic that evaluates to true if the resource is compliant
                          true
                        } else = "fail" {
                          # Logic that evaluates to true if the resource is not compliant
                          true
                        }

                        # This part remains unchanged for all rules
                        results contains result if {
                          some resource in input.resources[input.main_resource_type]
                          result := dd_output.format(resource, eval(resource))
                        }
                      resourceTypes:
                        - gcp_iam_service_account
                        - gcp_iam_policy
                    resourceType: aws_acm
                  decreaseCriticalityBasedOnEnv: false
                  detectionMethod: new_value
                  evaluationWindow: 3600
                  hardcodedEvaluatorType: log4shell
                  impossibleTravelOptions:
                    baselineUserLocations: true
                  keepAlive: 60
                  maxSignalDuration: 43200
                  newValueOptions:
                    forgetAfter: 7
                    learningDuration: 0
                    learningMethod: duration
                    learningThreshold: 0
                  thirdPartyRuleOptions:
                    defaultNotifications:
                      - anim in
                      - incididunt laborum sin
                    defaultStatus: critical
                    rootQueries:
                      - groupByFields:
                          - velit
                          - ad anim
                        query: source:cloudtrail
                      - groupByFields:
                          - ex dolore
                          - 'cupidatat proident '
                        query: source:cloudtrail
                    signalTitleTemplate: irure velit minim ullamco
                queries:
                  - aggregation: new_value
                    distinctFields:
                      - velit exercit
                      - Excepteur laboris voluptate
                    groupByFields:
                      - velit commodo consequat
                      - sunt elit nostrud sit
                    hasOptionalGroupByFields: false
                    metric: nisi cillum
                    metrics:
                      - tempor e
                      - dolor exercitation
                    name: deserunt ea est ut
                    query: a > 3
                  - aggregation: count
                    distinctFields:
                      - consequat commodo sit elit
                      - tempor id
                    groupByFields:
                      - do
                      - non mollit in
                    hasOptionalGroupByFields: false
                    metric: venia
                    metrics:
                      - cupidatat magna nulla anim dolor
                      - laboris esse sint Lorem quis
                    name: dolor
                    query: a > 3
                tags:
                  - consequat
                  - et consequat enim ea
                version: 1
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rule_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                cases:
                  - condition: est do re
                    name: ullamco incididunt ad labori
                    notifications:
                      - magna irure Duis
                      - et cillum elit
                    status: critical
                  - condition: in sint cul
                    name: ipsum et
                    notifications:
                      - laboris aliqua
                      - pariat
                    status: critical
                complianceSignalOptions:
                  defaultActivationStatus: true
                  defaultGroupByFields:
                    - ea et tempor esse Ut
                    - laboris dolor sed magna
                  userActivationStatus: true
                  userGroupByFields:
                    - dolore cillum dolore
                    - in commodo
                createdAt: 99398764
                creationAuthorId: -89063095
                defaultTags:
                  - security:attacks
                deprecationDate: 36206961
                filters:
                  - action: suppress
                    query: reprehenderit
                  - action: suppress
                    query: Ut consequat dolor velit irure
                hasExtendedTitle: false
                id: aliquip exercitation ci
                isDefault: false
                isDeleted: false
                isEnabled: false
                message: velit sed
                name: ad tempor dolore in
                options:
                  complianceRuleOptions:
                    complexRule: true
                    regoRule:
                      policy: |
                        package datadog

                        import data.datadog.output as dd_output
                        import future.keywords.contains
                        import future.keywords.if
                        import future.keywords.in

                        eval(resource) = "skip" if {
                          # Logic that evaluates to true if the resource should be skipped
                          true
                        } else = "pass" {
                          # Logic that evaluates to true if the resource is compliant
                          true
                        } else = "fail" {
                          # Logic that evaluates to true if the resource is not compliant
                          true
                        }

                        # This part remains unchanged for all rules
                        results contains result if {
                          some resource in input.resources[input.main_resource_type]
                          result := dd_output.format(resource, eval(resource))
                        }
                      resourceTypes:
                        - gcp_iam_service_account
                        - gcp_iam_policy
                    resourceType: aws_acm
                  decreaseCriticalityBasedOnEnv: false
                  detectionMethod: new_value
                  evaluationWindow: 60
                  hardcodedEvaluatorType: log4shell
                  impossibleTravelOptions:
                    baselineUserLocations: true
                  keepAlive: 900
                  maxSignalDuration: 0
                  newValueOptions:
                    forgetAfter: 21
                    learningDuration: 0
                    learningMethod: duration
                    learningThreshold: 0
                  thirdPartyRuleOptions:
                    defaultNotifications:
                      - pariatur proident nulla irure
                      - ut ea
                    defaultStatus: critical
                    rootQueries:
                      - groupByFields:
                          - est veniam
                          - id
                        query: source:cloudtrail
                      - groupByFields:
                          - laboris et commodo
                          - consequat elit et eiusmod aliqua
                        query: source:cloudtrail
                    signalTitleTemplate: ea
                queries:
                  - aggregation: cardinality
                    distinctFields:
                      - aliquip
                      - exercitation consectetur
                    groupByFields:
                      - consectetur sint
                      - minim adipi
                    hasOptionalGroupByFields: false
                    metric: culpa magna anim
                    metrics:
                      - velit amet ex
                      - eu nisi ex
                    name: exercitation commodo Lore
                    query: a > 3
                  - aggregation: cardinality
                    distinctFields:
                      - occaecat Excepteur et voluptate
                      - in sunt do
                    groupByFields:
                      - dolore deserunt quis
                      - in amet ea
                    hasOptionalGroupByFields: false
                    metric: labore eu
                    metrics:
                      - dolor fugiat deserunt
                      - deserunt magna si
                    name: commodo sed amet consectetur aliquip
                    query: a > 3
                tags:
                  - incididunt pariatur
                  - in fugiat cupidatat
                type: infrastructure_configuration
                updateAuthorId: -18426378
                version: -21596179
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Existing
        - Monitoring
        - Rules
        - Security
      summary: 'Delete An Existing Rule '
      description: Delete an existing rule. Default rules cannot be deleted.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rule_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/signals/{signal_id}/assignee:
    patch:
      tags:
        - Assignee
        - Modify
        - Monitoring
        - Security
        - Signals
        - Triage
      summary: 'Modify The Triage Assignee Of A Security Signal '
      description: Modify the triage assignee of a security signal.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    assignee:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: aliqua do
                      icon: /path/to/matching/gravatar/icon
                      id: -6598387
                      name: Excepteur in ut ad
                    version: -57313406
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: signal_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    assignee:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: magna dolore enim
                      icon: /path/to/matching/gravatar/icon
                      id: -81125027
                      name: exercitation sit nu
                    state: open
                    incident_ids:
                      - 2066
                      - 2066
                    archive_comment: enim velit dolor sunt
                    archive_comment_timestamp: 14076736
                    archive_comment_user:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: sunt commodo tempor
                      icon: /path/to/matching/gravatar/icon
                      id: 29939320
                      name: proident ut
                    archive_reason: testing_or_maintenance
                    state_update_timestamp: 26809301
                    state_update_user:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: Ut elit cillum
                      icon: /path/to/matching/gravatar/icon
                      id: 46596410
                      name: dolor aliqua laboris aute ut
                  id: 'dolore '
                  type: signal_metadata
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/rules/{rule_id}/test:
    post:
      tags:
        - Existing
        - Monitoring
        - Rules
        - Security
        - Tests
      summary: 'Test An Existing Rule '
      description: Test an existing rule.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                rule:
                  name: My security monitoring rule.
                  isEnabled: true
                  queries: []
                  options:
                    complianceRuleOptions:
                      complexRule: false
                      regoRule:
                        policy: |
                          package datadog

                          import data.datadog.output as dd_output
                          import future.keywords.contains
                          import future.keywords.if
                          import future.keywords.in

                          eval(resource) = "skip" if {
                            # Logic that evaluates to true if the resource should be skipped
                            true
                          } else = "pass" {
                            # Logic that evaluates to true if the resource is compliant
                            true
                          } else = "fail" {
                            # Logic that evaluates to true if the resource is not compliant
                            true
                          }

                          # This part remains unchanged for all rules
                          results contains result if {
                            some resource in input.resources[input.main_resource_type]
                            result := dd_output.format(resource, eval(resource))
                          }
                        resourceTypes:
                          - gcp_iam_service_account
                          - gcp_iam_policy
                      resourceType: aws_acm
                      incididunt_d: {}
                      ea_e: {}
                    decreaseCriticalityBasedOnEnv: false
                    detectionMethod: new_value
                    evaluationWindow: 600
                    hardcodedEvaluatorType: log4shell
                    impossibleTravelOptions:
                      baselineUserLocations: true
                    keepAlive: 1800
                    maxSignalDuration: 43200
                    newValueOptions:
                      forgetAfter: 28
                      learningDuration: 0
                      learningMethod: duration
                      learningThreshold: 0
                    thirdPartyRuleOptions:
                      defaultNotifications:
                        - Duis ut laborum mollit
                        - sint nisi
                      defaultStatus: critical
                      rootQueries:
                        - groupByFields:
                            - in
                            - ut sint esse in
                          query: source:cloudtrail
                        - groupByFields:
                            - aliqua fugiat velit
                            - ut mollit in nostrud ullamco
                          query: source:cloudtrail
                      signalTitleTemplate: in mollit aute commodo
                  cases: []
                  message: ''
                  filters:
                    - action: suppress
                      query: est consequat minim cillum deserunt
                    - action: require
                      query: ex proident nisi
                  hasExtendedTitle: true
                  tags:
                    - env:prod
                    - team:security
                  type: log_detection
                ruleQueryPayloads:
                  - expectedResult: true
                    index: 0
                    payload:
                      ddsource: nginx
                      ddtags: env:staging,version:5.1
                      hostname: i-012345678
                      message: >-
                        2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                        World
                      service: payment
                      elit__: {}
                      magna0f: {}
                      deserunt9: {}
                  - expectedResult: true
                    index: 0
                    payload:
                      ddsource: nginx
                      ddtags: env:staging,version:5.1
                      hostname: i-012345678
                      message: >-
                        2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                        World
                      service: payment
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rule_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - false
                  - false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/rules/test:
    post:
      tags:
        - Monitoring
        - Rules
        - Security
        - Tests
      summary: 'Test A Rule '
      description: Test a rule.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                rule:
                  name: My security monitoring rule.
                  isEnabled: true
                  queries: []
                  options:
                    complianceRuleOptions:
                      complexRule: false
                      regoRule:
                        policy: |
                          package datadog

                          import data.datadog.output as dd_output
                          import future.keywords.contains
                          import future.keywords.if
                          import future.keywords.in

                          eval(resource) = "skip" if {
                            # Logic that evaluates to true if the resource should be skipped
                            true
                          } else = "pass" {
                            # Logic that evaluates to true if the resource is compliant
                            true
                          } else = "fail" {
                            # Logic that evaluates to true if the resource is not compliant
                            true
                          }

                          # This part remains unchanged for all rules
                          results contains result if {
                            some resource in input.resources[input.main_resource_type]
                            result := dd_output.format(resource, eval(resource))
                          }
                        resourceTypes:
                          - gcp_iam_service_account
                          - gcp_iam_policy
                      resourceType: aws_acm
                      incididunt_d: {}
                      ea_e: {}
                    decreaseCriticalityBasedOnEnv: false
                    detectionMethod: new_value
                    evaluationWindow: 600
                    hardcodedEvaluatorType: log4shell
                    impossibleTravelOptions:
                      baselineUserLocations: true
                    keepAlive: 1800
                    maxSignalDuration: 43200
                    newValueOptions:
                      forgetAfter: 28
                      learningDuration: 0
                      learningMethod: duration
                      learningThreshold: 0
                    thirdPartyRuleOptions:
                      defaultNotifications:
                        - Duis ut laborum mollit
                        - sint nisi
                      defaultStatus: critical
                      rootQueries:
                        - groupByFields:
                            - in
                            - ut sint esse in
                          query: source:cloudtrail
                        - groupByFields:
                            - aliqua fugiat velit
                            - ut mollit in nostrud ullamco
                          query: source:cloudtrail
                      signalTitleTemplate: in mollit aute commodo
                  cases: []
                  message: ''
                  filters:
                    - action: suppress
                      query: est consequat minim cillum deserunt
                    - action: require
                      query: ex proident nisi
                  hasExtendedTitle: true
                  tags:
                    - env:prod
                    - team:security
                  type: log_detection
                ruleQueryPayloads:
                  - expectedResult: true
                    index: 0
                    payload:
                      ddsource: nginx
                      ddtags: env:staging,version:5.1
                      hostname: i-012345678
                      message: >-
                        2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                        World
                      service: payment
                      elit__: {}
                      magna0f: {}
                      deserunt9: {}
                  - expectedResult: true
                    index: 0
                    payload:
                      ddsource: nginx
                      ddtags: env:staging,version:5.1
                      hostname: i-012345678
                      message: >-
                        2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                        World
                      service: payment
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - false
                  - false
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/rules/validation:
    post:
      tags:
        - Ation
        - Detections
        - Monitoring
        - Rules
        - Security
        - Val
        - Validate
      summary: 'Validate A Detection Rule '
      description: Validate a detection rule.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: My security monitoring rule.
                isEnabled: true
                queries: []
                options:
                  complianceRuleOptions:
                    complexRule: true
                    regoRule:
                      policy: |
                        package datadog

                        import data.datadog.output as dd_output
                        import future.keywords.contains
                        import future.keywords.if
                        import future.keywords.in

                        eval(resource) = "skip" if {
                          # Logic that evaluates to true if the resource should be skipped
                          true
                        } else = "pass" {
                          # Logic that evaluates to true if the resource is compliant
                          true
                        } else = "fail" {
                          # Logic that evaluates to true if the resource is not compliant
                          true
                        }

                        # This part remains unchanged for all rules
                        results contains result if {
                          some resource in input.resources[input.main_resource_type]
                          result := dd_output.format(resource, eval(resource))
                        }
                      resourceTypes:
                        - gcp_iam_service_account
                        - gcp_iam_policy
                    resourceType: aws_acm
                  decreaseCriticalityBasedOnEnv: false
                  detectionMethod: hardcoded
                  evaluationWindow: 7200
                  hardcodedEvaluatorType: log4shell
                  impossibleTravelOptions:
                    baselineUserLocations: true
                  keepAlive: 0
                  maxSignalDuration: 1800
                  newValueOptions:
                    forgetAfter: 14
                    learningDuration: 0
                    learningMethod: duration
                    learningThreshold: 0
                  thirdPartyRuleOptions:
                    defaultNotifications:
                      - Lo
                      - est ut sunt
                    defaultStatus: critical
                    rootQueries:
                      - groupByFields:
                          - non do Duis irure in
                          - velit dolore in
                        query: source:cloudtrail
                      - groupByFields:
                          - eiusmod labore nostrud
                          - aliqua enim adipisicing
                        query: source:cloudtrail
                    signalTitleTemplate: et
                cases: []
                message: ''
                filters:
                  - action: suppress
                    query: sunt
                  - action: require
                    query: qui culpa sunt et
                hasExtendedTitle: true
                tags:
                  - env:prod
                  - team:security
                type: workload_security
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/signals/{signal_id}/incidents:
    patch:
      tags:
        - Change
        - Ents
        - Inc
        - Incidents
        - Monitoring
        - Related
        - Security
        - Signals
      summary: 'Change The Related Incidents Of A Security Signal '
      description: Change the related incidents for a security signal.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    incident_ids:
                      - 2066
                      - 2066
                    version: 62332780
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: signal_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    assignee:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: magna dolore enim
                      icon: /path/to/matching/gravatar/icon
                      id: -81125027
                      name: exercitation sit nu
                    state: open
                    incident_ids:
                      - 2066
                      - 2066
                    archive_comment: enim velit dolor sunt
                    archive_comment_timestamp: 14076736
                    archive_comment_user:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: sunt commodo tempor
                      icon: /path/to/matching/gravatar/icon
                      id: 29939320
                      name: proident ut
                    archive_reason: testing_or_maintenance
                    state_update_timestamp: 26809301
                    state_update_user:
                      uuid: 773b045d-ccf8-4808-bd3b-955ef6a8c940
                      handle: Ut elit cillum
                      icon: /path/to/matching/gravatar/icon
                      id: 46596410
                      name: dolor aliqua laboris aute ut
                  id: 'dolore '
                  type: signal_metadata
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/signals/search:
    post:
      tags:
        - Monitoring
        - Search
        - Security
        - Signals
      summary: 'Get A List Of Security Signals '
      description: >-
        Returns security signals that match a search query.

        Both this endpoint and the GET endpoint can be used interchangeably for
        listing

        security signals.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                filter:
                  from: '2019-01-02T09:42:36.320Z'
                  query: security:attack status:high
                  to: '2019-01-03T09:42:36.320Z'
                page:
                  cursor: >-
                    eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  limit: 25
                sort: timestamp
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      custom:
                        workflow:
                          first_seen: '2020-06-23T14:46:01.000Z'
                          last_seen: '2020-06-23T14:46:49.000Z'
                          rule:
                            name: 'Brute Force Attack Grouped By User '
                            version: 12
                      message: >-
                        Detect Account Take Over (ATO) through brute force
                        attempts
                      tags:
                        - security:attack
                        - technique:T1110-brute-force
                      timestamp: '2019-01-02T09:42:36.320Z'
                      fugiat32: {}
                      nisi_ce5: {}
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: signal
                  - attributes:
                      custom:
                        workflow:
                          first_seen: '2020-06-23T14:46:01.000Z'
                          last_seen: '2020-06-23T14:46:49.000Z'
                          rule:
                            name: 'Brute Force Attack Grouped By User '
                            version: 12
                      message: >-
                        Detect Account Take Over (ATO) through brute force
                        attempts
                      tags:
                        - security:attack
                        - technique:T1110-brute-force
                      timestamp: '2019-01-02T09:42:36.320Z'
                      exercitation_a: {}
                      culpa09: {}
                      anim41: {}
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: signal
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/signals:
    get:
      tags:
        - Monitoring
        - Security
        - Signals
      summary: 'Get A Quick List Of Security Signals '
      description: >-
        The list endpoint returns security signals that match a search query.

        Both this endpoint and the POST endpoint can be used interchangeably
        when listing

        security signals.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: filter[query]
          in: query
          schema:
            type: string
          description: The search query for security signals.
          example: security:attack status:high
        - name: filter[from]
          in: query
          schema:
            type: string
          description: The minimum timestamp for requested security signals.
          example: '2019-01-02T09:42:36.320Z'
        - name: filter[to]
          in: query
          schema:
            type: string
          description: The maximum timestamp for requested security signals.
          example: '2019-01-03T09:42:36.320Z'
        - name: sort
          in: query
          schema:
            type: string
          description: The order of the security signals in results.
          example: timestamp
        - name: page[cursor]
          in: query
          schema:
            type: string
          description: A list of results using the cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        - name: page[limit]
          in: query
          schema:
            type: integer
          description: The maximum number of security signals in the response.
          example: '25'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      custom:
                        workflow:
                          first_seen: '2020-06-23T14:46:01.000Z'
                          last_seen: '2020-06-23T14:46:49.000Z'
                          rule:
                            name: 'Brute Force Attack Grouped By User '
                            version: 12
                      message: >-
                        Detect Account Take Over (ATO) through brute force
                        attempts
                      tags:
                        - security:attack
                        - technique:T1110-brute-force
                      timestamp: '2019-01-02T09:42:36.320Z'
                      fugiat32: {}
                      nisi_ce5: {}
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: signal
                  - attributes:
                      custom:
                        workflow:
                          first_seen: '2020-06-23T14:46:01.000Z'
                          last_seen: '2020-06-23T14:46:49.000Z'
                          rule:
                            name: 'Brute Force Attack Grouped By User '
                            version: 12
                      message: >-
                        Detect Account Take Over (ATO) through brute force
                        attempts
                      tags:
                        - security:attack
                        - technique:T1110-brute-force
                      timestamp: '2019-01-02T09:42:36.320Z'
                      exercitation_a: {}
                      culpa09: {}
                      anim41: {}
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: signal
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/signals/{signal_id}:
    get:
      tags:
        - Details
        - Monitoring
        - Security
        - Signal's
        - Signals
      summary: 'Get A Signal''s Details '
      description: Get a signal's details.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: signal_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    custom:
                      workflow:
                        first_seen: '2020-06-23T14:46:01.000Z'
                        last_seen: '2020-06-23T14:46:49.000Z'
                        rule:
                          name: 'Brute Force Attack Grouped By User '
                          version: 12
                    message: >-
                      Detect Account Take Over (ATO) through brute force
                      attempts
                    tags:
                      - security:attack
                      - technique:T1110-brute-force
                    timestamp: '2019-01-02T09:42:36.320Z'
                    nulla_19: {}
                  id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                  type: signal
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/configuration/security_filters/{security_filter_id}:
    delete:
      tags:
        - Configurations
        - Filter
        - Filters
        - Monitoring
        - Security
      summary: 'Delete A Security Filter '
      description: Delete a specific security filter.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: security_filter_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Configurations
        - Filter
        - Filters
        - Monitoring
        - Security
      summary: 'Update A Security Filter '
      description: |-
        Update a specific security filter.
        Returns the security filter object when the request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: security_filters
                  attributes:
                    filtered_data_type: logs
                    is_enabled: true
                    name: Custom security filter
                    query: service:api
                    version: 1
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: security_filter_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    exclusion_filters:
                      - name: Exclude staging
                        query: source:staging
                      - name: Exclude staging
                        query: source:staging
                    filtered_data_type: logs
                    is_builtin: false
                    is_enabled: false
                    name: Custom security filter
                    query: service:api
                    version: 1
                  id: 3dd-0uc-h1s
                  type: security_filters
                meta:
                  warning: >-
                    All the security filters are disabled. As a result, no logs
                    are being analyzed.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Configurations
        - Filter
        - Filters
        - Monitoring
        - Security
      summary: 'Get A Security Filter '
      description: >-
        Get the details of a specific security filter.


        See the [security filter
        guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)

        for more examples.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: security_filter_id
          in: path
          schema:
            type: string
          required: true
          example: labore
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    exclusion_filters:
                      - name: Exclude staging
                        query: source:staging
                      - name: Exclude staging
                        query: source:staging
                    filtered_data_type: logs
                    is_builtin: false
                    is_enabled: false
                    name: Custom security filter
                    query: service:api
                    version: 1
                  id: 3dd-0uc-h1s
                  type: security_filters
                meta:
                  warning: >-
                    All the security filters are disabled. As a result, no logs
                    are being analyzed.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/security_monitoring/configuration/security_filters:
    post:
      tags:
        - Configurations
        - Filter
        - Filters
        - Monitoring
        - Security
      summary: 'Create A Security Filter '
      description: >-
        Create a security filter.


        See the [security filter
        guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)

        for more examples.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: security_filters
                  attributes:
                    name: Custom security filter
                    query: service:api
                    exclusion_filters:
                      - name: Exclude staging
                        query: source:staging
                    filtered_data_type: logs
                    is_enabled: true
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    exclusion_filters:
                      - name: Exclude staging
                        query: source:staging
                      - name: Exclude staging
                        query: source:staging
                    filtered_data_type: logs
                    is_builtin: false
                    is_enabled: false
                    name: Custom security filter
                    query: service:api
                    version: 1
                  id: 3dd-0uc-h1s
                  type: security_filters
                meta:
                  warning: >-
                    All the security filters are disabled. As a result, no logs
                    are being analyzed.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Configurations
        - Filters
        - Monitoring
        - Security
      summary: 'Get All Security Filters '
      description: Get the list of configured security filters with their definitions.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      exclusion_filters:
                        - name: Exclude staging
                          query: source:staging
                        - name: Exclude staging
                          query: source:staging
                      filtered_data_type: logs
                      is_builtin: false
                      is_enabled: false
                      name: Custom security filter
                      query: service:api
                      version: 1
                    id: 3dd-0uc-h1s
                    type: security_filters
                  - attributes:
                      exclusion_filters:
                        - name: Exclude staging
                          query: source:staging
                        - name: Exclude staging
                          query: source:staging
                      filtered_data_type: logs
                      is_builtin: false
                      is_enabled: false
                      name: Custom security filter
                      query: service:api
                      version: 1
                    id: 3dd-0uc-h1s
                    type: security_filters
                meta:
                  warning: >-
                    All the security filters are disabled. As a result, no logs
                    are being analyzed.
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/sensitive-data-scanner/config:
    get:
      tags:
        - Configurations
        - Data
        - Groups
        - Scanner
        - Scanning
        - Sensitive
      summary: 'List Scanning Groups '
      description: List all the Scanning groups in your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    irureb1: {}
                    commodo_6bc: {}
                  id: commodo pariatur
                  relationships:
                    groups:
                      data:
                        - id: est et laborum
                          type: sensitive_data_scanner_group
                        - id: in ullamco sit Ut voluptate
                          type: sensitive_data_scanner_group
                  type: sensitive_data_scanner_configuration
                included:
                  - attributes:
                      description: mollit aliqua reprehenderit
                      excluded_namespaces:
                        - admin.name
                      included_keyword_configuration:
                        keywords:
                          - credit card
                          - cc
                        character_count: 30
                      is_enabled: true
                      name: dolor consequat tempor dolore proident
                      namespaces:
                        - admin
                      pattern: pariatur dolore eu dolor elit
                      priority: 2
                      tags:
                        - quis irure velit dolor enim
                        - officia cupidatat do in
                      text_replacement:
                        number_of_chars: 16726225
                        replacement_string: ut in
                        type: none
                    id: est in sint
                    relationships:
                      group:
                        data:
                          id: qui proident est
                          type: sensitive_data_scanner_group
                      standard_pattern:
                        data:
                          id: commodo cillum non fugiat
                          type: sensitive_data_scanner_standard_pattern
                    type: sensitive_data_scanner_rule
                  - attributes:
                      description: do Duis
                      excluded_namespaces:
                        - admin.name
                      included_keyword_configuration:
                        keywords:
                          - credit card
                          - cc
                        character_count: 30
                      is_enabled: true
                      name: in incididunt tempor sed ipsum
                      namespaces:
                        - admin
                      pattern: occaecat fugiat
                      priority: 2
                      tags:
                        - ipsum occaecat et dolore
                        - dolore non
                      text_replacement:
                        number_of_chars: 58503695
                        replacement_string: veniam ullamco
                        type: none
                    id: laborum
                    relationships:
                      group:
                        data:
                          id: volup
                          type: sensitive_data_scanner_group
                      standard_pattern:
                        data:
                          id: nisi ea est anim veniam
                          type: sensitive_data_scanner_standard_pattern
                    type: sensitive_data_scanner_rule
                meta:
                  count_limit: 80818795
                  group_count_limit: -86192166
                  has_highlight_enabled: true
                  has_multi_pass_enabled: false
                  is_pci_compliant: true
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Configurations
        - Data
        - Groups
        - Reorder
        - Scanner
        - Sensitive
      summary: 'Reorder Groups '
      description: Reorder the list of groups.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: ea sed
                  relationships:
                    groups:
                      data:
                        - id: sint
                          type: sensitive_data_scanner_group
                        - id: do
                          type: sensitive_data_scanner_group
                  type: sensitive_data_scanner_configuration
                meta:
                  version: 0
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meta:
                  count_limit: 33915655
                  group_count_limit: 64099811
                  has_highlight_enabled: true
                  has_multi_pass_enabled: true
                  is_pci_compliant: true
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/sensitive-data-scanner/config/standard-patterns:
    get:
      tags:
        - Configurations
        - Data
        - Patterns
        - Scanner
        - Sensitive
        - Standard
      summary: 'List Standard Patterns '
      description: Returns all standard patterns.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      description: esse qui dolor
                      included_keywords:
                        - consectetur irure cillum nisi
                        - est
                      name: id occaecat minim Duis ut
                      priority: 4
                      tags:
                        - ut veniam exercitation
                        - commodo ullamco
                    id: est Duis fugiat enim consequat
                    type: sensitive_data_scanner_standard_pattern
                  - attributes:
                      description: nisi dolore Ut
                      included_keywords:
                        - nostrud Excepteur dolor velit in
                        - Lorem nisi amet
                      name: aliqua
                      priority: 1
                      tags:
                        - id ex
                        - Excepte
                    id: elit Excepteur nisi
                    type: sensitive_data_scanner_standard_pattern
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/sensitive-data-scanner/config/groups:
    post:
      tags:
        - Configurations
        - Data
        - Groups
        - Scanner
        - Scanning
        - Sensitive
      summary: 'Create Scanning Group '
      description: >-
        Create a scanning group.

        The request MAY include a configuration relationship.

        A rules relationship can be omitted entirely, but if it is included it
        MUST be

        null or an empty array (rules cannot be created at the same time).

        The new group will be ordered last within the configuration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: sensitive_data_scanner_group
                  attributes:
                    description: aute volupta
                    filter:
                      query: nisi
                    is_enabled: false
                    name: non officia velit
                    product_list:
                      - logs
                      - logs
                  relationships:
                    configuration:
                      data:
                        id: dolor nisi culpa
                        type: sensitive_data_scanner_configuration
                    rules:
                      data:
                        - id: nostrud tempor
                          type: sensitive_data_scanner_rule
                        - id: eu sed dolore
                          type: sensitive_data_scanner_rule
                meta:
                  version: 0
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    description: tempor anim
                    filter:
                      query: voluptate consequat qui in
                    is_enabled: false
                    name: ut qui veniam
                    product_list:
                      - logs
                      - logs
                  id: exercitation ad sunt ut
                  relationships:
                    configuration:
                      data:
                        id: ut cillum
                        type: sensitive_data_scanner_configuration
                    rules:
                      data:
                        - id: incididunt deserunt ea
                          type: sensitive_data_scanner_rule
                        - id: culpa aute dolor i
                          type: sensitive_data_scanner_rule
                  type: sensitive_data_scanner_group
                meta:
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/sensitive-data-scanner/config/groups/{group_id}:
    patch:
      tags:
        - Configurations
        - Data
        - Groups
        - Scanner
        - Scanning
        - Sensitive
      summary: 'Update Scanning Group '
      description: >-
        Update a group, including the order of the rules.

        Rules within the group are reordered by including a rules relationship.
        If the rules

        relationship is present, its data section MUST contain linkages for all
        of the rules

        currently in the group, and MUST NOT contain any others.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    description: sunt magna de
                    filter:
                      query: commodo sit elit
                    is_enabled: false
                    name: deserunt
                    product_list:
                      - logs
                      - logs
                  id: adipisicing in occaecat enim
                  relationships:
                    configuration:
                      data:
                        id: cup
                        type: sensitive_data_scanner_configuration
                    rules:
                      data:
                        - id: sunt pariatur sed
                          type: sensitive_data_scanner_rule
                        - id: ex veniam
                          type: sensitive_data_scanner_rule
                  type: sensitive_data_scanner_group
                meta:
                  version: 0
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: group_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meta:
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Data
        - Groups
        - Scanner
        - Scanning
        - Sensitive
      summary: 'Delete Scanning Group '
      description: Delete a given group.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: group_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meta:
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/sensitive-data-scanner/config/rules:
    post:
      tags:
        - Configurations
        - Data
        - Rules
        - Scanner
        - Scanning
        - Sensitive
      summary: 'Create Scanning Rule '
      description: >-
        Create a scanning rule in a sensitive data scanner group, ordered last.

        The posted rule MUST include a group relationship.

        It MUST include either a standard_pattern relationship or a regex
        attribute, but not both.

        If included_attributes is empty or missing, we will scan all attributes
        except

        excluded_attributes. If both are missing, we will scan the whole event.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: sensitive_data_scanner_rule
                  attributes:
                    description: occaecat exercitation aute
                    excluded_namespaces:
                      - admin.name
                    included_keyword_configuration:
                      keywords:
                        - credit card
                        - cc
                      character_count: 30
                    is_enabled: false
                    name: aliqua veniam
                    namespaces:
                      - admin
                    pattern: est exercitation nisi mollit
                    priority: 3
                    tags:
                      - aute consequat
                      - eu nulla sit
                    text_replacement:
                      number_of_chars: 60483918
                      replacement_string: dolore ut enim
                      type: none
                  relationships:
                    group:
                      data:
                        id: et esse officia nulla aute
                        type: sensitive_data_scanner_group
                    standard_pattern:
                      data:
                        id: aliqua
                        type: sensitive_data_scanner_standard_pattern
                meta:
                  version: 0
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    description: dolor labore non Ut
                    excluded_namespaces:
                      - admin.name
                    included_keyword_configuration:
                      keywords:
                        - credit card
                        - cc
                      character_count: 30
                    is_enabled: true
                    name: consequat mollit pariatur dolore
                    namespaces:
                      - admin
                    pattern: commodo
                    priority: 2
                    tags:
                      - reprehenderit irur
                      - in aliqua
                    text_replacement:
                      number_of_chars: 30989080
                      replacement_string: elit proident officia dolore
                      type: none
                  id: et nulla aliquip dolore Ut
                  relationships:
                    group:
                      data:
                        id: cillum
                        type: sensitive_data_scanner_group
                    standard_pattern:
                      data:
                        id: velit Lorem consequat nisi
                        type: sensitive_data_scanner_standard_pattern
                  type: sensitive_data_scanner_rule
                meta:
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/sensitive-data-scanner/config/rules/{rule_id}:
    patch:
      tags:
        - Configurations
        - Data
        - Rules
        - Scanner
        - Scanning
        - Sensitive
      summary: 'Update Scanning Rule '
      description: >-
        Update a scanning rule.

        The request body MUST NOT include a standard_pattern relationship, as
        that relationship

        is non-editable. Trying to edit the regex attribute of a rule with a
        standard_pattern

        relationship will also result in an error.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    description: quis enim
                    excluded_namespaces:
                      - admin.name
                    included_keyword_configuration:
                      keywords:
                        - credit card
                        - cc
                      character_count: 30
                    is_enabled: false
                    name: incididunt
                    namespaces:
                      - admin
                    pattern: v
                    priority: 4
                    tags:
                      - elit dolor labore Excepteur deserunt
                      - incididunt mollit reprehenderit
                    text_replacement:
                      number_of_chars: 86464354
                      replacement_string: ipsum elit
                      type: none
                  id: ex esse sunt eiusmod Excepteur
                  relationships:
                    group:
                      data:
                        id: labore sed exercitation amet
                        type: sensitive_data_scanner_group
                    standard_pattern:
                      data:
                        id: sed anim Lorem ut in
                        type: sensitive_data_scanner_standard_pattern
                  type: sensitive_data_scanner_rule
                meta:
                  version: 0
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rule_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meta:
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Data
        - Rules
        - Scanner
        - Scanning
        - Sensitive
      summary: 'Delete Scanning Rule '
      description: Delete a given rule.
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: rule_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meta:
                  version: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/service_accounts:
    post:
      tags:
        - Accounts
        - Services
      summary: 'Create A Service Account '
      description: Create a service account for your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    email: jane.doe@example.com
                    service_account: true
                    name: non nisi labore
                    title: quis voluptate in aliqua
                  type: users
                  relationships:
                    roles:
                      data:
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2005-12-14T18:17:57.666Z'
                    disabled: false
                    email: quis nulla dolor ullamco
                    handle: magna aute Excepteur cillum qui
                    icon: 'eu occaecat anim '
                    modified_at: '1990-12-01T02:41:26.199Z'
                    name: voluptate Ut cillum minim
                    service_account: false
                    status: Duis pariatur
                    title: sunt irure et
                    verified: true
                  id: sit veniam velit ipsum dolore
                  relationships:
                    org:
                      data:
                        id: 00000000-0000-beef-0000-000000000000
                        type: orgs
                    other_orgs:
                      data: []
                    other_users:
                      data: []
                    roles:
                      data:
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                  type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1989-01-21T18:12:19.298Z'
                      description: culpa commodo adipisicing in
                      disabled: false
                      modified_at: '1951-10-29T07:06:58.474Z'
                      name: veniam in nisi cillum irure
                      public_id: Ut esse pariatur
                      sharing: nisi laborum ut aliqua
                      url: sint ea quis sit
                    id: ut exe
                  - type: orgs
                    attributes:
                      created_at: '1997-09-29T04:11:37.259Z'
                      description: ullamco mollit occaecat in anim
                      disabled: false
                      modified_at: '2020-02-24T20:19:57.938Z'
                      name: reprehenderit Ut dolore minim
                      public_id: do qui ad laborum
                      sharing: enim deserunt cillum
                      url: aliquip id
                    id: voluptate sunt ad incididunt
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/service_accounts/{service_account_id}/application_keys/{app_key_id}:
    get:
      tags:
        - Accounts
        - Applications
        - Keys
        - Services
      summary: 'Get One Application Key For This Service Account '
      description: Get an application key owned by this service account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_account_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: et ipsum conse
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2024-03-11T02:00:00.589Z'
                      disabled: false
                      email: Ut
                      handle: E
                      icon: Ut in nisi
                      modified_at: '1947-01-29T16:31:15.257Z'
                      name: consectetur cupidatat nulla sed
                      service_account: false
                      status: ullamco dolore minim
                      title: irure incididunt adipisicing ut
                      verified: false
                    id: voluptate aute et irure Excepteur
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1977-12-25T07:31:31.025Z'
                      disabled: false
                      email: officia est eu irure ut
                      handle: occaecat
                      icon: ex magna dolore in
                      modified_at: '1977-11-14T04:52:53.308Z'
                      name: Lo
                      service_account: false
                      status: consectetur in ut
                      title: fugiat aliqua
                      verified: false
                    id: ea voluptate nulla dolor
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Accounts
        - Applications
        - Edit
        - Keys
        - Services
      summary: 'Edit An Application Key For This Service Account '
      description: Edit an application key owned by this service account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: 00112233-4455-6677-8899-aabbccddeeff
                  type: application_keys
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_account_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: et ipsum conse
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2024-03-11T02:00:00.589Z'
                      disabled: false
                      email: Ut
                      handle: E
                      icon: Ut in nisi
                      modified_at: '1947-01-29T16:31:15.257Z'
                      name: consectetur cupidatat nulla sed
                      service_account: false
                      status: ullamco dolore minim
                      title: irure incididunt adipisicing ut
                      verified: false
                    id: voluptate aute et irure Excepteur
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1977-12-25T07:31:31.025Z'
                      disabled: false
                      email: officia est eu irure ut
                      handle: occaecat
                      icon: ex magna dolore in
                      modified_at: '1977-11-14T04:52:53.308Z'
                      name: Lo
                      service_account: false
                      status: consectetur in ut
                      title: fugiat aliqua
                      verified: false
                    id: ea voluptate nulla dolor
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Applications
        - Keys
        - Services
      summary: 'Delete An Application Key For This Service Account '
      description: Delete an application key owned by this service account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_account_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
        - name: app_key_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/service_accounts/{service_account_id}/application_keys:
    post:
      tags:
        - Accounts
        - Applications
        - Keys
        - Services
      summary: 'Create An Application Key For This Service Account '
      description: Create an application key for this service account.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  type: application_keys
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_account_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2020-11-23T10:00:00.000Z'
                    key: et ad cillum t
                    last4: abcd
                    name: Application Key for managing dashboards
                    scopes:
                      - dashboards_read
                      - dashboards_write
                      - dashboards_public_share
                  id: minim in ipsum mollit
                  relationships:
                    owned_by:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: application_keys
                included:
                  - attributes:
                      created_at: '2023-03-27T01:31:32.607Z'
                      disabled: true
                      email: in
                      handle: anim nostrud voluptate esse
                      icon: quis ea
                      modified_at: '1977-03-03T23:21:21.295Z'
                      name: eu dolore labore Duis nisi
                      service_account: false
                      status: exercitation dolor Excepteur
                      title: in enim esse quis consectetur
                      verified: false
                    id: est cupidatat mollit velit
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1944-12-10T14:07:03.278Z'
                      disabled: false
                      email: sed aliqua
                      handle: voluptate adipisicing dolor tempor
                      icon: cillum do mollit
                      modified_at: '1983-07-06T02:46:58.072Z'
                      name: culpa est
                      service_account: false
                      status: eiusmod do
                      title: nulla magna proident
                      verified: false
                    id: proident nisi occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Accounts
        - Applications
        - Keys
        - Services
      summary: 'List Application Keys For This Service Account '
      description: List all application keys available for this service account.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_account_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-1234-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      name: Application Key for managing dashboards
                      scopes:
                        - dashboards_read
                        - dashboards_write
                        - dashboards_public_share
                    id: nostrud
                    relationships:
                      owned_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: application_keys
                  - attributes:
                      created_at: '2020-11-23T10:00:00.000Z'
                      last4: abcd
                      name: Application Key for managing dashboards
                      scopes:
                        - dashboards_read
                        - dashboards_write
                        - dashboards_public_share
                    id: magna ut
                    relationships:
                      owned_by:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: application_keys
                included:
                  - attributes:
                      created_at: '1961-12-26T09:33:04.908Z'
                      disabled: false
                      email: eu ut dolore aute
                      handle: sunt anim veniam fugiat
                      icon: sunt fugiat Lorem adipisicing sit
                      modified_at: '2010-02-06T08:06:38.022Z'
                      name: mollit reprehenderit dolor cupidatat
                      service_account: false
                      status: incididunt esse
                      title: sed officia pariatur
                      verified: true
                    id: reprehenderit cillum adipisi
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1983-11-29T18:09:08.094Z'
                      disabled: false
                      email: Duis
                      handle: sunt ut do
                      icon: velit sit
                      modified_at: '1951-11-07T11:04:55.182Z'
                      name: qui labore
                      service_account: true
                      status: id aute velit dolor
                      title: et Excepteur
                      verified: true
                    id: in amet qui aute
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                meta:
                  max_allowed_per_user: -38029116
                  page:
                    total_filtered_count: 22366699
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/check_run:
    post:
      tags:
        - Checks
        - Runs
        - Services
        - Submit
      summary: 'Submit A Service Check '
      description: |-
        Submit a list of Service Checks.

        **Notes**:
        - A valid API key is required.
        - Service checks can be submitted up to 10 minutes in the past.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - check: app.ok
                  status: 0
                  tags:
                    - environment:test
                  host_name: app.host1
                  message: app is running
                  timestamp: -54803726
                - check: app.ok
                  status: 0
                  tags:
                    - environment:test
                  host_name: app.host1
                  message: app is running
                  timestamp: 16507355
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: text/json
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "status": "ok"
                }
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '408':
          description: Request Timeout
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '413':
          description: Request Entity Too Large
          headers:
            Content-Type:
              schema:
                type: string
                example: text/json
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "errors": [
                    "Bad Request",
                    "Bad Request"
                  ]
                }
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/services/definitions:
    get:
      tags:
        - Definitions
        - Services
      summary: 'Get All Service Definitions '
      description: Get a list of all service definitions from the Datadog Service Catalog.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      meta:
                        github-html-url: esse eiusmod
                        ingested-schema-version: Excepteur esse labore consectetur adipisicing
                        ingestion-source: esse aute quis do ea
                        last-modified-time: ipsum ut
                        origin: cupidatat deserunt exercitation
                        origin-detail: Ut culpa Lo
                        warnings:
                          - instance-location: laboris nostrud
                            keyword-location: enim quis commodo voluptate
                            message: qui
                          - instance-location: esse qui et dolore quis
                            keyword-location: est tempor sint Lorem
                            message: conse
                      schema:
                        schema-version: v1
                        info:
                          dd-service: myservice
                          description: A shopping cart service
                          display-name: My Service
                          service-tier: Tier 1
                        contact:
                          email: contact@datadoghq.com
                          slack: https://yourcompany.slack.com/archives/channel123
                        extensions:
                          myorg/extension: extensionValue
                        external-resources:
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                        integrations:
                          pagerduty: >-
                            https://my-org.pagerduty.com/service-directory/PMyService
                        org:
                          application: E-Commerce
                          team: my-team
                        tags:
                          - my:tag
                          - service:tag
                    id: elit officia do proident
                    type: sint adipisicing Excepteur laborum
                  - attributes:
                      meta:
                        github-html-url: eiusmod Excepteur cupidatat dolor
                        ingested-schema-version: consectetur adipisicing commodo i
                        ingestion-source: velit consectetur ut
                        last-modified-time: cillum sit exercitation
                        origin: pariatur sunt ut id
                        origin-detail: 'pariatur '
                        warnings:
                          - instance-location: anim
                            keyword-location: voluptate sit dolore
                            message: et nostrud tempor
                          - instance-location: sit adipisicing labore cupidatat
                            keyword-location: ipsum
                            message: Ut do veniam
                      schema:
                        schema-version: v1
                        info:
                          dd-service: myservice
                          description: A shopping cart service
                          display-name: My Service
                          service-tier: Tier 1
                        contact:
                          email: contact@datadoghq.com
                          slack: https://yourcompany.slack.com/archives/channel123
                        extensions:
                          myorg/extension: extensionValue
                        external-resources:
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                        integrations:
                          pagerduty: >-
                            https://my-org.pagerduty.com/service-directory/PMyService
                        org:
                          application: E-Commerce
                          team: my-team
                        tags:
                          - my:tag
                          - service:tag
                    id: qui ea in
                    type: minim et
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Definitions
        - Services
      summary: 'Create Or Update Service Definition '
      description: Create or update service definition in the Datadog Service Catalog.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                schema-version: v2.2
                dd-service: my-service
                application: my-app
                ci-pipeline-fingerprints:
                  - j88xdEy0J5lc
                  - eZ7LMljCk8vo
                contacts:
                  - type: slack
                    contact: https://teams.microsoft.com/myteam
                    name: My team channel
                  - type: slack
                    contact: https://teams.microsoft.com/myteam
                    name: My team channel
                description: My service description
                extensions:
                  myorg/extension: extensionValue
                integrations:
                  opsgenie:
                    service-url: >-
                      https://my-org.opsgenie.com/service/123e4567-e89b-12d3-a456-426614174000
                    region: US
                  pagerduty:
                    service-url: https://my-org.pagerduty.com/service-directory/PMyService
                languages:
                  - dotnet
                  - go
                  - java
                  - js
                  - php
                  - python
                  - ruby
                  - c++
                lifecycle: sandbox
                links:
                  - name: Runbook
                    type: runbook
                    url: https://my-runbook
                    provider: Github
                  - name: Runbook
                    type: runbook
                    url: https://my-runbook
                    provider: Github
                tags:
                  - my:tag
                  - service:tag
                team: my-team
                tier: High
                type: web
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      meta:
                        github-html-url: laborum proident ut exercitation reprehenderit
                        ingested-schema-version: velit laboris
                        ingestion-source: enim
                        last-modified-time: adipisicing do amet ipsum
                        origin: do
                        origin-detail: veniam
                        warnings:
                          - instance-location: sed nostrud
                            keyword-location: irure consectetur minim
                            message: Ut
                          - instance-location: culpa amet ullamco mollit
                            keyword-location: id ea Lorem
                            message: sed sit labore veniam ex
                      schema:
                        schema-version: v1
                        info:
                          dd-service: myservice
                          description: A shopping cart service
                          display-name: My Service
                          service-tier: Tier 1
                        contact:
                          email: contact@datadoghq.com
                          slack: https://yourcompany.slack.com/archives/channel123
                        extensions:
                          myorg/extension: extensionValue
                        external-resources:
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                        integrations:
                          pagerduty: >-
                            https://my-org.pagerduty.com/service-directory/PMyService
                        org:
                          application: E-Commerce
                          team: my-team
                        tags:
                          - my:tag
                          - service:tag
                    id: Ut proident anim
                    type: nostrud commodo
                  - attributes:
                      meta:
                        github-html-url: incididunt nostrud sin
                        ingested-schema-version: in
                        ingestion-source: commodo
                        last-modified-time: adipisicing qui e
                        origin: adipisicing
                        origin-detail: Ut proident
                        warnings:
                          - instance-location: exercitation ea veniam
                            keyword-location: adipisicing dolore amet
                            message: adipisicing enim sit ut
                          - instance-location: dolor Excepteur cillum non
                            keyword-location: elit
                            message: aute in ea est
                      schema:
                        schema-version: v1
                        info:
                          dd-service: myservice
                          description: A shopping cart service
                          display-name: My Service
                          service-tier: Tier 1
                        contact:
                          email: contact@datadoghq.com
                          slack: https://yourcompany.slack.com/archives/channel123
                        extensions:
                          myorg/extension: extensionValue
                        external-resources:
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                          - name: Runbook
                            type: runbook
                            url: https://my-runbook
                        integrations:
                          pagerduty: >-
                            https://my-org.pagerduty.com/service-directory/PMyService
                        org:
                          application: E-Commerce
                          team: my-team
                        tags:
                          - my:tag
                          - service:tag
                    id: dolor quis est ullamco ut
                    type: qui l
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/services/definitions/{service_name}:
    get:
      tags:
        - Definitions
        - Names
        - Services
        - Single
      summary: 'Get A Single Service Definition '
      description: Get a single service definition from the Datadog Service Catalog.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_name
          in: path
          schema:
            type: string
          required: true
          example: my-service
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    meta:
                      github-html-url: amet consequat
                      ingested-schema-version: eu qui voluptate quis
                      ingestion-source: ut deserunt
                      last-modified-time: cupidatat
                      origin: veniam ut
                      origin-detail: eu anim
                      warnings:
                        - instance-location: et commodo
                          keyword-location: officia dolor nostrud
                          message: sit laboris
                        - instance-location: ut sit in elit
                          keyword-location: laborum
                          message: Excepteur pariatur dolor nulla et
                    schema:
                      schema-version: v1
                      info:
                        dd-service: myservice
                        description: A shopping cart service
                        display-name: My Service
                        service-tier: Tier 1
                      contact:
                        email: contact@datadoghq.com
                        slack: https://yourcompany.slack.com/archives/channel123
                      extensions:
                        myorg/extension: extensionValue
                      external-resources:
                        - name: Runbook
                          type: runbook
                          url: https://my-runbook
                        - name: Runbook
                          type: runbook
                          url: https://my-runbook
                      integrations:
                        pagerduty: >-
                          https://my-org.pagerduty.com/service-directory/PMyService
                      org:
                        application: E-Commerce
                        team: my-team
                      tags:
                        - my:tag
                        - service:tag
                  id: non
                  type: labore sed
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Definitions
        - Names
        - Services
        - Single
      summary: 'Delete A Single Service Definition '
      description: Delete a single service definition in the Datadog Service Catalog.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: service_name
          in: path
          schema:
            type: string
          required: true
          example: my-service
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/correction:
    post:
      tags:
        - Correction
        - SLO
        - Slo
      summary: 'Create An SLO Correction '
      description: Create an SLO Correction.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: correction
                  attributes:
                    slo_id: sloId
                    start: 1600000000
                    category: Scheduled Maintenance
                    description: ex nisi dolor e
                    duration: 1600000000
                    end: 1600000000
                    rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                    timezone: UTC
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    category: Scheduled Maintenance
                    created_at: -42445941
                    creator:
                      email: esse proident voluptate
                      handle: est sunt
                      name: consequat
                    description: officia dolor cupidatat
                    duration: 3600
                    end: -21506349
                    modified_at: -30984020
                    modifier:
                      email: dolor cupidatat
                      handle: aute laboris irure officia
                      name: consequat
                    rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                    slo_id: nostrud
                    start: -28285922
                    timezone: in sunt sit non
                  id: Lorem voluptate mollit id
                  type: correction
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Correction
        - Corrections
        - SLO
        - Slo
      summary: 'Get All SLO Corrections '
      description: Get all Service Level Objective corrections.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      category: Scheduled Maintenance
                      created_at: -27032860
                      creator:
                        email: enim adipisicing pariatur minim
                        handle: esse quis sed
                        name: dolor cupidatat ea esse
                      description: officia laborum exercitation id elit
                      duration: 3600
                      end: 61700929
                      modified_at: -75100476
                      modifier:
                        email: proident dolor esse deserunt
                        handle: laboris ullamco magna
                        name: ea
                      rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                      slo_id: Lorem sed
                      start: 38728658
                      timezone: in anim
                    id: Excepteur proident adipisicing
                    type: correction
                  - attributes:
                      category: Scheduled Maintenance
                      created_at: -88094641
                      creator:
                        email: laboris sed nisi ut Duis
                        handle: sint aliquip reprehenderit dolore sunt
                        name: nostrud
                      description: nostrud irure minim
                      duration: 3600
                      end: 85057281
                      modified_at: -25234487
                      modifier:
                        email: consectetur consequat culpa
                        handle: Excepteur in nulla quis
                        name: cillum minim
                      rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                      slo_id: anim
                      start: 25833725
                      timezone: exercitation aliqua
                    id: cillum deserunt in commodo
                    type: correction
                meta:
                  page:
                    total_count: 65202090
                    total_filtered_count: -82732967
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/correction/{slo_correction_id}:
    get:
      tags:
        - Correction
        - SLO
        - Slo
      summary: 'Get An SLO Correction For An SLO '
      description: Get an SLO correction.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slo_correction_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    category: Scheduled Maintenance
                    created_at: -42445941
                    creator:
                      email: esse proident voluptate
                      handle: est sunt
                      name: consequat
                    description: officia dolor cupidatat
                    duration: 3600
                    end: -21506349
                    modified_at: -30984020
                    modifier:
                      email: dolor cupidatat
                      handle: aute laboris irure officia
                      name: consequat
                    rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                    slo_id: nostrud
                    start: -28285922
                    timezone: in sunt sit non
                  id: Lorem voluptate mollit id
                  type: correction
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Correction
        - SLO
        - Slo
      summary: 'Update An SLO Correction '
      description: Update the specified SLO correction object.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    category: Scheduled Maintenance
                    description: Ut incididunt
                    duration: 3600
                    end: 1600000000
                    rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                    start: 1600000000
                    timezone: UTC
                  type: correction
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slo_correction_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    category: Scheduled Maintenance
                    created_at: -42445941
                    creator:
                      email: esse proident voluptate
                      handle: est sunt
                      name: consequat
                    description: officia dolor cupidatat
                    duration: 3600
                    end: -21506349
                    modified_at: -30984020
                    modifier:
                      email: dolor cupidatat
                      handle: aute laboris irure officia
                      name: consequat
                    rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                    slo_id: nostrud
                    start: -28285922
                    timezone: in sunt sit non
                  id: Lorem voluptate mollit id
                  type: correction
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Correction
        - SLO
        - Slo
      summary: 'Delete An SLO Correction '
      description: Permanently delete the specified SLO correction object.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slo_correction_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo:
    post:
      tags:
        - Objects
        - SLO
        - Slo
      summary: 'Create An SLO Object '
      description: Create a service level objective object.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Custom Metric SLO
                thresholds:
                  - target: 95
                    timeframe: 7d
                  - target: 95
                    timeframe: 30d
                    warning: 97
                type: metric
                description: ea Duis sunt velit amet
                groups:
                  - env:prod
                  - role:mysql
                monitor_ids:
                  - -87227150
                  - -82478264
                query:
                  numerator: sum:my.custom.metric{type:good}.as_count()
                  denominator: sum:my.custom.metric{*}.as_count()
                sli_specification:
                  time_slice:
                    comparator: <
                    query:
                      formulas:
                        - formula: query2/query1
                      queries:
                        - data_source: metrics
                          name: query1
                          query: >-
                            sum:trace.servlet.request.hits{*} by
                            {env}.as_count()
                        - data_source: metrics
                          name: query1
                          query: >-
                            sum:trace.servlet.request.errors{*} by
                            {env}.as_count()
                    threshold: 5
                tags:
                  - env:prod
                  - app:core
                target_threshold: 99.9
                timeframe: 30d
                warning_threshold: 99.95
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - name: Custom Metric SLO
                    thresholds:
                      - target: 95
                        timeframe: 7d
                      - target: 95
                        timeframe: 30d
                        warning: 97
                    type: metric
                    created_at: -65283953
                    creator:
                      email: irure aliqua tem
                      handle: 'fugiat '
                      name: labore officia
                    description: ea
                    groups:
                      - env:prod
                      - role:mysql
                    id: exercitation esse anim
                    modified_at: 49740788
                    monitor_ids:
                      - -79804514
                      - -61079246
                    monitor_tags:
                      - do fugiat dolore ipsum
                      - eu pariatur do nulla
                    query:
                      numerator: sum:my.custom.metric{type:good}.as_count()
                      denominator: sum:my.custom.metric{*}.as_count()
                    sli_specification:
                      time_slice:
                        comparator: <
                        query:
                          formulas:
                            - formula: query2/query1
                          queries:
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.hits{*} by
                                {env}.as_count()
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.errors{*} by
                                {env}.as_count()
                        threshold: 5
                    tags:
                      - env:prod
                      - app:core
                    target_threshold: 99.9
                    timeframe: 30d
                    warning_threshold: 99.95
                  - name: Custom Metric SLO
                    thresholds:
                      - target: 95
                        timeframe: 7d
                      - target: 95
                        timeframe: 30d
                        warning: 97
                    type: metric
                    created_at: 74831822
                    creator:
                      email: Excepteur ut mollit do
                      handle: mollit offic
                      name: esse non sit sed
                    description: non ut irure occaecat Excepteur
                    groups:
                      - env:prod
                      - role:mysql
                    id: ipsum enim
                    modified_at: 37773724
                    monitor_ids:
                      - -50893227
                      - 91148165
                    monitor_tags:
                      - dolor ut reprehenderit eiusmod
                      - dolor ani
                    query:
                      numerator: sum:my.custom.metric{type:good}.as_count()
                      denominator: sum:my.custom.metric{*}.as_count()
                    sli_specification:
                      time_slice:
                        comparator: <
                        query:
                          formulas:
                            - formula: query2/query1
                          queries:
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.hits{*} by
                                {env}.as_count()
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.errors{*} by
                                {env}.as_count()
                        threshold: 5
                    tags:
                      - env:prod
                      - app:core
                    target_threshold: 99.9
                    timeframe: 30d
                    warning_threshold: 99.95
                errors:
                  - dolor
                  - consequat mollit pariatur dolor
                metadata:
                  page:
                    total_count: -48143109
                    total_filtered_count: 40213587
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - SLOs
        - Slo
      summary: 'Get All SLOs '
      description: Get a list of service level objective objects for your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ids
          in: query
          schema:
            type: string
          description: >-
            A comma separated list of the IDs of the service level objectives
            objects.
          example: id1, id2, id3
        - name: query
          in: query
          schema:
            type: string
          description: The query string to filter results based on SLO names.
          example: monitor
        - name: tags_query
          in: query
          schema:
            type: string
          description: The query string to filter results based on a single SLO tag.
          example: env:prod
        - name: metrics_query
          in: query
          schema:
            type: string
          description: >-
            The query string to filter results based on SLO numerator and
            denominator.
          example: aws.elb.request_count
        - name: limit
          in: query
          schema:
            type: integer
          description: The number of SLOs to return in the response.
          example: '1000'
        - name: offset
          in: query
          schema:
            type: integer
          description: >-
            The specific offset to use as the beginning of the returned
            response.
          example: '74288761'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - name: Custom Metric SLO
                    thresholds:
                      - target: 95
                        timeframe: 7d
                      - target: 95
                        timeframe: 30d
                        warning: 97
                    type: metric
                    created_at: -65283953
                    creator:
                      email: irure aliqua tem
                      handle: 'fugiat '
                      name: labore officia
                    description: ea
                    groups:
                      - env:prod
                      - role:mysql
                    id: exercitation esse anim
                    modified_at: 49740788
                    monitor_ids:
                      - -79804514
                      - -61079246
                    monitor_tags:
                      - do fugiat dolore ipsum
                      - eu pariatur do nulla
                    query:
                      numerator: sum:my.custom.metric{type:good}.as_count()
                      denominator: sum:my.custom.metric{*}.as_count()
                    sli_specification:
                      time_slice:
                        comparator: <
                        query:
                          formulas:
                            - formula: query2/query1
                          queries:
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.hits{*} by
                                {env}.as_count()
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.errors{*} by
                                {env}.as_count()
                        threshold: 5
                    tags:
                      - env:prod
                      - app:core
                    target_threshold: 99.9
                    timeframe: 30d
                    warning_threshold: 99.95
                  - name: Custom Metric SLO
                    thresholds:
                      - target: 95
                        timeframe: 7d
                      - target: 95
                        timeframe: 30d
                        warning: 97
                    type: metric
                    created_at: 74831822
                    creator:
                      email: Excepteur ut mollit do
                      handle: mollit offic
                      name: esse non sit sed
                    description: non ut irure occaecat Excepteur
                    groups:
                      - env:prod
                      - role:mysql
                    id: ipsum enim
                    modified_at: 37773724
                    monitor_ids:
                      - -50893227
                      - 91148165
                    monitor_tags:
                      - dolor ut reprehenderit eiusmod
                      - dolor ani
                    query:
                      numerator: sum:my.custom.metric{type:good}.as_count()
                      denominator: sum:my.custom.metric{*}.as_count()
                    sli_specification:
                      time_slice:
                        comparator: <
                        query:
                          formulas:
                            - formula: query2/query1
                          queries:
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.hits{*} by
                                {env}.as_count()
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.errors{*} by
                                {env}.as_count()
                        threshold: 5
                    tags:
                      - env:prod
                      - app:core
                    target_threshold: 99.9
                    timeframe: 30d
                    warning_threshold: 99.95
                errors:
                  - dolor
                  - consequat mollit pariatur dolor
                metadata:
                  page:
                    total_count: -48143109
                    total_filtered_count: 40213587
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/search:
    get:
      tags:
        - SLOs
        - Search
        - Slo
      summary: 'Search For SLOs '
      description: Get a list of service level objective objects for your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: query
          in: query
          schema:
            type: string
          description: |-
            The query string to filter results based on SLO names.
            Some examples of queries include `service:<service-name>`
            and `<slo-name>`.
          example: exercitation consequat
        - name: page[size]
          in: query
          schema:
            type: integer
          description: The number of files to return in the response `[default=10]`.
          example: '74288761'
        - name: page[number]
          in: query
          schema:
            type: integer
          description: >-
            The identifier of the first page to return. This parameter is used
            for the pagination feature `[default=0]`.
          example: '74288761'
        - name: include_facets
          in: query
          schema:
            type: boolean
          description: >-
            Whether or not to return facet information in the response
            `[default=false]`.
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    facets:
                      all_tags:
                        - count: -69822659
                          name: in ut est pariatur
                        - count: 67457798
                          name: eiusmod in nisi anim
                      creator_name:
                        - count: 56911086
                          name: culpa
                        - count: 84002238
                          name: deserunt commo
                      env_tags:
                        - count: -81316912
                          name: consectetur
                        - count: 23312871
                          name: proident in tempor labore
                      service_tags:
                        - count: 37206862
                          name: et ex dolore
                        - count: 72479271
                          name: ad cillum do
                      slo_type:
                        - count: -1310365
                          name: -93003560.89632805
                        - count: -55494619
                          name: 35654175.73565325
                      target:
                        - count: 99529022
                          name: 44248085.05196881
                        - count: -53775666
                          name: -37674031.5445514
                      team_tags:
                        - count: -97739029
                          name: 'reprehenderit '
                        - count: -8996443
                          name: reprehenderit veniam
                      timeframe:
                        - count: -53710484
                          name: Duis laboris quis ea
                        - count: -30523094
                          name: velit ad pariatur aliquip
                    slos:
                      - data:
                          attributes:
                            all_tags:
                              - env:prod
                              - app:core
                            created_at: 22319053
                            creator:
                              email: in ea enim labore
                              id: 37042979
                              name: tempor
                            description: ut et
                            env_tags:
                              - non
                              - nisi dolore deserunt
                            groups:
                              - env:prod
                              - role:mysql
                            modified_at: -78961869
                            monitor_ids:
                              - 35645776
                              - 57589705
                            name: Custom Metric SLO
                            overall_status:
                              - error: in fugiat
                                error_budget_remaining: 100
                                indexed_at: 1662496260
                                raw_error_budget_remaining:
                                  unit: requests
                                  value: 60
                                span_precision: 2
                                state: ok
                                status: 100
                                target: 99
                                timeframe: 30d
                              - error: consequat ipsum Ut cu
                                error_budget_remaining: 100
                                indexed_at: 1662496260
                                raw_error_budget_remaining:
                                  unit: requests
                                  value: 60
                                span_precision: 2
                                state: ok
                                status: 100
                                target: 99
                                timeframe: 30d
                            query:
                              denominator: sum:my.custom.metric{*}.as_count()
                              metrics:
                                - my.custom.metric
                                - my.other.custom.metric
                              numerator: sum:my.custom.metric{type:good}.as_count()
                            service_tags:
                              - nulla sed ut tempor
                              - aute labore
                            slo_type: metric
                            status:
                              calculation_error: ex sit laborum et
                              error_budget_remaining: 100
                              indexed_at: 1662496260
                              raw_error_budget_remaining:
                                unit: requests
                                value: 60
                              sli: 100
                              span_precision: 2
                              state: ok
                            team_tags:
                              - exercitation eu
                              - consectetur n
                            thresholds:
                              - target: 95
                                target_display: '95'
                                timeframe: 7d
                              - target: 95
                                target_display: '95'
                                timeframe: 30d
                                warning: 97
                                warning_display: '97'
                          id: pariatur in Ut labore
                          type: dolor veniam
                      - data:
                          attributes:
                            all_tags:
                              - env:prod
                              - app:core
                            created_at: -74830197
                            creator:
                              email: voluptate
                              id: 89774880
                              name: aliquip do velit laboris
                            description: Excepteur ea in pariatur
                            env_tags:
                              - exercitation commodo
                              - ut
                            groups:
                              - env:prod
                              - role:mysql
                            modified_at: 33011084
                            monitor_ids:
                              - -88670842
                              - -89887942
                            name: Custom Metric SLO
                            overall_status:
                              - error: elit labore sint
                                error_budget_remaining: 100
                                indexed_at: 1662496260
                                raw_error_budget_remaining:
                                  unit: requests
                                  value: 60
                                span_precision: 2
                                state: ok
                                status: 100
                                target: 99
                                timeframe: 30d
                              - error: minim velit
                                error_budget_remaining: 100
                                indexed_at: 1662496260
                                raw_error_budget_remaining:
                                  unit: requests
                                  value: 60
                                span_precision: 2
                                state: ok
                                status: 100
                                target: 99
                                timeframe: 30d
                            query:
                              denominator: sum:my.custom.metric{*}.as_count()
                              metrics:
                                - my.custom.metric
                                - my.other.custom.metric
                              numerator: sum:my.custom.metric{type:good}.as_count()
                            service_tags:
                              - sit enim
                              - cil
                            slo_type: metric
                            status:
                              calculation_error: 'Duis '
                              error_budget_remaining: 100
                              indexed_at: 1662496260
                              raw_error_budget_remaining:
                                unit: requests
                                value: 60
                              sli: 100
                              span_precision: 2
                              state: ok
                            team_tags:
                              - est sint Duis pariatur occaecat
                              - aliquip sunt
                            thresholds:
                              - target: 95
                                target_display: '95'
                                timeframe: 7d
                              - target: 95
                                target_display: '95'
                                timeframe: 30d
                                warning: 97
                                warning_display: '97'
                          id: cillum laborum in consectetur
                          type: ullamco exercitation pariatur nulla
                  type: ''
                links:
                  first: esse labore
                  last: incididunt Lorem elit
                  next: dolo
                  prev: reprehenderit
                  self: ex
                meta:
                  pagination:
                    first_number: -43885218
                    last_number: -63394160
                    next_number: -94328671
                    number: -17760693
                    prev_number: -93907573
                    size: -51783737
                    total: 69176829
                    type: cillum qui dolor
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/{slo_id}:
    put:
      tags:
        - SLO
        - Slo
      summary: 'Update An SLO '
      description: Update the specified service level objective object.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Custom Metric SLO
                thresholds:
                  - target: 95
                    timeframe: 7d
                  - target: 95
                    timeframe: 30d
                    warning: 97
                type: metric
                created_at: -76984124
                creator:
                  email: sit non velit anim
                  handle: nisi anim consec
                  name: tempor
                description: mollit
                groups:
                  - env:prod
                  - role:mysql
                id: minim laboris consectetur
                modified_at: -49477504
                monitor_ids:
                  - -87196611
                  - -69090404
                monitor_tags:
                  - dolor velit do aute laboris
                  - est dolore
                query:
                  numerator: sum:my.custom.metric{type:good}.as_count()
                  denominator: sum:my.custom.metric{*}.as_count()
                sli_specification:
                  time_slice:
                    comparator: <
                    query:
                      formulas:
                        - formula: query2/query1
                      queries:
                        - data_source: metrics
                          name: query1
                          query: >-
                            sum:trace.servlet.request.hits{*} by
                            {env}.as_count()
                        - data_source: metrics
                          name: query1
                          query: >-
                            sum:trace.servlet.request.errors{*} by
                            {env}.as_count()
                    threshold: 5
                tags:
                  - env:prod
                  - app:core
                target_threshold: 99.9
                timeframe: 30d
                warning_threshold: 99.95
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slo_id
          in: path
          schema:
            type: string
          required: true
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - name: Custom Metric SLO
                    thresholds:
                      - target: 95
                        timeframe: 7d
                      - target: 95
                        timeframe: 30d
                        warning: 97
                    type: metric
                    created_at: -65283953
                    creator:
                      email: irure aliqua tem
                      handle: 'fugiat '
                      name: labore officia
                    description: ea
                    groups:
                      - env:prod
                      - role:mysql
                    id: exercitation esse anim
                    modified_at: 49740788
                    monitor_ids:
                      - -79804514
                      - -61079246
                    monitor_tags:
                      - do fugiat dolore ipsum
                      - eu pariatur do nulla
                    query:
                      numerator: sum:my.custom.metric{type:good}.as_count()
                      denominator: sum:my.custom.metric{*}.as_count()
                    sli_specification:
                      time_slice:
                        comparator: <
                        query:
                          formulas:
                            - formula: query2/query1
                          queries:
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.hits{*} by
                                {env}.as_count()
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.errors{*} by
                                {env}.as_count()
                        threshold: 5
                    tags:
                      - env:prod
                      - app:core
                    target_threshold: 99.9
                    timeframe: 30d
                    warning_threshold: 99.95
                  - name: Custom Metric SLO
                    thresholds:
                      - target: 95
                        timeframe: 7d
                      - target: 95
                        timeframe: 30d
                        warning: 97
                    type: metric
                    created_at: 74831822
                    creator:
                      email: Excepteur ut mollit do
                      handle: mollit offic
                      name: esse non sit sed
                    description: non ut irure occaecat Excepteur
                    groups:
                      - env:prod
                      - role:mysql
                    id: ipsum enim
                    modified_at: 37773724
                    monitor_ids:
                      - -50893227
                      - 91148165
                    monitor_tags:
                      - dolor ut reprehenderit eiusmod
                      - dolor ani
                    query:
                      numerator: sum:my.custom.metric{type:good}.as_count()
                      denominator: sum:my.custom.metric{*}.as_count()
                    sli_specification:
                      time_slice:
                        comparator: <
                        query:
                          formulas:
                            - formula: query2/query1
                          queries:
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.hits{*} by
                                {env}.as_count()
                            - data_source: metrics
                              name: query1
                              query: >-
                                sum:trace.servlet.request.errors{*} by
                                {env}.as_count()
                        threshold: 5
                    tags:
                      - env:prod
                      - app:core
                    target_threshold: 99.9
                    timeframe: 30d
                    warning_threshold: 99.95
                errors:
                  - dolor
                  - consequat mollit pariatur dolor
                metadata:
                  page:
                    total_count: -48143109
                    total_filtered_count: 40213587
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Details
        - SLO's
        - Slo
      summary: 'Get An SLO''s Details '
      description: Get a service level objective object.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: with_configured_alert_ids
          in: query
          schema:
            type: boolean
          description: Get the IDs of SLO monitors that reference this SLO.
          example: 'true'
        - name: slo_id
          in: path
          schema:
            type: string
          required: true
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  configured_alert_ids:
                    - 123
                    - 456
                    - 789
                  created_at: -84452746
                  creator:
                    email: ipsum dolore
                    handle: pariatur aliqua aute
                    name: ea eiusmod labore culpa
                  description: esse aute consectetur
                  groups:
                    - env:prod
                    - role:mysql
                  id: in
                  modified_at: 30535409
                  monitor_ids:
                    - -72840808
                    - -50318300
                  monitor_tags:
                    - veniam laborum minim adipisicing
                    - voluptate nu
                  name: Custom Metric SLO
                  query:
                    numerator: sum:my.custom.metric{type:good}.as_count()
                    denominator: sum:my.custom.metric{*}.as_count()
                  sli_specification:
                    time_slice:
                      comparator: <
                      query:
                        formulas:
                          - formula: query2/query1
                        queries:
                          - data_source: metrics
                            name: query1
                            query: >-
                              sum:trace.servlet.request.hits{*} by
                              {env}.as_count()
                          - data_source: metrics
                            name: query1
                            query: >-
                              sum:trace.servlet.request.errors{*} by
                              {env}.as_count()
                      threshold: 5
                  tags:
                    - env:prod
                    - app:core
                  target_threshold: 99.9
                  thresholds:
                    - target: 95
                      timeframe: 7d
                    - target: 95
                      timeframe: 30d
                      warning: 97
                  timeframe: 30d
                  type: metric
                  warning_threshold: 99.95
                errors:
                  - sed voluptate amet ex
                  - adipisicing fugiat irure voluptate anim
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - SLO
        - Slo
      summary: 'Delete An SLO '
      description: |-
        Permanently delete the specified service level objective object.

        If an SLO is used in a dashboard, the `DELETE /v1/slo/` endpoint returns
        a 409 conflict error because the SLO is referenced in a dashboard.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: force
          in: query
          schema:
            type: string
          description: >-
            Delete the monitor even if it's referenced by other resources (for
            example SLO, composite monitor).
          example: exercitation consequat
        - name: slo_id
          in: path
          schema:
            type: string
          required: true
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - ea cupidatat sit
                  - et
                errors:
                  aliquipa: magna mollit in non
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - ea cupidatat sit
                  - et
                errors:
                  aliquipa: magna mollit in non
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/{slo_id}/history:
    get:
      tags:
        - History
        - SLO's
        - Slo
      summary: 'Get An SLO''s History '
      description: >-
        Get a specific SLO’s history, regardless of its SLO type.


        The detailed history data is structured according to the source data
        type.

        For example, metric data is included for event SLOs that use

        the metric source, and monitor SLO types include the monitor transition
        history.


        **Note:** There are different response formats for event based and time
        based SLOs.

        Examples of both are shown.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: from_ts
          in: query
          schema:
            type: integer
          description: >-
            (Required) The `from` timestamp for the query window in epoch
            seconds.
          example: '74288761'
        - name: to_ts
          in: query
          schema:
            type: integer
          description: (Required) The `to` timestamp for the query window in epoch seconds.
          example: '74288761'
        - name: target
          in: query
          schema:
            type: number
          description: >-
            The SLO target. If `target` is passed in, the response will include
            the remaining error budget and a timeframe value of `custom`.
          example: '81.04101124863735'
        - name: apply_correction
          in: query
          schema:
            type: boolean
          description: >-
            Defaults to `true`. If any SLO corrections are applied and this
            parameter is set to `false`,

            then the corrections will not be applied and the SLI values will not
            be affected.
          example: 'true'
        - name: slo_id
          in: path
          schema:
            type: string
          required: true
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  from_ts: 1615323990
                  group_by:
                    - adipisicing in velit eiusmod
                    - 'eiusmod irure '
                  groups:
                    - error_budget_remaining:
                        7d: 100
                      errors:
                        - error_type: ''
                          error_message: ''
                        - error_type: ''
                          error_message: ''
                      group: name
                      history:
                        - - 1579212382
                          - 0
                      monitor_modified: 1615867200
                      monitor_type: string
                      name: string
                      preview: true
                      sli_value: 99.99
                      span_precision: 2
                    - error_budget_remaining:
                        7d: 100
                      errors:
                        - error_type: ''
                          error_message: ''
                        - error_type: ''
                          error_message: ''
                      group: name
                      history:
                        - - 1579212382
                          - 0
                      monitor_modified: 1615867200
                      monitor_type: string
                      name: string
                      preview: true
                      sli_value: 99.99
                      span_precision: 2
                  monitors:
                    - error_budget_remaining:
                        7d: 100
                      errors:
                        - error_type: ''
                          error_message: ''
                        - error_type: ''
                          error_message: ''
                      group: name
                      history:
                        - - 1579212382
                          - 0
                      monitor_modified: 1615867200
                      monitor_type: string
                      name: string
                      preview: true
                      sli_value: 99.99
                      span_precision: 2
                    - error_budget_remaining:
                        7d: 100
                      errors:
                        - error_type: ''
                          error_message: ''
                        - error_type: ''
                          error_message: ''
                      group: name
                      history:
                        - - 1579212382
                          - 0
                      monitor_modified: 1615867200
                      monitor_type: string
                      name: string
                      preview: true
                      sli_value: 99.99
                      span_precision: 2
                  overall:
                    error_budget_remaining:
                      7d: 100
                    errors:
                      - error_type: ''
                        error_message: ''
                      - error_type: ''
                        error_message: ''
                    group: name
                    history:
                      - - 1579212382
                        - 0
                    monitor_modified: 1615867200
                    monitor_type: string
                    name: string
                    precision:
                      30d: 1
                      7d: 2
                    preview: true
                    sli_value: 99.99
                    span_precision: 2
                  series:
                    res_type: ''
                    interval: 0
                    resp_version: 0
                    query: ''
                    times: []
                    numerator:
                      count: 0
                      sum: 0
                      metadata: {}
                    denominator:
                      count: 0
                      sum: 0
                      metadata: {}
                    message: ''
                  thresholds:
                    my_service:
                      target: 95
                      timeframe: 7d
                  to_ts: 1615928790
                  type: metric
                  type_id: 0
                errors:
                  - error: eu Duis in dolore ut
                  - error: do cupidatat
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/{slo_id}/corrections:
    get:
      tags:
        - Corrections
        - SLO
        - Slo
      summary: 'Get Corrections For An SLO '
      description: Get corrections applied to an SLO
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slo_id
          in: path
          schema:
            type: string
          required: true
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      category: Scheduled Maintenance
                      created_at: 37057815
                      creator:
                        email: sit tempor dolor non deserunt
                        handle: laboris dolor cupidatat sit amet
                        name: dolor adipisicing
                      description: veniam U
                      duration: 3600
                      end: 95250660
                      modified_at: -94550879
                      modifier:
                        email: exercitation
                        handle: voluptate in sit
                        name: Ut ex quis ut
                      rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                      slo_id: consequat dolor ci
                      start: -17529711
                      timezone: proident magna
                    id: nisi adipisicing ut reprehenderit dolor
                    type: correction
                  - attributes:
                      category: Scheduled Maintenance
                      created_at: 82825400
                      creator:
                        email: quis nulla
                        handle: commodo sed sit dolor minim
                        name: id in irure
                      description: officia Lorem fugiat ut
                      duration: 3600
                      end: 82128074
                      modified_at: 75197463
                      modifier:
                        email: ut incididu
                        handle: 'labore commodo '
                        name: sint dolore
                      rrule: FREQ=DAILY;INTERVAL=10;COUNT=5
                      slo_id: exercitation sunt mollit
                      start: 17831451
                      timezone: eiusmod in
                    id: sit commodo ullamco
                    type: correction
                meta:
                  page:
                    total_count: -96751503
                    total_filtered_count: 69414274
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/can_delete:
    get:
      tags:
        - Checks
        - SLOs
        - Safely
        - Slo
      summary: 'Check If SLOs Can Be Safely Deleted '
      description: |-
        Check if an SLO can be safely deleted. For example,
        assure an SLO can be deleted without disrupting a dashboard.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: ids
          in: query
          schema:
            type: string
          description: >-
            (Required) A comma separated list of the IDs of the service level
            objectives objects.
          example: id1, id2, id3
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  ok:
                    - qui nostrud commodo nulla
                    - sunt qui tempor id in
                errors:
                  sit_db8: consequat velit
                  sunt31_: reprehender
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  ok:
                    - qui nostrud commodo nulla
                    - sunt qui tempor id in
                errors:
                  sit_db8: consequat velit
                  sunt31_: reprehender
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/slo/bulk_delete:
    post:
      tags:
        - Bulk
        - SLO
        - Slo
        - Timeframes
      summary: 'Bulk Delete SLO Timeframes '
      description: >-
        Delete (or partially delete) multiple service level objective objects.


        This endpoint facilitates deletion of one or more thresholds for one or
        more

        service level objective objects. If all thresholds are deleted, the
        service level

        objective object is deleted as well.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id1:
                  - 7d
                  - 30d
                id2:
                  - 7d
                  - 30d
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  deleted:
                    - enim do ut
                    - enim non cillum
                  updated:
                    - dolor non ea nisi
                    - dolore deserunt in
                errors:
                  - id: ''
                    timeframe: 30d
                    message: ''
                  - id: ''
                    timeframe: 30d
                    message: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels:
    get:
      tags:
        - Accounts
        - Channels
        - Configurations
        - Integrations
        - Names
        - Slack
      summary: 'Get All Channels In A Slack Integration '
      description: >-
        Get a list of all channels configured for your Datadog-Slack
        integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - display:
                    message: true
                    notified: true
                    snapshot: true
                    tags: true
                  name: '#channel_name_main_account'
                - display:
                    message: true
                    notified: true
                    snapshot: false
                    tags: true
                  name: '#channel_name_doghouse'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Accounts
        - Channels
        - Configurations
        - Integrations
        - Names
        - Slack
      summary: 'Create A Slack Integration Channel '
      description: Add a channel to your Datadog-Slack integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                display:
                  message: true
                  notified: true
                  snapshot: true
                  tags: true
                name: '#general'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                display:
                  message: true
                  notified: true
                  snapshot: true
                  tags: true
                name: '#general'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels/{channel_name}:
    get:
      tags:
        - Accounts
        - Channels
        - Configurations
        - Integrations
        - Names
        - Slack
      summary: 'Get A Slack Integration Channel '
      description: Get a channel configured for your Datadog-Slack integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
        - name: channel_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                display:
                  message: true
                  notified: true
                  snapshot: true
                  tags: true
                name: '#general'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Accounts
        - Channels
        - Configurations
        - Integrations
        - Names
        - Slack
      summary: 'Update A Slack Integration Channel '
      description: Update a channel used in your Datadog-Slack integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                display:
                  message: true
                  notified: true
                  snapshot: true
                  tags: true
                name: '#general'
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
        - name: channel_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                display:
                  message: true
                  notified: true
                  snapshot: true
                  tags: true
                name: '#general'
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Accounts
        - Channels
        - Configurations
        - Integrations
        - Names
        - Slack
      summary: 'Remove A Slack Integration Channel '
      description: Remove a channel from your Datadog-Slack integration.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: account_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
        - name: channel_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/graph/snapshot:
    get:
      tags:
        - Graphs
        - Snapshots
        - Take
      summary: 'Take Graph Snapshots '
      description: >-
        Take graph snapshots.

        **Note**: When a snapshot is created, there is some delay before it is
        available.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start
          in: query
          schema:
            type: number
          description: (Required) The POSIX timestamp of the start of the query in seconds.
          example: '-32260706'
        - name: end
          in: query
          schema:
            type: number
          description: (Required) The POSIX timestamp of the end of the query in seconds.
          example: '-32260706'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                graph_def: exercitation sit nulla ad
                metric_query: nulla deserunt dolore nisi
                snapshot_url: https://app.datadoghq.com/s/f12345678/aaa-bbb-ccc
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/spans/events:
    get:
      tags:
        - Events
        - Spans
      summary: 'Get A List Of Spans '
      description: |-
        List endpoint returns spans that match a span search query.
        [Results are paginated][1].

        Use this endpoint to see your latest spans.
        This endpoint is rate limited to `300` requests per hour.

        [1]: /logs/guide/collect-multiple-logs-with-pagination?tab=v2api
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      custom:
                        sedcc5: {}
                      end_timestamp: '2023-01-02T09:42:36.420Z'
                      env: prod
                      host: i-0123
                      ingestion_reason: rule
                      parent_id: '0'
                      resource_hash: a12345678b91c23d
                      resource_name: agent
                      retained_by: retention_filter
                      service: agent
                      single_span: true
                      span_id: '1234567890987654321'
                      start_timestamp: '2023-01-02T09:42:36.320Z'
                      tags:
                        - team:A
                      trace_id: '1234567890987654321'
                      type: web
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: spans
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      custom:
                        irure_dca: {}
                      end_timestamp: '2023-01-02T09:42:36.420Z'
                      env: prod
                      host: i-0123
                      ingestion_reason: rule
                      parent_id: '0'
                      resource_hash: a12345678b91c23d
                      resource_name: agent
                      retained_by: retention_filter
                      service: agent
                      single_span: true
                      span_id: '1234567890987654321'
                      start_timestamp: '2023-01-02T09:42:36.320Z'
                      tags:
                        - team:A
                      trace_id: '1234567890987654321'
                      type: web
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: spans
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/spans/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
  /api/v2/spans/events/search:
    post:
      tags:
        - Events
        - Search
        - Spans
      summary: 'Search Spans '
      description: |-
        List endpoint returns spans that match a span search query.
        [Results are paginated][1].

        Use this endpoint to build complex spans filtering and search.
        This endpoint is rate limited to `300` requests per hour.

        [1]: /logs/guide/collect-multiple-logs-with-pagination?tab=v2api
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    filter:
                      from: now-15m
                      query: service:web* AND @http.status_code:[200 TO 299]
                      to: now
                    options:
                      timeOffset: -7243542
                      timezone: GMT
                    page:
                      cursor: >-
                        eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                      limit: 25
                    sort: timestamp
                  type: search_request
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      custom:
                        sedcc5: {}
                      end_timestamp: '2023-01-02T09:42:36.420Z'
                      env: prod
                      host: i-0123
                      ingestion_reason: rule
                      parent_id: '0'
                      resource_hash: a12345678b91c23d
                      resource_name: agent
                      retained_by: retention_filter
                      service: agent
                      single_span: true
                      span_id: '1234567890987654321'
                      start_timestamp: '2023-01-02T09:42:36.320Z'
                      tags:
                        - team:A
                      trace_id: '1234567890987654321'
                      type: web
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: spans
                  - attributes:
                      attributes:
                        customAttribute: 123
                        duration: 2345
                      custom:
                        irure_dca: {}
                      end_timestamp: '2023-01-02T09:42:36.420Z'
                      env: prod
                      host: i-0123
                      ingestion_reason: rule
                      parent_id: '0'
                      resource_hash: a12345678b91c23d
                      resource_name: agent
                      retained_by: retention_filter
                      service: agent
                      single_span: true
                      span_id: '1234567890987654321'
                      start_timestamp: '2023-01-02T09:42:36.320Z'
                      tags:
                        - team:A
                      trace_id: '1234567890987654321'
                      type: web
                    id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
                    type: spans
                links:
                  next: >-
                    https://app.datadoghq.com/api/v2/spans/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                meta:
                  elapsed: 132
                  page:
                    after: >-
                      eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
                  - detail: Missing required attribute in body
                    status: '400'
                    title: Bad Request
  /api/v2/spans/analytics/aggregate:
    post:
      tags:
        - Aggregate
        - Analytics
        - Spans
      summary: 'Aggregate Spans '
      description: >-
        The API endpoint to aggregate spans into buckets and compute metrics and
        timeseries.

        This endpoint is rate limited to `300` requests per hour.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    compute:
                      - aggregation: pc90
                        interval: 5m
                        metric: '@duration'
                        type: total
                      - aggregation: pc90
                        interval: 5m
                        metric: '@duration'
                        type: total
                    filter:
                      from: now-15m
                      query: service:web* AND @http.status_code:[200 TO 299]
                      to: now
                    group_by:
                      - facet: host
                        histogram:
                          interval: 10
                          min: 50
                          max: 100
                        limit: 10
                        missing: est eu
                        sort:
                          aggregation: count
                          order: asc
                        total: false
                      - facet: host
                        histogram:
                          interval: 10
                          min: 50
                          max: 100
                        limit: 10
                        missing: Lorem nulla amet
                        sort:
                          aggregation: count
                          order: asc
                        total: true
                    options:
                      timeOffset: -82164158
                      timezone: GMT
                  type: aggregate_request
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      by:
                        '@state': success
                        '@version': abc
                      compute: {}
                      computes:
                        commodoa_0: magna in amet
                        ea7: qui
                        aliqua3: nostrud commodo ad deserunt
                    id: dolor non deserunt id
                    type: bucket
                  - attributes:
                      by:
                        '@state': success
                        '@version': abc
                      compute: {}
                      computes:
                        sunt31: incididunt magna est ex ipsum
                        exercitation24: irure conse
                    id: et
                    type: bucket
                meta:
                  elapsed: 132
                  request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
                  status: done
                  warnings:
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
                    - code: unknown_index
                      detail: 'indexes: foo, bar'
                      title: >-
                        One or several indexes are missing or invalid, results
                        hold data from the other indexes
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/apm/config/metrics:
    get:
      tags:
        - Apm
        - Configurations
        - Metrics
        - Span based
      summary: 'Get All Span-based Metrics '
      description: Get the list of configured span-based metrics with their definitions.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      compute:
                        aggregation_type: distribution
                        include_percentiles: false
                        path: '@duration'
                      filter:
                        query: '@http.status_code:200 service:my-service'
                      group_by:
                        - path: resource_name
                          tag_name: resource_name
                        - path: resource_name
                          tag_name: resource_name
                    id: my.metric
                    type: spans_metrics
                  - attributes:
                      compute:
                        aggregation_type: distribution
                        include_percentiles: false
                        path: '@duration'
                      filter:
                        query: '@http.status_code:200 service:my-service'
                      group_by:
                        - path: resource_name
                          tag_name: resource_name
                        - path: resource_name
                          tag_name: resource_name
                    id: my.metric
                    type: spans_metrics
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Apm
        - Configurations
        - Metrics
        - Span based
      summary: 'Create A Span-based Metric '
      description: >-
        Create a metric based on your ingested spans in your organization.

        Returns the span-based metric object from the request body when the
        request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: my.metric
                  type: spans_metrics
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: false
                      path: '@duration'
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    group_by:
                      - path: resource_name
                        tag_name: resource_name
                      - path: resource_name
                        tag_name: resource_name
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: false
                      path: '@duration'
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    group_by:
                      - path: resource_name
                        tag_name: resource_name
                      - path: resource_name
                        tag_name: resource_name
                  id: my.metric
                  type: spans_metrics
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/apm/config/metrics/{metric_id}:
    get:
      tags:
        - Apm
        - Configurations
        - Metrics
        - Span based
      summary: 'Get A Span-based Metric '
      description: Get a specific span-based metric from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: false
                      path: '@duration'
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    group_by:
                      - path: resource_name
                        tag_name: resource_name
                      - path: resource_name
                        tag_name: resource_name
                  id: my.metric
                  type: spans_metrics
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Apm
        - Configurations
        - Metrics
        - Span based
      summary: 'Update A Span-based Metric '
      description: >-
        Update a specific span-based metric from your organization.

        Returns the span-based metric object from the request body when the
        request is successful.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: spans_metrics
                  attributes:
                    compute:
                      include_percentiles: false
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    group_by:
                      - path: resource_name
                        tag_name: resource_name
                      - path: resource_name
                        tag_name: resource_name
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    compute:
                      aggregation_type: distribution
                      include_percentiles: false
                      path: '@duration'
                    filter:
                      query: '@http.status_code:200 service:my-service'
                    group_by:
                      - path: resource_name
                        tag_name: resource_name
                      - path: resource_name
                        tag_name: resource_name
                  id: my.metric
                  type: spans_metrics
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Apm
        - Configurations
        - Metrics
        - Span based
      summary: 'Delete A Span-based Metric '
      description: Delete a specific span-based metric from your organization.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: metric_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/api:
    post:
      tags:
        - Synthetics
        - Tests
      summary: 'Create An API Test '
      description: Create a Synthetic API test.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                config:
                  assertions:
                    - operator: lessThan
                      target: 1000
                      type: responseTime
                    - operator: is
                      target: 200
                      type: statusCode
                    - operator: is
                      property: content-type
                      target: text/html; charset=UTF-8
                      type: header
                  request:
                    method: GET
                    url: https://example.com
                locations:
                  - azure:eastus
                  - aws:eu-west-3
                message: MY_NOTIFICATION_MESSAGE
                name: MY_TEST_NAME
                options:
                  min_failure_duration: 0
                  min_location_failed: 1
                  monitor_options:
                    include_tags: true
                    locked: false
                    new_host_delay: 300
                    notify_audit: false
                    notify_no_data: false
                    renotify_interval: 0
                  tick_every: 60
                status: live
                subtype: http
                tags:
                  - env:production
                type: api
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: Example test name
                config:
                  assertions:
                    - operator: lessThan
                      target: 1000
                      type: responseTime
                  request:
                    method: GET
                    url: https://example.com
                locations:
                  - aws:eu-west-3
                options:
                  accept_self_signed: true
                  allow_insecure: false
                  checkCertificateRevocation: false
                  ci:
                    executionRule: skipped
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: true
                  follow_redirects: true
                  httpVersion: any
                  ignoreServerCertificateError: true
                  initialNavigationTimeout: 46404480
                  min_failure_duration: -77163806
                  min_location_failed: 17162468
                  monitor_name: aute nostrud dolor
                  monitor_options:
                    renotify_interval: 663
                  monitor_priority: 3
                  noScreenshot: false
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: 30047337
                    interval: 692977.0306222737
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 165858
                type: api
                message: Notification message
                monitor_id: 12345678
                public_id: 123-abc-456
                status: live
                subtype: http
                tags:
                  - env:production
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '402':
          description: Payment Required
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/browser:
    post:
      tags:
        - Browser
        - Synthetics
        - Tests
      summary: 'Create A Browser Test '
      description: Create a Synthetic browser test.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                config:
                  request:
                    allow_insecure: false
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: id occaecat eiusmod
                    bodyType: text/plain
                    callType: unary
                    certificate:
                      cert:
                        content: cupidatat qui
                        filename: nisi minim amet
                        updatedAt: deserunt et aliqua mollit sunt
                      key:
                        content: sunt sit irure Lor
                        filename: ullamco nulla incididunt eiusmod sit
                        updatedAt: Lorem fugiat veniam eu pariatur
                    compressedJsonDescriptor: adipisicing
                    compressedProtoFile: consectetur esse dolore
                    dnsServer: in eiusmod deserunt in fugiat
                    dnsServerPort: 37494
                    follow_redirects: false
                    headers:
                      cupidatat77d: Duis aliqua sint
                      sit1: consectetur Duis aliquip nisi
                      sit4: ipsum quis proident elit
                    host: cupidatat
                    httpVersion: any
                    message: ex incididunt irure
                    metadata:
                      aliquip4ae: in non proident reprehenderit adipisicing
                      culpa_d: eu in laborum
                      cupidatat7a7: sint ut ullamco enim
                    method: et exercitation sit culpa
                    noSavingResponseBody: true
                    numberOfPackets: 0
                    persistCookies: true
                    port: -30133525
                    proxy:
                      url: https://example.com
                      headers:
                        doloreeae: esse proident
                    query: {}
                    servername: Lorem ex
                    service: Greeter
                    shouldTrackHops: false
                    timeout: 12837321.416178986
                    url: https://example.com
                  configVariables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                  setCookie: quis irure velit cupidatat
                  variables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                locations:
                  - aws:eu-west-3
                name: Example test name
                options:
                  accept_self_signed: true
                  allow_insecure: true
                  checkCertificateRevocation: true
                  ci:
                    executionRule: non_blocking
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: false
                  follow_redirects: false
                  httpVersion: any
                  ignoreServerCertificateError: false
                  initialNavigationTimeout: 88407554
                  min_failure_duration: 58974361
                  min_location_failed: 18089504
                  monitor_name: anim in tempor
                  monitor_options:
                    renotify_interval: 287
                  monitor_priority: 3
                  noScreenshot: true
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: -7254805
                    interval: -2097545.1785587072
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 355063
                type: browser
                message: ''
                monitor_id: -39539775
                public_id: adipisicing sit ipsum
                status: live
                steps:
                  - allowFailure: true
                    isCritical: true
                    name: dolor occaecat elit reprehenderit sed
                    noScreenshot: false
                    params: {}
                    timeout: -76937205
                    type: assertElementContent
                  - allowFailure: false
                    isCritical: false
                    name: consectetur laborum
                    noScreenshot: false
                    params: {}
                    timeout: -5409357
                    type: assertElementContent
                tags:
                  - env:prod
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                config:
                  request:
                    allow_insecure: false
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: id occaecat eiusmod
                    bodyType: text/plain
                    callType: unary
                    certificate:
                      cert:
                        content: cupidatat qui
                        filename: nisi minim amet
                        updatedAt: deserunt et aliqua mollit sunt
                      key:
                        content: sunt sit irure Lor
                        filename: ullamco nulla incididunt eiusmod sit
                        updatedAt: Lorem fugiat veniam eu pariatur
                    compressedJsonDescriptor: adipisicing
                    compressedProtoFile: consectetur esse dolore
                    dnsServer: in eiusmod deserunt in fugiat
                    dnsServerPort: 37494
                    follow_redirects: false
                    headers:
                      cupidatat77d: Duis aliqua sint
                      sit1: consectetur Duis aliquip nisi
                      sit4: ipsum quis proident elit
                    host: cupidatat
                    httpVersion: any
                    message: ex incididunt irure
                    metadata:
                      aliquip4ae: in non proident reprehenderit adipisicing
                      culpa_d: eu in laborum
                      cupidatat7a7: sint ut ullamco enim
                    method: et exercitation sit culpa
                    noSavingResponseBody: true
                    numberOfPackets: 0
                    persistCookies: true
                    port: -30133525
                    proxy:
                      url: https://example.com
                      headers:
                        doloreeae: esse proident
                    query: {}
                    servername: Lorem ex
                    service: Greeter
                    shouldTrackHops: false
                    timeout: 12837321.416178986
                    url: https://example.com
                  configVariables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                  setCookie: quis irure velit cupidatat
                  variables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                locations:
                  - aws:eu-west-3
                name: Example test name
                options:
                  accept_self_signed: true
                  allow_insecure: true
                  checkCertificateRevocation: true
                  ci:
                    executionRule: non_blocking
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: false
                  follow_redirects: false
                  httpVersion: any
                  ignoreServerCertificateError: false
                  initialNavigationTimeout: 88407554
                  min_failure_duration: 58974361
                  min_location_failed: 18089504
                  monitor_name: anim in tempor
                  monitor_options:
                    renotify_interval: 287
                  monitor_priority: 3
                  noScreenshot: true
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: -7254805
                    interval: -2097545.1785587072
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 355063
                type: browser
                message: ''
                monitor_id: -39539775
                public_id: adipisicing sit ipsum
                status: live
                steps:
                  - allowFailure: true
                    isCritical: true
                    name: dolor occaecat elit reprehenderit sed
                    noScreenshot: false
                    params: {}
                    timeout: -76937205
                    type: assertElementContent
                  - allowFailure: false
                    isCritical: false
                    name: consectetur laborum
                    noScreenshot: false
                    params: {}
                    timeout: -5409357
                    type: assertElementContent
                tags:
                  - env:prod
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '402':
          description: Payment Required
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/api/{public_id}:
    put:
      tags:
        - Edit
        - Public
        - Synthetics
        - Tests
      summary: 'Edit An API Test '
      description: Edit the configuration of a Synthetic API test.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Example test name
                config:
                  assertions:
                    - operator: lessThan
                      target: 1000
                      type: responseTime
                  request:
                    method: GET
                    url: https://example.com
                locations:
                  - aws:eu-west-3
                options:
                  accept_self_signed: true
                  allow_insecure: false
                  checkCertificateRevocation: false
                  ci:
                    executionRule: skipped
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: true
                  follow_redirects: true
                  httpVersion: any
                  ignoreServerCertificateError: true
                  initialNavigationTimeout: 46404480
                  min_failure_duration: -77163806
                  min_location_failed: 17162468
                  monitor_name: aute nostrud dolor
                  monitor_options:
                    renotify_interval: 663
                  monitor_priority: 3
                  noScreenshot: false
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: 30047337
                    interval: 692977.0306222737
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 165858
                type: api
                message: Notification message
                monitor_id: 12345678
                public_id: 123-abc-456
                status: live
                subtype: http
                tags:
                  - env:production
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: Example test name
                config:
                  assertions:
                    - operator: lessThan
                      target: 1000
                      type: responseTime
                  request:
                    method: GET
                    url: https://example.com
                locations:
                  - aws:eu-west-3
                options:
                  accept_self_signed: true
                  allow_insecure: false
                  checkCertificateRevocation: false
                  ci:
                    executionRule: skipped
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: true
                  follow_redirects: true
                  httpVersion: any
                  ignoreServerCertificateError: true
                  initialNavigationTimeout: 46404480
                  min_failure_duration: -77163806
                  min_location_failed: 17162468
                  monitor_name: aute nostrud dolor
                  monitor_options:
                    renotify_interval: 663
                  monitor_priority: 3
                  noScreenshot: false
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: 30047337
                    interval: 692977.0306222737
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 165858
                type: api
                message: Notification message
                monitor_id: 12345678
                public_id: 123-abc-456
                status: live
                subtype: http
                tags:
                  - env:production
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Public
        - Synthetics
        - Tests
      summary: 'Get An API Test '
      description: |-
        Get the detailed configuration associated with
        a Synthetic API test.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: Example test name
                config:
                  assertions:
                    - operator: lessThan
                      target: 1000
                      type: responseTime
                  request:
                    method: GET
                    url: https://example.com
                locations:
                  - aws:eu-west-3
                options:
                  accept_self_signed: true
                  allow_insecure: false
                  checkCertificateRevocation: false
                  ci:
                    executionRule: skipped
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: true
                  follow_redirects: true
                  httpVersion: any
                  ignoreServerCertificateError: true
                  initialNavigationTimeout: 46404480
                  min_failure_duration: -77163806
                  min_location_failed: 17162468
                  monitor_name: aute nostrud dolor
                  monitor_options:
                    renotify_interval: 663
                  monitor_priority: 3
                  noScreenshot: false
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: 30047337
                    interval: 692977.0306222737
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 165858
                type: api
                message: Notification message
                monitor_id: 12345678
                public_id: 123-abc-456
                status: live
                subtype: http
                tags:
                  - env:production
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/browser/{public_id}:
    put:
      tags:
        - Browser
        - Edit
        - Public
        - Synthetics
        - Tests
      summary: 'Edit A Browser Test '
      description: Edit the configuration of a Synthetic browser test.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                config:
                  request:
                    allow_insecure: false
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: id occaecat eiusmod
                    bodyType: text/plain
                    callType: unary
                    certificate:
                      cert:
                        content: cupidatat qui
                        filename: nisi minim amet
                        updatedAt: deserunt et aliqua mollit sunt
                      key:
                        content: sunt sit irure Lor
                        filename: ullamco nulla incididunt eiusmod sit
                        updatedAt: Lorem fugiat veniam eu pariatur
                    compressedJsonDescriptor: adipisicing
                    compressedProtoFile: consectetur esse dolore
                    dnsServer: in eiusmod deserunt in fugiat
                    dnsServerPort: 37494
                    follow_redirects: false
                    headers:
                      cupidatat77d: Duis aliqua sint
                      sit1: consectetur Duis aliquip nisi
                      sit4: ipsum quis proident elit
                    host: cupidatat
                    httpVersion: any
                    message: ex incididunt irure
                    metadata:
                      aliquip4ae: in non proident reprehenderit adipisicing
                      culpa_d: eu in laborum
                      cupidatat7a7: sint ut ullamco enim
                    method: et exercitation sit culpa
                    noSavingResponseBody: true
                    numberOfPackets: 0
                    persistCookies: true
                    port: -30133525
                    proxy:
                      url: https://example.com
                      headers:
                        doloreeae: esse proident
                    query: {}
                    servername: Lorem ex
                    service: Greeter
                    shouldTrackHops: false
                    timeout: 12837321.416178986
                    url: https://example.com
                  configVariables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                  setCookie: quis irure velit cupidatat
                  variables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                locations:
                  - aws:eu-west-3
                name: Example test name
                options:
                  accept_self_signed: true
                  allow_insecure: true
                  checkCertificateRevocation: true
                  ci:
                    executionRule: non_blocking
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: false
                  follow_redirects: false
                  httpVersion: any
                  ignoreServerCertificateError: false
                  initialNavigationTimeout: 88407554
                  min_failure_duration: 58974361
                  min_location_failed: 18089504
                  monitor_name: anim in tempor
                  monitor_options:
                    renotify_interval: 287
                  monitor_priority: 3
                  noScreenshot: true
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: -7254805
                    interval: -2097545.1785587072
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 355063
                type: browser
                message: ''
                monitor_id: -39539775
                public_id: adipisicing sit ipsum
                status: live
                steps:
                  - allowFailure: true
                    isCritical: true
                    name: dolor occaecat elit reprehenderit sed
                    noScreenshot: false
                    params: {}
                    timeout: -76937205
                    type: assertElementContent
                  - allowFailure: false
                    isCritical: false
                    name: consectetur laborum
                    noScreenshot: false
                    params: {}
                    timeout: -5409357
                    type: assertElementContent
                tags:
                  - env:prod
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                config:
                  request:
                    allow_insecure: false
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: id occaecat eiusmod
                    bodyType: text/plain
                    callType: unary
                    certificate:
                      cert:
                        content: cupidatat qui
                        filename: nisi minim amet
                        updatedAt: deserunt et aliqua mollit sunt
                      key:
                        content: sunt sit irure Lor
                        filename: ullamco nulla incididunt eiusmod sit
                        updatedAt: Lorem fugiat veniam eu pariatur
                    compressedJsonDescriptor: adipisicing
                    compressedProtoFile: consectetur esse dolore
                    dnsServer: in eiusmod deserunt in fugiat
                    dnsServerPort: 37494
                    follow_redirects: false
                    headers:
                      cupidatat77d: Duis aliqua sint
                      sit1: consectetur Duis aliquip nisi
                      sit4: ipsum quis proident elit
                    host: cupidatat
                    httpVersion: any
                    message: ex incididunt irure
                    metadata:
                      aliquip4ae: in non proident reprehenderit adipisicing
                      culpa_d: eu in laborum
                      cupidatat7a7: sint ut ullamco enim
                    method: et exercitation sit culpa
                    noSavingResponseBody: true
                    numberOfPackets: 0
                    persistCookies: true
                    port: -30133525
                    proxy:
                      url: https://example.com
                      headers:
                        doloreeae: esse proident
                    query: {}
                    servername: Lorem ex
                    service: Greeter
                    shouldTrackHops: false
                    timeout: 12837321.416178986
                    url: https://example.com
                  configVariables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                  setCookie: quis irure velit cupidatat
                  variables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                locations:
                  - aws:eu-west-3
                name: Example test name
                options:
                  accept_self_signed: true
                  allow_insecure: true
                  checkCertificateRevocation: true
                  ci:
                    executionRule: non_blocking
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: false
                  follow_redirects: false
                  httpVersion: any
                  ignoreServerCertificateError: false
                  initialNavigationTimeout: 88407554
                  min_failure_duration: 58974361
                  min_location_failed: 18089504
                  monitor_name: anim in tempor
                  monitor_options:
                    renotify_interval: 287
                  monitor_priority: 3
                  noScreenshot: true
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: -7254805
                    interval: -2097545.1785587072
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 355063
                type: browser
                message: ''
                monitor_id: -39539775
                public_id: adipisicing sit ipsum
                status: live
                steps:
                  - allowFailure: true
                    isCritical: true
                    name: dolor occaecat elit reprehenderit sed
                    noScreenshot: false
                    params: {}
                    timeout: -76937205
                    type: assertElementContent
                  - allowFailure: false
                    isCritical: false
                    name: consectetur laborum
                    noScreenshot: false
                    params: {}
                    timeout: -5409357
                    type: assertElementContent
                tags:
                  - env:prod
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Browser
        - Public
        - Synthetics
        - Tests
      summary: 'Get A Browser Test '
      description: |-
        Get the detailed configuration (including steps) associated with
        a Synthetic browser test.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                config:
                  request:
                    allow_insecure: false
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: id occaecat eiusmod
                    bodyType: text/plain
                    callType: unary
                    certificate:
                      cert:
                        content: cupidatat qui
                        filename: nisi minim amet
                        updatedAt: deserunt et aliqua mollit sunt
                      key:
                        content: sunt sit irure Lor
                        filename: ullamco nulla incididunt eiusmod sit
                        updatedAt: Lorem fugiat veniam eu pariatur
                    compressedJsonDescriptor: adipisicing
                    compressedProtoFile: consectetur esse dolore
                    dnsServer: in eiusmod deserunt in fugiat
                    dnsServerPort: 37494
                    follow_redirects: false
                    headers:
                      cupidatat77d: Duis aliqua sint
                      sit1: consectetur Duis aliquip nisi
                      sit4: ipsum quis proident elit
                    host: cupidatat
                    httpVersion: any
                    message: ex incididunt irure
                    metadata:
                      aliquip4ae: in non proident reprehenderit adipisicing
                      culpa_d: eu in laborum
                      cupidatat7a7: sint ut ullamco enim
                    method: et exercitation sit culpa
                    noSavingResponseBody: true
                    numberOfPackets: 0
                    persistCookies: true
                    port: -30133525
                    proxy:
                      url: https://example.com
                      headers:
                        doloreeae: esse proident
                    query: {}
                    servername: Lorem ex
                    service: Greeter
                    shouldTrackHops: false
                    timeout: 12837321.416178986
                    url: https://example.com
                  configVariables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                  setCookie: quis irure velit cupidatat
                  variables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                locations:
                  - aws:eu-west-3
                name: Example test name
                options:
                  accept_self_signed: true
                  allow_insecure: true
                  checkCertificateRevocation: true
                  ci:
                    executionRule: non_blocking
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: false
                  follow_redirects: false
                  httpVersion: any
                  ignoreServerCertificateError: false
                  initialNavigationTimeout: 88407554
                  min_failure_duration: 58974361
                  min_location_failed: 18089504
                  monitor_name: anim in tempor
                  monitor_options:
                    renotify_interval: 287
                  monitor_priority: 3
                  noScreenshot: true
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: -7254805
                    interval: -2097545.1785587072
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 355063
                type: browser
                message: ''
                monitor_id: -39539775
                public_id: adipisicing sit ipsum
                status: live
                steps:
                  - allowFailure: true
                    isCritical: true
                    name: dolor occaecat elit reprehenderit sed
                    noScreenshot: false
                    params: {}
                    timeout: -76937205
                    type: assertElementContent
                  - allowFailure: false
                    isCritical: false
                    name: consectetur laborum
                    noScreenshot: false
                    params: {}
                    timeout: -5409357
                    type: assertElementContent
                tags:
                  - env:prod
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/{public_id}:
    patch:
      tags:
        - Patch
        - Public
        - Synthetic
        - Synthetics
        - Tests
      summary: 'Patch A Synthetic Test '
      description: Patch the configuration of a Synthetic test with partial data.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  - op: replace
                    path: /name
                    value: New test name
                  - op: remove
                    path: /config/assertions/0
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                config:
                  configVariables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                  request:
                    allow_insecure: true
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: officia sit
                    bodyType: text/plain
                    callType: unary
                    certificate:
                      cert:
                        content: proident ullamco reprehenderit ea
                        filename: nulla eu ad laborum laboris
                        updatedAt: consequat minim consectetur
                      key:
                        content: dolore
                        filename: laborum ullamco
                        updatedAt: laboris ut Duis dolore
                    compressedJsonDescriptor: id
                    compressedProtoFile: sint amet officia eu
                    dnsServer: cillum adipisicing deserunt
                    dnsServerPort: 38880
                    follow_redirects: true
                    headers:
                      id68: culpa occaecat
                    host: nulla anim pariatur voluptate
                    httpVersion: any
                    message: reprehenderit irure do
                    metadata:
                      dolore_6_e: voluptate fugiat
                      Excepteur_31: laborum
                    method: ut adipisicing do sit esse
                    noSavingResponseBody: true
                    numberOfPackets: 2
                    persistCookies: false
                    port: -57154001
                    proxy:
                      url: https://example.com
                      headers:
                        anim__: dolore pariatur
                        aliqua1: minim ea laborum ad
                    query: {}
                    servername: dolor incididunt aliquip
                    service: Greeter
                    shouldTrackHops: true
                    timeout: -48415768.21209284
                    url: https://example.com
                  variables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                creator:
                  email: minim occaecat nostrud irure
                  handle: sunt adipisicing veniam elit ea
                  name: deserunt dolore labore
                locations:
                  - aws:eu-west-3
                message: proide
                monitor_id: 35662405
                name: ea veniam tempor in
                options:
                  accept_self_signed: true
                  allow_insecure: true
                  checkCertificateRevocation: true
                  ci:
                    executionRule: non_blocking
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: false
                  follow_redirects: true
                  httpVersion: http2
                  ignoreServerCertificateError: false
                  initialNavigationTimeout: -67327120
                  min_failure_duration: -81215627
                  min_location_failed: 10498132
                  monitor_name: reprehenderit irure commodo minim
                  monitor_options:
                    renotify_interval: 915
                  monitor_priority: 4
                  noScreenshot: false
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: 22814497
                    interval: 22864652.473497137
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 42208
                public_id: dolore minim sed
                status: live
                steps:
                  - allowFailure: true
                    isCritical: false
                    name: nulla incididunt Ut ut dolore
                    noScreenshot: false
                    params: {}
                    timeout: -96687427
                    type: assertElementContent
                  - allowFailure: true
                    isCritical: true
                    name: ullamco magna ex et
                    noScreenshot: false
                    params: {}
                    timeout: -8010915
                    type: assertElementContent
                subtype: http
                tags:
                  - culpa in quis non
                  - voluptate esse incididunt
                type: browser
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Configurations
        - Public
        - Synthetics
        - Tests
      summary: 'Get A Test Configuration '
      description: Get the detailed configuration associated with a Synthetic test.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                config:
                  configVariables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                  request:
                    allow_insecure: true
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: officia sit
                    bodyType: text/plain
                    callType: unary
                    certificate:
                      cert:
                        content: proident ullamco reprehenderit ea
                        filename: nulla eu ad laborum laboris
                        updatedAt: consequat minim consectetur
                      key:
                        content: dolore
                        filename: laborum ullamco
                        updatedAt: laboris ut Duis dolore
                    compressedJsonDescriptor: id
                    compressedProtoFile: sint amet officia eu
                    dnsServer: cillum adipisicing deserunt
                    dnsServerPort: 38880
                    follow_redirects: true
                    headers:
                      id68: culpa occaecat
                    host: nulla anim pariatur voluptate
                    httpVersion: any
                    message: reprehenderit irure do
                    metadata:
                      dolore_6_e: voluptate fugiat
                      Excepteur_31: laborum
                    method: ut adipisicing do sit esse
                    noSavingResponseBody: true
                    numberOfPackets: 2
                    persistCookies: false
                    port: -57154001
                    proxy:
                      url: https://example.com
                      headers:
                        anim__: dolore pariatur
                        aliqua1: minim ea laborum ad
                    query: {}
                    servername: dolor incididunt aliquip
                    service: Greeter
                    shouldTrackHops: true
                    timeout: -48415768.21209284
                    url: https://example.com
                  variables:
                    - description: Example for the variable.
                      type: string
                    - description: Example for the variable.
                      type: string
                creator:
                  email: minim occaecat nostrud irure
                  handle: sunt adipisicing veniam elit ea
                  name: deserunt dolore labore
                locations:
                  - aws:eu-west-3
                message: proide
                monitor_id: 35662405
                name: ea veniam tempor in
                options:
                  accept_self_signed: true
                  allow_insecure: true
                  checkCertificateRevocation: true
                  ci:
                    executionRule: non_blocking
                  device_ids:
                    - chrome.laptop_large
                    - chrome.laptop_large
                  disableCors: false
                  disableCsp: false
                  follow_redirects: true
                  httpVersion: http2
                  ignoreServerCertificateError: false
                  initialNavigationTimeout: -67327120
                  min_failure_duration: -81215627
                  min_location_failed: 10498132
                  monitor_name: reprehenderit irure commodo minim
                  monitor_options:
                    renotify_interval: 915
                  monitor_priority: 4
                  noScreenshot: false
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  retry:
                    count: 22814497
                    interval: 22864652.473497137
                  rumSettings:
                    applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    clientTokenId: 12345
                    isEnabled: true
                  scheduling:
                    timeframes:
                      - day: 1
                        from: '07:00'
                        to: '16:00'
                      - day: 3
                        from: '07:00'
                        to: '16:00'
                    timezone: America/New_York
                  tick_every: 42208
                public_id: dolore minim sed
                status: live
                steps:
                  - allowFailure: true
                    isCritical: false
                    name: nulla incididunt Ut ut dolore
                    noScreenshot: false
                    params: {}
                    timeout: -96687427
                    type: assertElementContent
                  - allowFailure: true
                    isCritical: true
                    name: ullamco magna ex et
                    noScreenshot: false
                    params: {}
                    timeout: -8010915
                    type: assertElementContent
                subtype: http
                tags:
                  - culpa in quis non
                  - voluptate esse incididunt
                type: browser
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/{public_id}/status:
    put:
      tags:
        - Pause
        - Public
        - Status
        - Synthetics
        - Tests
      summary: 'Pause Or Start A Test '
      description: Pause or start a Synthetic test by changing the status.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                new_status: live
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: true
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/trigger/ci:
    post:
      tags:
        - CI/CD
        - Pipelines
        - Synthetics
        - Tests
        - Triggers
      summary: 'Trigger Tests From CI/CD Pipelines '
      description: Trigger a set of Synthetic tests for continuous integration.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tests:
                  - public_id: aaa-aaa-aaa
                    allowInsecureCertificates: true
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: minim ipsum
                    bodyType: aliqua minim nisi ea
                    cookies: laboris deserunt laborum
                    deviceIds:
                      - chrome.laptop_large
                      - chrome.laptop_large
                    followRedirects: false
                    headers:
                      quif1: dolor exercitation in
                      irure1_: qui est dolor
                    locations:
                      - aws:eu-west-3
                    metadata:
                      ci:
                        pipeline:
                          url: ex do dolore fugiat
                        provider:
                          name: irure dolor laborum
                      git:
                        branch: quis
                        commitSha: cons
                    retry:
                      count: -73280496
                      interval: -97791828.83611575
                    startUrl: deserunt exercitation ut Lorem
                    variables:
                      aute_133: sint dolore
                      ut335: mollit
                  - public_id: aaa-aaa-aaa
                    allowInsecureCertificates: false
                    basicAuth:
                      password: PaSSw0RD!
                      username: my_username
                      type: web
                    body: minim culpa
                    bodyType: labore adipisicing
                    cookies: Ut dolor commodo
                    deviceIds:
                      - chrome.laptop_large
                      - chrome.laptop_large
                    followRedirects: false
                    headers:
                      minime: ex deserunt ut
                      aliqua9d: amet
                    locations:
                      - aws:eu-west-3
                    metadata:
                      ci:
                        pipeline:
                          url: proident
                        provider:
                          name: cillum laboris eu
                      git:
                        branch: nisi nulla in esse deserunt
                        commitSha: ex eu
                    retry:
                      count: 9951856
                      interval: -99882277.6803713
                    startUrl: non nulla ex
                    variables:
                      sit_1: consequat mollit
                      in5: aliquip ullamco commodo sunt
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                batch_id: laborum amet dolor
                locations:
                  - id: -3165522
                    name: Excepteur qui in aute
                  - id: -32168362
                    name: sint eu et dolor
                results:
                  - device: chrome.laptop_large
                    location: 93310831
                    public_id: Ut nisi
                    result_id: nulla Duis aute
                  - device: chrome.laptop_large
                    location: -98559598
                    public_id: non Excepteur al
                    result_id: labore aliqua est
                triggered_check_ids:
                  - eiusmod
                  - in
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/trigger:
    post:
      tags:
        - Synthetic
        - Synthetics
        - Tests
        - Triggers
      summary: 'Trigger Synthetic Tests '
      description: Trigger a set of Synthetic tests.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tests:
                  - public_id: aaa-aaa-aaa
                    metadata:
                      ci:
                        pipeline:
                          url: mollit aute esse Ut
                        provider:
                          name: eu adipisicing aliquip cillum irure
                      git:
                        branch: sunt dolore exercitation aute
                        commitSha: voluptate irure esse
                  - public_id: aaa-aaa-aaa
                    metadata:
                      ci:
                        pipeline:
                          url: ipsum occaecat tempor dolor dolore
                        provider:
                          name: quis sed dolor
                      git:
                        branch: in amet
                        commitSha: ut adipi
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                batch_id: laborum amet dolor
                locations:
                  - id: -3165522
                    name: Excepteur qui in aute
                  - id: -32168362
                    name: sint eu et dolor
                results:
                  - device: chrome.laptop_large
                    location: 93310831
                    public_id: Ut nisi
                    result_id: nulla Duis aute
                  - device: chrome.laptop_large
                    location: -98559598
                    public_id: non Excepteur al
                    result_id: labore aliqua est
                triggered_check_ids:
                  - eiusmod
                  - in
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/synthetics/settings/on_demand_concurrency_cap:
    get:
      tags:
        - Concurrency
        - Demand
        - On demand
        - Settings
        - Synthetics
      summary: 'Get The On-demand Concurrency Cap '
      description: Get the on-demand concurrency cap.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    on_demand_concurrency_cap: 8874453.91875121
                  type: on_demand_concurrency_cap
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Concurrency
        - Demand
        - On demand
        - Save
        - Settings
        - Synthetics
        - Value
      summary: 'Save New Value For On-demand Concurrency Cap '
      description: Save new value for on-demand concurrency cap.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                on_demand_concurrency_cap: 64959326.9431577
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    on_demand_concurrency_cap: 8874453.91875121
                  type: on_demand_concurrency_cap
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests:
    get:
      tags:
        - Synthetic
        - Synthetics
        - Tests
      summary: 'Get The List Of All Synthetic Tests '
      description: Get the list of all Synthetic tests.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tests:
                  - config:
                      configVariables:
                        - description: Example for the variable.
                          type: string
                        - description: Example for the variable.
                          type: string
                      request:
                        allow_insecure: false
                        basicAuth:
                          password: PaSSw0RD!
                          username: my_username
                          type: web
                        body: tempor aute
                        bodyType: text/plain
                        callType: unary
                        certificate:
                          cert:
                            content: dolore eu qui Lorem
                            filename: deserunt non
                            updatedAt: mollit
                          key:
                            content: dolor non pariatur ipsum
                            filename: sit
                            updatedAt: aute consectetur cillum amet velit
                        compressedJsonDescriptor: nostrud voluptate amet sint
                        compressedProtoFile: reprehenderit
                        dnsServer: deserunt adipisicing
                        dnsServerPort: 31911
                        follow_redirects: false
                        headers:
                          sitb: sint Lorem
                          aliquip_b: Lorem dolore eiusmod cupidatat veniam
                          quib43: eiusmod non
                          in_8_: ex anim dolor
                        host: pariatur ad commodo
                        httpVersion: http1
                        message: amet dolor sed
                        metadata:
                          autee: amet
                          anima: dolore pariatur
                        method: aute voluptate
                        noSavingResponseBody: true
                        numberOfPackets: 0
                        persistCookies: true
                        port: 3304562
                        proxy:
                          url: https://example.com
                          headers:
                            ut_e: do
                            in_ab0: non v
                            nostrud_ea2: cillum elit labore amet
                        query: {}
                        servername: do laboris nisi
                        service: Greeter
                        shouldTrackHops: true
                        timeout: 39998499.202938706
                        url: https://example.com
                      variables:
                        - description: Example for the variable.
                          type: string
                        - description: Example for the variable.
                          type: string
                    creator:
                      email: sed ut laborum
                      handle: ullamco laboris
                      name: dolor labore
                    locations:
                      - aws:eu-west-3
                    message: occaecat ex
                    monitor_id: 44930394
                    name: nulla sunt proident elit
                    options:
                      accept_self_signed: true
                      allow_insecure: false
                      checkCertificateRevocation: true
                      ci:
                        executionRule: skipped
                      device_ids:
                        - chrome.laptop_large
                        - chrome.laptop_large
                      disableCors: false
                      disableCsp: true
                      follow_redirects: true
                      httpVersion: any
                      ignoreServerCertificateError: true
                      initialNavigationTimeout: 2968232
                      min_failure_duration: -71140300
                      min_location_failed: -91226459
                      monitor_name: Excepteur aliquip nisi
                      monitor_options:
                        renotify_interval: 930
                      monitor_priority: 2
                      noScreenshot: false
                      restricted_roles:
                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                      retry:
                        count: 95923409
                        interval: -33187220.040594265
                      rumSettings:
                        applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                        clientTokenId: 12345
                        isEnabled: true
                      scheduling:
                        timeframes:
                          - day: 1
                            from: '07:00'
                            to: '16:00'
                          - day: 3
                            from: '07:00'
                            to: '16:00'
                        timezone: America/New_York
                      tick_every: 580786
                    public_id: culpa in sit deserunt in
                    status: live
                    steps:
                      - allowFailure: false
                        isCritical: true
                        name: in dolor
                        noScreenshot: false
                        params: {}
                        timeout: -29484864
                        type: assertElementContent
                      - allowFailure: true
                        isCritical: false
                        name: ipsum aute nulla elit cupidatat
                        noScreenshot: false
                        params: {}
                        timeout: 55063516
                        type: assertElementContent
                    subtype: http
                    tags:
                      - adipisicing laborum
                      - amet in
                    type: browser
                  - config:
                      configVariables:
                        - description: Example for the variable.
                          type: string
                        - description: Example for the variable.
                          type: string
                      request:
                        allow_insecure: true
                        basicAuth:
                          password: PaSSw0RD!
                          username: my_username
                          type: web
                        body: fugiat
                        bodyType: text/plain
                        callType: unary
                        certificate:
                          cert:
                            content: adipisicing mollit
                            filename: in dolore cillum sunt
                            updatedAt: ex
                          key:
                            content: ut et qui Ut
                            filename: tempor cillum non
                            updatedAt: magna et consequat adipisicing
                        compressedJsonDescriptor: cillum eiusmod
                        compressedProtoFile: deserunt dolore labore cillum Ut
                        dnsServer: ullamco exercitation cillum ad
                        dnsServerPort: 37645
                        follow_redirects: true
                        headers:
                          minimdbc: nostrud commodo dolore irure dolor
                          deserunt4a: pariatur ut non
                          pariaturd: reprehender
                        host: eu sint Ut
                        httpVersion: any
                        message: occaecat deserunt magna commodo
                        metadata:
                          Excepteur_d2: adipisicing consequat laborum irure
                          occaecatf8: elit laboris reprehenderit
                        method: nulla dolor
                        noSavingResponseBody: false
                        numberOfPackets: 5
                        persistCookies: false
                        port: -62599174
                        proxy:
                          url: https://example.com
                          headers:
                            tempor__bc: ut exercitation amet magna
                        query: {}
                        servername: Excepteur Duis ex
                        service: Greeter
                        shouldTrackHops: false
                        timeout: 9191599.013319567
                        url: https://example.com
                      variables:
                        - description: Example for the variable.
                          type: string
                        - description: Example for the variable.
                          type: string
                    creator:
                      email: cillum sed eu
                      handle: in dolore Ut dolor
                      name: Lorem dolore incididunt
                    locations:
                      - aws:eu-west-3
                    message: qui eiusmod magn
                    monitor_id: 59326604
                    name: cupidatat Lorem mollit
                    options:
                      accept_self_signed: true
                      allow_insecure: false
                      checkCertificateRevocation: false
                      ci:
                        executionRule: non_blocking
                      device_ids:
                        - chrome.laptop_large
                        - chrome.laptop_large
                      disableCors: true
                      disableCsp: false
                      follow_redirects: true
                      httpVersion: http2
                      ignoreServerCertificateError: false
                      initialNavigationTimeout: -39957102
                      min_failure_duration: 5175049
                      min_location_failed: 75051283
                      monitor_name: eu
                      monitor_options:
                        renotify_interval: 825
                      monitor_priority: 2
                      noScreenshot: true
                      restricted_roles:
                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                      retry:
                        count: -37297992
                        interval: -83020138.69885516
                      rumSettings:
                        applicationId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                        clientTokenId: 12345
                        isEnabled: true
                      scheduling:
                        timeframes:
                          - day: 1
                            from: '07:00'
                            to: '16:00'
                          - day: 3
                            from: '07:00'
                            to: '16:00'
                        timezone: America/New_York
                      tick_every: 99773
                    public_id: 'in '
                    status: live
                    steps:
                      - allowFailure: true
                        isCritical: false
                        name: nulla consectetur laboris ullamco
                        noScreenshot: true
                        params: {}
                        timeout: -6961005
                        type: assertElementContent
                      - allowFailure: true
                        isCritical: false
                        name: in sint pariatur est
                        noScreenshot: true
                        params: {}
                        timeout: 14107597
                        type: assertElementContent
                    subtype: http
                    tags:
                      - elit officia magna in
                      - non ea
                    type: browser
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/{public_id}/results/{result_id}:
    get:
      tags:
        - Public
        - Results
        - Synthetics
        - Tests
      summary: 'Get An API Test Result '
      description: Get a specific full result from a given Synthetic API test.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
        - name: result_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                check:
                  config:
                    configVariables:
                      - description: Example for the variable.
                        type: string
                      - description: Example for the variable.
                        type: string
                    request:
                      allow_insecure: false
                      basicAuth:
                        password: PaSSw0RD!
                        username: my_username
                        type: web
                      body: consectetur Ut eu dolor
                      bodyType: text/plain
                      callType: unary
                      certificate:
                        cert:
                          content: aliqua
                          filename: Duis elit quis
                          updatedAt: id commodo dolor quis
                        key:
                          content: in Ut
                          filename: pariatur
                          updatedAt: fugiat mollit culpa aute
                      compressedJsonDescriptor: nostrud ut eiusmod
                      compressedProtoFile: aliquip culpa
                      dnsServer: mollit magna dolor
                      dnsServerPort: 33174
                      follow_redirects: true
                      headers:
                        aliqua4: ut nisi labore in
                        irure4: cupidatat est
                        occaecataf: consectetur ut
                      host: voluptate eiusmod fugiat aute
                      httpVersion: http2
                      message: 'laboris est esse '
                      metadata:
                        est4: consectetur incididunt
                        sit_a: nostrud velit
                        ex_89: esse
                        adipisicing_7: aliqua
                      method: in
                      noSavingResponseBody: true
                      numberOfPackets: 9
                      persistCookies: true
                      port: -9719293
                      proxy:
                        url: https://example.com
                        headers:
                          in2: cillum aute mollit in
                          reprehenderit17: enim aliquip incididunt deserunt
                      query: {}
                      servername: eu
                      service: Greeter
                      shouldTrackHops: true
                      timeout: 22319897.970792636
                      url: https://example.com
                    variables:
                      - description: Example for the variable.
                        type: string
                      - description: Example for the variable.
                        type: string
                check_time: 9972357.527123779
                check_version: -37477073
                probe_dc: amet officia in
                result:
                  cert:
                    cipher: adipisicing proident mollit Ut
                    exponent: 41612769.87228012
                    extKeyUsage:
                      - fugiat dolore
                      - sed Excepteur nulla nostrud
                    fingerprint: ea dolore
                    fingerprint256: amet dolore cillum
                    issuer:
                      C: labore deserunt
                      CN: mollit nulla in
                      L: ullamco
                      O: velit et non ad amet
                      OU: minim anim Duis est
                      ST: adipisicing Duis
                    modulus: sunt in esse labor
                    protocol: occaecat commodo ad veniam
                    serialNumber: in
                    subject:
                      C: dolor culpa incididunt
                      CN: quis cillum nostrud
                      L: aliquip
                      O: deserunt do
                      OU: ut id est consequat
                      ST: qui Duis
                      altName: ad consectetur reprehenderit Ut
                    validFrom: '1973-01-02T04:10:32.431Z'
                    validTo: '2021-04-20T03:06:08.894Z'
                  eventType: scheduled
                  failure:
                    code: AUTHENTICATION_ERROR
                    message: Error during DNS resolution (ENOTFOUND).
                  httpStatusCode: 98123154
                  requestHeaders:
                    cillum_acc: {}
                    do_54: {}
                    laboris_aa6: {}
                  responseBody: et esse
                  responseHeaders:
                    cupidatat_0f:
                      description: Returned request header.
                  responseSize: -79536171
                  timings:
                    dns: -92950076.86640728
                    download: 90791423.71082392
                    firstByte: 94416651.30022806
                    handshake: 17613175.287378088
                    redirect: -12455141.160725474
                    ssl: 42369514.93084097
                    tcp: 60857898.739733785
                    total: 20159955.866247833
                    wait: -90427252.81330255
                result_id: laborum id nulla ut
                status: 2
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/browser/{public_id}/results/{result_id}:
    get:
      tags:
        - Browser
        - Public
        - Results
        - Synthetics
        - Tests
      summary: 'Get A Browser Test Result '
      description: Get a specific full result from a given Synthetic browser test.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
        - name: result_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: null
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/{public_id}/results:
    get:
      tags:
        - Latest
        - Public
        - Results
        - Summaries
        - Synthetics
        - Test's
        - Tests
      summary: 'Get An API Test''s Latest Results Summaries '
      description: Get the last 150 test results summaries for a given Synthetic API test.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                last_timestamp_fetched: 84008214
                results:
                  - check_time: -92213728.09033461
                    probe_dc: aute in
                    result:
                      passed: true
                      timings:
                        dns: 7070746.928896025
                        download: -61039854.55203773
                        firstByte: 22729593.126420915
                        handshake: -55180625.5942445
                        redirect: 75754981.21762258
                        ssl: 55503055.31949219
                        tcp: -71586632.20256364
                        total: -71937042.40355867
                        wait: 25577303.112785146
                    result_id: cupidatat voluptate do
                    status: 2
                  - check_time: 11396058.699108064
                    probe_dc: sit deserunt ullamco laborum
                    result:
                      passed: false
                      timings:
                        dns: 29508557.890365154
                        download: -94713379.53094676
                        firstByte: 93429110.5390268
                        handshake: 64370215.02137151
                        redirect: 41266193.19624564
                        ssl: -75504130.47006637
                        tcp: 23005911.071317524
                        total: 70161396.61779687
                        wait: -9460881.943898425
                    result_id: te
                    status: 2
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/browser/{public_id}/results:
    get:
      tags:
        - Browser
        - Latest
        - Public
        - Results
        - Summaries
        - Synthetics
        - Test's
        - Tests
      summary: 'Get A Browser Test''s Latest Results Summaries '
      description: >-
        Get the last 150 test results summaries for a given Synthetic browser
        test.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: public_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                last_timestamp_fetched: 45197133
                results:
                  - check_time: 28770412.781909198
                    probe_dc: laborum tempor est dolor
                    result:
                      device:
                        id: chrome.laptop_large
                        name: ''
                        height: 0
                        width: 0
                        isMobile: false
                      duration: 57741229.79309496
                      errorCount: -95793582
                      stepCountCompleted: -20675566
                      stepCountTotal: -27456578
                    result_id: amet
                    status: 1
                  - check_time: -62293082.43949525
                    probe_dc: enim nisi tempor dolor
                    result:
                      device:
                        id: chrome.laptop_large
                        name: ''
                        height: 0
                        width: 0
                        isMobile: false
                      duration: -69126060.80565697
                      errorCount: -18023404
                      stepCountCompleted: -933362
                      stepCountTotal: -11282673
                    result_id: adipisicing Excepteur voluptate id
                    status: 2
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/ci/batch/{batch_id}:
    get:
      tags:
        - Batches
        - Details
        - Synthetics
      summary: 'Get Details Of Batch '
      description: Get a batch's updated details.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: batch_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  metadata:
                    ci:
                      pipeline:
                        url: deserunt sed
                      provider:
                        name: dolor elit occaecat do
                    git:
                      branch: officia irure ex in
                      commitSha: proident reprehenderit est
                  results:
                    - device: chrome.laptop_large
                      duration: 83649240.6430425
                      execution_rule: skipped
                      location: aliqua eu ut Lorem
                      result_id: velit culpa
                      retries: 67292753.49368486
                      status: skipped
                      test_name: esse cupidatat
                      test_public_id: minim et
                      test_type: api
                    - device: chrome.laptop_large
                      duration: -30541400.46572593
                      execution_rule: non_blocking
                      location: reprehenderit
                      result_id: aliquip
                      retries: -8171739.553562984
                      status: skipped
                      test_name: reprehenderit Excepteur
                      test_public_id: dolor velit consectetur dolor in
                      test_type: browser
                  status: passed
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/tests/delete:
    post:
      tags:
        - Synthetics
        - Tests
      summary: 'Delete Tests '
      description: Delete multiple Synthetic tests by ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: {}
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deleted_tests:
                  - deleted_at: '1956-03-13T09:36:36.288Z'
                    public_id: in mollit reprehenderit veniam id
                  - deleted_at: '1983-12-23T02:38:27.857Z'
                    public_id: reprehenderit do incididunt sint
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/variables:
    get:
      tags:
        - Global
        - Synthetics
        - Variables
      summary: 'Get All Global Variables '
      description: Get the list of all Synthetic global variables.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                variables:
                  - description: Example description
                    name: MY_VARIABLE
                    tags:
                      - team:front
                      - test:workflow-1
                    value:
                      secure: true
                      value: value
                    attributes:
                      restricted_roles:
                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    id: eu do
                    parse_test_options:
                      type: http_body
                      field: content-type
                      localVariableName: LOCAL_VARIABLE
                      parser:
                        type: regex
                        value: .*
                    parse_test_public_id: abc-def-123
                  - description: Example description
                    name: MY_VARIABLE
                    tags:
                      - team:front
                      - test:workflow-1
                    value:
                      secure: true
                      value: value
                    attributes:
                      restricted_roles:
                        - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                    id: ea consectetur irure elit veniam
                    parse_test_options:
                      type: http_body
                      field: content-type
                      localVariableName: LOCAL_VARIABLE
                      parser:
                        type: regex
                        value: .*
                    parse_test_public_id: abc-def-123
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Global
        - Synthetics
        - Variables
      summary: 'Create A Global Variable '
      description: Create a Synthetic global variable.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: Example description
                name: MY_VARIABLE
                tags:
                  - team:front
                  - test:workflow-1
                value:
                  secure: true
                  value: value
                attributes:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                id: non commodo eiusmod
                parse_test_options:
                  type: http_body
                  field: content-type
                  localVariableName: LOCAL_VARIABLE
                  parser:
                    type: regex
                    value: .*
                parse_test_public_id: abc-def-123
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: Example description
                name: MY_VARIABLE
                tags:
                  - team:front
                  - test:workflow-1
                value:
                  secure: true
                  value: value
                attributes:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                id: non commodo eiusmod
                parse_test_options:
                  type: http_body
                  field: content-type
                  localVariableName: LOCAL_VARIABLE
                  parser:
                    type: regex
                    value: .*
                parse_test_public_id: abc-def-123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/variables/{variable_id}:
    get:
      tags:
        - Global
        - Synthetics
        - Variables
      summary: 'Get A Global Variable '
      description: Get the detailed configuration of a global variable.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: variable_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: Example description
                name: MY_VARIABLE
                tags:
                  - team:front
                  - test:workflow-1
                value:
                  secure: true
                  value: value
                attributes:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                id: non commodo eiusmod
                parse_test_options:
                  type: http_body
                  field: content-type
                  localVariableName: LOCAL_VARIABLE
                  parser:
                    type: regex
                    value: .*
                parse_test_public_id: abc-def-123
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Edit
        - Global
        - Synthetics
        - Variables
      summary: 'Edit A Global Variable '
      description: Edit a Synthetic global variable.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: Example description
                name: MY_VARIABLE
                tags:
                  - team:front
                  - test:workflow-1
                value:
                  secure: true
                  value: value
                attributes:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                id: non commodo eiusmod
                parse_test_options:
                  type: http_body
                  field: content-type
                  localVariableName: LOCAL_VARIABLE
                  parser:
                    type: regex
                    value: .*
                parse_test_public_id: abc-def-123
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: variable_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: Example description
                name: MY_VARIABLE
                tags:
                  - team:front
                  - test:workflow-1
                value:
                  secure: true
                  value: value
                attributes:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                id: non commodo eiusmod
                parse_test_options:
                  type: http_body
                  field: content-type
                  localVariableName: LOCAL_VARIABLE
                  parser:
                    type: regex
                    value: .*
                parse_test_public_id: abc-def-123
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Global
        - Synthetics
        - Variables
      summary: 'Delete A Global Variable '
      description: Delete a Synthetic global variable.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: variable_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/private-locations:
    post:
      tags:
        - Locations
        - Private
        - Synthetics
      summary: 'Create A Private Location '
      description: Create a new Synthetic private location.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: New private location
                description: Description of private location
                tags:
                  - team:front
                id: sed
                metadata:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                secrets:
                  authentication:
                    id: commodo exercitation sit
                    key: ad magna i
                  config_decryption:
                    key: in et
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                config: {}
                private_location:
                  name: New private location
                  description: Description of private location
                  tags:
                    - team:front
                  id: in id ve
                  metadata:
                    restricted_roles:
                      - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  secrets:
                    authentication:
                      id: aliquip cillum fugiat
                      key: elit
                    config_decryption:
                      key: consequat
                result_encryption:
                  id: deserunt Excepteur anim in non
                  key: mollit elit consectetur
        '402':
          description: Payment Required
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/private-locations/{location_id}:
    get:
      tags:
        - Locations
        - Private
        - Synthetics
      summary: 'Get A Private Location '
      description: Get a Synthetic private location.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: location_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: New private location
                description: Description of private location
                tags:
                  - team:front
                id: sed
                metadata:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                secrets:
                  authentication:
                    id: commodo exercitation sit
                    key: ad magna i
                  config_decryption:
                    key: in et
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Edit
        - Locations
        - Private
        - Synthetics
      summary: 'Edit A Private Location '
      description: Edit a Synthetic private location.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: New private location
                description: Description of private location
                tags:
                  - team:front
                id: sed
                metadata:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                secrets:
                  authentication:
                    id: commodo exercitation sit
                    key: ad magna i
                  config_decryption:
                    key: in et
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: location_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: New private location
                description: Description of private location
                tags:
                  - team:front
                id: sed
                metadata:
                  restricted_roles:
                    - xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                secrets:
                  authentication:
                    id: commodo exercitation sit
                    key: ad magna i
                  config_decryption:
                    key: in et
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Locations
        - Private
        - Synthetics
      summary: 'Delete A Private Location '
      description: Delete a Synthetic private location.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: location_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/locations:
    get:
      tags:
        - (public
        - Locations
        - Private)
        - Synthetics
      summary: 'Get All Locations (public And Private) '
      description: |-
        Get the list of public and private locations available for Synthetic
        tests. No arguments required.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                locations:
                  - id: est Ut
                    name: sit voluptate consequat ut
                  - id: 'esse sit '
                    name: id et labore
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/synthetics/settings/default_locations:
    get:
      tags:
        - Default
        - Locations
        - Settings
        - Synthetics
      summary: 'Get The Default Locations '
      description: Get the default locations settings.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - aws:eu-west-3
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/tags/hosts:
    get:
      tags:
        - Hosts
        - Tags
      summary: 'Get Tags '
      description: Return a mapping of tags to hosts for your whole infrastructure.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  occaecat_22:
                    - test.metric.host
                    - test.metric.host
                  amet_19:
                    - test.metric.host
                    - test.metric.host
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/tags/hosts/{host_name}:
    get:
      tags:
        - Host
        - Hosts
        - Names
        - Tags
      summary: 'Get Host Tags '
      description: Return the list of tags that apply to a given host.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: host_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                host: test.host
                tags:
                  - environment:production
                  - environment:production
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Host
        - Hosts
        - Names
        - Tags
      summary: 'Add Tags To A Host '
      description: |-
        This endpoint allows you to add new tags to a host,
        optionally specifying where these tags come from.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                host: test.host
                tags:
                  - environment:production
                  - environment:production
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: host_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                host: test.host
                tags:
                  - environment:production
                  - environment:production
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Host
        - Hosts
        - Names
        - Tags
      summary: 'Update Host Tags '
      description: |-
        This endpoint allows you to update/replace all tags in
        an integration source with those supplied in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                host: test.host
                tags:
                  - environment:production
                  - environment:production
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: host_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                host: test.host
                tags:
                  - environment:production
                  - environment:production
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Host
        - Hosts
        - Names
        - Tags
      summary: 'Remove Host Tags '
      description: |-
        This endpoint allows you to remove all user-assigned tags
        for a single host.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: host_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team:
    get:
      tags:
        - Teams
      summary: 'Get All Teams '
      description: >-
        Get all teams.

        Can be used to search for teams using the `filter[keyword]` and
        `filter[me]` query parameters.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      handle: example-team
                      name: Example Team
                      avatar: 🥑
                      banner: -26452719
                      created_at: '1984-04-10T06:40:07.216Z'
                      description: amet laboris Lorem
                      hidden_modules:
                        - reprehenderit sint ipsum consequat
                        - proident Lorem
                      link_count: 1173799117
                      modified_at: '1998-08-01T22:42:17.421Z'
                      summary: irure mollit in ullamco
                      user_count: 1307006134
                      visible_modules:
                        - et tempor do quis
                        - ullamco
                    id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                    type: team
                    relationships:
                      team_links:
                        data:
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                        links:
                          related: >-
                            /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                      user_team_permissions:
                        data:
                          id: >-
                            UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
                          type: user_team_permissions
                        links:
                          related: >-
                            /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                  - attributes:
                      handle: example-team
                      name: Example Team
                      avatar: 🥑
                      banner: 54292428
                      created_at: '1974-08-19T22:38:08.357Z'
                      description: eiusmod Lore
                      hidden_modules:
                        - nulla pariatur
                        - anim commodo i
                      link_count: 1589753318
                      modified_at: '1993-02-06T03:25:52.679Z'
                      summary: ad dolor Duis
                      user_count: 1921112546
                      visible_modules:
                        - in nisi aute
                        - officia qui est
                    id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                    type: team
                    relationships:
                      team_links:
                        data:
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                          - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                            type: team_links
                        links:
                          related: >-
                            /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                      user_team_permissions:
                        data:
                          id: >-
                            UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
                          type: user_team_permissions
                        links:
                          related: >-
                            /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                included:
                  - attributes:
                      created_at: '1975-08-01T23:53:43.357Z'
                      disabled: true
                      email: amet do sint in
                      handle: esse laborum id minim
                      icon: consequat mollit
                      modified_at: '1998-08-10T03:42:37.797Z'
                      name: officia aliquip commodo aliqua
                      service_account: false
                      status: occaecat eu non
                      title: id
                      verified: false
                    id: laborum eiusm
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1973-11-02T06:26:02.982Z'
                      disabled: false
                      email: nostrud offi
                      handle: fugiat dolor ex mollit
                      icon: minim irure adipisicing nostrud
                      modified_at: '2022-02-18T12:01:57.414Z'
                      name: ad pariatur veniam ullamco laboris
                      service_account: false
                      status: deserunt eu off
                      title: dolore ad
                      verified: false
                    id: commodo adipisicing labore
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                links:
                  first: commodo elit nostrud
                  last: elit Duis exercitation
                  next: aliquip dolore elit reprehenderit
                  prev: magna dolore ullamc
                  self: Duis
                meta:
                  pagination:
                    first_offset: -50540452
                    last_offset: -27508711
                    limit: -86404252
                    next_offset: -56761729
                    offset: -64815889
                    prev_offset: -72739078
                    total: -12840076
                    type: fugiat magna dolor est aliqua
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Teams
      summary: 'Create A Team '
      description: >-
        Create a new team.

        User IDs passed through the `users` relationship field are added to the
        team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    handle: example-team
                    name: Example Team
                    avatar: 🥑
                    banner: 80899457
                    description: Ut commodo ullamco consectetur cupidatat
                    hidden_modules:
                      - pariatur enim
                      - eiusmod
                    visible_modules:
                      - magna sunt anim non
                      - in consectetur qui
                  type: team
                  relationships:
                    users:
                      data: []
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    handle: example-team
                    name: Example Team
                    avatar: 🥑
                    banner: 98306089
                    created_at: '1950-07-06T08:22:24.965Z'
                    description: Excepteur proident exercitation laborum
                    hidden_modules:
                      - eu enim Duis incididunt
                      - do fugiat
                    link_count: 1103085133
                    modified_at: '1993-10-15T19:34:32.144Z'
                    summary: ad dolor
                    user_count: 225486167
                    visible_modules:
                      - culpa aliquip ut Excepteur veniam
                      - ipsum fugiat
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: team
                  relationships:
                    team_links:
                      data:
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                    user_team_permissions:
                      data:
                        id: >-
                          UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
                        type: user_team_permissions
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/users/{user_uuid}/memberships:
    get:
      tags:
        - Memberships
        - Users
        - Uu
      summary: 'Get User Memberships '
      description: Get a list of memberships for a user
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_uuid
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
                    type: team_memberships
                    attributes:
                      provisioned_by: esse commodo Excepteur eu
                      provisioned_by_id: consectetur irure laboris
                      role: admin
                    relationships:
                      team:
                        data:
                          id: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
                          type: team
                      user:
                        data:
                          id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                          type: users
                  - id: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
                    type: team_memberships
                    attributes:
                      provisioned_by: s
                      provisioned_by_id: aliqua
                      role: admin
                    relationships:
                      team:
                        data:
                          id: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
                          type: team
                      user:
                        data:
                          id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                          type: users
                included:
                  - attributes:
                      created_at: '1988-05-11T22:22:19.889Z'
                      disabled: true
                      email: 'aliquip '
                      handle: et Excepteur
                      icon: Duis occaecat cupidatat exercitation
                      modified_at: '1985-07-05T02:31:35.108Z'
                      name: quis officia est
                      service_account: true
                      status: esse labore exercit
                      title: ut a
                      verified: false
                    id: enim tempor
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2008-09-23T15:15:54.365Z'
                      disabled: true
                      email: cupidatat adipis
                      handle: nisi quis consectetur magna
                      icon: dolor nostrud in non
                      modified_at: '1994-10-24T09:20:13.457Z'
                      name: ea adipisicing amet sunt aute
                      service_account: false
                      status: in laborum dolore
                      title: aliqu
                      verified: false
                    id: Duis laborum occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                links:
                  first: qui
                  last: cupidatat ullamco cillum voluptate culpa
                  next: sed tempor
                  prev: cillum elit Ut
                  self: proident veniam
                meta:
                  pagination:
                    first_offset: -46838774
                    last_offset: -67986253
                    limit: -56520489
                    next_offset: 4196077
                    offset: 7408868
                    prev_offset: -2739117
                    total: -7852322
                    type: aliquip ad dolore
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team/{team_id}:
    get:
      tags:
        - Teams
      summary: 'Get A Team '
      description: Get a single team using the team's `id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    handle: example-team
                    name: Example Team
                    avatar: 🥑
                    banner: 98306089
                    created_at: '1950-07-06T08:22:24.965Z'
                    description: Excepteur proident exercitation laborum
                    hidden_modules:
                      - eu enim Duis incididunt
                      - do fugiat
                    link_count: 1103085133
                    modified_at: '1993-10-15T19:34:32.144Z'
                    summary: ad dolor
                    user_count: 225486167
                    visible_modules:
                      - culpa aliquip ut Excepteur veniam
                      - ipsum fugiat
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: team
                  relationships:
                    team_links:
                      data:
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                    user_team_permissions:
                      data:
                        id: >-
                          UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
                        type: user_team_permissions
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Teams
      summary: 'Update A Team '
      description: >-
        Update a team using the team's `id`.

        If the `team_links` relationship is present, the associated links are
        updated to be in the order they appear in the array, and any existing
        team links not present are removed.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    handle: example-team
                    name: Example Team
                    avatar: 🥑
                    banner: -58393442
                    color: 6
                    description: nulla Excepteur co
                    hidden_modules:
                      - dolor amet
                      - aute Ut velit
                    visible_modules:
                      - mollit non fugiat eiusmod
                      - Ut irure
                  type: team
                  relationships:
                    team_links:
                      data:
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    handle: example-team
                    name: Example Team
                    avatar: 🥑
                    banner: 98306089
                    created_at: '1950-07-06T08:22:24.965Z'
                    description: Excepteur proident exercitation laborum
                    hidden_modules:
                      - eu enim Duis incididunt
                      - do fugiat
                    link_count: 1103085133
                    modified_at: '1993-10-15T19:34:32.144Z'
                    summary: ad dolor
                    user_count: 225486167
                    visible_modules:
                      - culpa aliquip ut Excepteur veniam
                      - ipsum fugiat
                  id: aeadc05e-98a8-11ec-ac2c-da7ad0900001
                  type: team
                  relationships:
                    team_links:
                      data:
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                        - id: f9bb8444-af7f-11ec-ac2c-da7ad0900001
                          type: team_links
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
                    user_team_permissions:
                      data:
                        id: >-
                          UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
                        type: user_team_permissions
                      links:
                        related: >-
                          /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Teams
      summary: 'Remove A Team '
      description: Remove a team using the team's `id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team/{team_id}/memberships:
    get:
      tags:
        - Memberships
        - Teams
      summary: 'Get Team Memberships '
      description: Get a paginated list of members for a team
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
                    type: team_memberships
                    attributes:
                      provisioned_by: esse commodo Excepteur eu
                      provisioned_by_id: consectetur irure laboris
                      role: admin
                    relationships:
                      team:
                        data:
                          id: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
                          type: team
                      user:
                        data:
                          id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                          type: users
                  - id: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
                    type: team_memberships
                    attributes:
                      provisioned_by: s
                      provisioned_by_id: aliqua
                      role: admin
                    relationships:
                      team:
                        data:
                          id: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
                          type: team
                      user:
                        data:
                          id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                          type: users
                included:
                  - attributes:
                      created_at: '1988-05-11T22:22:19.889Z'
                      disabled: true
                      email: 'aliquip '
                      handle: et Excepteur
                      icon: Duis occaecat cupidatat exercitation
                      modified_at: '1985-07-05T02:31:35.108Z'
                      name: quis officia est
                      service_account: true
                      status: esse labore exercit
                      title: ut a
                      verified: false
                    id: enim tempor
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2008-09-23T15:15:54.365Z'
                      disabled: true
                      email: cupidatat adipis
                      handle: nisi quis consectetur magna
                      icon: dolor nostrud in non
                      modified_at: '1994-10-24T09:20:13.457Z'
                      name: ea adipisicing amet sunt aute
                      service_account: false
                      status: in laborum dolore
                      title: aliqu
                      verified: false
                    id: Duis laborum occaecat
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                links:
                  first: qui
                  last: cupidatat ullamco cillum voluptate culpa
                  next: sed tempor
                  prev: cillum elit Ut
                  self: proident veniam
                meta:
                  pagination:
                    first_offset: -46838774
                    last_offset: -67986253
                    limit: -56520489
                    next_offset: 4196077
                    offset: 7408868
                    prev_offset: -2739117
                    total: -7852322
                    type: aliquip ad dolore
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Memberships
        - Teams
        - Users
      summary: 'Add A User To A Team '
      description: Add a user to a team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: team_memberships
                  attributes:
                    provisioned_by: laborum laboris ut
                    provisioned_by_id: laborum eu officia sed
                    role: admin
                  relationships:
                    team:
                      data:
                        id: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
                        type: team
                    user:
                      data:
                        id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                        type: users
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
                  type: team_memberships
                  attributes:
                    provisioned_by: dolor dolor ullamco nulla
                    provisioned_by_id: Excepteur consectetur
                    role: admin
                  relationships:
                    team:
                      data:
                        id: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
                        type: team
                    user:
                      data:
                        id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                        type: users
                included:
                  - attributes:
                      created_at: '2011-10-01T09:44:15.925Z'
                      disabled: true
                      email: cillum nostrud Ut
                      handle: ut nostrud anim velit
                      icon: sed
                      modified_at: '1985-11-21T04:57:16.564Z'
                      name: tempor labore
                      service_account: false
                      status: magna fugiat
                      title: deserunt commodo aliquip ad
                      verified: true
                    id: do ut laborum
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1946-08-10T09:52:09.778Z'
                      disabled: true
                      email: incididunt ipsum anim aliqua
                      handle: tempor do
                      icon: veniam
                      modified_at: '2014-09-05T07:24:47.060Z'
                      name: adipisicing exercitation
                      service_account: true
                      status: irure consectetur amet
                      title: proident nulla
                      verified: true
                    id: labore dolore aute in
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '409':
          description: Conflict
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team/{team_id}/memberships/{user_id}:
    delete:
      tags:
        - Memberships
        - Teams
        - Users
      summary: 'Remove A User From A Team '
      description: Remove a user from a team.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Attributes
        - Memberships
        - Teams
        - Users
      summary: 'Update A User''s Membership Attributes On A Team '
      description: Update a user's membership attributes on a team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: team_memberships
                  attributes:
                    provisioned_by: exercitation veniam
                    provisioned_by_id: reprehenderit laborum
                    role: admin
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
                  type: team_memberships
                  attributes:
                    provisioned_by: dolor dolor ullamco nulla
                    provisioned_by_id: Excepteur consectetur
                    role: admin
                  relationships:
                    team:
                      data:
                        id: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
                        type: team
                    user:
                      data:
                        id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                        type: users
                included:
                  - attributes:
                      created_at: '2011-10-01T09:44:15.925Z'
                      disabled: true
                      email: cillum nostrud Ut
                      handle: ut nostrud anim velit
                      icon: sed
                      modified_at: '1985-11-21T04:57:16.564Z'
                      name: tempor labore
                      service_account: false
                      status: magna fugiat
                      title: deserunt commodo aliquip ad
                      verified: true
                    id: do ut laborum
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '1946-08-10T09:52:09.778Z'
                      disabled: true
                      email: incididunt ipsum anim aliqua
                      handle: tempor do
                      icon: veniam
                      modified_at: '2014-09-05T07:24:47.060Z'
                      name: adipisicing exercitation
                      service_account: true
                      status: irure consectetur amet
                      title: proident nulla
                      verified: true
                    id: labore dolore aute in
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team/{team_id}/links:
    get:
      tags:
        - Links
        - Teams
      summary: 'Get Links For A Team '
      description: Get all links for a given team.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      label: Link label
                      url: https://example.com
                      position: 1965062202
                      team_id: ex eu consequat Ut cillum
                    id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                    type: team_links
                  - attributes:
                      label: Link label
                      url: https://example.com
                      position: 129182156
                      team_id: Ut velit
                    id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                    type: team_links
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    post:
      tags:
        - Links
        - Teams
      summary: 'Create A Team Link '
      description: Add a new link to a team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    label: Link label
                    url: https://example.com
                    position: 662826406
                    team_id: deserunt ea eu
                  type: team_links
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    label: Link label
                    url: https://example.com
                    position: 1265679053
                    team_id: ad proident amet cupidatat
                  id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                  type: team_links
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team/{team_id}/links/{link_id}:
    get:
      tags:
        - Links
        - Teams
      summary: 'Get A Team Link '
      description: Get a single link for a team.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: link_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    label: Link label
                    url: https://example.com
                    position: 1265679053
                    team_id: ad proident amet cupidatat
                  id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                  type: team_links
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Links
        - Teams
      summary: 'Update A Team Link '
      description: Update a team link.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    label: Link label
                    url: https://example.com
                    position: 662826406
                    team_id: deserunt ea eu
                  type: team_links
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: link_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    label: Link label
                    url: https://example.com
                    position: 1265679053
                    team_id: ad proident amet cupidatat
                  id: b8626d7e-cedd-11eb-abf5-da7ad0900001
                  type: team_links
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Links
        - Teams
      summary: 'Remove A Team Link '
      description: Remove a link from a team.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: link_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team/{team_id}/permission-settings:
    get:
      tags:
        - Permission
        - Settings
        - Teams
      summary: 'Get Permission Settings For A Team '
      description: Get all permission settings for a given team.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: TeamPermission-aeadc05e-98a8-11ec-ac2c-da7ad0900001-edit
                    type: team_permission_settings
                    attributes:
                      action: manage_membership
                      editable: true
                      options:
                        - user_access_manage
                        - user_access_manage
                      title: ad laborum
                      value: teams_manage
                  - id: TeamPermission-aeadc05e-98a8-11ec-ac2c-da7ad0900001-edit
                    type: team_permission_settings
                    attributes:
                      action: manage_membership
                      editable: true
                      options:
                        - organization
                        - admins
                      title: consequat magna labore
                      value: user_access_manage
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/team/{team_id}/permission-settings/{action}:
    put:
      tags:
        - Actions
        - Permission
        - Settings
        - Teams
      summary: 'Update Permission Setting For Team '
      description: Update a team permission setting for a given team.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: team_permission_settings
                  attributes:
                    value: teams_manage
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
        - name: action
          in: path
          schema:
            type: string
          required: true
          example: pariatur consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: TeamPermission-aeadc05e-98a8-11ec-ac2c-da7ad0900001-edit
                  type: team_permission_settings
                  attributes:
                    action: manage_membership
                    editable: false
                    options:
                      - user_access_manage
                      - admins
                    title: do non exercitation dolore
                    value: teams_manage
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/usage/hourly_usage:
    get:
      tags:
        - Family
        - Hourly
        - Products
        - Usage
      summary: 'Get Hourly Usage By Product Family '
      description: Get hourly usage by product family.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: filter[timestamp][start]
          in: query
          schema:
            type: string
          description: >-
            (Required) Datetime in ISO-8601 format, UTC, precise to hour:
            [YYYY-MM-DDThh] for usage beginning at this hour.
          example: '1961-11-25T12:45:52.211Z'
        - name: filter[timestamp][end]
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          example: '1961-11-25T12:45:52.211Z'
        - name: filter[product_families]
          in: query
          schema:
            type: string
          description: >-
            (Required) Comma separated list of product families to retrieve.
            Available families are `all`, `analyzed_logs`,

            `application_security`, `audit_trail`, `serverless`, `ci_app`,
            `cloud_cost_management`,

            `csm_container_enterprise`, `csm_host_enterprise`, `cspm`,
            `custom_events`, `cws`, `dbm`, `error_tracking`,

            `fargate`, `infra_hosts`, `incident_management`, `indexed_logs`,
            `indexed_spans`, `ingested_spans`, `iot`,

            `lambda_traced_invocations`, `logs`, `network_flows`,
            `network_hosts`, `netflow_monitoring`, `observability_pipelines`,

            `online_archive`, `profiling`, `rum`, `rum_browser_sessions`,
            `rum_mobile_sessions`, `sds`, `snmp`,

            `synthetics_api`, `synthetics_browser`, `synthetics_mobile`,
            `synthetics_parallel_testing`, and `timeseries`.

            The following product family has been **deprecated**: `audit_logs`.
          example: esse
        - name: filter[include_descendants]
          in: query
          schema:
            type: boolean
          description: Include child org usage in the response. Defaults to false.
          example: 'false'
        - name: filter[include_breakdown]
          in: query
          schema:
            type: boolean
          description: >-
            Include breakdown of usage by subcategories where applicable (for
            product family logs only). Defaults to false.
          example: 'false'
        - name: filter[versions]
          in: query
          schema:
            type: string
          description: >-
            Comma separated list of product family versions to use in the format
            `product_family:version`. For example,

            `infra_hosts:1.0.0`. If this parameter is not used, the API will use
            the latest version of each requested

            product family. Currently all families have one version `1.0.0`.
          example: esse
        - name: page[limit]
          in: query
          schema:
            type: integer
          description: >-
            Maximum number of results to return (between 1 and 500) - defaults
            to 500 if limit not specified.
          example: '500'
        - name: page[next_record_id]
          in: query
          schema:
            type: string
          description: >-
            List following results with a next_record_id provided in the
            previous query.
          example: esse
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      measurements:
                        - usage_type: laboris proident velit cillum
                          value: -4861417
                        - usage_type: voluptate ea quis incididunt
                          value: -91317168
                      org_name: tempor eu quis
                      product_family: incididunt laboris non enim
                      public_id: in amet irure
                      region: in
                      timestamp: '1954-01-25T15:08:04.606Z'
                    id: eu deserunt ut exercitation
                    type: usage_timeseries
                  - attributes:
                      measurements:
                        - usage_type: dolor sint minim est
                          value: -77184415
                        - usage_type: pariatur Excepteur
                          value: 84306433
                      org_name: non consectetur
                      product_family: tempor do ipsum
                      public_id: cupidatat
                      region: incididunt minim
                      timestamp: '1961-04-17T18:27:08.743Z'
                    id: occaecat anim nisi fugiat elit
                    type: usage_timeseries
                meta:
                  pagination:
                    next_record_id: dolore
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/usage/hourly-attribution:
    get:
      tags:
        - Attribution
        - Hourly
        - Usage
      summary: 'Get Hourly Usage Attribution '
      description: >-
        Get hourly usage attribution. Multi-region data is available starting
        March 1, 2023.


        This API endpoint is paginated. To make sure you receive all records,
        check if the value of `next_record_id` is

        set in the response. If it is, make another request and pass
        `next_record_id` as a parameter.

        Pseudo code example:


        ```

        response := GetHourlyUsageAttribution(start_month)

        cursor := response.metadata.pagination.next_record_id

        WHILE cursor != null BEGIN
          sleep(5 seconds)  # Avoid running into rate limit
          response := GetHourlyUsageAttribution(start_month, next_record_id=cursor)
          cursor := response.metadata.pagination.next_record_id
        END

        ```
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: start_hr
          in: query
          schema:
            type: string
          description: >-
            (Required) Datetime in ISO-8601 format, UTC, precise to hour:
            `[YYYY-MM-DDThh]` for usage beginning at this hour.
          example: '1992-04-06T18:39:52.088Z'
        - name: end_hr
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          example: '1992-04-06T18:39:52.088Z'
        - name: usage_type
          in: query
          schema:
            type: string
          description: (Required) Usage type to retrieve.
          example: mobile_app_testing_usage
        - name: next_record_id
          in: query
          schema:
            type: string
          description: >-
            List following results with a next_record_id provided in the
            previous query.
          example: exercitation consequat
        - name: tag_breakdown_keys
          in: query
          schema:
            type: string
          description: >-
            Comma separated list of tags used to group usage. If no value is
            provided the usage will not be broken down by tags.


            To see which tags are available, look for the value of
            `tag_config_source` in the API response.
          example: exercitation consequat
        - name: include_descendants
          in: query
          schema:
            type: boolean
          description: Include child org usage in the response. Defaults to `true`.
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                metadata:
                  pagination:
                    next_record_id: cupidatat ullamco veniam deserunt est
                usage:
                  - hour: '1995-08-16T13:37:15.431Z'
                    org_name: exerc
                    public_id: exercitation
                    region: sed
                    tag_config_source: Excepteur elit nulla labore incididunt
                    tags:
                      consectetur_4:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      sunt_4c:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      ea977:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      anim_07_:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                    total_usage_sum: 95420425.2134088
                    updated_at: cupidatat Excepteur ad commodo
                    usage_type: estimated_indexed_logs_usage
                  - hour: '1964-05-06T16:42:59.351Z'
                    org_name: proident Lorem veniam in in
                    public_id: in incididunt
                    region: dolore
                    tag_config_source: min
                    tags:
                      aute_f2:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      et0:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      ullamco_4d:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                    total_usage_sum: 17546598.908168003
                    updated_at: do ad culpa ipsum
                    usage_type: custom_timeseries_usage
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/usage/monthly-attribution:
    get:
      tags:
        - Attribution
        - Monthly
        - Usage
      summary: 'Get Monthly Usage Attribution '
      description: >-
        Get monthly usage attribution. Multi-region data is available starting
        March 1, 2023.


        This API endpoint is paginated. To make sure you receive all records,
        check if the value of `next_record_id` is

        set in the response. If it is, make another request and pass
        `next_record_id` as a parameter.

        Pseudo code example:


        ```

        response := GetMonthlyUsageAttribution(start_month)

        cursor := response.metadata.pagination.next_record_id

        WHILE cursor != null BEGIN
          sleep(5 seconds)  # Avoid running into rate limit
          response := GetMonthlyUsageAttribution(start_month, next_record_id=cursor)
          cursor := response.metadata.pagination.next_record_id
        END

        ```
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: start_month
          in: query
          schema:
            type: string
          description: >-
            (Required) Datetime in ISO-8601 format, UTC, precise to month:
            `[YYYY-MM]` for usage beginning in this month.

            Maximum of 15 months ago.
          example: '1992-04-06T18:39:52.088Z'
        - name: end_month
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage ending this month.
          example: '1992-04-06T18:39:52.088Z'
        - name: fields
          in: query
          schema:
            type: string
          description: >-
            (Required) Comma-separated list of usage types to return, or `*` for
            all usage types.
          example: ci_pipeline_indexed_spans_percentage
        - name: sort_direction
          in: query
          schema:
            type: string
          description: 'The direction to sort by: `[desc, asc]`.'
          example: desc
        - name: sort_name
          in: query
          schema:
            type: string
          description: The field to sort by.
          example: ci_pipeline_indexed_spans_percentage
        - name: tag_breakdown_keys
          in: query
          schema:
            type: string
          description: >-
            Comma separated list of tag keys used to group usage. If no value is
            provided the usage will not be broken down by tags.


            To see which tags are available, look for the value of
            `tag_config_source` in the API response.
          example: exercitation consequat
        - name: next_record_id
          in: query
          schema:
            type: string
          description: >-
            List following results with a next_record_id provided in the
            previous query.
          example: exercitation consequat
        - name: include_descendants
          in: query
          schema:
            type: boolean
          description: Include child org usage in the response. Defaults to `true`.
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                metadata:
                  aggregates:
                    - agg_type: sum
                      field: custom_timeseries_usage
                      value: -22538358.589279592
                    - agg_type: sum
                      field: custom_timeseries_usage
                      value: 73376776.19677171
                  pagination:
                    next_record_id: ad eiu
                usage:
                  - month: '1978-11-15T11:35:23.014Z'
                    org_name: Excepteur culpa
                    public_id: in incididunt
                    region: qui magna
                    tag_config_source: eiusmod
                    tags:
                      in_82d:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      aliqua2:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                    updated_at: '2011-06-02T08:07:11.667Z'
                    values:
                      api_percentage: -89224644.23672132
                      api_usage: 80412170.5647429
                      apm_fargate_percentage: 61431516.571835846
                      apm_fargate_usage: 8028570.434315532
                      apm_host_percentage: -77401178.46557313
                      apm_host_usage: -35788717.63357992
                      apm_usm_percentage: -98687413.42147036
                      apm_usm_usage: 7121960.276529819
                      appsec_fargate_percentage: 70578439.56170252
                      appsec_fargate_usage: 12490488.538193613
                      appsec_percentage: 42003027.23925859
                      appsec_usage: -58195834.93255247
                      asm_serverless_traced_invocations_percentage: 91063980.16927847
                      asm_serverless_traced_invocations_usage: 81569889.55442387
                      browser_percentage: 57663182.311534256
                      browser_usage: 63092582.41372672
                      ci_pipeline_indexed_spans_percentage: 5246217.89555186
                      ci_pipeline_indexed_spans_usage: -4246235.942059591
                      ci_test_indexed_spans_percentage: -1754175.2547010481
                      ci_test_indexed_spans_usage: 91270986.48577604
                      ci_visibility_itr_percentage: 12085777.676667541
                      ci_visibility_itr_usage: -46994758.24092012
                      cloud_siem_percentage: 5964221.58139886
                      cloud_siem_usage: 34524745.7385962
                      container_excl_agent_percentage: 33313295.37541996
                      container_excl_agent_usage: -90820435.65347387
                      container_percentage: -73954487.27958441
                      container_usage: 79063287.0151613
                      cspm_containers_percentage: 72448474.38281754
                      cspm_containers_usage: -52023419.87855505
                      cspm_hosts_percentage: 17209508.191311777
                      cspm_hosts_usage: 17533521.01337011
                      custom_event_percentage: -77536908.2779164
                      custom_event_usage: 51111918.692870975
                      custom_ingested_timeseries_percentage: 15742380.390644908
                      custom_ingested_timeseries_usage: -33372406.49655904
                      custom_timeseries_percentage: 79832788.11989704
                      custom_timeseries_usage: -45405209.880577944
                      cws_containers_percentage: 97707811.62074992
                      cws_containers_usage: -45684175.50472157
                      cws_hosts_percentage: -41492694.738534294
                      cws_hosts_usage: -84800642.60590842
                      dbm_hosts_percentage: -42151452.61132283
                      dbm_hosts_usage: 33576083.21477206
                      dbm_queries_percentage: 47820284.220276386
                      dbm_queries_usage: -13259791.683031797
                      error_tracking_percentage: -51212796.25226492
                      error_tracking_usage: 89316455.49417815
                      estimated_indexed_logs_percentage: 89225483.44968084
                      estimated_indexed_logs_usage: -5716868.822539121
                      estimated_indexed_spans_percentage: 47273783.31878543
                      estimated_indexed_spans_usage: 59682571.68687895
                      estimated_ingested_logs_percentage: -87632973.68542741
                      estimated_ingested_logs_usage: -71004044.82775167
                      estimated_ingested_spans_percentage: -28364073.850947544
                      estimated_ingested_spans_usage: -3817997.800232172
                      estimated_rum_sessions_percentage: 89419155.97198516
                      estimated_rum_sessions_usage: -41536515.476371475
                      fargate_percentage: 74239669.16897711
                      fargate_usage: -91658238.69417755
                      functions_percentage: 75701536.027695
                      functions_usage: 3545038.1883271635
                      incident_management_monthly_active_users_percentage: -63717964.6537906
                      incident_management_monthly_active_users_usage: 57370701.74733648
                      indexed_spans_percentage: 98910268.87913191
                      indexed_spans_usage: 16173037.30241102
                      infra_host_percentage: 71124726.79545122
                      infra_host_usage: -55316678.7006393
                      ingested_logs_bytes_percentage: -57936902.441127546
                      ingested_logs_bytes_usage: 66155149.247971326
                      ingested_spans_bytes_percentage: -92274602.158618
                      ingested_spans_bytes_usage: 54177850.811816126
                      invocations_percentage: 39538342.80968365
                      invocations_usage: 56824888.645193905
                      lambda_traced_invocations_percentage: -9011774.61567597
                      lambda_traced_invocations_usage: -85244878.12642966
                      logs_indexed_15day_percentage: -61760209.491091
                      logs_indexed_15day_usage: 93321950.05082494
                      logs_indexed_180day_percentage: 45070618.01981264
                      logs_indexed_180day_usage: 85440280.05770373
                      logs_indexed_1day_percentage: -95653418.01892631
                      logs_indexed_1day_usage: 20045146.28656797
                      logs_indexed_30day_percentage: -96417122.679459
                      logs_indexed_30day_usage: -83590659.2898871
                      logs_indexed_360day_percentage: 23189902.0566082
                      logs_indexed_360day_usage: -36607263.07124955
                      logs_indexed_3day_percentage: 55135359.9088355
                      logs_indexed_3day_usage: -83328947.0760343
                      logs_indexed_45day_percentage: -12042233.666975692
                      logs_indexed_45day_usage: -68388552.73165976
                      logs_indexed_60day_percentage: 66675382.772575706
                      logs_indexed_60day_usage: -85518628.76991083
                      logs_indexed_7day_percentage: -74772434.82612024
                      logs_indexed_7day_usage: 21779612.425989598
                      logs_indexed_90day_percentage: -43048715.16494315
                      logs_indexed_90day_usage: 60867507.540263206
                      logs_indexed_custom_retention_percentage: 18372919.19522266
                      logs_indexed_custom_retention_usage: -27798005.529205933
                      mobile_app_testing_percentage: -33723393.98755688
                      mobile_app_testing_usage: -14267701.898392275
                      ndm_netflow_percentage: -27542832.036018
                      ndm_netflow_usage: 22708137.93024437
                      npm_host_percentage: -90716392.02546659
                      npm_host_usage: 80803392.45847669
                      obs_pipeline_bytes_percentage: -19419681.710054442
                      obs_pipeline_bytes_usage: -62878235.032146536
                      obs_pipelines_vcpu_percentage: 15883148.367215768
                      obs_pipelines_vcpu_usage: -2236116.587063104
                      online_archive_percentage: -47398079.822681226
                      online_archive_usage: 38971912.01378223
                      profiled_container_percentage: 6782665.7507907
                      profiled_container_usage: 45819232.848005414
                      profiled_fargate_percentage: 2553934.2390898913
                      profiled_fargate_usage: 2079375.9294120371
                      profiled_host_percentage: 28354618.639856532
                      profiled_host_usage: 15529808.382017583
                      rum_browser_mobile_sessions_percentage: 74792859.92819068
                      rum_browser_mobile_sessions_usage: 97316711.70463389
                      rum_replay_sessions_percentage: -32332478.462061465
                      rum_replay_sessions_usage: -62642074.614796475
                      sds_scanned_bytes_percentage: -92565784.3386242
                      sds_scanned_bytes_usage: 61439610.732251644
                      serverless_apps_percentage: -418983.10973738134
                      serverless_apps_usage: 42016860.917963326
                      siem_ingested_bytes_percentage: -28253714.790234104
                      siem_ingested_bytes_usage: -51701527.097608045
                      snmp_percentage: 31155617.837134525
                      snmp_usage: -37117951.25793591
                      universal_service_monitoring_percentage: -13525632.488353029
                      universal_service_monitoring_usage: 70308037.26593119
                      vuln_management_hosts_percentage: -68985890.15415464
                      vuln_management_hosts_usage: -78729039.20193535
                      workflow_executions_percentage: -77110856.82394505
                      workflow_executions_usage: -1552342.6820546836
                  - month: '1990-05-21T12:09:15.540Z'
                    org_name: officia eiusmod
                    public_id: ullamco magna mollit enim
                    region: consectetur aliquip
                    tag_config_source: dolore pariatur qui Du
                    tags:
                      ea_64:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      amet_4f:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                      ad_7ef:
                        - datadog-integrations-lab
                        - datadog-integrations-lab
                    updated_at: '2010-12-13T17:12:31.461Z'
                    values:
                      api_percentage: -60682746.48060488
                      api_usage: -47454323.17806615
                      apm_fargate_percentage: -98884044.19430335
                      apm_fargate_usage: 49489175.398109585
                      apm_host_percentage: 90452883.68316
                      apm_host_usage: 34152620.48527157
                      apm_usm_percentage: 5884346.5769844055
                      apm_usm_usage: -45138994.91263418
                      appsec_fargate_percentage: -90712908.48740911
                      appsec_fargate_usage: -83542475.97843978
                      appsec_percentage: -83049219.6343386
                      appsec_usage: 5805639.93254742
                      asm_serverless_traced_invocations_percentage: -74428790.26372409
                      asm_serverless_traced_invocations_usage: -3387523.4001009315
                      browser_percentage: -39803172.98586345
                      browser_usage: 95586559.88169762
                      ci_pipeline_indexed_spans_percentage: 62549607.3955237
                      ci_pipeline_indexed_spans_usage: 46441683.527844846
                      ci_test_indexed_spans_percentage: 22194074.511463404
                      ci_test_indexed_spans_usage: 82894031.42939892
                      ci_visibility_itr_percentage: -45190734.41118549
                      ci_visibility_itr_usage: -60098034.92108672
                      cloud_siem_percentage: 19005806.492707804
                      cloud_siem_usage: -91906977.99588823
                      container_excl_agent_percentage: 75218846.30265966
                      container_excl_agent_usage: 64276528.299931765
                      container_percentage: -72040877.69269769
                      container_usage: -83423964.80000831
                      cspm_containers_percentage: -27051484.670576587
                      cspm_containers_usage: -2094139.5304947495
                      cspm_hosts_percentage: -92085607.66075334
                      cspm_hosts_usage: 8767828.82162787
                      custom_event_percentage: 88133691.75445595
                      custom_event_usage: 8894180.379359007
                      custom_ingested_timeseries_percentage: 23653806.24239251
                      custom_ingested_timeseries_usage: 7281752.230102569
                      custom_timeseries_percentage: -21395374.111018434
                      custom_timeseries_usage: -32561372.167353258
                      cws_containers_percentage: -26069603.397357628
                      cws_containers_usage: -72457708.26322211
                      cws_hosts_percentage: -58806220.37581062
                      cws_hosts_usage: 59238147.57152185
                      dbm_hosts_percentage: -66356530.77161967
                      dbm_hosts_usage: -39452902.468711495
                      dbm_queries_percentage: -31656756.167504787
                      dbm_queries_usage: -99846083.46688755
                      error_tracking_percentage: -82720029.55518265
                      error_tracking_usage: 68173666.36410677
                      estimated_indexed_logs_percentage: 88561161.65977222
                      estimated_indexed_logs_usage: -50704471.13155448
                      estimated_indexed_spans_percentage: 94257286.43487799
                      estimated_indexed_spans_usage: 60431609.53489855
                      estimated_ingested_logs_percentage: -24536002.530485317
                      estimated_ingested_logs_usage: 43831281.111981064
                      estimated_ingested_spans_percentage: 23493975.336322144
                      estimated_ingested_spans_usage: -59444152.09346898
                      estimated_rum_sessions_percentage: -44446693.803266205
                      estimated_rum_sessions_usage: -63836526.05942442
                      fargate_percentage: -46588081.63763988
                      fargate_usage: 73317237.30062535
                      functions_percentage: -85910490.15611829
                      functions_usage: -51625805.29045986
                      incident_management_monthly_active_users_percentage: 31310859.827720657
                      incident_management_monthly_active_users_usage: 79138824.62379137
                      indexed_spans_percentage: -92600173.90320763
                      indexed_spans_usage: 42595157.12691563
                      infra_host_percentage: 47380295.10557169
                      infra_host_usage: 90772751.82130995
                      ingested_logs_bytes_percentage: -7261314.366862908
                      ingested_logs_bytes_usage: -56686016.37898099
                      ingested_spans_bytes_percentage: 53445856.204707146
                      ingested_spans_bytes_usage: -30294517.532791063
                      invocations_percentage: 36178230.404844314
                      invocations_usage: -64961536.77594685
                      lambda_traced_invocations_percentage: 42728498.522010654
                      lambda_traced_invocations_usage: -66110451.44591867
                      logs_indexed_15day_percentage: -40999464.57264867
                      logs_indexed_15day_usage: -75778253.24076745
                      logs_indexed_180day_percentage: -76344083.49282894
                      logs_indexed_180day_usage: -47544925.02450138
                      logs_indexed_1day_percentage: 55215401.213550985
                      logs_indexed_1day_usage: -61343065.05180293
                      logs_indexed_30day_percentage: -58126809.77319475
                      logs_indexed_30day_usage: 69555196.15737966
                      logs_indexed_360day_percentage: -10630094.691021472
                      logs_indexed_360day_usage: -97021562.72657043
                      logs_indexed_3day_percentage: 56133157.47208506
                      logs_indexed_3day_usage: 50181024.08615956
                      logs_indexed_45day_percentage: -36890030.574709386
                      logs_indexed_45day_usage: -99249410.29943208
                      logs_indexed_60day_percentage: -34231144.49813776
                      logs_indexed_60day_usage: -50604215.7192585
                      logs_indexed_7day_percentage: -94307884.90989332
                      logs_indexed_7day_usage: -78141098.06331882
                      logs_indexed_90day_percentage: -51520723.32953774
                      logs_indexed_90day_usage: -5062394.004844651
                      logs_indexed_custom_retention_percentage: -95465662.48842883
                      logs_indexed_custom_retention_usage: 73724145.35105905
                      mobile_app_testing_percentage: 68519750.19975519
                      mobile_app_testing_usage: -15219234.33409506
                      ndm_netflow_percentage: 18001397.310899973
                      ndm_netflow_usage: -75392754.67267421
                      npm_host_percentage: -46638974.68142184
                      npm_host_usage: -73748939.03667283
                      obs_pipeline_bytes_percentage: -73996107.54437354
                      obs_pipeline_bytes_usage: 51886538.46760011
                      obs_pipelines_vcpu_percentage: -38418798.6182051
                      obs_pipelines_vcpu_usage: 55384258.540741086
                      online_archive_percentage: 92777502.49145281
                      online_archive_usage: 40044235.56800735
                      profiled_container_percentage: -46547793.24424125
                      profiled_container_usage: 69948338.52907401
                      profiled_fargate_percentage: -82211705.01069003
                      profiled_fargate_usage: 40238170.53619924
                      profiled_host_percentage: 92571479.31851482
                      profiled_host_usage: 49978539.49532059
                      rum_browser_mobile_sessions_percentage: -81137255.87607697
                      rum_browser_mobile_sessions_usage: 3724754.0375643224
                      rum_replay_sessions_percentage: 56447908.099354506
                      rum_replay_sessions_usage: 56152729.95138061
                      sds_scanned_bytes_percentage: -20997527.040521875
                      sds_scanned_bytes_usage: -32894919.152945198
                      serverless_apps_percentage: 76892987.72999766
                      serverless_apps_usage: 92247527.41662443
                      siem_ingested_bytes_percentage: 41980910.945032656
                      siem_ingested_bytes_usage: 16269446.394961923
                      snmp_percentage: 28444229.64061582
                      snmp_usage: 26913447.8439025
                      universal_service_monitoring_percentage: -82576083.07390769
                      universal_service_monitoring_usage: 28965577.11892256
                      vuln_management_hosts_percentage: -44837148.10622144
                      vuln_management_hosts_usage: 13189130.641022965
                      workflow_executions_percentage: 27676443.78949319
                      workflow_executions_usage: -26584403.72877738
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/usage/billable-summary:
    get:
      tags:
        - Accounts
        - Across
        - Billable
        - Summaries
        - Usage
      summary: 'Get Billable Usage Across Your Account '
      description: >-
        Get billable usage across your account.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: month
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage starting this month.
          example: '1992-04-06T18:39:52.088Z'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                usage:
                  - billing_plan: voluptate nulla tempor fugiat
                    end_date: '2000-04-02T01:13:02.506Z'
                    num_orgs: 63555062
                    org_name: Duis laboris id occaecat
                    public_id: Duis tempor
                    ratio_in_month: -4863869.514086172
                    region: incididunt irure
                    start_date: '1944-08-30T16:02:21.503Z'
                    usage:
                      apm_fargate_average:
                        account_billable_usage: 68515963
                        elapsed_usage_hours: 20124439
                        first_billable_usage_hour: '1970-08-02T03:59:22.273Z'
                        last_billable_usage_hour: '1982-03-22T23:15:47.538Z'
                        org_billable_usage: -64741909
                        percentage_in_account: -43677297.87068795
                        usage_unit: dolore ipsum nostrud ut
                      apm_fargate_sum:
                        account_billable_usage: 1728867
                        elapsed_usage_hours: -30418116
                        first_billable_usage_hour: '1997-02-22T07:28:28.637Z'
                        last_billable_usage_hour: '2016-07-24T00:16:32.963Z'
                        org_billable_usage: 80766717
                        percentage_in_account: -36810866.27071921
                        usage_unit: mollit eiusmod Duis
                      apm_host_sum:
                        account_billable_usage: 31147888
                        elapsed_usage_hours: 49322073
                        first_billable_usage_hour: '1981-04-30T17:14:10.976Z'
                        last_billable_usage_hour: '2021-05-14T00:31:39.894Z'
                        org_billable_usage: 54292347
                        percentage_in_account: -93896847.44971776
                        usage_unit: ipsum in in
                      apm_host_top99p:
                        account_billable_usage: 3099824
                        elapsed_usage_hours: 96222853
                        first_billable_usage_hour: '1953-04-12T12:41:36.149Z'
                        last_billable_usage_hour: '1977-12-26T19:30:45.625Z'
                        org_billable_usage: 7801847
                        percentage_in_account: 4733892.284262225
                        usage_unit: qui lab
                      apm_profiler_host_sum:
                        account_billable_usage: 27714021
                        elapsed_usage_hours: -99794047
                        first_billable_usage_hour: '1980-01-12T02:10:23.562Z'
                        last_billable_usage_hour: '2003-08-19T15:24:23.378Z'
                        org_billable_usage: 51942473
                        percentage_in_account: 24476413.083578527
                        usage_unit: in tempor
                      apm_profiler_host_top99p:
                        account_billable_usage: 30328430
                        elapsed_usage_hours: 46676254
                        first_billable_usage_hour: '1975-05-10T07:03:29.607Z'
                        last_billable_usage_hour: '1976-11-14T19:05:36.034Z'
                        org_billable_usage: 23271251
                        percentage_in_account: -9560765.619569138
                        usage_unit: des
                      apm_trace_search_sum:
                        account_billable_usage: 29141570
                        elapsed_usage_hours: -63622378
                        first_billable_usage_hour: '1954-09-10T21:35:38.472Z'
                        last_billable_usage_hour: '1974-11-29T12:24:56.002Z'
                        org_billable_usage: 60692716
                        percentage_in_account: -67473257.96451293
                        usage_unit: aliquip laborum
                      application_security_fargate_average:
                        account_billable_usage: 27032575
                        elapsed_usage_hours: 81188886
                        first_billable_usage_hour: '2009-09-17T10:14:04.011Z'
                        last_billable_usage_hour: '2011-03-13T16:58:56.789Z'
                        org_billable_usage: -64232037
                        percentage_in_account: 31103809.904700294
                        usage_unit: dolore Excepteur
                      application_security_host_sum:
                        account_billable_usage: -88828719
                        elapsed_usage_hours: 80129426
                        first_billable_usage_hour: '1970-06-14T20:46:39.104Z'
                        last_billable_usage_hour: '1991-06-05T14:09:10.267Z'
                        org_billable_usage: -98965008
                        percentage_in_account: 12198074.483134076
                        usage_unit: magna sunt est occaecat
                      application_security_host_top99p:
                        account_billable_usage: -22804955
                        elapsed_usage_hours: -87508461
                        first_billable_usage_hour: '2023-04-30T23:43:23.368Z'
                        last_billable_usage_hour: '1979-05-25T05:12:10.283Z'
                        org_billable_usage: -80560921
                        percentage_in_account: -30917234.24002239
                        usage_unit: culpa consectetur proident laboris anim
                      ci_pipeline_indexed_spans_sum:
                        account_billable_usage: -46458411
                        elapsed_usage_hours: -82575115
                        first_billable_usage_hour: '1974-07-10T20:42:23.751Z'
                        last_billable_usage_hour: '1984-05-31T21:51:06.988Z'
                        org_billable_usage: -50189107
                        percentage_in_account: 63693190.871287316
                        usage_unit: Exce
                      ci_pipeline_maximum:
                        account_billable_usage: -89453294
                        elapsed_usage_hours: -59094906
                        first_billable_usage_hour: '2004-07-26T04:17:01.730Z'
                        last_billable_usage_hour: '1957-06-14T10:08:08.955Z'
                        org_billable_usage: 99210864
                        percentage_in_account: -45437606.508767605
                        usage_unit: Ut ullamco proident
                      ci_pipeline_sum:
                        account_billable_usage: 90521071
                        elapsed_usage_hours: 30764370
                        first_billable_usage_hour: '1975-03-10T23:23:28.386Z'
                        last_billable_usage_hour: '1946-06-14T18:15:02.723Z'
                        org_billable_usage: 75003124
                        percentage_in_account: 2530433.2625787556
                        usage_unit: Ut ut commodo exercitation ex
                      ci_test_indexed_spans_sum:
                        account_billable_usage: -81299501
                        elapsed_usage_hours: -98531991
                        first_billable_usage_hour: '1959-02-15T19:57:22.636Z'
                        last_billable_usage_hour: '1975-05-22T16:25:56.820Z'
                        org_billable_usage: -4766573
                        percentage_in_account: -2002124.970921889
                        usage_unit: est occaecat tempor minim aute
                      ci_testing_maximum:
                        account_billable_usage: 31034930
                        elapsed_usage_hours: 75464609
                        first_billable_usage_hour: '1970-11-09T05:34:05.408Z'
                        last_billable_usage_hour: '1961-01-18T02:09:51.927Z'
                        org_billable_usage: -42398247
                        percentage_in_account: -49607979.01056355
                        usage_unit: ipsum dolor
                      ci_testing_sum:
                        account_billable_usage: 22367682
                        elapsed_usage_hours: -29546355
                        first_billable_usage_hour: '1988-12-03T12:55:54.529Z'
                        last_billable_usage_hour: '2015-07-29T08:03:17.866Z'
                        org_billable_usage: 22963244
                        percentage_in_account: 47642971.95630437
                        usage_unit: do sed cupidatat
                      cloud_cost_management_average:
                        account_billable_usage: 45791009
                        elapsed_usage_hours: 31138062
                        first_billable_usage_hour: '1947-07-14T10:39:47.947Z'
                        last_billable_usage_hour: '1977-02-06T07:41:11.299Z'
                        org_billable_usage: -95037238
                        percentage_in_account: -72527309.8187719
                        usage_unit: nostrud incididunt est proident
                      cloud_cost_management_sum:
                        account_billable_usage: -64327742
                        elapsed_usage_hours: 4948205
                        first_billable_usage_hour: '1948-03-19T14:13:20.244Z'
                        last_billable_usage_hour: '1964-12-25T15:29:24.338Z'
                        org_billable_usage: -8872145
                        percentage_in_account: -76503198.7087784
                        usage_unit: proident deserunt do
                      cspm_container_sum:
                        account_billable_usage: 48270066
                        elapsed_usage_hours: 27440968
                        first_billable_usage_hour: '1970-12-29T12:05:41.215Z'
                        last_billable_usage_hour: '1966-04-26T21:48:18.074Z'
                        org_billable_usage: -41029638
                        percentage_in_account: 47960209.743765384
                        usage_unit: officia aute proident
                      cspm_host_sum:
                        account_billable_usage: 22591535
                        elapsed_usage_hours: 2387812
                        first_billable_usage_hour: '1990-07-12T23:30:39.579Z'
                        last_billable_usage_hour: '1980-08-31T02:24:39.628Z'
                        org_billable_usage: 53683028
                        percentage_in_account: 98298769.1583474
                        usage_unit: amet qui dolor cillum
                      cspm_host_top99p:
                        account_billable_usage: 16683638
                        elapsed_usage_hours: 7920429
                        first_billable_usage_hour: '1950-10-20T13:10:56.985Z'
                        last_billable_usage_hour: '1965-12-31T17:51:47.742Z'
                        org_billable_usage: 49560723
                        percentage_in_account: -60144796.04109346
                        usage_unit: aute enim
                      custom_event_sum:
                        account_billable_usage: -27100490
                        elapsed_usage_hours: -45746714
                        first_billable_usage_hour: '2014-08-31T10:05:59.818Z'
                        last_billable_usage_hour: '2001-02-25T16:16:01.927Z'
                        org_billable_usage: -51471336
                        percentage_in_account: 64522122.29643011
                        usage_unit: eu ad aliquip ut
                      cws_container_sum:
                        account_billable_usage: -51736068
                        elapsed_usage_hours: 67511941
                        first_billable_usage_hour: '1986-01-16T19:25:09.351Z'
                        last_billable_usage_hour: '2004-03-11T08:39:50.937Z'
                        org_billable_usage: -81348299
                        percentage_in_account: -24505104.468445763
                        usage_unit: incididunt adipisicing velit enim
                      cws_host_sum:
                        account_billable_usage: 7671053
                        elapsed_usage_hours: -81211949
                        first_billable_usage_hour: '1984-12-31T00:14:38.007Z'
                        last_billable_usage_hour: '1964-12-26T11:47:42.667Z'
                        org_billable_usage: -18501871
                        percentage_in_account: -12547774.16533716
                        usage_unit: commodo e
                      cws_host_top99p:
                        account_billable_usage: -31100105
                        elapsed_usage_hours: -73557401
                        first_billable_usage_hour: '1948-04-12T05:10:21.806Z'
                        last_billable_usage_hour: '1954-05-05T15:32:52.496Z'
                        org_billable_usage: -8988585
                        percentage_in_account: -21098215.02933009
                        usage_unit: do labore ea
                      dbm_host_sum:
                        account_billable_usage: 89110382
                        elapsed_usage_hours: 65955980
                        first_billable_usage_hour: '1996-12-29T10:45:12.700Z'
                        last_billable_usage_hour: '2023-05-02T13:51:00.545Z'
                        org_billable_usage: -48372768
                        percentage_in_account: -51868036.828705445
                        usage_unit: ut
                      dbm_host_top99p:
                        account_billable_usage: -8801161
                        elapsed_usage_hours: 88899786
                        first_billable_usage_hour: '1995-03-26T14:51:23.168Z'
                        last_billable_usage_hour: '1983-07-02T16:53:18.916Z'
                        org_billable_usage: -19927284
                        percentage_in_account: -74893936.1998108
                        usage_unit: commodo adipisicing exercitation enim laboris
                      dbm_normalized_queries_average:
                        account_billable_usage: 90399584
                        elapsed_usage_hours: -98577317
                        first_billable_usage_hour: '1966-11-13T09:06:52.090Z'
                        last_billable_usage_hour: '2004-11-09T07:28:07.474Z'
                        org_billable_usage: 18089454
                        percentage_in_account: -30100674.872200057
                        usage_unit: officia ex Excepteur adipisicing
                      dbm_normalized_queries_sum:
                        account_billable_usage: 71911736
                        elapsed_usage_hours: 92051189
                        first_billable_usage_hour: '1996-03-29T23:02:09.054Z'
                        last_billable_usage_hour: '2014-10-06T20:41:48.118Z'
                        org_billable_usage: -1686854
                        percentage_in_account: -45911082.83271112
                        usage_unit: eu dolore irure
                      fargate_container_apm_and_profiler_average:
                        account_billable_usage: -71582100
                        elapsed_usage_hours: -18167651
                        first_billable_usage_hour: '2000-06-24T02:31:47.688Z'
                        last_billable_usage_hour: '1949-12-07T21:39:44.278Z'
                        org_billable_usage: 9512792
                        percentage_in_account: 64989480.867752075
                        usage_unit: officia veniam
                      fargate_container_apm_and_profiler_sum:
                        account_billable_usage: -67988616
                        elapsed_usage_hours: 72020543
                        first_billable_usage_hour: '1949-06-27T02:06:50.234Z'
                        last_billable_usage_hour: '2020-08-23T10:14:49.364Z'
                        org_billable_usage: 85203230
                        percentage_in_account: 28924079.027898088
                        usage_unit: nisi culpa dolore ex enim
                      fargate_container_average:
                        account_billable_usage: -23939032
                        elapsed_usage_hours: 92551496
                        first_billable_usage_hour: '1951-06-30T22:18:50.459Z'
                        last_billable_usage_hour: '1961-03-15T19:24:43.795Z'
                        org_billable_usage: 63936554
                        percentage_in_account: 21410232.3215473
                        usage_unit: in ess
                      fargate_container_profiler_average:
                        account_billable_usage: -23984612
                        elapsed_usage_hours: 34321378
                        first_billable_usage_hour: '1983-06-02T02:54:01.857Z'
                        last_billable_usage_hour: '2014-07-08T20:02:08.457Z'
                        org_billable_usage: -19746156
                        percentage_in_account: 11420957.02275379
                        usage_unit: 'id '
                      fargate_container_profiler_sum:
                        account_billable_usage: 1655540
                        elapsed_usage_hours: -21751452
                        first_billable_usage_hour: '1954-05-08T07:24:03.637Z'
                        last_billable_usage_hour: '2002-04-05T19:52:18.359Z'
                        org_billable_usage: -77965239
                        percentage_in_account: 319107.3184068352
                        usage_unit: magna fugiat irure eu
                      fargate_container_sum:
                        account_billable_usage: 19972963
                        elapsed_usage_hours: -32793481
                        first_billable_usage_hour: '1969-04-12T11:47:40.451Z'
                        last_billable_usage_hour: '1987-05-28T09:28:24.335Z'
                        org_billable_usage: -30036318
                        percentage_in_account: 75546417.31900674
                        usage_unit: do in
                      incident_management_maximum:
                        account_billable_usage: 98162767
                        elapsed_usage_hours: -29599134
                        first_billable_usage_hour: '1945-03-17T22:48:22.176Z'
                        last_billable_usage_hour: '1992-11-20T05:07:47.079Z'
                        org_billable_usage: -58910699
                        percentage_in_account: 41797770.003000826
                        usage_unit: culpa anim enim
                      incident_management_sum:
                        account_billable_usage: 60492411
                        elapsed_usage_hours: 35028113
                        first_billable_usage_hour: '2002-08-04T03:21:15.401Z'
                        last_billable_usage_hour: '1984-08-08T18:05:26.215Z'
                        org_billable_usage: -70009074
                        percentage_in_account: 32705840.206375077
                        usage_unit: ad Excepteur
                      infra_and_apm_host_sum:
                        account_billable_usage: -59531689
                        elapsed_usage_hours: -46819831
                        first_billable_usage_hour: '1977-05-03T02:51:16.699Z'
                        last_billable_usage_hour: '2020-01-06T23:18:49.762Z'
                        org_billable_usage: 19291871
                        percentage_in_account: -32850307.688811496
                        usage_unit: qui sit
                      infra_and_apm_host_top99p:
                        account_billable_usage: -39099671
                        elapsed_usage_hours: -32911857
                        first_billable_usage_hour: '1946-01-06T15:36:53.674Z'
                        last_billable_usage_hour: '2006-06-18T07:02:06.036Z'
                        org_billable_usage: 75090818
                        percentage_in_account: 56849307.73733264
                        usage_unit: elit
                      infra_container_sum:
                        account_billable_usage: -10655750
                        elapsed_usage_hours: 4858016
                        first_billable_usage_hour: '1960-02-05T00:23:36.522Z'
                        last_billable_usage_hour: '2002-01-19T01:00:18.812Z'
                        org_billable_usage: -77186187
                        percentage_in_account: 91203494.66663328
                        usage_unit: reprehenderit irure Ut aliqua
                      infra_host_sum:
                        account_billable_usage: 83776536
                        elapsed_usage_hours: -42988765
                        first_billable_usage_hour: '2006-07-17T08:29:32.500Z'
                        last_billable_usage_hour: '2008-02-29T07:51:27.323Z'
                        org_billable_usage: 28092128
                        percentage_in_account: 27463268.416076854
                        usage_unit: culpa cillum exercitation esse
                      infra_host_top99p:
                        account_billable_usage: 98990120
                        elapsed_usage_hours: -59902260
                        first_billable_usage_hour: '2022-05-17T01:19:24.489Z'
                        last_billable_usage_hour: '1946-09-18T20:57:33.806Z'
                        org_billable_usage: -80270419
                        percentage_in_account: 65183064.6687935
                        usage_unit: pariatur Duis
                      ingested_spans_sum:
                        account_billable_usage: 42396060
                        elapsed_usage_hours: -56875629
                        first_billable_usage_hour: '1952-09-03T05:25:36.519Z'
                        last_billable_usage_hour: '2023-09-05T17:44:28.568Z'
                        org_billable_usage: 706506
                        percentage_in_account: 87000544.40820009
                        usage_unit: deserunt commodo sunt in
                      ingested_timeseries_average:
                        account_billable_usage: -23432634
                        elapsed_usage_hours: -70948343
                        first_billable_usage_hour: '1963-11-24T09:29:50.841Z'
                        last_billable_usage_hour: '2004-06-21T12:00:52.982Z'
                        org_billable_usage: -63633366
                        percentage_in_account: -91578219.69515982
                        usage_unit: consectetur aliquip
                      ingested_timeseries_sum:
                        account_billable_usage: -95839926
                        elapsed_usage_hours: 41893515
                        first_billable_usage_hour: '1967-05-07T05:35:55.641Z'
                        last_billable_usage_hour: '1982-02-15T16:25:23.788Z'
                        org_billable_usage: 93774955
                        percentage_in_account: -21750588.080417722
                        usage_unit: officia sint magna do
                      iot_sum:
                        account_billable_usage: -83417168
                        elapsed_usage_hours: 39363718
                        first_billable_usage_hour: '1980-07-15T08:04:16.031Z'
                        last_billable_usage_hour: '1999-08-31T18:46:41.173Z'
                        org_billable_usage: -30065407
                        percentage_in_account: 876024.486216262
                        usage_unit: qui occaecat dolore nostrud velit
                      iot_top99p:
                        account_billable_usage: -29237180
                        elapsed_usage_hours: 5115243
                        first_billable_usage_hour: '1999-01-05T08:30:01.242Z'
                        last_billable_usage_hour: '2020-09-17T18:01:12.551Z'
                        org_billable_usage: 65955118
                        percentage_in_account: -38186789.346151166
                        usage_unit: do mollit
                      lambda_function_average:
                        account_billable_usage: 13022489
                        elapsed_usage_hours: -24234654
                        first_billable_usage_hour: '2016-06-29T22:37:46.258Z'
                        last_billable_usage_hour: '1992-04-25T03:29:18.447Z'
                        org_billable_usage: -73906403
                        percentage_in_account: 9532905.086370885
                        usage_unit: ad nulla sint elit
                      lambda_function_sum:
                        account_billable_usage: -61298501
                        elapsed_usage_hours: 43635284
                        first_billable_usage_hour: '1946-08-28T00:06:24.965Z'
                        last_billable_usage_hour: '1957-03-14T20:11:16.175Z'
                        org_billable_usage: -12076903
                        percentage_in_account: 31084533.279779196
                        usage_unit: culpa in in
                      logs_forwarding_sum:
                        account_billable_usage: -55509482
                        elapsed_usage_hours: 18374764
                        first_billable_usage_hour: '1979-09-26T14:55:34.010Z'
                        last_billable_usage_hour: '1983-02-17T19:40:54.558Z'
                        org_billable_usage: -47872344
                        percentage_in_account: -9821104.88192451
                        usage_unit: dolor velit ex
                      logs_indexed_15day_sum:
                        account_billable_usage: -70036628
                        elapsed_usage_hours: -12745108
                        first_billable_usage_hour: '1948-01-06T17:51:59.053Z'
                        last_billable_usage_hour: '1969-01-06T09:22:12.552Z'
                        org_billable_usage: 78901594
                        percentage_in_account: 93579072.90491977
                        usage_unit: consequat in
                      logs_indexed_180day_sum:
                        account_billable_usage: 57343632
                        elapsed_usage_hours: 79716410
                        first_billable_usage_hour: '1987-07-20T02:53:28.506Z'
                        last_billable_usage_hour: '2012-05-26T01:49:35.173Z'
                        org_billable_usage: 59807965
                        percentage_in_account: -40352419.71944674
                        usage_unit: Duis ut
                      logs_indexed_1day_sum:
                        account_billable_usage: -7835601
                        elapsed_usage_hours: 17896931
                        first_billable_usage_hour: '1974-07-17T04:19:04.501Z'
                        last_billable_usage_hour: '1965-05-28T22:03:47.325Z'
                        org_billable_usage: 91562744
                        percentage_in_account: -14741048.2984422
                        usage_unit: aute
                      logs_indexed_30day_sum:
                        account_billable_usage: 87154973
                        elapsed_usage_hours: 10519285
                        first_billable_usage_hour: '1989-05-06T20:23:49.735Z'
                        last_billable_usage_hour: '1974-01-28T11:15:39.347Z'
                        org_billable_usage: 8561930
                        percentage_in_account: 25395153.17286183
                        usage_unit: mollit nostrud sed veniam sit
                      logs_indexed_360day_sum:
                        account_billable_usage: 12982017
                        elapsed_usage_hours: 28403845
                        first_billable_usage_hour: '1951-03-07T12:47:54.479Z'
                        last_billable_usage_hour: '1985-06-12T00:42:57.641Z'
                        org_billable_usage: -71253102
                        percentage_in_account: -54485249.61262162
                        usage_unit: dolor quis dolore
                      logs_indexed_3day_sum:
                        account_billable_usage: -91088768
                        elapsed_usage_hours: 21831296
                        first_billable_usage_hour: '1944-10-15T17:20:32.619Z'
                        last_billable_usage_hour: '2006-10-22T05:19:21.706Z'
                        org_billable_usage: 72632773
                        percentage_in_account: 24665605.445195824
                        usage_unit: ut sed ullamco incididunt officia
                      logs_indexed_45day_sum:
                        account_billable_usage: -30620898
                        elapsed_usage_hours: 87284621
                        first_billable_usage_hour: '1964-01-14T17:36:06.751Z'
                        last_billable_usage_hour: '2022-01-23T20:48:19.300Z'
                        org_billable_usage: 9752197
                        percentage_in_account: 14447818.027470976
                        usage_unit: ad ex magna
                      logs_indexed_60day_sum:
                        account_billable_usage: -62886282
                        elapsed_usage_hours: -67908547
                        first_billable_usage_hour: '1963-06-18T12:03:43.192Z'
                        last_billable_usage_hour: '1979-07-08T00:34:32.214Z'
                        org_billable_usage: -47591987
                        percentage_in_account: -95098901.10809809
                        usage_unit: dolor incididunt
                      logs_indexed_7day_sum:
                        account_billable_usage: -73101747
                        elapsed_usage_hours: 66401580
                        first_billable_usage_hour: '1999-02-26T10:04:55.541Z'
                        last_billable_usage_hour: '1977-12-02T11:35:36.899Z'
                        org_billable_usage: -25849557
                        percentage_in_account: -73697387.77636732
                        usage_unit: minim
                      logs_indexed_90day_sum:
                        account_billable_usage: 69574792
                        elapsed_usage_hours: 89053909
                        first_billable_usage_hour: '1975-02-10T05:25:38.126Z'
                        last_billable_usage_hour: '1977-09-27T00:17:14.407Z'
                        org_billable_usage: 6702835
                        percentage_in_account: -84483040.18385161
                        usage_unit: dolore et o
                      logs_indexed_custom_retention_sum:
                        account_billable_usage: 95927576
                        elapsed_usage_hours: 6855051
                        first_billable_usage_hour: '1963-04-16T03:26:18.710Z'
                        last_billable_usage_hour: '1951-08-14T09:23:13.676Z'
                        org_billable_usage: 97414932
                        percentage_in_account: 36599709.687677115
                        usage_unit: proident velit sunt fugiat
                      logs_indexed_sum:
                        account_billable_usage: -30873653
                        elapsed_usage_hours: -82860393
                        first_billable_usage_hour: '1974-12-18T01:07:20.903Z'
                        last_billable_usage_hour: '1968-10-17T09:25:06.897Z'
                        org_billable_usage: 96818690
                        percentage_in_account: 21908520.433534265
                        usage_unit: minim
                      logs_ingested_sum:
                        account_billable_usage: -87851941
                        elapsed_usage_hours: 62119542
                        first_billable_usage_hour: '1949-02-06T07:04:02.700Z'
                        last_billable_usage_hour: '1966-07-19T12:55:41.897Z'
                        org_billable_usage: 89507179
                        percentage_in_account: 70880540.46153101
                        usage_unit: commodo aute culpa
                      network_device_sum:
                        account_billable_usage: -7403252
                        elapsed_usage_hours: 81466298
                        first_billable_usage_hour: '1955-09-15T11:14:25.538Z'
                        last_billable_usage_hour: '2006-02-22T22:38:12.028Z'
                        org_billable_usage: -52724533
                        percentage_in_account: 18213612.986856103
                        usage_unit: reprehenderit officia sit
                      network_device_top99p:
                        account_billable_usage: -39600669
                        elapsed_usage_hours: -70960207
                        first_billable_usage_hour: '2011-10-13T04:53:01.317Z'
                        last_billable_usage_hour: '1959-10-27T00:28:43.268Z'
                        org_billable_usage: 55250980
                        percentage_in_account: 68037989.00746775
                        usage_unit: ullamco Lorem reprehen
                      npm_flow_sum:
                        account_billable_usage: -80371923
                        elapsed_usage_hours: 85414533
                        first_billable_usage_hour: '1974-02-06T20:57:56.795Z'
                        last_billable_usage_hour: '1978-01-26T06:54:38.827Z'
                        org_billable_usage: -52088443
                        percentage_in_account: -91933117.08710957
                        usage_unit: ad mollit occaecat id
                      npm_host_sum:
                        account_billable_usage: 27305876
                        elapsed_usage_hours: -73818422
                        first_billable_usage_hour: '1988-04-05T17:16:02.604Z'
                        last_billable_usage_hour: '1960-05-02T06:19:04.772Z'
                        org_billable_usage: -9273029
                        percentage_in_account: -53324409.54304771
                        usage_unit: id laboris culpa consectetur
                      npm_host_top99p:
                        account_billable_usage: -33380934
                        elapsed_usage_hours: -62812414
                        first_billable_usage_hour: '1958-06-15T09:28:14.371Z'
                        last_billable_usage_hour: '1969-04-07T05:39:22.387Z'
                        org_billable_usage: 47920404
                        percentage_in_account: -70661512.00223954
                        usage_unit: enim
                      observability_pipeline_sum:
                        account_billable_usage: -6732113
                        elapsed_usage_hours: -45495972
                        first_billable_usage_hour: '1963-02-06T15:38:52.230Z'
                        last_billable_usage_hour: '2013-07-26T04:46:42.764Z'
                        org_billable_usage: -13665204
                        percentage_in_account: 43271562.29965022
                        usage_unit: enim nulla proident
                      online_archive_sum:
                        account_billable_usage: -65536151
                        elapsed_usage_hours: 76355845
                        first_billable_usage_hour: '2009-06-28T12:40:54.079Z'
                        last_billable_usage_hour: '2004-08-30T08:24:45.135Z'
                        org_billable_usage: 66832730
                        percentage_in_account: -35167837.20017766
                        usage_unit: elit dolore labore
                      prof_container_sum:
                        account_billable_usage: 24561380
                        elapsed_usage_hours: -2419925
                        first_billable_usage_hour: '2007-02-08T23:22:13.683Z'
                        last_billable_usage_hour: '1977-10-16T16:37:59.732Z'
                        org_billable_usage: -24630369
                        percentage_in_account: -63083214.714379475
                        usage_unit: ut magna
                      prof_host_sum:
                        account_billable_usage: 51674829
                        elapsed_usage_hours: 85051096
                        first_billable_usage_hour: '1980-05-21T15:06:32.032Z'
                        last_billable_usage_hour: '1969-11-30T18:24:09.924Z'
                        org_billable_usage: -32709130
                        percentage_in_account: 61465144.11415875
                        usage_unit: al
                      prof_host_top99p:
                        account_billable_usage: -31106768
                        elapsed_usage_hours: 36176577
                        first_billable_usage_hour: '1951-10-12T04:32:00.352Z'
                        last_billable_usage_hour: '1991-05-04T10:54:31.301Z'
                        org_billable_usage: -80704701
                        percentage_in_account: 4600284.068251923
                        usage_unit: incididunt culpa
                      rum_lite_sum:
                        account_billable_usage: 34134643
                        elapsed_usage_hours: 40543533
                        first_billable_usage_hour: '1983-06-06T01:55:29.696Z'
                        last_billable_usage_hour: '1993-05-11T05:47:55.645Z'
                        org_billable_usage: -45067645
                        percentage_in_account: -38582985.73777708
                        usage_unit: velit nostrud nisi d
                      rum_replay_sum:
                        account_billable_usage: 42912898
                        elapsed_usage_hours: -74354569
                        first_billable_usage_hour: '2001-09-16T16:58:13.598Z'
                        last_billable_usage_hour: '1977-10-24T09:03:33.375Z'
                        org_billable_usage: -78332918
                        percentage_in_account: -45470902.646154165
                        usage_unit: si
                      rum_sum:
                        account_billable_usage: 33663123
                        elapsed_usage_hours: -33887716
                        first_billable_usage_hour: '1991-04-17T19:56:49.785Z'
                        last_billable_usage_hour: '1991-06-27T17:00:02.187Z'
                        org_billable_usage: 17908767
                        percentage_in_account: 87078498.89029062
                        usage_unit: Duis reprehenderit
                      rum_units_sum:
                        account_billable_usage: 43377651
                        elapsed_usage_hours: -15430796
                        first_billable_usage_hour: '1960-03-08T11:54:20.745Z'
                        last_billable_usage_hour: '1971-04-14T00:29:45.244Z'
                        org_billable_usage: -95084189
                        percentage_in_account: 6193846.888564184
                        usage_unit: ex a
                      sensitive_data_scanner_sum:
                        account_billable_usage: 61459985
                        elapsed_usage_hours: 20690908
                        first_billable_usage_hour: '1982-12-29T15:25:45.249Z'
                        last_billable_usage_hour: '1950-06-12T16:06:47.175Z'
                        org_billable_usage: 37669918
                        percentage_in_account: 82140911.2962333
                        usage_unit: Ut exercitatio
                      serverless_apm_sum:
                        account_billable_usage: -19314845
                        elapsed_usage_hours: -46865289
                        first_billable_usage_hour: '1997-12-01T03:38:04.303Z'
                        last_billable_usage_hour: '1963-08-29T22:19:02.467Z'
                        org_billable_usage: 22508654
                        percentage_in_account: -35386773.06507085
                        usage_unit: dolor adipisicing cupidatat ad
                      serverless_infra_average:
                        account_billable_usage: -41404516
                        elapsed_usage_hours: 88411111
                        first_billable_usage_hour: '1986-08-01T08:34:59.096Z'
                        last_billable_usage_hour: '1977-08-14T17:30:20.246Z'
                        org_billable_usage: 19640179
                        percentage_in_account: 51042560.273566455
                        usage_unit: irure aliqua Lorem
                      serverless_infra_sum:
                        account_billable_usage: 37250368
                        elapsed_usage_hours: 53418817
                        first_billable_usage_hour: '2023-08-28T23:49:11.785Z'
                        last_billable_usage_hour: '2005-05-21T07:48:53.327Z'
                        org_billable_usage: 99184899
                        percentage_in_account: 26635225.798827916
                        usage_unit: minim irure cillum consequat
                      serverless_invocation_sum:
                        account_billable_usage: 28064436
                        elapsed_usage_hours: 61911896
                        first_billable_usage_hour: '2005-05-15T14:36:04.594Z'
                        last_billable_usage_hour: '1964-01-13T02:51:53.851Z'
                        org_billable_usage: 4900418
                        percentage_in_account: 5119299.769543245
                        usage_unit: est esse
                      siem_sum:
                        account_billable_usage: -54051806
                        elapsed_usage_hours: -37394679
                        first_billable_usage_hour: '2019-09-19T18:05:01.909Z'
                        last_billable_usage_hour: '2012-02-12T07:05:31.308Z'
                        org_billable_usage: -33089200
                        percentage_in_account: 67359012.9062953
                        usage_unit: cup
                      standard_timeseries_average:
                        account_billable_usage: 65756805
                        elapsed_usage_hours: -29084565
                        first_billable_usage_hour: '1986-05-13T14:50:19.740Z'
                        last_billable_usage_hour: '1981-03-14T04:02:23.873Z'
                        org_billable_usage: -19288096
                        percentage_in_account: 82538672.01237863
                        usage_unit: ipsum ad
                      synthetics_api_tests_sum:
                        account_billable_usage: 37562247
                        elapsed_usage_hours: -34462546
                        first_billable_usage_hour: '1960-03-10T03:45:46.462Z'
                        last_billable_usage_hour: '1986-11-10T23:20:12.691Z'
                        org_billable_usage: 50945057
                        percentage_in_account: -85398690.24020717
                        usage_unit: laboris nisi non amet
                      synthetics_app_testing_maximum:
                        account_billable_usage: 58831331
                        elapsed_usage_hours: -87214732
                        first_billable_usage_hour: '2011-11-19T19:27:41.921Z'
                        last_billable_usage_hour: '1974-03-12T00:22:42.687Z'
                        org_billable_usage: -71669847
                        percentage_in_account: 9526657.495366737
                        usage_unit: esse et
                      synthetics_browser_checks_sum:
                        account_billable_usage: -46238819
                        elapsed_usage_hours: 3361627
                        first_billable_usage_hour: '1955-01-11T19:08:52.294Z'
                        last_billable_usage_hour: '2018-01-17T17:12:30.746Z'
                        org_billable_usage: -85580856
                        percentage_in_account: -53497140.595256455
                        usage_unit: nisi dolore
                      timeseries_average:
                        account_billable_usage: -50075155
                        elapsed_usage_hours: -41446539
                        first_billable_usage_hour: '1998-06-06T13:56:46.869Z'
                        last_billable_usage_hour: '1986-11-05T18:43:45.241Z'
                        org_billable_usage: -80655705
                        percentage_in_account: -277307.81885519624
                        usage_unit: dolor est adip
                      timeseries_sum:
                        account_billable_usage: 85871282
                        elapsed_usage_hours: 25540685
                        first_billable_usage_hour: '1956-12-26T10:47:13.626Z'
                        last_billable_usage_hour: '1978-05-18T19:31:11.034Z'
                        org_billable_usage: -45490882
                        percentage_in_account: 27568594.038617358
                        usage_unit: laboris esse
                  - billing_plan: ea Lorem id
                    end_date: '1952-10-21T01:56:25.017Z'
                    num_orgs: 26466745
                    org_name: in deserunt esse
                    public_id: 'proident '
                    ratio_in_month: -86268968.48854062
                    region: eu incididunt laboris anim quis
                    start_date: '1968-07-28T00:17:58.054Z'
                    usage:
                      apm_fargate_average:
                        account_billable_usage: -60190677
                        elapsed_usage_hours: -38019978
                        first_billable_usage_hour: '2020-11-07T01:31:19.891Z'
                        last_billable_usage_hour: '1978-12-29T02:06:44.690Z'
                        org_billable_usage: 32393046
                        percentage_in_account: -49518757.25732155
                        usage_unit: Duis quis incididunt elit
                      apm_fargate_sum:
                        account_billable_usage: -29067333
                        elapsed_usage_hours: 16215574
                        first_billable_usage_hour: '1993-05-11T09:16:56.958Z'
                        last_billable_usage_hour: '1968-09-04T03:10:26.370Z'
                        org_billable_usage: 43667760
                        percentage_in_account: 30597546.940998033
                        usage_unit: et Duis
                      apm_host_sum:
                        account_billable_usage: 95307900
                        elapsed_usage_hours: -66972721
                        first_billable_usage_hour: '1963-06-28T23:23:03.291Z'
                        last_billable_usage_hour: '2012-05-11T14:54:48.765Z'
                        org_billable_usage: -85187729
                        percentage_in_account: 43175091.31310943
                        usage_unit: Ut adipisicing dolore
                      apm_host_top99p:
                        account_billable_usage: -15730419
                        elapsed_usage_hours: 40278318
                        first_billable_usage_hour: '2006-02-18T08:12:21.301Z'
                        last_billable_usage_hour: '1972-04-23T18:21:36.734Z'
                        org_billable_usage: -25321921
                        percentage_in_account: 68799356.06205007
                        usage_unit: velit sed incididunt quis in
                      apm_profiler_host_sum:
                        account_billable_usage: -48522685
                        elapsed_usage_hours: 40415474
                        first_billable_usage_hour: '1991-11-15T23:15:56.083Z'
                        last_billable_usage_hour: '1956-09-17T18:04:07.363Z'
                        org_billable_usage: 9374944
                        percentage_in_account: 58487794.076241076
                        usage_unit: adipisicing pariatur exercitation
                      apm_profiler_host_top99p:
                        account_billable_usage: -18681479
                        elapsed_usage_hours: 47571346
                        first_billable_usage_hour: '2023-12-22T16:30:47.098Z'
                        last_billable_usage_hour: '1944-11-06T12:44:06.851Z'
                        org_billable_usage: 97192956
                        percentage_in_account: -39799917.44880338
                        usage_unit: officia
                      apm_trace_search_sum:
                        account_billable_usage: -44218449
                        elapsed_usage_hours: -83726196
                        first_billable_usage_hour: '1951-09-08T01:02:53.587Z'
                        last_billable_usage_hour: '2023-03-14T02:46:28.963Z'
                        org_billable_usage: 65428322
                        percentage_in_account: 95967633.65654674
                        usage_unit: aliqua ut
                      application_security_fargate_average:
                        account_billable_usage: -42818984
                        elapsed_usage_hours: 88822762
                        first_billable_usage_hour: '1965-10-27T01:15:36.506Z'
                        last_billable_usage_hour: '1997-12-19T23:27:56.585Z'
                        org_billable_usage: -46085274
                        percentage_in_account: 83996622.61508328
                        usage_unit: cillum ut esse sunt
                      application_security_host_sum:
                        account_billable_usage: 73323927
                        elapsed_usage_hours: -60340637
                        first_billable_usage_hour: '2023-03-22T19:47:03.308Z'
                        last_billable_usage_hour: '1996-03-03T19:51:27.909Z'
                        org_billable_usage: 36186865
                        percentage_in_account: -72442841.57469591
                        usage_unit: fugiat do
                      application_security_host_top99p:
                        account_billable_usage: 39795853
                        elapsed_usage_hours: -18232768
                        first_billable_usage_hour: '1955-03-22T20:42:13.467Z'
                        last_billable_usage_hour: '2014-03-17T18:05:49.522Z'
                        org_billable_usage: 24624969
                        percentage_in_account: -49292247.284289956
                        usage_unit: amet dolor voluptate est adipisicing
                      ci_pipeline_indexed_spans_sum:
                        account_billable_usage: 15532039
                        elapsed_usage_hours: 34235487
                        first_billable_usage_hour: '2009-03-07T11:53:40.647Z'
                        last_billable_usage_hour: '1962-12-22T12:45:52.254Z'
                        org_billable_usage: 28896282
                        percentage_in_account: 81153138.8092654
                        usage_unit: 'culpa '
                      ci_pipeline_maximum:
                        account_billable_usage: -89977337
                        elapsed_usage_hours: 81550918
                        first_billable_usage_hour: '1972-11-27T22:18:00.559Z'
                        last_billable_usage_hour: '1956-04-12T16:36:05.019Z'
                        org_billable_usage: -85790637
                        percentage_in_account: 66275097.475622624
                        usage_unit: dolor
                      ci_pipeline_sum:
                        account_billable_usage: 76875624
                        elapsed_usage_hours: 76612011
                        first_billable_usage_hour: '1970-06-15T09:02:27.077Z'
                        last_billable_usage_hour: '2010-05-05T05:33:14.802Z'
                        org_billable_usage: 83810054
                        percentage_in_account: 93611068.41210619
                        usage_unit: Lorem officia mollit
                      ci_test_indexed_spans_sum:
                        account_billable_usage: -39396816
                        elapsed_usage_hours: -48908196
                        first_billable_usage_hour: '1988-12-05T17:44:03.111Z'
                        last_billable_usage_hour: '1981-02-06T02:28:00.046Z'
                        org_billable_usage: -3217953
                        percentage_in_account: -75221889.46242632
                        usage_unit: incididunt ut labor
                      ci_testing_maximum:
                        account_billable_usage: -24577973
                        elapsed_usage_hours: -97031624
                        first_billable_usage_hour: '1961-06-25T01:24:43.776Z'
                        last_billable_usage_hour: '1993-02-08T16:00:35.569Z'
                        org_billable_usage: 83715421
                        percentage_in_account: -45946815.937129594
                        usage_unit: cupidatat
                      ci_testing_sum:
                        account_billable_usage: 297854
                        elapsed_usage_hours: -46911250
                        first_billable_usage_hour: '1954-10-01T06:00:29.457Z'
                        last_billable_usage_hour: '1947-12-07T03:24:57.816Z'
                        org_billable_usage: 25771272
                        percentage_in_account: -65563823.92928928
                        usage_unit: Excepteur velit
                      cloud_cost_management_average:
                        account_billable_usage: -93048216
                        elapsed_usage_hours: 77471199
                        first_billable_usage_hour: '1997-10-27T11:16:48.879Z'
                        last_billable_usage_hour: '1999-03-12T00:51:17.404Z'
                        org_billable_usage: -67108836
                        percentage_in_account: -77242506.54798807
                        usage_unit: sit dolor labore culpa
                      cloud_cost_management_sum:
                        account_billable_usage: 3089296
                        elapsed_usage_hours: 80803882
                        first_billable_usage_hour: '1951-07-30T13:56:54.260Z'
                        last_billable_usage_hour: '2020-10-17T16:04:43.396Z'
                        org_billable_usage: 48893822
                        percentage_in_account: -82206976.61095801
                        usage_unit: exercitation anim irure nostr
                      cspm_container_sum:
                        account_billable_usage: 59842632
                        elapsed_usage_hours: -72462116
                        first_billable_usage_hour: '1966-06-16T11:39:05.581Z'
                        last_billable_usage_hour: '1971-10-31T08:59:20.083Z'
                        org_billable_usage: -13312627
                        percentage_in_account: 63236274.7172302
                        usage_unit: dolore adipisicing amet
                      cspm_host_sum:
                        account_billable_usage: -26565499
                        elapsed_usage_hours: 45135284
                        first_billable_usage_hour: '1982-07-04T12:02:42.822Z'
                        last_billable_usage_hour: '2007-05-13T14:47:09.908Z'
                        org_billable_usage: -16816618
                        percentage_in_account: -62122529.9125685
                        usage_unit: labore culpa adipisicing
                      cspm_host_top99p:
                        account_billable_usage: -62786280
                        elapsed_usage_hours: -11361416
                        first_billable_usage_hour: '1959-04-26T02:13:39.334Z'
                        last_billable_usage_hour: '2017-12-16T22:19:31.228Z'
                        org_billable_usage: 3677386
                        percentage_in_account: -36501737.239769526
                        usage_unit: qui
                      custom_event_sum:
                        account_billable_usage: -50238411
                        elapsed_usage_hours: -91782106
                        first_billable_usage_hour: '1971-01-01T15:30:37.392Z'
                        last_billable_usage_hour: '1968-05-03T14:31:06.293Z'
                        org_billable_usage: -39561626
                        percentage_in_account: -53329688.26130551
                        usage_unit: tempor Excepteur
                      cws_container_sum:
                        account_billable_usage: -65998608
                        elapsed_usage_hours: 81130696
                        first_billable_usage_hour: '1977-12-26T01:55:26.474Z'
                        last_billable_usage_hour: '1975-08-06T13:23:57.343Z'
                        org_billable_usage: -56037375
                        percentage_in_account: 3457299.913529128
                        usage_unit: Lorem pariatur
                      cws_host_sum:
                        account_billable_usage: 19012122
                        elapsed_usage_hours: -49336611
                        first_billable_usage_hour: '1945-05-30T13:47:56.392Z'
                        last_billable_usage_hour: '1993-03-13T14:11:55.128Z'
                        org_billable_usage: 10571124
                        percentage_in_account: -19452428.715183377
                        usage_unit: in do non
                      cws_host_top99p:
                        account_billable_usage: 70296626
                        elapsed_usage_hours: -77666092
                        first_billable_usage_hour: '1960-10-19T00:07:54.489Z'
                        last_billable_usage_hour: '1975-04-21T18:48:01.944Z'
                        org_billable_usage: -86406301
                        percentage_in_account: -72265126.75490832
                        usage_unit: eiusmod
                      dbm_host_sum:
                        account_billable_usage: 43971925
                        elapsed_usage_hours: -25156421
                        first_billable_usage_hour: '1949-09-14T00:30:32.362Z'
                        last_billable_usage_hour: '1973-07-26T10:46:30.248Z'
                        org_billable_usage: -58821316
                        percentage_in_account: -17092995.606290236
                        usage_unit: ullamco fugiat
                      dbm_host_top99p:
                        account_billable_usage: -19054381
                        elapsed_usage_hours: 9861636
                        first_billable_usage_hour: '1956-05-17T20:52:31.369Z'
                        last_billable_usage_hour: '1974-06-16T06:04:56.067Z'
                        org_billable_usage: 31603480
                        percentage_in_account: -44448868.29195105
                        usage_unit: laboris
                      dbm_normalized_queries_average:
                        account_billable_usage: 77782214
                        elapsed_usage_hours: -55571267
                        first_billable_usage_hour: '1983-01-11T02:57:25.167Z'
                        last_billable_usage_hour: '1953-06-18T06:27:28.794Z'
                        org_billable_usage: -79497877
                        percentage_in_account: -85744932.9269139
                        usage_unit: magna voluptate Lorem ullamco
                      dbm_normalized_queries_sum:
                        account_billable_usage: -44674838
                        elapsed_usage_hours: 10263363
                        first_billable_usage_hour: '1977-04-12T02:17:43.592Z'
                        last_billable_usage_hour: '1967-05-26T11:06:07.187Z'
                        org_billable_usage: -49676664
                        percentage_in_account: -62547504.35014316
                        usage_unit: occ
                      fargate_container_apm_and_profiler_average:
                        account_billable_usage: 73691040
                        elapsed_usage_hours: -96046759
                        first_billable_usage_hour: '1960-03-08T08:24:57.037Z'
                        last_billable_usage_hour: '2002-08-14T23:58:13.515Z'
                        org_billable_usage: -70445505
                        percentage_in_account: 21263603.21212557
                        usage_unit: nisi nulla
                      fargate_container_apm_and_profiler_sum:
                        account_billable_usage: -97849418
                        elapsed_usage_hours: 43138725
                        first_billable_usage_hour: '1971-02-16T03:36:39.684Z'
                        last_billable_usage_hour: '1998-01-20T20:17:23.277Z'
                        org_billable_usage: 20719801
                        percentage_in_account: 23573872.856885776
                        usage_unit: nostrud adipisicing
                      fargate_container_average:
                        account_billable_usage: -57329374
                        elapsed_usage_hours: -67486007
                        first_billable_usage_hour: '2010-11-21T15:30:53.096Z'
                        last_billable_usage_hour: '1985-04-15T06:29:27.710Z'
                        org_billable_usage: -99749138
                        percentage_in_account: -89898814.31286451
                        usage_unit: sunt la
                      fargate_container_profiler_average:
                        account_billable_usage: -90573441
                        elapsed_usage_hours: 98194417
                        first_billable_usage_hour: '1974-12-05T23:13:18.685Z'
                        last_billable_usage_hour: '1981-01-28T17:31:55.521Z'
                        org_billable_usage: 28352973
                        percentage_in_account: 73362099.62732348
                        usage_unit: proident ex
                      fargate_container_profiler_sum:
                        account_billable_usage: 74520295
                        elapsed_usage_hours: -87383455
                        first_billable_usage_hour: '1959-03-22T03:12:44.026Z'
                        last_billable_usage_hour: '1999-08-04T02:56:54.145Z'
                        org_billable_usage: -15389268
                        percentage_in_account: -92351308.05415039
                        usage_unit: irure magna amet occaecat enim
                      fargate_container_sum:
                        account_billable_usage: 88044232
                        elapsed_usage_hours: 21183468
                        first_billable_usage_hour: '1998-08-11T14:43:23.586Z'
                        last_billable_usage_hour: '1971-09-29T15:35:31.055Z'
                        org_billable_usage: -14982814
                        percentage_in_account: 31994593.31708616
                        usage_unit: officia mollit nisi eu
                      incident_management_maximum:
                        account_billable_usage: -22457993
                        elapsed_usage_hours: 41496529
                        first_billable_usage_hour: '1969-09-06T03:59:52.360Z'
                        last_billable_usage_hour: '1999-06-30T05:47:26.668Z'
                        org_billable_usage: 90463840
                        percentage_in_account: 29423026.87782821
                        usage_unit: consectetur nisi exercitation
                      incident_management_sum:
                        account_billable_usage: 86343073
                        elapsed_usage_hours: -51480205
                        first_billable_usage_hour: '2006-02-28T20:30:01.725Z'
                        last_billable_usage_hour: '1977-04-15T08:34:33.504Z'
                        org_billable_usage: 43340050
                        percentage_in_account: -5497122.6498541385
                        usage_unit: officia Lorem
                      infra_and_apm_host_sum:
                        account_billable_usage: 53622726
                        elapsed_usage_hours: -83873867
                        first_billable_usage_hour: '1984-07-29T02:42:58.869Z'
                        last_billable_usage_hour: '1974-02-03T19:42:18.924Z'
                        org_billable_usage: 23030990
                        percentage_in_account: 93467389.64672947
                        usage_unit: cupidatat
                      infra_and_apm_host_top99p:
                        account_billable_usage: 34939965
                        elapsed_usage_hours: -40658319
                        first_billable_usage_hour: '1972-12-26T07:29:22.987Z'
                        last_billable_usage_hour: '1985-12-10T21:03:56.365Z'
                        org_billable_usage: -84553280
                        percentage_in_account: -68219803.40586214
                        usage_unit: fugiat quis laborum
                      infra_container_sum:
                        account_billable_usage: -72381692
                        elapsed_usage_hours: -79496197
                        first_billable_usage_hour: '1956-09-28T07:22:37.577Z'
                        last_billable_usage_hour: '2018-02-09T05:14:17.139Z'
                        org_billable_usage: 37081766
                        percentage_in_account: 70426985.84948647
                        usage_unit: proident anim q
                      infra_host_sum:
                        account_billable_usage: 69082974
                        elapsed_usage_hours: -43597203
                        first_billable_usage_hour: '2000-01-24T04:15:40.914Z'
                        last_billable_usage_hour: '1963-01-07T23:33:28.459Z'
                        org_billable_usage: -61722818
                        percentage_in_account: -14020708.047418714
                        usage_unit: dolor aliqua
                      infra_host_top99p:
                        account_billable_usage: 61358191
                        elapsed_usage_hours: -88364738
                        first_billable_usage_hour: '1969-10-09T06:08:15.926Z'
                        last_billable_usage_hour: '1952-03-18T13:32:36.303Z'
                        org_billable_usage: -89655969
                        percentage_in_account: 26380369.01246439
                        usage_unit: ut in ullamco
                      ingested_spans_sum:
                        account_billable_usage: 57938503
                        elapsed_usage_hours: -4282319
                        first_billable_usage_hour: '1987-09-12T10:26:06.214Z'
                        last_billable_usage_hour: '1996-10-18T23:03:09.017Z'
                        org_billable_usage: -63330850
                        percentage_in_account: -66593401.75854225
                        usage_unit: do minim in sit
                      ingested_timeseries_average:
                        account_billable_usage: 56168894
                        elapsed_usage_hours: -36706702
                        first_billable_usage_hour: '1957-09-22T21:24:11.434Z'
                        last_billable_usage_hour: '1974-12-28T00:32:30.274Z'
                        org_billable_usage: -13579287
                        percentage_in_account: 14952344.925228238
                        usage_unit: Duis
                      ingested_timeseries_sum:
                        account_billable_usage: -41570461
                        elapsed_usage_hours: 33049330
                        first_billable_usage_hour: '1965-09-03T12:44:44.625Z'
                        last_billable_usage_hour: '1948-05-24T15:10:30.898Z'
                        org_billable_usage: -14485691
                        percentage_in_account: 23860077.985510796
                        usage_unit: fugiat nulla laborum
                      iot_sum:
                        account_billable_usage: -66000915
                        elapsed_usage_hours: 7377407
                        first_billable_usage_hour: '1983-04-22T05:53:09.333Z'
                        last_billable_usage_hour: '2009-11-10T06:16:57.777Z'
                        org_billable_usage: -76829690
                        percentage_in_account: 68663842.26135293
                        usage_unit: ullamco quis sunt anim
                      iot_top99p:
                        account_billable_usage: -65952154
                        elapsed_usage_hours: 921302
                        first_billable_usage_hour: '2004-07-20T17:47:30.604Z'
                        last_billable_usage_hour: '1956-04-26T21:45:42.942Z'
                        org_billable_usage: -56544331
                        percentage_in_account: -1595905.1335322708
                        usage_unit: nostrud amet sint
                      lambda_function_average:
                        account_billable_usage: 94998371
                        elapsed_usage_hours: -40435414
                        first_billable_usage_hour: '1946-09-21T07:13:52.102Z'
                        last_billable_usage_hour: '2018-07-22T08:25:08.363Z'
                        org_billable_usage: -64788875
                        percentage_in_account: -60175427.86541292
                        usage_unit: et Ut
                      lambda_function_sum:
                        account_billable_usage: -19968439
                        elapsed_usage_hours: -36832685
                        first_billable_usage_hour: '1967-01-26T13:51:33.656Z'
                        last_billable_usage_hour: '1975-01-20T16:22:10.482Z'
                        org_billable_usage: 30436182
                        percentage_in_account: 38973017.04509154
                        usage_unit: ipsum
                      logs_forwarding_sum:
                        account_billable_usage: -51698432
                        elapsed_usage_hours: -5768877
                        first_billable_usage_hour: '1982-05-30T09:17:18.617Z'
                        last_billable_usage_hour: '1965-08-31T16:57:06.965Z'
                        org_billable_usage: -44830320
                        percentage_in_account: 41320988.68372533
                        usage_unit: cill
                      logs_indexed_15day_sum:
                        account_billable_usage: -79077841
                        elapsed_usage_hours: 30510909
                        first_billable_usage_hour: '1999-06-09T04:16:23.354Z'
                        last_billable_usage_hour: '2013-06-23T05:29:12.725Z'
                        org_billable_usage: 14763891
                        percentage_in_account: -87128.6252167821
                        usage_unit: exercitation deserunt pariatur irure
                      logs_indexed_180day_sum:
                        account_billable_usage: 23050620
                        elapsed_usage_hours: 78376059
                        first_billable_usage_hour: '1986-03-20T10:49:01.462Z'
                        last_billable_usage_hour: '1984-01-16T12:16:29.224Z'
                        org_billable_usage: -97915561
                        percentage_in_account: 94319411.35935816
                        usage_unit: minim laboris in adi
                      logs_indexed_1day_sum:
                        account_billable_usage: -54359736
                        elapsed_usage_hours: 7967327
                        first_billable_usage_hour: '1983-08-26T18:34:19.939Z'
                        last_billable_usage_hour: '2008-08-20T12:53:28.196Z'
                        org_billable_usage: -32350405
                        percentage_in_account: 49715549.08582547
                        usage_unit: fugiat tempor ut
                      logs_indexed_30day_sum:
                        account_billable_usage: 64023220
                        elapsed_usage_hours: -22178122
                        first_billable_usage_hour: '1963-09-08T04:40:16.962Z'
                        last_billable_usage_hour: '1996-01-07T16:50:22.003Z'
                        org_billable_usage: -27243729
                        percentage_in_account: -13196054.71153982
                        usage_unit: aliquip consectetur
                      logs_indexed_360day_sum:
                        account_billable_usage: -48968949
                        elapsed_usage_hours: 52508383
                        first_billable_usage_hour: '1996-01-22T06:27:55.917Z'
                        last_billable_usage_hour: '1964-10-14T18:45:11.077Z'
                        org_billable_usage: 88449754
                        percentage_in_account: 96139230.99865437
                        usage_unit: pariatur occaecat enim reprehenderit
                      logs_indexed_3day_sum:
                        account_billable_usage: 9092583
                        elapsed_usage_hours: -56617590
                        first_billable_usage_hour: '1945-11-04T02:50:53.133Z'
                        last_billable_usage_hour: '1980-01-22T22:44:30.188Z'
                        org_billable_usage: 69651162
                        percentage_in_account: 94301958.89190641
                        usage_unit: in ipsum pariatur
                      logs_indexed_45day_sum:
                        account_billable_usage: -84402208
                        elapsed_usage_hours: -15503463
                        first_billable_usage_hour: '1983-04-04T08:43:49.754Z'
                        last_billable_usage_hour: '2013-08-29T23:41:57.914Z'
                        org_billable_usage: 16239338
                        percentage_in_account: -306980.51617124677
                        usage_unit: labore tempor
                      logs_indexed_60day_sum:
                        account_billable_usage: -10763995
                        elapsed_usage_hours: -44747832
                        first_billable_usage_hour: '1958-03-28T10:22:30.629Z'
                        last_billable_usage_hour: '1957-01-22T04:46:17.319Z'
                        org_billable_usage: -78974842
                        percentage_in_account: -55579537.38012986
                        usage_unit: esse ex
                      logs_indexed_7day_sum:
                        account_billable_usage: 28949062
                        elapsed_usage_hours: -49726785
                        first_billable_usage_hour: '2010-06-28T10:19:44.928Z'
                        last_billable_usage_hour: '2020-03-26T17:16:35.367Z'
                        org_billable_usage: 80485348
                        percentage_in_account: -15848546.74189508
                        usage_unit: Duis ad velit
                      logs_indexed_90day_sum:
                        account_billable_usage: -27742050
                        elapsed_usage_hours: 30004239
                        first_billable_usage_hour: '2020-05-07T13:56:18.737Z'
                        last_billable_usage_hour: '1976-01-27T04:12:46.005Z'
                        org_billable_usage: 29684828
                        percentage_in_account: 81884717.54577053
                        usage_unit: ut do ex
                      logs_indexed_custom_retention_sum:
                        account_billable_usage: 60133511
                        elapsed_usage_hours: 56236091
                        first_billable_usage_hour: '1947-06-26T06:47:57.899Z'
                        last_billable_usage_hour: '1984-04-13T03:39:32.956Z'
                        org_billable_usage: -53384513
                        percentage_in_account: 10892399.895706713
                        usage_unit: minim officia culpa aute
                      logs_indexed_sum:
                        account_billable_usage: -63400410
                        elapsed_usage_hours: 5579700
                        first_billable_usage_hour: '2001-03-23T03:56:46.408Z'
                        last_billable_usage_hour: '1989-01-27T23:16:27.258Z'
                        org_billable_usage: -34147936
                        percentage_in_account: -95586345.93238886
                        usage_unit: eiusmod Ut et
                      logs_ingested_sum:
                        account_billable_usage: -86768524
                        elapsed_usage_hours: 75213505
                        first_billable_usage_hour: '2014-02-12T02:43:00.293Z'
                        last_billable_usage_hour: '1992-02-13T14:13:00.001Z'
                        org_billable_usage: 44692122
                        percentage_in_account: -18566242.458701372
                        usage_unit: reprehenderit anim pariatur Excepteur
                      network_device_sum:
                        account_billable_usage: 98721746
                        elapsed_usage_hours: -56985159
                        first_billable_usage_hour: '2002-06-11T07:13:34.678Z'
                        last_billable_usage_hour: '1999-09-20T17:01:43.535Z'
                        org_billable_usage: -95583086
                        percentage_in_account: 25464383.026054755
                        usage_unit: do voluptate
                      network_device_top99p:
                        account_billable_usage: 75493765
                        elapsed_usage_hours: -66278407
                        first_billable_usage_hour: '2020-04-19T10:44:49.322Z'
                        last_billable_usage_hour: '1970-10-24T19:11:39.126Z'
                        org_billable_usage: 65878468
                        percentage_in_account: 37941475.236234844
                        usage_unit: nostrud
                      npm_flow_sum:
                        account_billable_usage: -7371512
                        elapsed_usage_hours: -56204300
                        first_billable_usage_hour: '2022-12-21T23:07:23.205Z'
                        last_billable_usage_hour: '1953-10-30T13:02:04.287Z'
                        org_billable_usage: -21974387
                        percentage_in_account: 17910623.794102997
                        usage_unit: sint est Duis et occaecat
                      npm_host_sum:
                        account_billable_usage: 21720847
                        elapsed_usage_hours: 58061200
                        first_billable_usage_hour: '1996-05-22T01:48:28.050Z'
                        last_billable_usage_hour: '2017-05-07T22:44:31.099Z'
                        org_billable_usage: -50582902
                        percentage_in_account: -73643250.64306971
                        usage_unit: enim et deserunt Ut
                      npm_host_top99p:
                        account_billable_usage: 60602790
                        elapsed_usage_hours: 17989384
                        first_billable_usage_hour: '1962-06-08T05:46:00.235Z'
                        last_billable_usage_hour: '1955-02-28T02:29:26.921Z'
                        org_billable_usage: -34156006
                        percentage_in_account: -26215664.90962808
                        usage_unit: aute Lor
                      observability_pipeline_sum:
                        account_billable_usage: 48065439
                        elapsed_usage_hours: 69146132
                        first_billable_usage_hour: '1984-03-09T06:39:50.853Z'
                        last_billable_usage_hour: '1995-08-31T05:22:17.583Z'
                        org_billable_usage: -16011764
                        percentage_in_account: 88241307.31316674
                        usage_unit: esse
                      online_archive_sum:
                        account_billable_usage: -77428348
                        elapsed_usage_hours: -6202456
                        first_billable_usage_hour: '1966-09-23T12:52:53.071Z'
                        last_billable_usage_hour: '2014-10-05T10:18:47.423Z'
                        org_billable_usage: 49350106
                        percentage_in_account: 96207931.4901132
                        usage_unit: sed labore
                      prof_container_sum:
                        account_billable_usage: 99510603
                        elapsed_usage_hours: 30599947
                        first_billable_usage_hour: '1955-05-17T20:03:31.422Z'
                        last_billable_usage_hour: '1976-09-11T04:40:50.613Z'
                        org_billable_usage: -73170373
                        percentage_in_account: 98868574.18503067
                        usage_unit: culpa
                      prof_host_sum:
                        account_billable_usage: -76431246
                        elapsed_usage_hours: -72815178
                        first_billable_usage_hour: '2008-08-16T14:47:26.846Z'
                        last_billable_usage_hour: '1966-01-22T18:28:58.740Z'
                        org_billable_usage: -51177527
                        percentage_in_account: 55723277.11355057
                        usage_unit: laboris minim labore nisi
                      prof_host_top99p:
                        account_billable_usage: 58177438
                        elapsed_usage_hours: -44741189
                        first_billable_usage_hour: '1965-10-22T06:01:37.510Z'
                        last_billable_usage_hour: '1951-02-16T16:44:54.371Z'
                        org_billable_usage: 12555802
                        percentage_in_account: -98556888.214382
                        usage_unit: ad
                      rum_lite_sum:
                        account_billable_usage: 9310867
                        elapsed_usage_hours: -5400803
                        first_billable_usage_hour: '1982-09-10T08:50:12.693Z'
                        last_billable_usage_hour: '1987-03-16T11:05:24.770Z'
                        org_billable_usage: 56841628
                        percentage_in_account: -15999464.594813466
                        usage_unit: sunt
                      rum_replay_sum:
                        account_billable_usage: 2706774
                        elapsed_usage_hours: 68400758
                        first_billable_usage_hour: '1978-01-29T01:42:54.547Z'
                        last_billable_usage_hour: '1952-06-27T21:52:01.205Z'
                        org_billable_usage: -89978842
                        percentage_in_account: -6803867.300668195
                        usage_unit: est
                      rum_sum:
                        account_billable_usage: 37519326
                        elapsed_usage_hours: 22825787
                        first_billable_usage_hour: '2002-05-04T06:51:50.828Z'
                        last_billable_usage_hour: '1980-11-27T08:16:18.770Z'
                        org_billable_usage: -68811613
                        percentage_in_account: 21641299.502669573
                        usage_unit: Duis id
                      rum_units_sum:
                        account_billable_usage: -82906137
                        elapsed_usage_hours: -1628225
                        first_billable_usage_hour: '1981-07-14T14:06:29.182Z'
                        last_billable_usage_hour: '2014-08-17T13:44:06.337Z'
                        org_billable_usage: 44939798
                        percentage_in_account: -66183850.517923705
                        usage_unit: commodo ut
                      sensitive_data_scanner_sum:
                        account_billable_usage: 51980248
                        elapsed_usage_hours: -84260222
                        first_billable_usage_hour: '1968-09-06T08:46:37.357Z'
                        last_billable_usage_hour: '2013-12-29T13:46:58.104Z'
                        org_billable_usage: 43561219
                        percentage_in_account: 59865481.65660924
                        usage_unit: et cupidatat
                      serverless_apm_sum:
                        account_billable_usage: -41805765
                        elapsed_usage_hours: -82728040
                        first_billable_usage_hour: '1990-08-29T03:14:43.839Z'
                        last_billable_usage_hour: '1983-12-28T07:00:05.841Z'
                        org_billable_usage: -77531711
                        percentage_in_account: -96968352.99672526
                        usage_unit: irure enim sint quis
                      serverless_infra_average:
                        account_billable_usage: 42836654
                        elapsed_usage_hours: -83237364
                        first_billable_usage_hour: '1951-08-15T07:07:39.568Z'
                        last_billable_usage_hour: '1958-08-10T19:39:35.841Z'
                        org_billable_usage: 46136717
                        percentage_in_account: -93483369.71799153
                        usage_unit: ex labo
                      serverless_infra_sum:
                        account_billable_usage: 92921871
                        elapsed_usage_hours: 74918739
                        first_billable_usage_hour: '2002-04-05T15:47:14.064Z'
                        last_billable_usage_hour: '1995-01-30T15:15:18.335Z'
                        org_billable_usage: -9929601
                        percentage_in_account: 95560353.33416584
                        usage_unit: in magna cillum sed
                      serverless_invocation_sum:
                        account_billable_usage: 78503025
                        elapsed_usage_hours: -67480678
                        first_billable_usage_hour: '1968-01-13T14:43:21.153Z'
                        last_billable_usage_hour: '1976-11-19T16:07:56.841Z'
                        org_billable_usage: -99643243
                        percentage_in_account: -70003851.37560436
                        usage_unit: ut et ad
                      siem_sum:
                        account_billable_usage: 69436955
                        elapsed_usage_hours: -73487391
                        first_billable_usage_hour: '2005-12-12T05:34:17.126Z'
                        last_billable_usage_hour: '2006-08-11T09:25:24.737Z'
                        org_billable_usage: 88791730
                        percentage_in_account: 63954914.097886294
                        usage_unit: in sint
                      standard_timeseries_average:
                        account_billable_usage: 92558194
                        elapsed_usage_hours: -90431590
                        first_billable_usage_hour: '1998-06-23T15:41:14.837Z'
                        last_billable_usage_hour: '2010-01-04T01:50:13.447Z'
                        org_billable_usage: 67440357
                        percentage_in_account: -27164268.023103327
                        usage_unit: in mollit
                      synthetics_api_tests_sum:
                        account_billable_usage: -40282084
                        elapsed_usage_hours: -64836161
                        first_billable_usage_hour: '1976-07-10T00:28:11.429Z'
                        last_billable_usage_hour: '2014-12-25T01:00:26.427Z'
                        org_billable_usage: 47475848
                        percentage_in_account: -10696949.759308577
                        usage_unit: sit ut ut
                      synthetics_app_testing_maximum:
                        account_billable_usage: 60542483
                        elapsed_usage_hours: 94993221
                        first_billable_usage_hour: '2017-11-12T11:58:37.916Z'
                        last_billable_usage_hour: '1980-10-06T13:59:21.233Z'
                        org_billable_usage: 94729097
                        percentage_in_account: -30406919.759334356
                        usage_unit: minim dolor
                      synthetics_browser_checks_sum:
                        account_billable_usage: -87075550
                        elapsed_usage_hours: 62812793
                        first_billable_usage_hour: '1986-12-14T02:21:56.882Z'
                        last_billable_usage_hour: '2006-09-03T02:50:33.495Z'
                        org_billable_usage: -6152179
                        percentage_in_account: -52371664.73030266
                        usage_unit: Lorem consequat laborum
                      timeseries_average:
                        account_billable_usage: -30706734
                        elapsed_usage_hours: 90957866
                        first_billable_usage_hour: '1977-09-10T07:37:17.375Z'
                        last_billable_usage_hour: '1969-11-25T12:09:30.047Z'
                        org_billable_usage: 2408974
                        percentage_in_account: 99701661.60531688
                        usage_unit: laboru
                      timeseries_sum:
                        account_billable_usage: -56307302
                        elapsed_usage_hours: -22136666
                        first_billable_usage_hour: '2001-02-26T20:53:32.141Z'
                        last_billable_usage_hour: '1962-09-15T04:48:46.044Z'
                        org_billable_usage: 31050306
                        percentage_in_account: 65721974.65566689
                        usage_unit: adipisicing ipsum
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/usage/historical_cost:
    get:
      tags:
        - Accounts
        - Across
        - Cost
        - Historical
        - Usage
      summary: 'Get Historical Cost Across Your Account '
      description: >-
        Get historical cost across multi-org and single root-org accounts.

        Cost data for a given month becomes available no later than the 16th of
        the following month.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: view
          in: query
          schema:
            type: string
          description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`.  Defaults to `summary`.
          example: esse
        - name: start_month
          in: query
          schema:
            type: string
          description: >-
            (Required) Datetime in ISO-8601 format, UTC, precise to month:
            `[YYYY-MM]` for cost beginning this month.
          example: '1961-11-25T12:45:52.211Z'
        - name: end_month
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          example: '1961-11-25T12:45:52.211Z'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      charges:
                        - charge_type: on_demand
                          cost: 21906538.464961395
                          product_name: infra_host
                        - charge_type: on_demand
                          cost: -72103800.74157622
                          product_name: infra_host
                      date: '1967-12-20T11:02:49.167Z'
                      org_name: eu proident et
                      public_id: E
                      region: nisi
                      total_cost: 44534827.38441998
                    id: irure eiusmod mollit sint
                    type: cost_by_org
                  - attributes:
                      charges:
                        - charge_type: on_demand
                          cost: -26063585.672534868
                          product_name: infra_host
                        - charge_type: on_demand
                          cost: 96818355.46160546
                          product_name: infra_host
                      date: '1981-09-04T15:24:34.311Z'
                      org_name: Ut mollit voluptate
                      public_id: irure cillum dolore
                      region: voluptate in dolore
                      total_cost: 58914708.60228062
                    id: aliquip ad
                    type: cost_by_org
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/usage/estimated_cost:
    get:
      tags:
        - Accounts
        - Across
        - Cost
        - Estimated
        - Usage
      summary: 'Get Estimated Cost Across Your Account '
      description: >-
        Get estimated cost across multi-org and single root-org accounts.

        Estimated cost data is only available for the current month and previous
        month

        and is delayed by up to 72 hours from when it was incurred.

        To access historical costs prior to this, use the `/historical_cost`
        endpoint.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: view
          in: query
          schema:
            type: string
          description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`. Defaults to `summary`.
          example: esse
        - name: start_month
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning this month. Either start_month or start_date should
            be specified, but not both. (start_month cannot go beyond two months
            in the past). Provide an `end_month` to view month-over-month cost.
          example: '1961-11-25T12:45:52.211Z'
        - name: end_month
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          example: '1961-11-25T12:45:52.211Z'
        - name: start_date
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for
            cost beginning this day. Either start_month or start_date should be
            specified, but not both. (start_date cannot go beyond two months in
            the past). Provide an `end_date` to view day-over-day cumulative
            cost.
          example: '1961-11-25T12:45:52.211Z'
        - name: end_date
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for
            cost ending this day.
          example: '1961-11-25T12:45:52.211Z'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      charges:
                        - charge_type: on_demand
                          cost: 21906538.464961395
                          product_name: infra_host
                        - charge_type: on_demand
                          cost: -72103800.74157622
                          product_name: infra_host
                      date: '1967-12-20T11:02:49.167Z'
                      org_name: eu proident et
                      public_id: E
                      region: nisi
                      total_cost: 44534827.38441998
                    id: irure eiusmod mollit sint
                    type: cost_by_org
                  - attributes:
                      charges:
                        - charge_type: on_demand
                          cost: -26063585.672534868
                          product_name: infra_host
                        - charge_type: on_demand
                          cost: 96818355.46160546
                          product_name: infra_host
                      date: '1981-09-04T15:24:34.311Z'
                      org_name: Ut mollit voluptate
                      public_id: irure cillum dolore
                      region: voluptate in dolore
                      total_cost: 58914708.60228062
                    id: aliquip ad
                    type: cost_by_org
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/usage/top_avg_metrics:
    get:
      tags:
        - Average
        - Avg
        - Custom
        - Hourly
        - Metrics
        - Top
        - Usage
      summary: 'Get All Custom Metrics By Hourly Average '
      description: >-
        Get all [custom
        metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/)
        by hourly average. Use the month parameter to get a month-to-date data
        resolution or use the day parameter to get a daily resolution. One of
        the two is required, and only one of the two is allowed.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: month
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM] for
            usage beginning at this hour. (Either month or day should be
            specified, but not both)
          example: '1992-04-06T18:39:52.088Z'
        - name: day
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD] for
            usage beginning at this hour. (Either month or day should be
            specified, but not both)
          example: '1992-04-06T18:39:52.088Z'
        - name: names
          in: query
          schema:
            type: string
          description: Comma-separated list of metric names.
          example: ad deserunt eiusmod
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            Maximum number of results to return (between 1 and 5000) - defaults
            to 500 results if limit not specified.
          example: '500'
        - name: next_record_id
          in: query
          schema:
            type: string
          description: >-
            List following results with a next_record_id provided in the
            previous query.
          example: exercitation consequat
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                metadata:
                  day: '2023-08-31T13:53:21.322Z'
                  month: '1972-03-18T00:07:05.292Z'
                  pagination:
                    limit: 5855154
                    next_record_id: incididunt Ut dolor
                    total_number_of_records: -4755748
                usage:
                  - avg_metric_hour: -49511363
                    max_metric_hour: 29236947
                    metric_category: custom
                    metric_name: esse
                  - avg_metric_hour: -30550565
                    max_metric_hour: 97137266
                    metric_category: standard
                    metric_name: dolor ad
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/usage/projected_cost:
    get:
      tags:
        - Accounts
        - Across
        - Cost
        - Projected
        - Usage
      summary: 'Get Projected Cost Across Your Account '
      description: >-
        Get projected cost across multi-org and single root-org accounts.

        Projected cost data is only available for the current month and becomes
        available around the 12th of the month.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: view
          in: query
          schema:
            type: string
          description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`. Defaults to `summary`.
          example: esse
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      charges:
                        - charge_type: on_demand
                          cost: -72250739.79232128
                          product_name: infra_host
                        - charge_type: on_demand
                          cost: 29266394.01650481
                          product_name: infra_host
                      date: '2018-12-10T16:31:14.219Z'
                      org_name: aliquip lab
                      projected_total_cost: -41602157.471909255
                      public_id: esse
                      region: aliqua elit in quis irure
                    id: aliqua
                    type: projected_cost
                  - attributes:
                      charges:
                        - charge_type: on_demand
                          cost: 3613785.798207119
                          product_name: infra_host
                        - charge_type: on_demand
                          cost: -9105538.911546946
                          product_name: infra_host
                      date: '1953-05-20T23:23:06.051Z'
                      org_name: sit esse laborum aliqua
                      projected_total_cost: -9358730.083818585
                      public_id: esse irure
                      region: in
                    id: eiusmod incididunt
                    type: projected_cost
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/usage/summary:
    get:
      tags:
        - Accounts
        - Across
        - Summaries
        - Usage
      summary: 'Get Usage Across Your Account '
      description: >-
        Get all usage across your account.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: start_month
          in: query
          schema:
            type: string
          description: >-
            (Required) Datetime in ISO-8601 format, UTC, precise to month:
            `[YYYY-MM]` for usage beginning in this month.

            Maximum of 15 months ago.
          example: '2024-03-06T18:39:52.088Z'
        - name: end_month
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            usage ending this month.
          example: '2024-04-06T18:39:52.088Z'
        - name: include_org_details
          in: query
          schema:
            type: boolean
          description: Include usage summaries for each sub-org.
          example: 'true'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                agent_host_top99p_sum: 39827912
                apm_azure_app_service_host_top99p_sum: -72085036
                apm_devsecops_host_top99p_sum: -10307602
                apm_fargate_count_avg_sum: 70801674
                apm_host_top99p_sum: 98063431
                appsec_fargate_count_avg_sum: 2993201
                asm_serverless_agg_sum: 57982674
                audit_trail_enabled_hwm_sum: -75539036
                avg_profiled_fargate_tasks_sum: 51776616
                aws_host_top99p_sum: -34900222
                aws_lambda_func_count: -91532012
                aws_lambda_invocations_sum: 85351152
                azure_app_service_top99p_sum: 32875535
                azure_host_top99p_sum: 50748809
                billable_ingested_bytes_agg_sum: -2700025
                browser_rum_lite_session_count_agg_sum: -53549701
                browser_rum_replay_session_count_agg_sum: -12149203
                browser_rum_units_agg_sum: 1298056
                ci_pipeline_indexed_spans_agg_sum: 69746024
                ci_test_indexed_spans_agg_sum: 24887085
                ci_visibility_itr_committers_hwm_sum: 81585750
                ci_visibility_pipeline_committers_hwm_sum: -38220420
                ci_visibility_test_committers_hwm_sum: -46561048
                cloud_cost_management_aws_host_count_avg_sum: 6538180
                cloud_cost_management_azure_host_count_avg_sum: 91947578
                cloud_cost_management_gcp_host_count_avg_sum: -80816856
                cloud_cost_management_host_count_avg_sum: -95666080
                cloud_siem_events_agg_sum: -46537200
                container_avg_sum: 60515846
                container_excl_agent_avg_sum: 70349782
                container_hwm_sum: 26457636
                csm_container_enterprise_compliance_count_agg_sum: -19053962
                csm_container_enterprise_cws_count_agg_sum: -9401222
                csm_container_enterprise_total_count_agg_sum: 43469072
                csm_host_enterprise_aas_host_count_top99p_sum: 13850661
                csm_host_enterprise_aws_host_count_top99p_sum: -90785448
                csm_host_enterprise_azure_host_count_top99p_sum: 24136280
                csm_host_enterprise_compliance_host_count_top99p_sum: 47040316
                csm_host_enterprise_cws_host_count_top99p_sum: 19063268
                csm_host_enterprise_gcp_host_count_top99p_sum: -97847545
                csm_host_enterprise_total_host_count_top99p_sum: -2128941
                cspm_aas_host_top99p_sum: -96407129
                cspm_aws_host_top99p_sum: -51202974
                cspm_azure_host_top99p_sum: 46940888
                cspm_container_avg_sum: -95310261
                cspm_container_hwm_sum: 5638703
                cspm_gcp_host_top99p_sum: 68285484
                cspm_host_top99p_sum: 25582805
                custom_historical_ts_sum: 35251838
                custom_live_ts_sum: -21470727
                custom_ts_sum: 29608005
                cws_containers_avg_sum: -3089319
                cws_host_top99p_sum: -93597434
                dbm_host_top99p_sum: 79538843
                dbm_queries_avg_sum: 90779644
                end_date: '1979-03-29T01:41:13.260Z'
                error_tracking_events_agg_sum: 69720895
                fargate_tasks_count_avg_sum: 70640971
                fargate_tasks_count_hwm_sum: 97231479
                flex_logs_compute_large_avg_sum: 10693789
                flex_logs_compute_medium_avg_sum: 58879016
                flex_logs_compute_small_avg_sum: -89078268
                flex_logs_compute_xsmall_avg_sum: 2499949
                flex_stored_logs_avg_sum: -69101516
                forwarding_events_bytes_agg_sum: 86017746
                gcp_host_top99p_sum: -34402250
                heroku_host_top99p_sum: -14601607
                incident_management_monthly_active_users_hwm_sum: -40445079
                indexed_events_count_agg_sum: -74205480
                infra_host_top99p_sum: 11068176
                ingested_events_bytes_agg_sum: 89771946
                iot_device_agg_sum: 23055319
                iot_device_top99p_sum: 44373705
                last_updated: '1980-01-23T17:05:44.290Z'
                live_indexed_events_agg_sum: -80178809
                live_ingested_bytes_agg_sum: 89581672
                logs_by_retention:
                  orgs:
                    usage:
                      - usage:
                          - logs_indexed_logs_usage_sum: -4107916
                            logs_live_indexed_logs_usage_sum: 10011734
                            logs_rehydrated_indexed_logs_usage_sum: 57782276
                            retention: in elit
                          - logs_indexed_logs_usage_sum: 64669701
                            logs_live_indexed_logs_usage_sum: -69061442
                            logs_rehydrated_indexed_logs_usage_sum: 79224501
                            retention: officia
                      - usage:
                          - logs_indexed_logs_usage_sum: -47993930
                            logs_live_indexed_logs_usage_sum: 18810973
                            logs_rehydrated_indexed_logs_usage_sum: 48205680
                            retention: Ut eiusmod ut occaecat
                          - logs_indexed_logs_usage_sum: -72355377
                            logs_live_indexed_logs_usage_sum: 72150397
                            logs_rehydrated_indexed_logs_usage_sum: -48137646
                            retention: Excepteur voluptate
                  usage:
                    - logs_indexed_logs_usage_agg_sum: -7831622
                      logs_live_indexed_logs_usage_agg_sum: 40680877
                      logs_rehydrated_indexed_logs_usage_agg_sum: 95351660
                      retention: elit in
                    - logs_indexed_logs_usage_agg_sum: -66989363
                      logs_live_indexed_logs_usage_agg_sum: -8969351
                      logs_rehydrated_indexed_logs_usage_agg_sum: -53434639
                      retention: reprehenderit
                  usage_by_month:
                    date: '1963-04-09T07:45:15.492Z'
                    usage:
                      - logs_indexed_logs_usage_sum: 28796442
                        logs_live_indexed_logs_usage_sum: -51788417
                        logs_rehydrated_indexed_logs_usage_sum: 96165892
                        retention: sit eiusmod dolor
                      - logs_indexed_logs_usage_sum: -14346263
                        logs_live_indexed_logs_usage_sum: 83831667
                        logs_rehydrated_indexed_logs_usage_sum: 83059285
                        retention: ipsum cupidatat
                mobile_rum_lite_session_count_agg_sum: -89303257
                mobile_rum_session_count_agg_sum: -20037686
                mobile_rum_session_count_android_agg_sum: -18860908
                mobile_rum_session_count_flutter_agg_sum: 81516082
                mobile_rum_session_count_ios_agg_sum: 48408724
                mobile_rum_session_count_reactnative_agg_sum: 87388519
                mobile_rum_session_count_roku_agg_sum: -94215568
                mobile_rum_units_agg_sum: 8135399
                ndm_netflow_events_agg_sum: 80363505
                netflow_indexed_events_count_agg_sum: 74741724
                npm_host_top99p_sum: 99434546
                observability_pipelines_bytes_processed_agg_sum: -93752915
                online_archive_events_count_agg_sum: -93016155
                opentelemetry_apm_host_top99p_sum: 10584031
                opentelemetry_host_top99p_sum: -37726775
                profiling_aas_count_top99p_sum: 81272980
                profiling_container_agent_count_avg: -52999880
                profiling_host_count_top99p_sum: 51381276
                rehydrated_indexed_events_agg_sum: -77618907
                rehydrated_ingested_bytes_agg_sum: 26308325
                rum_browser_and_mobile_session_count: 96147752
                rum_session_count_agg_sum: 77768159
                rum_total_session_count_agg_sum: -80042203
                rum_units_agg_sum: -44407167
                sds_apm_scanned_bytes_sum: -90590050
                sds_events_scanned_bytes_sum: -81367843
                sds_logs_scanned_bytes_sum: 98328239
                sds_rum_scanned_bytes_sum: -80245752
                sds_total_scanned_bytes_sum: -20433592
                serverless_apps_azure_count_avg_sum: 24627982
                serverless_apps_google_count_avg_sum: -79643628
                serverless_apps_total_count_avg_sum: 25392714
                start_date: '2020-02-22T13:13:48.578Z'
                synthetics_browser_check_calls_count_agg_sum: 77319430
                synthetics_check_calls_count_agg_sum: -53326042
                synthetics_mobile_test_runs_agg_sum: 85708889
                synthetics_parallel_testing_max_slots_hwm_sum: 46179602
                trace_search_indexed_events_count_agg_sum: 90029355
                twol_ingested_events_bytes_agg_sum: 64575221
                universal_service_monitoring_host_top99p_sum: 76499442
                usage:
                  - agent_host_top99p: -28648756
                    apm_azure_app_service_host_top99p: 7419379
                    apm_devsecops_host_top99p: -99653455
                    apm_fargate_count_avg: -20870314
                    apm_host_top99p: 75132133
                    appsec_fargate_count_avg: 37666609
                    asm_serverless_sum: -14690058
                    audit_trail_enabled_hwm: 12734036
                    avg_profiled_fargate_tasks: 40889141
                    aws_host_top99p: 82614166
                    aws_lambda_func_count: -89074604
                    aws_lambda_invocations_sum: -66755951
                    azure_app_service_top99p: -59460308
                    billable_ingested_bytes_sum: -13722968
                    browser_rum_lite_session_count_sum: -5142744
                    browser_rum_replay_session_count_sum: -65809231
                    browser_rum_units_sum: 20852853
                    ci_pipeline_indexed_spans_sum: 1969118
                    ci_test_indexed_spans_sum: 5060417
                    ci_visibility_itr_committers_hwm: -71014906
                    ci_visibility_pipeline_committers_hwm: -27949925
                    ci_visibility_test_committers_hwm: -65806419
                    cloud_cost_management_aws_host_count_avg: -56264103
                    cloud_cost_management_azure_host_count_avg: -55326693
                    cloud_cost_management_gcp_host_count_avg: 44130150
                    cloud_cost_management_host_count_avg: -93602503
                    cloud_siem_events_sum: -54344550
                    container_avg: -18068968
                    container_excl_agent_avg: 26648217
                    container_hwm: -45334211
                    csm_container_enterprise_compliance_count_sum: 60787952
                    csm_container_enterprise_cws_count_sum: -25745394
                    csm_container_enterprise_total_count_sum: 75264119
                    csm_host_enterprise_aas_host_count_top99p: -17001202
                    csm_host_enterprise_aws_host_count_top99p: 95186232
                    csm_host_enterprise_azure_host_count_top99p: -61006159
                    csm_host_enterprise_compliance_host_count_top99p: 93207549
                    csm_host_enterprise_cws_host_count_top99p: -90636769
                    csm_host_enterprise_gcp_host_count_top99p: -60005061
                    csm_host_enterprise_total_host_count_top99p: 72585330
                    cspm_aas_host_top99p: -14457924
                    cspm_aws_host_top99p: -84311657
                    cspm_azure_host_top99p: 25738287
                    cspm_container_avg: 99593174
                    cspm_container_hwm: 44587466
                    cspm_gcp_host_top99p: -47947150
                    cspm_host_top99p: -98308471
                    custom_ts_avg: 56500123
                    cws_container_count_avg: -95920813
                    cws_host_top99p: 21836426
                    date: '2019-08-18T18:34:44.973Z'
                    dbm_host_top99p: 60613281
                    dbm_queries_count_avg: 11105419
                    error_tracking_events_sum: 98710305
                    fargate_tasks_count_avg: 52686251
                    fargate_tasks_count_hwm: 35320014
                    flex_logs_compute_large_avg: -34402438
                    flex_logs_compute_medium_avg: 37867258
                    flex_logs_compute_small_avg: -25905693
                    flex_logs_compute_xsmall_avg: 36602581
                    flex_stored_logs_avg: 80482296
                    forwarding_events_bytes_sum: 12027026
                    gcp_host_top99p: -56104037
                    heroku_host_top99p: 74832784
                    incident_management_monthly_active_users_hwm: 57145374
                    indexed_events_count_sum: 5159284
                    infra_host_top99p: 56535984
                    ingested_events_bytes_sum: -23872915
                    iot_device_sum: 83737172
                    iot_device_top99p: -98261028
                    mobile_rum_lite_session_count_sum: -41104177
                    mobile_rum_session_count_android_sum: -39113973
                    mobile_rum_session_count_flutter_sum: 21060786
                    mobile_rum_session_count_ios_sum: 80819948
                    mobile_rum_session_count_reactnative_sum: -72657490
                    mobile_rum_session_count_roku_sum: 28454030
                    mobile_rum_session_count_sum: -30881425
                    mobile_rum_units_sum: -2601689
                    ndm_netflow_events_sum: 72154260
                    netflow_indexed_events_count_sum: -25737681
                    npm_host_top99p: -99790395
                    observability_pipelines_bytes_processed_sum: -24100835
                    online_archive_events_count_sum: 77079264
                    opentelemetry_apm_host_top99p: -97019799
                    opentelemetry_host_top99p: -52770171
                    orgs:
                      - agent_host_top99p: 12271505
                        apm_azure_app_service_host_top99p: -87894702
                        apm_devsecops_host_top99p: -59735228
                        apm_fargate_count_avg: 26639281
                        apm_host_top99p: -31821926
                        appsec_fargate_count_avg: -2181204
                        asm_serverless_sum: 78327037
                        audit_trail_enabled_hwm: 14610783
                        avg_profiled_fargate_tasks: -60910790
                        aws_host_top99p: 75270557
                        aws_lambda_func_count: -63980484
                        aws_lambda_invocations_sum: 51239002
                        azure_app_service_top99p: 48888673
                        billable_ingested_bytes_sum: -95170544
                        browser_rum_lite_session_count_sum: -22519204
                        browser_rum_replay_session_count_sum: 21669080
                        browser_rum_units_sum: 56297005
                        ci_pipeline_indexed_spans_sum: -71347478
                        ci_test_indexed_spans_sum: 36060150
                        ci_visibility_itr_committers_hwm: 75717166
                        ci_visibility_pipeline_committers_hwm: 25134905
                        ci_visibility_test_committers_hwm: -27011699
                        cloud_cost_management_aws_host_count_avg: 36853350
                        cloud_cost_management_azure_host_count_avg: -94268542
                        cloud_cost_management_gcp_host_count_avg: -15458173
                        cloud_cost_management_host_count_avg: -72923294
                        cloud_siem_events_sum: -57816423
                        container_avg: 91731199
                        container_excl_agent_avg: 15033855
                        container_hwm: 84704123
                        csm_container_enterprise_compliance_count_sum: 88079954
                        csm_container_enterprise_cws_count_sum: -53173107
                        csm_container_enterprise_total_count_sum: -70351399
                        csm_host_enterprise_aas_host_count_top99p: -45426195
                        csm_host_enterprise_aws_host_count_top99p: 74047628
                        csm_host_enterprise_azure_host_count_top99p: -24209405
                        csm_host_enterprise_compliance_host_count_top99p: -79178021
                        csm_host_enterprise_cws_host_count_top99p: -37651870
                        csm_host_enterprise_gcp_host_count_top99p: -79914732
                        csm_host_enterprise_total_host_count_top99p: 67584182
                        cspm_aas_host_top99p: 82499312
                        cspm_aws_host_top99p: 8824941
                        cspm_azure_host_top99p: -50077826
                        cspm_container_avg: 84351717
                        cspm_container_hwm: -35854900
                        cspm_gcp_host_top99p: -93310500
                        cspm_host_top99p: -72145883
                        custom_historical_ts_avg: 33099493
                        custom_live_ts_avg: 55786215
                        custom_ts_avg: -87862642
                        cws_container_count_avg: -94562369
                        cws_host_top99p: 35803484
                        dbm_host_top99p_sum: 36110105
                        dbm_queries_avg_sum: 79105296
                        error_tracking_events_sum: 86618599
                        fargate_tasks_count_avg: 2005044
                        fargate_tasks_count_hwm: 66869157
                        flex_logs_compute_large_avg: 9750902
                        flex_logs_compute_medium_avg: -75614014
                        flex_logs_compute_small_avg: 6861978
                        flex_logs_compute_xsmall_avg: -82800298
                        flex_stored_logs_avg: -65118506
                        forwarding_events_bytes_sum: -18331406
                        gcp_host_top99p: -28171218
                        heroku_host_top99p: -92465152
                        id: aliqua velit elit
                        incident_management_monthly_active_users_hwm: -85877150
                        indexed_events_count_sum: 59470302
                        infra_host_top99p: -20718507
                        ingested_events_bytes_sum: 91430666
                        iot_device_agg_sum: 90066734
                        iot_device_top99p_sum: -20886542
                        mobile_rum_lite_session_count_sum: 60618530
                        mobile_rum_session_count_android_sum: -33333415
                        mobile_rum_session_count_flutter_sum: -39635613
                        mobile_rum_session_count_ios_sum: -50869522
                        mobile_rum_session_count_reactnative_sum: -38053693
                        mobile_rum_session_count_roku_sum: 89149280
                        mobile_rum_session_count_sum: -92126685
                        mobile_rum_units_sum: -1876618
                        name: proident deserunt
                        ndm_netflow_events_sum: 89479983
                        netflow_indexed_events_count_sum: 1195230
                        npm_host_top99p: -33828692
                        observability_pipelines_bytes_processed_sum: -99875450
                        online_archive_events_count_sum: 20575490
                        opentelemetry_apm_host_top99p: 54904796
                        opentelemetry_host_top99p: 85643946
                        profiling_aas_count_top99p: 67932393
                        profiling_host_top99p: -57644619
                        public_id: cupidatat deserunt consectetur laboris
                        region: magna nulla sed ad
                        rum_browser_and_mobile_session_count: -70715238
                        rum_session_count_sum: -42936072
                        rum_total_session_count_sum: 3389805
                        rum_units_sum: -84562226
                        sds_apm_scanned_bytes_sum: 55624874
                        sds_events_scanned_bytes_sum: 85726228
                        sds_logs_scanned_bytes_sum: 56200014
                        sds_rum_scanned_bytes_sum: 96070028
                        sds_total_scanned_bytes_sum: 24696057
                        serverless_apps_azure_count_avg: -30014222
                        serverless_apps_google_count_avg: -25728769
                        serverless_apps_total_count_avg: 17734987
                        synthetics_browser_check_calls_count_sum: -60866222
                        synthetics_check_calls_count_sum: -98697949
                        synthetics_mobile_test_runs_sum: -22813292
                        synthetics_parallel_testing_max_slots_hwm: -1164235
                        trace_search_indexed_events_count_sum: 93267716
                        twol_ingested_events_bytes_sum: -74006632
                        universal_service_monitoring_host_top99p: 22032631
                        vsphere_host_top99p: -40981386
                        vuln_management_host_count_top99p: -72928172
                        workflow_executions_usage_sum: 4438787
                      - agent_host_top99p: -57401171
                        apm_azure_app_service_host_top99p: 94805460
                        apm_devsecops_host_top99p: -60276931
                        apm_fargate_count_avg: -15590845
                        apm_host_top99p: 59790234
                        appsec_fargate_count_avg: 5942593
                        asm_serverless_sum: -48311741
                        audit_trail_enabled_hwm: -31437646
                        avg_profiled_fargate_tasks: 3109232
                        aws_host_top99p: -72104890
                        aws_lambda_func_count: -1127094
                        aws_lambda_invocations_sum: 41634810
                        azure_app_service_top99p: -33187848
                        billable_ingested_bytes_sum: 31840434
                        browser_rum_lite_session_count_sum: -9161428
                        browser_rum_replay_session_count_sum: -32553527
                        browser_rum_units_sum: -62993333
                        ci_pipeline_indexed_spans_sum: 29194828
                        ci_test_indexed_spans_sum: 38524920
                        ci_visibility_itr_committers_hwm: -65958083
                        ci_visibility_pipeline_committers_hwm: -84489666
                        ci_visibility_test_committers_hwm: 30686595
                        cloud_cost_management_aws_host_count_avg: 32750015
                        cloud_cost_management_azure_host_count_avg: 92538287
                        cloud_cost_management_gcp_host_count_avg: -7471157
                        cloud_cost_management_host_count_avg: 52374267
                        cloud_siem_events_sum: 95603866
                        container_avg: 47705454
                        container_excl_agent_avg: -24176367
                        container_hwm: -49917489
                        csm_container_enterprise_compliance_count_sum: 13650065
                        csm_container_enterprise_cws_count_sum: 7042748
                        csm_container_enterprise_total_count_sum: -70789957
                        csm_host_enterprise_aas_host_count_top99p: -56479934
                        csm_host_enterprise_aws_host_count_top99p: -52542849
                        csm_host_enterprise_azure_host_count_top99p: -5335003
                        csm_host_enterprise_compliance_host_count_top99p: 94002914
                        csm_host_enterprise_cws_host_count_top99p: 13796475
                        csm_host_enterprise_gcp_host_count_top99p: -52726638
                        csm_host_enterprise_total_host_count_top99p: -66687187
                        cspm_aas_host_top99p: 87944366
                        cspm_aws_host_top99p: 24809781
                        cspm_azure_host_top99p: 83955064
                        cspm_container_avg: 88327674
                        cspm_container_hwm: -16929978
                        cspm_gcp_host_top99p: 75483184
                        cspm_host_top99p: -74588316
                        custom_historical_ts_avg: 1134542
                        custom_live_ts_avg: -34600100
                        custom_ts_avg: 4151401
                        cws_container_count_avg: -99168776
                        cws_host_top99p: 4408386
                        dbm_host_top99p_sum: 60684224
                        dbm_queries_avg_sum: 66621349
                        error_tracking_events_sum: -78555681
                        fargate_tasks_count_avg: 21078422
                        fargate_tasks_count_hwm: 43815196
                        flex_logs_compute_large_avg: -65619972
                        flex_logs_compute_medium_avg: 40464580
                        flex_logs_compute_small_avg: -43022742
                        flex_logs_compute_xsmall_avg: -98910656
                        flex_stored_logs_avg: 88437671
                        forwarding_events_bytes_sum: 990104
                        gcp_host_top99p: -64960548
                        heroku_host_top99p: -62030227
                        id: pariatur Excepteur tempor amet aute
                        incident_management_monthly_active_users_hwm: -34303166
                        indexed_events_count_sum: 26929977
                        infra_host_top99p: -37732411
                        ingested_events_bytes_sum: 21662497
                        iot_device_agg_sum: 59858637
                        iot_device_top99p_sum: -8158294
                        mobile_rum_lite_session_count_sum: -2422999
                        mobile_rum_session_count_android_sum: 93386122
                        mobile_rum_session_count_flutter_sum: -63129800
                        mobile_rum_session_count_ios_sum: 74102100
                        mobile_rum_session_count_reactnative_sum: -27535493
                        mobile_rum_session_count_roku_sum: -30976976
                        mobile_rum_session_count_sum: -67667318
                        mobile_rum_units_sum: -51315873
                        name: aliqua ullamco
                        ndm_netflow_events_sum: -20349191
                        netflow_indexed_events_count_sum: 71714691
                        npm_host_top99p: 25283461
                        observability_pipelines_bytes_processed_sum: 27785552
                        online_archive_events_count_sum: -37727419
                        opentelemetry_apm_host_top99p: -299422
                        opentelemetry_host_top99p: 98115954
                        profiling_aas_count_top99p: 67903391
                        profiling_host_top99p: 76287787
                        public_id: anim culpa nulla
                        region: ut Duis deserunt
                        rum_browser_and_mobile_session_count: 83648584
                        rum_session_count_sum: 14547425
                        rum_total_session_count_sum: -71926195
                        rum_units_sum: -74244798
                        sds_apm_scanned_bytes_sum: -53129774
                        sds_events_scanned_bytes_sum: 55946682
                        sds_logs_scanned_bytes_sum: -91506489
                        sds_rum_scanned_bytes_sum: 32754907
                        sds_total_scanned_bytes_sum: 2587506
                        serverless_apps_azure_count_avg: -32131341
                        serverless_apps_google_count_avg: -8674219
                        serverless_apps_total_count_avg: 40263059
                        synthetics_browser_check_calls_count_sum: 46898801
                        synthetics_check_calls_count_sum: 32041006
                        synthetics_mobile_test_runs_sum: -61649991
                        synthetics_parallel_testing_max_slots_hwm: -67048492
                        trace_search_indexed_events_count_sum: 95014326
                        twol_ingested_events_bytes_sum: -48163642
                        universal_service_monitoring_host_top99p: 72886583
                        vsphere_host_top99p: -54720065
                        vuln_management_host_count_top99p: -63706814
                        workflow_executions_usage_sum: -11819563
                    profiling_aas_count_top99p: -66957388
                    profiling_host_top99p: -23567949
                    rum_browser_and_mobile_session_count: -20822856
                    rum_session_count_sum: 63105179
                    rum_total_session_count_sum: -92191349
                    rum_units_sum: 42402429
                    sds_apm_scanned_bytes_sum: 82626661
                    sds_events_scanned_bytes_sum: -52075780
                    sds_logs_scanned_bytes_sum: -79318708
                    sds_rum_scanned_bytes_sum: -59110587
                    sds_total_scanned_bytes_sum: -83621149
                    serverless_apps_azure_count_avg: 53821551
                    serverless_apps_google_count_avg: 48116952
                    serverless_apps_total_count_avg: -64060109
                    synthetics_browser_check_calls_count_sum: -83049554
                    synthetics_check_calls_count_sum: -36770746
                    synthetics_mobile_test_runs_sum: -83694768
                    synthetics_parallel_testing_max_slots_hwm: 53930035
                    trace_search_indexed_events_count_sum: -20983670
                    twol_ingested_events_bytes_sum: -36209435
                    universal_service_monitoring_host_top99p: -55408366
                    vsphere_host_top99p: 59362799
                    vuln_management_host_count_top99p: -3037406
                    workflow_executions_usage_sum: -81082450
                  - agent_host_top99p: -83793460
                    apm_azure_app_service_host_top99p: 92311646
                    apm_devsecops_host_top99p: 32529535
                    apm_fargate_count_avg: -33300284
                    apm_host_top99p: 23667471
                    appsec_fargate_count_avg: -36610838
                    asm_serverless_sum: -83965097
                    audit_trail_enabled_hwm: -85813587
                    avg_profiled_fargate_tasks: -65317873
                    aws_host_top99p: -7601677
                    aws_lambda_func_count: -45336113
                    aws_lambda_invocations_sum: -79352822
                    azure_app_service_top99p: -67186923
                    billable_ingested_bytes_sum: 72691201
                    browser_rum_lite_session_count_sum: 58041632
                    browser_rum_replay_session_count_sum: 56261459
                    browser_rum_units_sum: 76336661
                    ci_pipeline_indexed_spans_sum: -52490001
                    ci_test_indexed_spans_sum: 8342162
                    ci_visibility_itr_committers_hwm: -29711694
                    ci_visibility_pipeline_committers_hwm: -30725606
                    ci_visibility_test_committers_hwm: 33134080
                    cloud_cost_management_aws_host_count_avg: 18728829
                    cloud_cost_management_azure_host_count_avg: -51358371
                    cloud_cost_management_gcp_host_count_avg: -55921516
                    cloud_cost_management_host_count_avg: -66398672
                    cloud_siem_events_sum: 20932502
                    container_avg: 11081989
                    container_excl_agent_avg: 80217929
                    container_hwm: -17940788
                    csm_container_enterprise_compliance_count_sum: 2548989
                    csm_container_enterprise_cws_count_sum: 75687096
                    csm_container_enterprise_total_count_sum: -63710416
                    csm_host_enterprise_aas_host_count_top99p: -44821805
                    csm_host_enterprise_aws_host_count_top99p: 46389069
                    csm_host_enterprise_azure_host_count_top99p: 21277012
                    csm_host_enterprise_compliance_host_count_top99p: 35387644
                    csm_host_enterprise_cws_host_count_top99p: -28542481
                    csm_host_enterprise_gcp_host_count_top99p: -30177064
                    csm_host_enterprise_total_host_count_top99p: 9311515
                    cspm_aas_host_top99p: 36138323
                    cspm_aws_host_top99p: -44727790
                    cspm_azure_host_top99p: 6864449
                    cspm_container_avg: -56325996
                    cspm_container_hwm: -50895113
                    cspm_gcp_host_top99p: 84653014
                    cspm_host_top99p: 55841
                    custom_ts_avg: -6846598
                    cws_container_count_avg: 63507988
                    cws_host_top99p: -78016145
                    date: '2000-03-21T21:39:52.139Z'
                    dbm_host_top99p: 99035048
                    dbm_queries_count_avg: -79885869
                    error_tracking_events_sum: -23022631
                    fargate_tasks_count_avg: 10667530
                    fargate_tasks_count_hwm: -75048257
                    flex_logs_compute_large_avg: 68678193
                    flex_logs_compute_medium_avg: 29755184
                    flex_logs_compute_small_avg: -6979164
                    flex_logs_compute_xsmall_avg: 34628217
                    flex_stored_logs_avg: 72030985
                    forwarding_events_bytes_sum: -77054489
                    gcp_host_top99p: -75351950
                    heroku_host_top99p: 86454411
                    incident_management_monthly_active_users_hwm: 45327783
                    indexed_events_count_sum: -84432266
                    infra_host_top99p: 22817950
                    ingested_events_bytes_sum: 16752806
                    iot_device_sum: 73299983
                    iot_device_top99p: -73226439
                    mobile_rum_lite_session_count_sum: 57836973
                    mobile_rum_session_count_android_sum: -41575358
                    mobile_rum_session_count_flutter_sum: -20276496
                    mobile_rum_session_count_ios_sum: -84372739
                    mobile_rum_session_count_reactnative_sum: -66522467
                    mobile_rum_session_count_roku_sum: 74644862
                    mobile_rum_session_count_sum: 56061928
                    mobile_rum_units_sum: -99177766
                    ndm_netflow_events_sum: -47112943
                    netflow_indexed_events_count_sum: 75838583
                    npm_host_top99p: -61090640
                    observability_pipelines_bytes_processed_sum: -77947035
                    online_archive_events_count_sum: 63335818
                    opentelemetry_apm_host_top99p: -15860026
                    opentelemetry_host_top99p: 41100146
                    orgs:
                      - agent_host_top99p: -1578849
                        apm_azure_app_service_host_top99p: 54739279
                        apm_devsecops_host_top99p: 80829438
                        apm_fargate_count_avg: 61288557
                        apm_host_top99p: 1694228
                        appsec_fargate_count_avg: 87867196
                        asm_serverless_sum: -9512778
                        audit_trail_enabled_hwm: 5968892
                        avg_profiled_fargate_tasks: 71349066
                        aws_host_top99p: -18268607
                        aws_lambda_func_count: 74374966
                        aws_lambda_invocations_sum: -84391354
                        azure_app_service_top99p: 47256904
                        billable_ingested_bytes_sum: 2888106
                        browser_rum_lite_session_count_sum: -66633676
                        browser_rum_replay_session_count_sum: -45557448
                        browser_rum_units_sum: -62829386
                        ci_pipeline_indexed_spans_sum: -19675088
                        ci_test_indexed_spans_sum: -61551019
                        ci_visibility_itr_committers_hwm: -80784552
                        ci_visibility_pipeline_committers_hwm: -48886180
                        ci_visibility_test_committers_hwm: 1251698
                        cloud_cost_management_aws_host_count_avg: -46730071
                        cloud_cost_management_azure_host_count_avg: 52357995
                        cloud_cost_management_gcp_host_count_avg: 6518682
                        cloud_cost_management_host_count_avg: 57072212
                        cloud_siem_events_sum: -28862175
                        container_avg: -29401733
                        container_excl_agent_avg: 99894491
                        container_hwm: 61896407
                        csm_container_enterprise_compliance_count_sum: 79545637
                        csm_container_enterprise_cws_count_sum: -47894000
                        csm_container_enterprise_total_count_sum: -53452234
                        csm_host_enterprise_aas_host_count_top99p: 29008228
                        csm_host_enterprise_aws_host_count_top99p: -47142698
                        csm_host_enterprise_azure_host_count_top99p: 85570388
                        csm_host_enterprise_compliance_host_count_top99p: 4620875
                        csm_host_enterprise_cws_host_count_top99p: -31890410
                        csm_host_enterprise_gcp_host_count_top99p: -48948447
                        csm_host_enterprise_total_host_count_top99p: -57490570
                        cspm_aas_host_top99p: -19730292
                        cspm_aws_host_top99p: -35978878
                        cspm_azure_host_top99p: 32743045
                        cspm_container_avg: -38289304
                        cspm_container_hwm: -23798683
                        cspm_gcp_host_top99p: 90077644
                        cspm_host_top99p: -23157761
                        custom_historical_ts_avg: 55746133
                        custom_live_ts_avg: -17055553
                        custom_ts_avg: -2502352
                        cws_container_count_avg: -14805098
                        cws_host_top99p: -8016171
                        dbm_host_top99p_sum: 69604040
                        dbm_queries_avg_sum: -19890125
                        error_tracking_events_sum: 82060690
                        fargate_tasks_count_avg: -2004233
                        fargate_tasks_count_hwm: 13694599
                        flex_logs_compute_large_avg: 78023048
                        flex_logs_compute_medium_avg: 92239605
                        flex_logs_compute_small_avg: 61082177
                        flex_logs_compute_xsmall_avg: 80196373
                        flex_stored_logs_avg: -82343548
                        forwarding_events_bytes_sum: -90779741
                        gcp_host_top99p: 63645222
                        heroku_host_top99p: 62899835
                        id: exercitation
                        incident_management_monthly_active_users_hwm: -89562086
                        indexed_events_count_sum: -39703658
                        infra_host_top99p: -137756
                        ingested_events_bytes_sum: -24448757
                        iot_device_agg_sum: -31199088
                        iot_device_top99p_sum: -56407168
                        mobile_rum_lite_session_count_sum: -21516837
                        mobile_rum_session_count_android_sum: -90732288
                        mobile_rum_session_count_flutter_sum: 49127294
                        mobile_rum_session_count_ios_sum: 40169866
                        mobile_rum_session_count_reactnative_sum: -24492229
                        mobile_rum_session_count_roku_sum: 52386221
                        mobile_rum_session_count_sum: 37651583
                        mobile_rum_units_sum: 78174005
                        name: consectetur do
                        ndm_netflow_events_sum: -70941637
                        netflow_indexed_events_count_sum: 41407261
                        npm_host_top99p: -68900835
                        observability_pipelines_bytes_processed_sum: 70698239
                        online_archive_events_count_sum: -65865389
                        opentelemetry_apm_host_top99p: 77893787
                        opentelemetry_host_top99p: 79974727
                        profiling_aas_count_top99p: -66953419
                        profiling_host_top99p: 52317529
                        public_id: magna in dolor nulla
                        region: quis commodo do
                        rum_browser_and_mobile_session_count: 55565498
                        rum_session_count_sum: 99373826
                        rum_total_session_count_sum: -81122611
                        rum_units_sum: -34991924
                        sds_apm_scanned_bytes_sum: -73017712
                        sds_events_scanned_bytes_sum: -18919947
                        sds_logs_scanned_bytes_sum: 33769792
                        sds_rum_scanned_bytes_sum: -60861931
                        sds_total_scanned_bytes_sum: -43252691
                        serverless_apps_azure_count_avg: 40180746
                        serverless_apps_google_count_avg: -10918087
                        serverless_apps_total_count_avg: -48166488
                        synthetics_browser_check_calls_count_sum: -17129288
                        synthetics_check_calls_count_sum: 30629510
                        synthetics_mobile_test_runs_sum: 37407049
                        synthetics_parallel_testing_max_slots_hwm: -79743674
                        trace_search_indexed_events_count_sum: -36176462
                        twol_ingested_events_bytes_sum: 27196337
                        universal_service_monitoring_host_top99p: 59596726
                        vsphere_host_top99p: -10540094
                        vuln_management_host_count_top99p: -32919658
                        workflow_executions_usage_sum: -16896076
                      - agent_host_top99p: -95029526
                        apm_azure_app_service_host_top99p: 17399751
                        apm_devsecops_host_top99p: -43509277
                        apm_fargate_count_avg: -11426508
                        apm_host_top99p: 459640
                        appsec_fargate_count_avg: 64522490
                        asm_serverless_sum: 56849817
                        audit_trail_enabled_hwm: 27677787
                        avg_profiled_fargate_tasks: -29758439
                        aws_host_top99p: 24223862
                        aws_lambda_func_count: 3415636
                        aws_lambda_invocations_sum: -29178303
                        azure_app_service_top99p: 24305628
                        billable_ingested_bytes_sum: -29725439
                        browser_rum_lite_session_count_sum: 87771234
                        browser_rum_replay_session_count_sum: -39057404
                        browser_rum_units_sum: -98816111
                        ci_pipeline_indexed_spans_sum: -76670919
                        ci_test_indexed_spans_sum: 91886826
                        ci_visibility_itr_committers_hwm: 70545794
                        ci_visibility_pipeline_committers_hwm: -7537372
                        ci_visibility_test_committers_hwm: 12573750
                        cloud_cost_management_aws_host_count_avg: 53843002
                        cloud_cost_management_azure_host_count_avg: -31594354
                        cloud_cost_management_gcp_host_count_avg: 17252526
                        cloud_cost_management_host_count_avg: 14099937
                        cloud_siem_events_sum: -31365910
                        container_avg: -39560068
                        container_excl_agent_avg: 47485431
                        container_hwm: 33847778
                        csm_container_enterprise_compliance_count_sum: -4951634
                        csm_container_enterprise_cws_count_sum: 12894980
                        csm_container_enterprise_total_count_sum: 41184517
                        csm_host_enterprise_aas_host_count_top99p: -44404493
                        csm_host_enterprise_aws_host_count_top99p: 38696412
                        csm_host_enterprise_azure_host_count_top99p: 19240708
                        csm_host_enterprise_compliance_host_count_top99p: 21542472
                        csm_host_enterprise_cws_host_count_top99p: 45152081
                        csm_host_enterprise_gcp_host_count_top99p: -5080710
                        csm_host_enterprise_total_host_count_top99p: -34483432
                        cspm_aas_host_top99p: -78333226
                        cspm_aws_host_top99p: -28405750
                        cspm_azure_host_top99p: 40451157
                        cspm_container_avg: -5116560
                        cspm_container_hwm: 59306453
                        cspm_gcp_host_top99p: -89284421
                        cspm_host_top99p: -16215915
                        custom_historical_ts_avg: -29806920
                        custom_live_ts_avg: 19795076
                        custom_ts_avg: 81783194
                        cws_container_count_avg: -25171334
                        cws_host_top99p: 42641183
                        dbm_host_top99p_sum: -52087051
                        dbm_queries_avg_sum: 83640266
                        error_tracking_events_sum: -19596178
                        fargate_tasks_count_avg: -42106130
                        fargate_tasks_count_hwm: -80067868
                        flex_logs_compute_large_avg: -12977444
                        flex_logs_compute_medium_avg: 91244620
                        flex_logs_compute_small_avg: 63651182
                        flex_logs_compute_xsmall_avg: 16113384
                        flex_stored_logs_avg: -37240984
                        forwarding_events_bytes_sum: 33552930
                        gcp_host_top99p: 88821919
                        heroku_host_top99p: -15460127
                        id: labore dolore ipsum sint
                        incident_management_monthly_active_users_hwm: -72032573
                        indexed_events_count_sum: 4882929
                        infra_host_top99p: 51315073
                        ingested_events_bytes_sum: -86793330
                        iot_device_agg_sum: 47020760
                        iot_device_top99p_sum: 36489661
                        mobile_rum_lite_session_count_sum: -16989
                        mobile_rum_session_count_android_sum: -10223736
                        mobile_rum_session_count_flutter_sum: 5181709
                        mobile_rum_session_count_ios_sum: 6846655
                        mobile_rum_session_count_reactnative_sum: 60990433
                        mobile_rum_session_count_roku_sum: 2297131
                        mobile_rum_session_count_sum: 85675430
                        mobile_rum_units_sum: -37355553
                        name: exercitation sed
                        ndm_netflow_events_sum: -57011241
                        netflow_indexed_events_count_sum: 69013154
                        npm_host_top99p: -61137088
                        observability_pipelines_bytes_processed_sum: 6360942
                        online_archive_events_count_sum: 17947336
                        opentelemetry_apm_host_top99p: 48828307
                        opentelemetry_host_top99p: 59839455
                        profiling_aas_count_top99p: 82041278
                        profiling_host_top99p: -56786792
                        public_id: sit mollit sint
                        region: Ut reprehenderit commodo anim
                        rum_browser_and_mobile_session_count: 81197591
                        rum_session_count_sum: 60222657
                        rum_total_session_count_sum: 34600525
                        rum_units_sum: 96248948
                        sds_apm_scanned_bytes_sum: -26782512
                        sds_events_scanned_bytes_sum: -95428936
                        sds_logs_scanned_bytes_sum: -73584554
                        sds_rum_scanned_bytes_sum: -94836399
                        sds_total_scanned_bytes_sum: -64413250
                        serverless_apps_azure_count_avg: 90177631
                        serverless_apps_google_count_avg: 88916882
                        serverless_apps_total_count_avg: -64749736
                        synthetics_browser_check_calls_count_sum: -82817321
                        synthetics_check_calls_count_sum: 64026843
                        synthetics_mobile_test_runs_sum: -66749680
                        synthetics_parallel_testing_max_slots_hwm: 94566182
                        trace_search_indexed_events_count_sum: 95619355
                        twol_ingested_events_bytes_sum: -4282587
                        universal_service_monitoring_host_top99p: 18951804
                        vsphere_host_top99p: -24753438
                        vuln_management_host_count_top99p: 76762302
                        workflow_executions_usage_sum: 55564193
                    profiling_aas_count_top99p: 62488020
                    profiling_host_top99p: 81633867
                    rum_browser_and_mobile_session_count: 75826938
                    rum_session_count_sum: -54669198
                    rum_total_session_count_sum: -9021905
                    rum_units_sum: -16934350
                    sds_apm_scanned_bytes_sum: 48756496
                    sds_events_scanned_bytes_sum: 15829949
                    sds_logs_scanned_bytes_sum: -68834720
                    sds_rum_scanned_bytes_sum: -49179414
                    sds_total_scanned_bytes_sum: -74528159
                    serverless_apps_azure_count_avg: -65535531
                    serverless_apps_google_count_avg: 31204708
                    serverless_apps_total_count_avg: 45494613
                    synthetics_browser_check_calls_count_sum: 13432748
                    synthetics_check_calls_count_sum: -87554707
                    synthetics_mobile_test_runs_sum: -43295754
                    synthetics_parallel_testing_max_slots_hwm: -43319822
                    trace_search_indexed_events_count_sum: -15216286
                    twol_ingested_events_bytes_sum: 48560826
                    universal_service_monitoring_host_top99p: -50745649
                    vsphere_host_top99p: -56415079
                    vuln_management_host_count_top99p: 37709312
                    workflow_executions_usage_sum: -2880603
                vsphere_host_top99p_sum: -38577475
                vuln_management_host_count_top99p_sum: 62165720
                workflow_executions_usage_agg_sum: 56345918
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/usage/logs_by_index:
    get:
      tags:
        - Hourly
        - Index
        - Logs
        - Usage
      summary: 'Get Hourly Usage For Logs By Index '
      description: Get hourly usage for logs by index.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json;datetime-format=rfc3339
        - name: start_hr
          in: query
          schema:
            type: string
          description: >-
            (Required) Datetime in ISO-8601 format, UTC, precise to hour:
            [YYYY-MM-DDThh] for usage beginning at this hour.
          example: '1992-04-06T18:39:52.088Z'
        - name: end_hr
          in: query
          schema:
            type: string
          description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          example: '1992-04-06T18:39:52.088Z'
        - name: index_name
          in: query
          schema:
            type: string
          description: Comma-separated list of log index names.
          example: ad deserunt eiusmod
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                usage:
                  - event_count: -17751144
                    hour: '1985-06-06T14:27:31.376Z'
                    index_id: nostrud
                    index_name: exercitation consequat qui do
                    org_name: laborum enim ullamco
                    public_id: irure laboris in
                    retention: 2128857
                  - event_count: 18484451
                    hour: '2018-07-09T05:30:59.054Z'
                    index_id: irure
                    index_name: eiusmod nisi in cupidatat
                    org_name: aliquip dolore pariatur esse reprehenderit
                    public_id: culpa elit Duis
                    retention: 3339980
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json;datetime-format=rfc3339
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/users:
    post:
      tags:
        - Users
      summary: 'Create A User '
      description: Create a user for your organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    email: jane.doe@example.com
                    name: amet laboris an
                    title: consequat do dolore ipsum quis
                  type: users
                  relationships:
                    roles:
                      data:
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2005-12-14T18:17:57.666Z'
                    disabled: false
                    email: quis nulla dolor ullamco
                    handle: magna aute Excepteur cillum qui
                    icon: 'eu occaecat anim '
                    modified_at: '1990-12-01T02:41:26.199Z'
                    name: voluptate Ut cillum minim
                    service_account: false
                    status: Duis pariatur
                    title: sunt irure et
                    verified: true
                  id: sit veniam velit ipsum dolore
                  relationships:
                    org:
                      data:
                        id: 00000000-0000-beef-0000-000000000000
                        type: orgs
                    other_orgs:
                      data: []
                    other_users:
                      data: []
                    roles:
                      data:
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                  type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1989-01-21T18:12:19.298Z'
                      description: culpa commodo adipisicing in
                      disabled: false
                      modified_at: '1951-10-29T07:06:58.474Z'
                      name: veniam in nisi cillum irure
                      public_id: Ut esse pariatur
                      sharing: nisi laborum ut aliqua
                      url: sint ea quis sit
                    id: ut exe
                  - type: orgs
                    attributes:
                      created_at: '1997-09-29T04:11:37.259Z'
                      description: ullamco mollit occaecat in anim
                      disabled: false
                      modified_at: '2020-02-24T20:19:57.938Z'
                      name: reprehenderit Ut dolore minim
                      public_id: do qui ad laborum
                      sharing: enim deserunt cillum
                      url: aliquip id
                    id: voluptate sunt ad incididunt
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    get:
      tags:
        - Users
      summary: 'List All Users '
      description: |-
        Get the list of all users in the organization. This list includes
        all users even if they are deactivated or unverified.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '2016-06-21T01:04:16.799Z'
                      disabled: true
                      email: laborum labore nulla
                      handle: sed anim ipsum
                      icon: elit nisi dolore Excepteur ut
                      modified_at: '1987-05-21T03:58:08.624Z'
                      name: Lorem
                      service_account: false
                      status: consequat Ut aliquip
                      title: aliqua tempor
                      verified: false
                    id: adipisicing Duis
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                  - attributes:
                      created_at: '2019-02-23T06:01:44.457Z'
                      disabled: false
                      email: sint eiusmod Ut consequat
                      handle: occaecat ullamco incididunt eu
                      icon: Ut dolor
                      modified_at: '1946-04-15T11:31:03.027Z'
                      name: non id
                      service_account: true
                      status: Excepteur D
                      title: mollit in aute anim proident
                      verified: true
                    id: ei
                    relationships:
                      org:
                        data:
                          id: 00000000-0000-beef-0000-000000000000
                          type: orgs
                      other_orgs:
                        data: []
                      other_users:
                        data: []
                      roles:
                        data:
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                            type: roles
                    type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1957-02-12T18:48:25.171Z'
                      description: consequat in commodo adipisicing
                      disabled: true
                      modified_at: '2005-01-30T19:04:56.267Z'
                      name: consequat sit
                      public_id: tempor consequat proident
                      sharing: cillum proident incididunt
                      url: a
                    id: eiusmod ut Lorem fugiat
                  - type: orgs
                    attributes:
                      created_at: '2015-10-18T08:46:20.466Z'
                      description: in ut
                      disabled: true
                      modified_at: '1979-12-20T09:40:53.251Z'
                      name: mollit irure ad ipsum
                      public_id: dolor id
                      sharing: elit nulla
                      url: nisi in
                    id: deserunt amet
                meta:
                  page:
                    total_count: -17566972
                    total_filtered_count: 91760735
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/users/{user_id}:
    get:
      tags:
        - Details
        - Users
      summary: 'Get User Details '
      description: Get a user in the organization specified by the user’s `user_id`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-9999-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2005-12-14T18:17:57.666Z'
                    disabled: false
                    email: quis nulla dolor ullamco
                    handle: magna aute Excepteur cillum qui
                    icon: 'eu occaecat anim '
                    modified_at: '1990-12-01T02:41:26.199Z'
                    name: voluptate Ut cillum minim
                    service_account: false
                    status: Duis pariatur
                    title: sunt irure et
                    verified: true
                  id: sit veniam velit ipsum dolore
                  relationships:
                    org:
                      data:
                        id: 00000000-0000-beef-0000-000000000000
                        type: orgs
                    other_orgs:
                      data: []
                    other_users:
                      data: []
                    roles:
                      data:
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                  type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1989-01-21T18:12:19.298Z'
                      description: culpa commodo adipisicing in
                      disabled: false
                      modified_at: '1951-10-29T07:06:58.474Z'
                      name: veniam in nisi cillum irure
                      public_id: Ut esse pariatur
                      sharing: nisi laborum ut aliqua
                      url: sint ea quis sit
                    id: ut exe
                  - type: orgs
                    attributes:
                      created_at: '1997-09-29T04:11:37.259Z'
                      description: ullamco mollit occaecat in anim
                      disabled: false
                      modified_at: '2020-02-24T20:19:57.938Z'
                      name: reprehenderit Ut dolore minim
                      public_id: do qui ad laborum
                      sharing: enim deserunt cillum
                      url: aliquip id
                    id: voluptate sunt ad incididunt
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    patch:
      tags:
        - Users
      summary: 'Update A User '
      description: |-
        Edit a user. Can only be used with an application key belonging
        to an administrator user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  attributes:
                    disabled: false
                    email: ut aliquip deserunt anim
                    name: elit ut anim in
                  type: users
                  id: 00000000-0000-feed-0000-000000000000
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-9999-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2005-12-14T18:17:57.666Z'
                    disabled: false
                    email: quis nulla dolor ullamco
                    handle: magna aute Excepteur cillum qui
                    icon: 'eu occaecat anim '
                    modified_at: '1990-12-01T02:41:26.199Z'
                    name: voluptate Ut cillum minim
                    service_account: false
                    status: Duis pariatur
                    title: sunt irure et
                    verified: true
                  id: sit veniam velit ipsum dolore
                  relationships:
                    org:
                      data:
                        id: 00000000-0000-beef-0000-000000000000
                        type: orgs
                    other_orgs:
                      data: []
                    other_users:
                      data: []
                    roles:
                      data:
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                  type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1989-01-21T18:12:19.298Z'
                      description: culpa commodo adipisicing in
                      disabled: false
                      modified_at: '1951-10-29T07:06:58.474Z'
                      name: veniam in nisi cillum irure
                      public_id: Ut esse pariatur
                      sharing: nisi laborum ut aliqua
                      url: sint ea quis sit
                    id: ut exe
                  - type: orgs
                    attributes:
                      created_at: '1997-09-29T04:11:37.259Z'
                      description: ullamco mollit occaecat in anim
                      disabled: false
                      modified_at: '2020-02-24T20:19:57.938Z'
                      name: reprehenderit Ut dolore minim
                      public_id: do qui ad laborum
                      sharing: enim deserunt cillum
                      url: aliquip id
                    id: voluptate sunt ad incididunt
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '422':
          description: Unprocessable Entity (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Disable
        - Users
      summary: 'Disable A User '
      description: |-
        Disable a user. Can only be used with an application key belonging
        to an administrator user.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-9999-0000-000000000000
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/users/{user_id}/orgs:
    get:
      tags:
        - Organizations
        - Users
      summary: 'Get A User Organization '
      description: >-
        Get a user organization. Returns the user information and all
        organizations

        joined by this user.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-9999-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '2005-12-14T18:17:57.666Z'
                    disabled: false
                    email: quis nulla dolor ullamco
                    handle: magna aute Excepteur cillum qui
                    icon: 'eu occaecat anim '
                    modified_at: '1990-12-01T02:41:26.199Z'
                    name: voluptate Ut cillum minim
                    service_account: false
                    status: Duis pariatur
                    title: sunt irure et
                    verified: true
                  id: sit veniam velit ipsum dolore
                  relationships:
                    org:
                      data:
                        id: 00000000-0000-beef-0000-000000000000
                        type: orgs
                    other_orgs:
                      data: []
                    other_users:
                      data: []
                    roles:
                      data:
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                        - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                          type: roles
                  type: users
                included:
                  - type: orgs
                    attributes:
                      created_at: '1989-01-21T18:12:19.298Z'
                      description: culpa commodo adipisicing in
                      disabled: false
                      modified_at: '1951-10-29T07:06:58.474Z'
                      name: veniam in nisi cillum irure
                      public_id: Ut esse pariatur
                      sharing: nisi laborum ut aliqua
                      url: sint ea quis sit
                    id: ut exe
                  - type: orgs
                    attributes:
                      created_at: '1997-09-29T04:11:37.259Z'
                      description: ullamco mollit occaecat in anim
                      disabled: false
                      modified_at: '2020-02-24T20:19:57.938Z'
                      name: reprehenderit Ut dolore minim
                      public_id: do qui ad laborum
                      sharing: enim deserunt cillum
                      url: aliquip id
                    id: voluptate sunt ad incididunt
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/users/{user_id}/permissions:
    get:
      tags:
        - Permissions
        - Users
      summary: 'Get A User Permissions '
      description: |-
        Get a user permission set. Returns a list of the user’s permissions
        granted by the associated user's roles.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-9999-0000-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - type: permissions
                    attributes:
                      created: '1972-03-11T01:22:33.040Z'
                      description: officia quis qui Excepteur
                      display_name: anim sint velit aute et
                      display_type: aliquip voluptate eu in
                      group_name: dolor cillum labore ma
                      name: culpa veniam
                      restricted: true
                    id: dolore occaecat laboris non
                  - type: permissions
                    attributes:
                      created: '2020-04-07T16:00:13.055Z'
                      description: Duis mollit occaecat
                      display_name: in dolor elit
                      display_type: 'sed '
                      group_name: ut dolore Lorem
                      name: nulla
                      restricted: true
                    id: commodo non labore
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/user_invitations:
    post:
      tags:
        - Emails
        - Invitation
        - Invitations
        - Send
        - Users
      summary: 'Send Invitation Emails '
      description: >-
        Sends emails to one or more users inviting them to join the
        organization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data: []
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - attributes:
                      created_at: '1961-12-17T17:35:53.740Z'
                      expires_at: '1948-08-29T19:36:34.237Z'
                      invite_type: magna laborum
                      uuid: esse
                    id: quis sed sunt dolore
                    relationships:
                      user:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: user_invitations
                  - attributes:
                      created_at: '2000-06-21T13:44:03.437Z'
                      expires_at: '1994-11-16T07:55:31.791Z'
                      invite_type: do
                      uuid: su
                    id: sunt cons
                    relationships:
                      user:
                        data:
                          id: 00000000-0000-0000-2345-000000000000
                          type: users
                    type: user_invitations
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v2/user_invitations/{user_invitation_uuid}:
    get:
      tags:
        - Invitation
        - Invitations
        - Users
        - Uu
      summary: 'Get A User Invitation '
      description: Returns a single user invitation by its UUID.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_invitation_uuid
          in: path
          schema:
            type: string
          required: true
          example: 00000000-0000-0000-3456-000000000000
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  attributes:
                    created_at: '1962-01-06T05:56:56.441Z'
                    expires_at: '2014-01-24T18:54:59.761Z'
                    invite_type: nisi in
                    uuid: Excepteur ipsum eu ma
                  id: ad
                  relationships:
                    user:
                      data:
                        id: 00000000-0000-0000-2345-000000000000
                        type: users
                  type: user_invitations
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/webhooks/configuration/webhooks:
    post:
      tags:
        - Configurations
        - Integrations
        - Webhooks
      summary: 'Create A Webhooks Integration '
      description: Creates an endpoint with the name `<WEBHOOK_NAME>`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: WEBHOOK_NAME
                url: https://example.com/webhook
                custom_headers: veniam eiusmod
                encode_as: json
                payload: veniam do ea proident
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: WEBHOOK_NAME
                url: https://example.com/webhook
                custom_headers: veniam eiusmod
                encode_as: json
                payload: veniam do ea proident
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/webhooks/configuration/webhooks/{webhook_name}:
    get:
      tags:
        - Configurations
        - Integrations
        - Names
        - Webhooks
      summary: 'Get A Webhook Integration '
      description: Gets the content of the webhook with the name `<WEBHOOK_NAME>`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webhook_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: WEBHOOK_NAME
                url: https://example.com/webhook
                custom_headers: veniam eiusmod
                encode_as: json
                payload: veniam do ea proident
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Configurations
        - Integrations
        - Names
        - Webhooks
      summary: 'Update A Webhook '
      description: Updates the endpoint with the name `<WEBHOOK_NAME>`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_headers: 'ullamco aute '
                encode_as: json
                name: WEBHOOK_NAME
                payload: aliqua enim sint ut
                url: https://example.com/webhook
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webhook_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: WEBHOOK_NAME
                url: https://example.com/webhook
                custom_headers: veniam eiusmod
                encode_as: json
                payload: veniam do ea proident
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Integrations
        - Names
        - Webhooks
      summary: 'Delete A Webhook '
      description: Deletes the endpoint with the name `<WEBHOOK NAME>`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webhook_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/webhooks/configuration/custom-variables:
    post:
      tags:
        - Configurations
        - Custom
        - Integrations
        - Variables
        - Webhooks
      summary: 'Create A Custom Variable '
      description: Creates an endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: CUSTOM_VARIABLE_NAME
                value: CUSTOM_VARIABLE_VALUE
                is_secret: true
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: CUSTOM_VARIABLE_NAME
                is_secret: true
                value: CUSTOM_VARIABLE_VALUE
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
  /api/v1/integration/webhooks/configuration/custom-variables/{custom_variable_name}:
    get:
      tags:
        - Configurations
        - Custom
        - Integrations
        - Names
        - Variables
        - Webhooks
      summary: 'Get A Custom Variable '
      description: >-
        Shows the content of the custom variable with the name
        `<CUSTOM_VARIABLE_NAME>`.


        If the custom variable is secret, the value does not return in the

        response payload.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_variable_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: CUSTOM_VARIABLE_NAME
                is_secret: true
                value: CUSTOM_VARIABLE_VALUE
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    put:
      tags:
        - Configurations
        - Custom
        - Integrations
        - Names
        - Variables
        - Webhooks
      summary: 'Update A Custom Variable '
      description: Updates the endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                is_secret: true
                name: CUSTOM_VARIABLE_NAME
                value: CUSTOM_VARIABLE_VALUE
      security:
        - noauthAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_variable_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: CUSTOM_VARIABLE_NAME
                is_secret: true
                value: CUSTOM_VARIABLE_VALUE
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
    delete:
      tags:
        - Configurations
        - Custom
        - Integrations
        - Names
        - Variables
        - Webhooks
      summary: 'Delete A Custom Variable '
      description: Deletes the endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_variable_name
          in: path
          schema:
            type: string
          required: true
          example: pariatur
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
        '429':
          description: Too Many Requests
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                errors:
                  - Bad Request
                  - Bad Request
