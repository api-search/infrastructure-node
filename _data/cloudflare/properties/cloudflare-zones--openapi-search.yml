openapi: 3.0.3
components:
  schemas:
    addressing_api-response-collection:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-common'
        - properties:
            result:
              type: array
              nullable: true
              items: {}
            result_info:
              $ref: '#/components/schemas/addressing_result_info'
      type: object
    access_apps_components-schemas-response_collection-2:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_schemas-apps'
    access_apps_components-schemas-single_response-2:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_schemas-apps'
    access_policy_check_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              type: object
              properties:
                app_state:
                  type: object
                  properties:
                    app_uid:
                      $ref: '#/components/schemas/access_uuid'
                    aud:
                      type: string
                      example: >-
                        737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe389
                    hostname:
                      type: string
                      example: test.com
                    name:
                      type: string
                      example: Test App
                    policies:
                      type: array
                      example:
                        - decision: allow
                          exclude: []
                          include:
                            - _type: email
                              email: testuser@gmail.com
                          precedence: 0
                          require: []
                          status: Success
                      items: {}
                    status:
                      type: string
                      example: Success
                user_identity:
                  type: object
                  properties:
                    account_id:
                      type: string
                      example: 41ecfbb341f033e52b46742756aabb8b
                    device_sessions:
                      type: object
                      example: {}
                    email:
                      type: string
                      example: testuser@gmail.com
                    geo:
                      type: object
                      properties:
                        country:
                          type: string
                          example: US
                    iat:
                      type: integer
                    id:
                      type: string
                      example: '1164449231815010287495'
                    is_gateway:
                      type: boolean
                      example: false
                    is_warp:
                      type: boolean
                      example: false
                    name:
                      type: string
                      example: Test User
                    user_uuid:
                      $ref: '#/components/schemas/access_uuid'
                    version:
                      type: integer
    access_ca_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              type: object
    access_policies_components-schemas-response_collection-2:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_schemas-policies'
    access_policies_components-schemas-single_response-2:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_schemas-policies'
    access_ca_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_ca'
    access_certificates_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_certificates'
    access_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-common'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/access_uuid'
    access_certificates_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_certificates'
    access_response_collection_hostnames:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_settings'
    access_groups_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_schemas-groups'
    access_groups_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_schemas-groups'
    access_identity-providers_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/access_schemas-azureAD'
                  - $ref: '#/components/schemas/access_schemas-centrify'
                  - $ref: '#/components/schemas/access_schemas-facebook'
                  - $ref: '#/components/schemas/access_schemas-github'
                  - $ref: '#/components/schemas/access_schemas-google'
                  - $ref: '#/components/schemas/access_schemas-google-apps'
                  - $ref: '#/components/schemas/access_schemas-linkedin'
                  - $ref: '#/components/schemas/access_schemas-oidc'
                  - $ref: '#/components/schemas/access_schemas-okta'
                  - $ref: '#/components/schemas/access_schemas-onelogin'
                  - $ref: '#/components/schemas/access_schemas-pingone'
                  - $ref: '#/components/schemas/access_schemas-saml'
                  - $ref: '#/components/schemas/access_schemas-yandex'
                  - $ref: '#/components/schemas/access_schemas-onetimepin'
      type: object
    access_identity-providers_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_schemas-identity-providers'
    access_organizations_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_schemas-organizations'
    access_empty_response:
      allOf:
        - properties:
            result:
              type: boolean
              enum:
                - true
                - false
              example: true
            success:
              type: boolean
              enum:
                - true
                - false
              example: true
    access_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_service-tokens'
    access_service-tokens_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_service-tokens'
    bill-subs-api_zone_subscription_response_single:
      allOf:
        - $ref: '#/components/schemas/bill-subs-api_api-response-single'
        - type: object
          properties:
            result:
              type: object
    zones_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/zones_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/zones_identifier'
      type: object
    tls-certificates-and-hostnames_total_tls_settings_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              properties:
                certificate_authority:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_authority
                enabled:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-enabled
                validity_days:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-validity_days
    argo-analytics_response_single:
      allOf:
        - $ref: '#/components/schemas/argo-analytics_api-response-single'
        - type: object
          properties:
            result:
              type: object
    api-shield_single_response:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/api-shield_configuration'
    api-shield_default_response:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-single'
    api-shield_schema_response_discovery:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-single'
        - properties:
            result:
              type: object
              properties:
                schemas:
                  type: array
                  items:
                    $ref: '#/components/schemas/api-shield_openapi'
                timestamp:
                  $ref: '#/components/schemas/api-shield_timestamp'
    api-shield_patch_discoveries_response:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-single'
        - properties:
            result:
              $ref: >-
                #/components/schemas/api-shield_api_discovery_patch_multiple_request
    api-shield_patch_discovery_response:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-single'
        - properties:
            result:
              type: object
              properties:
                state:
                  $ref: '#/components/schemas/api-shield_api_discovery_state'
    api-shield_collection_response_paginated:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/api-shield_api-shield'
    api-shield_collection_response:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-collection'
        - properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-shield'
                  - properties:
                      features: {}
    api-shield_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/api-shield_api-shield'
    api-shield_operation_schema_validation_settings:
      type: object
      properties:
        mitigation_action:
          $ref: '#/components/schemas/api-shield_operation_mitigation_action'
    api-shield_schema_response_with_thresholds:
      allOf:
        - $ref: '#/components/schemas/api-shield_default_response'
        - properties:
            result:
              type: object
              properties:
                schemas:
                  type: array
                  items:
                    $ref: '#/components/schemas/api-shield_openapiwiththresholds'
                timestamp:
                  type: string
    api-shield_zone_schema_validation_settings:
      type: object
      properties:
        validation_default_mitigation_action:
          $ref: '#/components/schemas/api-shield_validation_default_mitigation_action'
        validation_override_mitigation_action:
          $ref: >-
            #/components/schemas/api-shield_validation_override_mitigation_action
    api-shield_api-response-single:
      allOf:
        - $ref: '#/components/schemas/api-shield_api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                  nullable: true
                - type: string
                  nullable: true
      type: object
    argo-config_response_single:
      allOf:
        - $ref: '#/components/schemas/argo-config_api-response-single'
        - type: object
          properties:
            result:
              type: object
    cache_response_single:
      allOf:
        - $ref: '#/components/schemas/cache_api-response-single'
        - type: object
          properties:
            result:
              type: object
    bot-management_bot_management_response_body:
      allOf:
        - $ref: '#/components/schemas/bot-management_api-response-single'
        - type: object
          properties:
            result:
              oneOf:
                - $ref: '#/components/schemas/bot-management_bot_fight_mode_config'
                - $ref: '#/components/schemas/bot-management_sbfm_definitely_config'
                - $ref: '#/components/schemas/bot-management_sbfm_likely_config'
                - $ref: '#/components/schemas/bot-management_bm_subscription_config'
    tls-certificates-and-hostnames_hostname_associations_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_hostname_association
    tls-certificates-and-hostnames_client_certificate_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_client_certificate
    tls-certificates-and-hostnames_client_certificate_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_client_certificate
    tls-certificates-and-hostnames_certificate_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom-certificate
    tls-certificates-and-hostnames_certificate_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              type: object
    tls-certificates-and-hostnames_certificate_response_id_only:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_identifier
    tls-certificates-and-hostnames_custom_hostname_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom-hostname
    tls-certificates-and-hostnames_custom_hostname_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom-hostname
              type: object
    tls-certificates-and-hostnames_fallback_origin_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              type: object
    dns-custom-nameservers_get_response:
      allOf:
        - $ref: '#/components/schemas/dns-custom-nameservers_api-response-collection'
        - $ref: '#/components/schemas/dns-custom-nameservers_zone_metadata'
    dns-custom-nameservers_schemas-empty_response:
      allOf:
        - $ref: '#/components/schemas/dns-custom-nameservers_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              maxItems: 0
              items: {}
    tls-certificates-and-hostnames_dcv_delegation_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_uuidObject
              type: object
    dns-records_dns_response_collection:
      allOf:
        - $ref: '#/components/schemas/dns-records_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/dns-records_dns-record'
    dns-records_dns_response_single:
      allOf:
        - $ref: '#/components/schemas/dns-records_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/dns-records_dns-record'
    dns-records_dns_response_import_scan:
      allOf:
        - $ref: '#/components/schemas/dns-records_api-response-single'
        - type: object
          properties:
            result:
              type: object
              properties:
                recs_added:
                  type: number
                  description: Number of DNS records added.
                  example: 5
                total_records_parsed:
                  type: number
                  description: Total number of DNS records parsed.
                  example: 5
            timing:
              type: object
              properties:
                end_time:
                  type: string
                  format: date-time
                  description: When the file parsing ended.
                  example: '2014-03-01T12:20:01Z'
                process_time:
                  type: number
                  description: Processing time of the file in seconds.
                  example: 1
                start_time:
                  type: string
                  format: date-time
                  description: When the file parsing started.
                  example: '2014-03-01T12:20:00Z'
    dnssec_delete_dnssec_response_single:
      allOf:
        - $ref: '#/components/schemas/dnssec_api-response-single'
        - properties:
            result:
              type: string
              example: ''
    dnssec_dnssec_response_single:
      allOf:
        - $ref: '#/components/schemas/dnssec_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/dnssec_dnssec'
    legacy-jhs_rule_collection_response:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/legacy-jhs_rule'
    legacy-jhs_rule_single_response:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/legacy-jhs_rule'
    legacy-jhs_rule_single_id_response:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: >-
                    #/components/schemas/legacy-jhs_rule_components-schemas-identifier
    waf-managed-rules_rule_group_response_collection:
      allOf:
        - $ref: '#/components/schemas/waf-managed-rules_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/waf-managed-rules_schemas-group'
    waf-managed-rules_rule_group_response_single:
      allOf:
        - $ref: '#/components/schemas/waf-managed-rules_api-response-single'
        - properties:
            result:
              type: object
    waf-managed-rules_rule_response_collection:
      allOf:
        - $ref: '#/components/schemas/waf-managed-rules_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/waf-managed-rules_rule'
    waf-managed-rules_rule_response_single:
      allOf:
        - $ref: '#/components/schemas/waf-managed-rules_api-response-single'
        - properties:
            result:
              type: object
    tls-certificates-and-hostnames_per_hostname_settings_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                properties:
                  created_at:
                    $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_components-schemas-created_at
                  hostname:
                    $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_components-schemas-hostname
                  status:
                    $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_hostname-tls-settings_components-schemas-status
                  updated_at:
                    $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_components-schemas-updated_at
                  value:
                    $ref: '#/components/schemas/tls-certificates-and-hostnames_value'
        - properties:
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 50
                total_count:
                  example: 1
                total_pages:
                  type: number
                  description: Total pages available of results
                  example: 1
    tls-certificates-and-hostnames_per_hostname_settings_response_delete:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_settingObjectDelete
              type: object
    tls-certificates-and-hostnames_per_hostname_settings_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_settingObject
              type: object
    tls-certificates-and-hostnames_keyless_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_keyless-certificate
    tls-certificates-and-hostnames_keyless_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/tls-certificates-and-hostnames_base'
              type: object
    tls-certificates-and-hostnames_keyless_response_single_id:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_identifier
    load-balancing_load-balancer_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/load-balancing_load-balancer'
    load-balancing_load-balancer_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/load-balancing_load-balancer'
    load-balancing_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: >-
                    #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
    logpush_logpush_field_response_collection:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              items:
                type: object
                nullable: true
                properties:
                  key:
                    type: string
                    example: value
    logpush_logpush_job_response_collection:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/logpush_logpush_job'
    logpush_instant_logs_job_response_collection:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/logpush_instant_logs_job'
    logpush_instant_logs_job_response_single:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/logpush_instant_logs_job'
    logpush_logpush_job_response_single:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/logpush_logpush_job'
    logpush_get_ownership_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                filename:
                  type: string
                  example: logs/challenge-filename.txt
                message:
                  type: string
                  example: ''
                valid:
                  type: boolean
                  example: true
    logpush_validate_ownership_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                valid:
                  type: boolean
                  example: true
    logpush_destination_exists_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                exists:
                  type: boolean
                  example: false
    logpush_validate_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                message:
                  type: string
                  example: ''
                valid:
                  type: boolean
                  example: true
    tls-certificates-and-hostnames_components-schemas-certificate_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_zone-authenticated-origin-pull
    tls-certificates-and-hostnames_hostname_aop_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_hostname-authenticated-origin-pull
    tls-certificates-and-hostnames_hostname_aop_single_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_hostname_certid_object
    tls-certificates-and-hostnames_hostname-authenticated-origin-pull_components-schemas-certificate_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_hostname-authenticated-origin-pull
    tls-certificates-and-hostnames_components-schemas-certificate_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_schemas-certificateObject
    tls-certificates-and-hostnames_enabled_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              properties:
                enabled:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_zone-authenticated-origin-pull_components-schemas-enabled
    page-shield_list-zone-connections-response:
      allOf:
        - $ref: '#/components/schemas/page-shield_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/page-shield_connection'
            result_info:
              $ref: '#/components/schemas/page-shield_result_info'
    page-shield_get-zone-connection-response:
      allOf:
        - $ref: '#/components/schemas/page-shield_connection'
    page-shield_list-zone-policies-response:
      allOf:
        - $ref: '#/components/schemas/page-shield_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/page-shield_pageshield-policy'
    page-shield_get-zone-policy-response:
      allOf:
        - $ref: '#/components/schemas/page-shield_pageshield-policy'
    page-shield_list-zone-scripts-response:
      allOf:
        - $ref: '#/components/schemas/page-shield_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/page-shield_script'
            result_info:
              $ref: '#/components/schemas/page-shield_result_info'
    page-shield_get-zone-script-response:
      allOf:
        - $ref: '#/components/schemas/page-shield_script'
        - properties:
            versions:
              type: array
              example:
                - fetched_at: '2021-08-18T10:51:08Z'
                  hash: >-
                    e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b423
                  js_integrity_score: 2
              nullable: true
              items:
                $ref: '#/components/schemas/page-shield_version'
    zones_pagerule_response_collection:
      allOf:
        - $ref: '#/components/schemas/zones_schemas-api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zones_page-rule'
    zones_pagerule_response_single:
      allOf:
        - $ref: '#/components/schemas/zones_api-response-single'
        - properties:
            result:
              type: object
    zones_schemas-api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/zones_schemas-api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/zones_schemas-identifier'
      type: object
    zones_pagerule_settings_response_collection:
      allOf:
        - $ref: '#/components/schemas/zones_schemas-api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/zones_settings'
    cache-purge_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/cache-purge_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/cache-purge_schemas-identifier'
      type: object
    secondary-dns_force_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/secondary-dns_force_result'
    secondary-dns_id_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/secondary-dns_identifier'
    secondary-dns_single_response_incoming:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              type: object
              properties:
                auto_refresh_seconds:
                  $ref: '#/components/schemas/secondary-dns_auto_refresh_seconds'
                checked_time:
                  $ref: '#/components/schemas/secondary-dns_time'
                created_time:
                  $ref: '#/components/schemas/secondary-dns_time'
                id:
                  $ref: '#/components/schemas/secondary-dns_identifier'
                modified_time:
                  $ref: '#/components/schemas/secondary-dns_time'
                name:
                  $ref: '#/components/schemas/secondary-dns_name'
                peers:
                  $ref: '#/components/schemas/secondary-dns_peers'
                soa_serial:
                  $ref: '#/components/schemas/secondary-dns_soa_serial'
    secondary-dns_single_response_outgoing:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              type: object
              properties:
                checked_time:
                  $ref: '#/components/schemas/secondary-dns_time'
                created_time:
                  $ref: '#/components/schemas/secondary-dns_time'
                id:
                  $ref: '#/components/schemas/secondary-dns_identifier'
                last_transferred_time:
                  $ref: '#/components/schemas/secondary-dns_time'
                name:
                  $ref: '#/components/schemas/secondary-dns_name'
                peers:
                  $ref: '#/components/schemas/secondary-dns_peers'
                soa_serial:
                  $ref: '#/components/schemas/secondary-dns_soa_serial'
    secondary-dns_disable_transfer_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/secondary-dns_disable_transfer_result'
    secondary-dns_enable_transfer_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/secondary-dns_enable_transfer_result'
    secondary-dns_schemas-force_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/secondary-dns_schemas-force_result'
    zones_zone_settings_response_collection:
      allOf:
        - $ref: '#/components/schemas/zones_api-response-common'
        - properties:
            result:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/zones_0rtt'
                  - $ref: '#/components/schemas/zones_advanced_ddos'
                  - $ref: '#/components/schemas/zones_always_online'
                  - $ref: '#/components/schemas/zones_always_use_https'
                  - $ref: '#/components/schemas/zones_automatic_https_rewrites'
                  - $ref: '#/components/schemas/zones_brotli'
                  - $ref: '#/components/schemas/zones_browser_cache_ttl'
                  - $ref: '#/components/schemas/zones_browser_check'
                  - $ref: '#/components/schemas/zones_cache_level'
                  - $ref: '#/components/schemas/zones_challenge_ttl'
                  - $ref: '#/components/schemas/zones_ciphers'
                  - $ref: '#/components/schemas/zones_cname_flattening'
                  - $ref: '#/components/schemas/zones_development_mode'
                  - $ref: '#/components/schemas/zones_early_hints'
                  - $ref: '#/components/schemas/zones_edge_cache_ttl'
                  - $ref: '#/components/schemas/zones_email_obfuscation'
                  - $ref: '#/components/schemas/zones_h2_prioritization'
                  - $ref: '#/components/schemas/zones_hotlink_protection'
                  - $ref: '#/components/schemas/zones_http2'
                  - $ref: '#/components/schemas/zones_http3'
                  - $ref: '#/components/schemas/zones_image_resizing'
                  - $ref: '#/components/schemas/zones_ip_geolocation'
                  - $ref: '#/components/schemas/zones_ipv6'
                  - $ref: '#/components/schemas/zones_max_upload'
                  - $ref: '#/components/schemas/zones_min_tls_version'
                  - $ref: '#/components/schemas/zones_minify'
                  - $ref: '#/components/schemas/zones_mirage'
                  - $ref: '#/components/schemas/zones_mobile_redirect'
                  - $ref: '#/components/schemas/zones_nel'
                  - $ref: '#/components/schemas/zones_opportunistic_encryption'
                  - $ref: '#/components/schemas/zones_opportunistic_onion'
                  - $ref: '#/components/schemas/zones_orange_to_orange'
                  - $ref: '#/components/schemas/zones_origin_error_page_pass_thru'
                  - $ref: '#/components/schemas/zones_polish'
                  - $ref: '#/components/schemas/zones_prefetch_preload'
                  - $ref: '#/components/schemas/zones_proxy_read_timeout'
                  - $ref: '#/components/schemas/zones_pseudo_ipv4'
                  - $ref: '#/components/schemas/zones_response_buffering'
                  - $ref: '#/components/schemas/zones_rocket_loader'
                  - $ref: >-
                      #/components/schemas/zones_schemas-automatic_platform_optimization
                  - $ref: '#/components/schemas/zones_security_header'
                  - $ref: '#/components/schemas/zones_security_level'
                  - $ref: '#/components/schemas/zones_server_side_exclude'
                  - $ref: '#/components/schemas/zones_sha1_support'
                  - $ref: '#/components/schemas/zones_sort_query_string_for_cache'
                  - $ref: '#/components/schemas/zones_ssl'
                  - $ref: '#/components/schemas/zones_ssl_recommender'
                  - $ref: '#/components/schemas/zones_tls_1_2_only'
                  - $ref: '#/components/schemas/zones_tls_1_3'
                  - $ref: '#/components/schemas/zones_tls_client_auth'
                  - $ref: '#/components/schemas/zones_true_client_ip_header'
                  - $ref: '#/components/schemas/zones_waf'
                  - $ref: '#/components/schemas/zones_webp'
                  - $ref: '#/components/schemas/zones_websockets'
    zaraz_zaraz-config-response:
      allOf:
        - $ref: '#/components/schemas/zaraz_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/zaraz_zaraz-config-return'
    zaraz_zaraz-config-return:
      allOf:
        - $ref: '#/components/schemas/zaraz_zaraz-config-base'
        - properties:
            tools:
              type: object
              description: >-
                Tools set up under Zaraz configuration, where key is the
                alpha-numeric tool ID and value is the tool configuration
                object.
    zaraz_zaraz-history-response:
      allOf:
        - $ref: '#/components/schemas/zaraz_api-response-common'
        - properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/zaraz_zaraz-config-row-base'
                  - type: object
                    example:
                      createdAt: '2023-02-23T05:05:55.155273Z'
                      description: Config with enabled ecommerce tracking
                      id: 12345
                      updatedAt: '2023-02-23T05:05:55.155273Z'
                      userId: 278d0d0g123cd8e49d45ea64f12faa37
                    required:
                      - description
                    properties:
                      description:
                        type: string
                        description: >-
                          Configuration description provided by the user who
                          published this configuration
    zaraz_zaraz-config-history-response:
      allOf:
        - $ref: '#/components/schemas/zaraz_api-response-common'
        - properties:
            result:
              type: object
              description: Object where keys are numericc onfiguration IDs
              example:
                '12345':
                  config:
                    consent:
                      cookieName: zaraz-consent
                      customIntroDisclaimerDismissed: true
                      enabled: false
                    dataLayer: true
                    debugKey: my-debug-key
                    settings:
                      autoInjectScript: true
                    tools:
                      aJvt:
                        component: facebook-pixel
                        defaultFields:
                          testKey: TEST123456
                        enabled: true
                        name: Facebook Pixel
                        neoEvents:
                          - actionType: pageview
                            blockingTriggers: []
                            data:
                              __zaraz_setting_name: Page view
                              ev: PageView
                            firingTriggers:
                              - Pageview
                        permissions:
                          - access_client_kv
                        settings:
                          accessToken: ABcdEFg
                          ecommerce: true
                          property: '12345'
                        type: component
                    triggers:
                      ktBn:
                        Pageview:
                          clientRules: []
                          description: All page loads
                          excludeRules: []
                          loadRules:
                            - match: '{{ client.__zarazTrack }}'
                              op: EQUALS
                              value: Pageview
                          name: Pageview
                          system: pageload
                    variables:
                      Autd:
                        name: ip
                        type: string
                        value: '{{ system.device.ip }}'
                    zarazVersion: 43
                  createdAt: '2023-02-23T05:05:55.155273Z'
                  id: 12345
                  updatedAt: '2023-02-23T05:05:55.155273Z'
                  userId: 278d0d0g123cd8e49d45ea64f12faa37
                '23456': null
    zaraz_zaraz-workflow-response:
      allOf:
        - $ref: '#/components/schemas/zaraz_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/zaraz_zaraz-workflow'
    observatory_availabilities-response:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/observatory_availabilities'
    observatory_pages-response-collection:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-collection'
        - properties:
            result:
              type: array
              items:
                properties:
                  region:
                    $ref: '#/components/schemas/observatory_labeled_region'
                  scheduleFrequency:
                    $ref: '#/components/schemas/observatory_schedule_frequency'
                  tests:
                    type: array
                    items:
                      $ref: '#/components/schemas/observatory_page_test'
                  url:
                    $ref: '#/components/schemas/observatory_url'
    observatory_count-response:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-single'
        - properties:
            result:
              type: object
              properties:
                count:
                  type: number
                  description: Number of items affected.
                  example: 1
    observatory_page-test-response-collection:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/observatory_page_test'
        - properties:
            result_info:
              $ref: '#/components/schemas/observatory_result_info'
    observatory_page-test-response-single:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/observatory_page_test'
    observatory_trend-response:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/observatory_trend'
    observatory_schedule-response-single:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/observatory_schedule'
    observatory_create-schedule-response:
      allOf:
        - $ref: '#/components/schemas/observatory_api-response-single'
        - properties:
            result:
              type: object
              properties:
                schedule:
                  $ref: '#/components/schemas/observatory_schedule'
                test:
                  $ref: '#/components/schemas/observatory_page_test'
    tls-certificates-and-hostnames_certificate_analyze_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              type: object
    tls-certificates-and-hostnames_certificate_pack_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                type: object
    tls-certificates-and-hostnames_delete_advanced_certificate_pack_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - type: object
          properties:
            result:
              type: object
              properties:
                id:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_identifier
    tls-certificates-and-hostnames_certificate_pack_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - type: object
          properties:
            result:
              type: object
    tls-certificates-and-hostnames_advanced_certificate_pack_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - type: object
          properties:
            result:
              type: object
              properties:
                certificate_authority:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-certificate_authority
                cloudflare_branding:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_cloudflare_branding
                hosts:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-hosts
                id:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_identifier
                status:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_certificate-packs_components-schemas-status
                type:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_advanced_type
                validation_method:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_validation_method
                validity_days:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_validity_days
    tls-certificates-and-hostnames_certificate_pack_quota_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - type: object
          properties:
            result:
              type: object
              properties:
                advanced:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_quota'
    tls-certificates-and-hostnames_ssl_universal_settings_response:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              $ref: '#/components/schemas/tls-certificates-and-hostnames_universal'
    tls-certificates-and-hostnames_ssl_verification_response_collection:
      allOf:
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_verification
    tls-certificates-and-hostnames_ssl_validation_method_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              properties:
                status:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_validation_method_components-schemas-status
                validation_method:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_validation_method_definition
    rulesets_schemas-response_model:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/rulesets_scope'
        type:
          $ref: '#/components/schemas/rulesets_type'
    workers_filter-response-collection:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/workers_filters'
    workers_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/workers_identifier'
      type: object
    workers_filter-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/workers_filters'
    workers_route-response-collection:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/workers_routes'
    workers_api-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
      type: object
    workers_route-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/workers_routes'
    workers_schemas-script-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-single'
        - properties:
            result:
              type: object
    data-zone-analytics-api_colo_response:
      allOf:
        - $ref: '#/components/schemas/data-zone-analytics-api_api-response-single'
        - properties:
            query:
              $ref: '#/components/schemas/data-zone-analytics-api_query_response'
            result:
              $ref: '#/components/schemas/data-zone-analytics-api_datacenters'
    data-zone-analytics-api_dashboard_response:
      allOf:
        - $ref: '#/components/schemas/data-zone-analytics-api_api-response-single'
        - properties:
            query:
              $ref: '#/components/schemas/data-zone-analytics-api_query_response'
            result:
              $ref: '#/components/schemas/data-zone-analytics-api_dashboard'
    bill-subs-api_plan_response_collection:
      allOf:
        - $ref: '#/components/schemas/bill-subs-api_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/bill-subs-api_schemas-rate-plan'
    custom-pages_custom_pages_response_collection:
      allOf:
        - $ref: '#/components/schemas/custom-pages_api-response-collection'
        - properties:
            result:
              type: array
              items:
                type: object
    custom-pages_custom_pages_response_single:
      allOf:
        - $ref: '#/components/schemas/custom-pages_api-response-single'
        - properties:
            result:
              type: object
    email_email_settings_response_single:
      allOf:
        - $ref: '#/components/schemas/email_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/email_settings'
    email_dns_settings_response_collection:
      allOf:
        - $ref: '#/components/schemas/email_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/email_dns_record'
    email_rules_response_collection:
      allOf:
        - $ref: '#/components/schemas/email_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/email_rules'
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 20
                total_count:
                  example: 1
    email_rule_response_single:
      allOf:
        - $ref: '#/components/schemas/email_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/email_rules'
    email_catch_all_rule_response_single:
      allOf:
        - $ref: '#/components/schemas/email_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/email_catch_all_rule'
    legacy-jhs_filter-delete-response-collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_filter'
                  - type: object
                    required:
                      - id
    legacy-jhs_schemas-filter-response-collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_filter'
                  - type: object
                    required:
                      - id
                      - expression
                      - paused
    legacy-jhs_filter-delete-response-single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          required:
            - result
          properties:
            result:
              allOf:
                - $ref: '#/components/schemas/legacy-jhs_filter'
                - type: object
                  required:
                    - id
    legacy-jhs_schemas-filter-response-single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          required:
            - result
          properties:
            result:
              oneOf:
                - allOf:
                    - $ref: '#/components/schemas/legacy-jhs_filter'
                    - type: object
                      required:
                        - id
                        - expression
                        - paused
                - nullable: true
    legacy-jhs_zonelockdown_response_collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          required:
            - result
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/legacy-jhs_zonelockdown'
    legacy-jhs_zonelockdown_response_single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          required:
            - result
          properties:
            result:
              $ref: '#/components/schemas/legacy-jhs_zonelockdown'
    legacy-jhs_filter-rules-response-collection-delete:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          required:
            - result
          properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_filter-rule-response'
                  - type: object
                    required:
                      - id
    legacy-jhs_filter-rules-response-collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          required:
            - result
          properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_filter-rule-response'
                  - type: object
                    required:
                      - id
                      - filter
                      - action
                      - paused
    legacy-jhs_filter-rules-single-response-delete:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          required:
            - result
          properties:
            result:
              allOf:
                - $ref: '#/components/schemas/legacy-jhs_filter-rule-response'
                - type: object
                  required:
                    - id
    legacy-jhs_filter-rules-single-response:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          required:
            - result
          properties:
            result:
              allOf:
                - $ref: '#/components/schemas/legacy-jhs_filter-rule-response'
                - type: object
                  required:
                    - id
                    - filter
                    - action
                    - paused
    legacy-jhs_firewalluablock_response_collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/legacy-jhs_ua-rules'
    legacy-jhs_firewalluablock_response_single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          properties:
            result:
              type: object
    legacy-jhs_override_response_collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          required:
            - result
          properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_override'
                  - type: object
                    required:
                      - id
                      - paused
                      - urls
                      - priority
    legacy-jhs_override_response_single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          required:
            - result
          properties:
            result:
              $ref: '#/components/schemas/legacy-jhs_override'
    legacy-jhs_package_response_collection:
      anyOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/legacy-jhs_package'
    legacy-jhs_package_response_single:
      oneOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - properties:
            result:
              type: object
    healthchecks_response_collection:
      allOf:
        - $ref: '#/components/schemas/healthchecks_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/healthchecks_healthchecks'
    healthchecks_single_response:
      allOf:
        - $ref: '#/components/schemas/healthchecks_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/healthchecks_healthchecks'
    healthchecks_id_response:
      allOf:
        - $ref: '#/components/schemas/healthchecks_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/healthchecks_identifier'
    data-zone-analytics-api_flag_response:
      allOf:
        - $ref: '#/components/schemas/data-zone-analytics-api_api-response-single'
        - properties:
            result:
              type: object
              properties:
                flag:
                  type: boolean
                  example: true
    data-zone-analytics-api_logs:
      anyOf:
        - type: string
        - type: object
      example: >-
        {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}

        {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}

        {"ClientIP":"192.0.2.1","RayID":"41ddf1740f67442d","EdgeStartTimestamp":1526810289280000000}
    data-zone-analytics-api_fields_response:
      type: object
      properties:
        key:
          type: string
          example: value
    legacy-jhs_ratelimit_response_collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/legacy-jhs_rate-limits'
    legacy-jhs_ratelimit_response_single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          properties:
            result:
              type: object
    waitingroom_response_collection:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/waitingroom_waitingroom'
    waitingroom_single_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/waitingroom_waitingroom'
    waitingroom_waiting_room_id_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/waitingroom_waiting_room_id'
    waitingroom_event_response_collection:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/waitingroom_event_result'
    waitingroom_event_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/waitingroom_event_result'
    waitingroom_event_id_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/waitingroom_event_id'
    waitingroom_event_details_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/waitingroom_event_details_result'
    waitingroom_rules_response_collection:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/waitingroom_rule_result'
    waitingroom_status_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - properties:
            result:
              type: object
              properties:
                estimated_queued_users:
                  $ref: '#/components/schemas/waitingroom_estimated_queued_users'
                estimated_total_active_users:
                  $ref: >-
                    #/components/schemas/waitingroom_estimated_total_active_users
                event_id:
                  $ref: '#/components/schemas/waitingroom_status_event_id'
                max_estimated_time_minutes:
                  $ref: '#/components/schemas/waitingroom_max_estimated_time_minutes'
                status:
                  $ref: '#/components/schemas/waitingroom_status'
    waitingroom_preview_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - properties:
            result:
              type: object
              properties:
                preview_url:
                  $ref: '#/components/schemas/waitingroom_preview_url'
    waitingroom_zone_settings_response:
      allOf:
        - $ref: '#/components/schemas/waitingroom_api-response-single'
        - required:
            - result
          properties:
            result:
              type: object
              required:
                - search_engine_crawler_bypass
              properties:
                search_engine_crawler_bypass:
                  $ref: >-
                    #/components/schemas/waitingroom_search_engine_crawler_bypass
    dweb-config_collection_response:
      allOf:
        - $ref: '#/components/schemas/dweb-config_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/dweb-config_web3-hostname'
    dweb-config_single_response:
      allOf:
        - $ref: '#/components/schemas/dweb-config_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/dweb-config_web3-hostname'
    dweb-config_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/dweb-config_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/dweb-config_identifier'
      type: object
    dweb-config_content_list_details_response:
      allOf:
        - $ref: '#/components/schemas/dweb-config_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/dweb-config_content_list_details'
    dweb-config_content_list_entry_collection_response:
      allOf:
        - $ref: '#/components/schemas/dweb-config_api-response-collection'
        - properties:
            result:
              type: object
              properties:
                entries:
                  $ref: '#/components/schemas/dweb-config_content_list_entries'
    dweb-config_content_list_entry_single_response:
      allOf:
        - $ref: '#/components/schemas/dweb-config_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/dweb-config_content_list_entry'
    legacy-jhs_analytics-aggregate_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-common'
        - properties:
            result:
              type: array
              items:
                type: object
    legacy-jhs_api-response-single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              nullable: true
      type: object
    legacy-jhs_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - properties:
            result:
              type: array
              items:
                type: object
    legacy-jhs_response_single_origin_dns:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - properties:
            result:
              properties:
                argo_smart_routing:
                  $ref: '#/components/schemas/legacy-jhs_argo_smart_routing'
                created_on:
                  $ref: '#/components/schemas/legacy-jhs_created'
                dns:
                  $ref: '#/components/schemas/legacy-jhs_dns'
                edge_ips:
                  $ref: '#/components/schemas/legacy-jhs_edge_ips'
                id:
                  $ref: '#/components/schemas/legacy-jhs_app_id'
                ip_firewall:
                  $ref: '#/components/schemas/legacy-jhs_ip_firewall'
                modified_on:
                  $ref: '#/components/schemas/legacy-jhs_modified'
                origin_dns:
                  $ref: '#/components/schemas/legacy-jhs_origin_dns'
                origin_port:
                  $ref: '#/components/schemas/legacy-jhs_origin_port'
                protocol:
                  $ref: '#/components/schemas/legacy-jhs_protocol'
                proxy_protocol:
                  $ref: '#/components/schemas/legacy-jhs_proxy_protocol'
                tls:
                  $ref: '#/components/schemas/legacy-jhs_tls'
                traffic_type:
                  $ref: '#/components/schemas/legacy-jhs_traffic_type'
    legacy-jhs_schemas-response_single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          properties:
            result:
              type: object
info:
  title: ' zones/'
  description: Needs description.
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  version: 4.0.0
paths:
  /accounts/{account_id}/addressing/address_maps/{address_map_id}/zones/{zone_id}:
    delete:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
        - Memberships
        - Removes
        - Zones
      summary: 'Remove A Zone Membership From An Address Map '
      description: Remove a zone as a member of a particular address map.
      operationId: >-
        ip-address-management-address-maps-remove-a-zone-membership-from-an-address-map
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Remove a zone membership from an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Remove a zone membership from an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
        - Memberships
        - Zones
      summary: 'Add A Zone Membership To An Address Map '
      description: Add a zone as a member of a particular address map.
      operationId: >-
        ip-address-management-address-maps-add-a-zone-membership-to-an-address-map
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Add a zone membership to an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Add a zone membership to an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps:
    get:
      tags:
        - Access
        - Applications
        - Zones
      summary: 'List Access Applications '
      description: List all Access Applications in a zone.
      operationId: zone-level-access-applications-list-access-applications
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access Applications response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_apps_components-schemas-response_collection-2
        4XX:
          description: List Access Applications response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Applications
        - Zones
      summary: 'Add An Access Application '
      description: Adds a new application to Access.
      operationId: zone-level-access-applications-add-a-bookmark-application
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_schemas-apps'
      responses:
        '201':
          description: Add an Access application response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/access_apps_components-schemas-single_response-2
                  - properties:
                      result:
                        $ref: '#/components/schemas/access_schemas-apps'
        4XX:
          description: Add an Access application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps/{app_id}:
    delete:
      tags:
        - Access
        - Applications
        - Zones
      summary: 'Delete An Access Application '
      description: Deletes an application from Access.
      operationId: zone-level-access-applications-delete-an-access-application
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Applications
        - Zones
      summary: 'Get An Access Application '
      description: Fetches information about an Access application.
      operationId: zone-level-access-applications-get-an-access-application
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access application response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_apps_components-schemas-single_response-2
        4XX:
          description: Get an Access application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Applications
        - Zones
      summary: 'Update An Access Application '
      description: Updates an Access application.
      operationId: zone-level-access-applications-update-a-bookmark-application
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_schemas-apps'
      responses:
        '200':
          description: Update an Access application response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/access_apps_components-schemas-single_response-2
                  - properties:
                      result:
                        $ref: '#/components/schemas/access_schemas-apps'
        4XX:
          description: Update an Access application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps/{app_id}/revoke_tokens:
    post:
      tags:
        - Access
        - Applications
        - Revoke
        - Tokens
        - Zones
      summary: 'Revoke Application Tokens '
      description: Revokes all tokens issued for an application.
      operationId: zone-level-access-applications-revoke-service-tokens
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Revoke application tokens response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-empty_response'
        4XX:
          description: Revoke application tokens response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps/{app_id}/user_policy_checks:
    get:
      tags:
        - Access
        - Applications
        - Checks
        - Policies
        - Tests
        - Users
        - Zones
      summary: 'Test Access Policies '
      description: Tests if a specific user has permission to access an application.
      operationId: zone-level-access-applications-test-access-policies
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Test Access policies response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_policy_check_response'
        4XX:
          description: Test Access policies response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps/{uuid}/ca:
    delete:
      tags:
        - Access
        - Applications
        - CA
        - Certificates
        - Short lived
        - Uu
        - Zones
      summary: 'Delete A Short-lived Certificate CA '
      description: Deletes a short-lived certificate CA.
      operationId: >-
        zone-level-access-short-lived-certificate-c-as-delete-a-short-lived-certificate-ca
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete a short-lived certificate CA response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-id_response'
        4XX:
          description: Delete a short-lived certificate CA response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Applications
        - CA
        - Certificates
        - Short lived
        - Uu
        - Zones
      summary: 'Get A Short-lived Certificate CA '
      description: Fetches a short-lived certificate CA and its public key.
      operationId: >-
        zone-level-access-short-lived-certificate-c-as-get-a-short-lived-certificate-ca
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get a short-lived certificate CA response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_ca_components-schemas-single_response
        4XX:
          description: Get a short-lived certificate CA response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Applications
        - CA
        - Certificates
        - Short lived
        - Uu
        - Zones
      summary: 'Create A Short-lived Certificate CA '
      description: Generates a new short-lived certificate CA and public key.
      operationId: >-
        zone-level-access-short-lived-certificate-c-as-create-a-short-lived-certificate-ca
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Create a short-lived certificate CA response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_ca_components-schemas-single_response
        4XX:
          description: Create a short-lived certificate CA response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps/{uuid}/policies:
    get:
      tags:
        - Access
        - Applications
        - Policies
        - Uu
        - Zones
      summary: 'List Access Policies '
      description: Lists Access policies configured for an application.
      operationId: zone-level-access-policies-list-access-policies
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access policies response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-response_collection-2
        4XX:
          description: List Access policies response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Applications
        - Policies
        - Uu
        - Zones
      summary: 'Create An Access Policy '
      description: Create a new Access policy for an application.
      operationId: zone-level-access-policies-create-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - decision
                - include
              properties:
                approval_groups:
                  $ref: '#/components/schemas/access_approval_groups'
                approval_required:
                  $ref: '#/components/schemas/access_approval_required'
                decision:
                  $ref: '#/components/schemas/access_decision'
                exclude:
                  $ref: '#/components/schemas/access_schemas-exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                isolation_required:
                  $ref: '#/components/schemas/access_schemas-isolation_required'
                name:
                  $ref: '#/components/schemas/access_policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/access_precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/access_purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/access_purpose_justification_required'
                require:
                  $ref: '#/components/schemas/access_schemas-require'
      responses:
        '201':
          description: Create an Access policy response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response-2
        4XX:
          description: Create an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps/{uuid1}/policies/{uuid}:
    delete:
      tags:
        - Access
        - Applications
        - Policies
        - Uu
        - Zones
      summary: 'Delete An Access Policy '
      description: Delete an Access policy.
      operationId: zone-level-access-policies-delete-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: uuid1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Applications
        - Policies
        - Uu
        - Zones
      summary: 'Get An Access Policy '
      description: Fetches a single Access policy.
      operationId: zone-level-access-policies-get-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: uuid1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access policy response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response-2
        4XX:
          description: Get an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Applications
        - Policies
        - Uu
        - Zones
      summary: 'Update An Access Policy '
      description: Update a configured Access policy.
      operationId: zone-level-access-policies-update-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: uuid1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - decision
                - include
              properties:
                approval_groups:
                  $ref: '#/components/schemas/access_approval_groups'
                approval_required:
                  $ref: '#/components/schemas/access_approval_required'
                decision:
                  $ref: '#/components/schemas/access_decision'
                exclude:
                  $ref: '#/components/schemas/access_schemas-exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                isolation_required:
                  $ref: '#/components/schemas/access_schemas-isolation_required'
                name:
                  $ref: '#/components/schemas/access_policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/access_precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/access_purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/access_purpose_justification_required'
                require:
                  $ref: '#/components/schemas/access_schemas-require'
      responses:
        '200':
          description: Update an Access policy response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response-2
        4XX:
          description: Update an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/apps/ca:
    get:
      tags:
        - Access
        - Applications
        - CAs
        - Certificates
        - Short lived
        - Zones
      summary: 'List Short-lived Certificate CAs '
      description: Lists short-lived certificate CAs and their public keys.
      operationId: >-
        zone-level-access-short-lived-certificate-c-as-list-short-lived-certificate-c-as
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List short-lived certificate CAs response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_ca_components-schemas-response_collection
        4XX:
          description: List short-lived certificate CAs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/certificates:
    get:
      tags:
        - Access
        - Certificates
        - TLS
        - Zones
      summary: 'List M TLS Certificates '
      description: Lists all mTLS certificates.
      operationId: zone-level-access-mtls-authentication-list-mtls-certificates
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List mTLS certificates response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-response_collection
        4XX:
          description: List mTLS certificates response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Certificates
        - TLS
        - Zones
      summary: 'Add An M TLS Certificate '
      description: Adds a new mTLS root certificate to Access.
      operationId: zone-level-access-mtls-authentication-add-an-mtls-certificate
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - certificate
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/access_associated_hostnames'
                certificate:
                  type: string
                  description: The certificate content.
                  example: >-
                    --BEGIN CERTIFICATE--

                    MIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10

                    DrUtmu/B

                    --END CERTIFICATE--
                name:
                  $ref: >-
                    #/components/schemas/access_certificates_components-schemas-name
      responses:
        '201':
          description: Add an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-single_response
        4XX:
          description: Add an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/certificates/{uuid}:
    delete:
      tags:
        - Access
        - Certificates
        - TLS
        - Uu
        - Zones
      summary: 'Delete An M TLS Certificate '
      description: Deletes an mTLS certificate.
      operationId: zone-level-access-mtls-authentication-delete-an-mtls-certificate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Delete an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_components-schemas-id_response'
        4XX:
          description: Delete an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Certificates
        - TLS
        - Uu
        - Zones
      summary: 'Get An M TLS Certificate '
      description: Fetches a single mTLS certificate.
      operationId: zone-level-access-mtls-authentication-get-an-mtls-certificate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-single_response
        4XX:
          description: Get an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Certificates
        - TLS
        - Uu
        - Zones
      summary: 'Update An M TLS Certificate '
      description: Updates a configured mTLS certificate.
      operationId: zone-level-access-mtls-authentication-update-an-mtls-certificate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - associated_hostnames
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/access_associated_hostnames'
                name:
                  $ref: >-
                    #/components/schemas/access_certificates_components-schemas-name
      responses:
        '200':
          description: Update an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-single_response
        4XX:
          description: Update an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/certificates/settings:
    get:
      tags:
        - Access
        - Certificates
        - Host Names
        - Settings
        - TLS
        - Zones
      summary: 'List All M TLS Hostname Settings '
      description: List all mTLS hostname settings for this zone.
      operationId: >-
        zone-level-access-mtls-authentication-list-mtls-certificates-hostname-settings
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List mTLS hostname settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_response_collection_hostnames'
        4XX:
          description: List mTLS hostname settings response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Certificate's
        - Certificates
        - Host Names
        - Settings
        - TLS
        - Zones
      summary: 'Update An M TLS Certificate''s Hostname Settings '
      description: Updates an mTLS certificate's hostname settings.
      operationId: >-
        zone-level-access-mtls-authentication-update-an-mtls-certificate-settings
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - settings
              properties:
                settings:
                  type: array
                  items:
                    $ref: '#/components/schemas/access_settings'
      responses:
        '202':
          description: Update an mTLS certificates hostname settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_response_collection_hostnames'
        4XX:
          description: Update an mTLS certificates hostname settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/groups:
    get:
      tags:
        - Access
        - Groups
        - Zones
      summary: 'List Access Groups '
      description: Lists all Access groups.
      operationId: zone-level-access-groups-list-access-groups
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access groups response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_groups_components-schemas-response_collection
        4XX:
          description: List Access groups response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Groups
        - Zones
      summary: 'Create An Access Group '
      description: Creates a new Access group.
      operationId: zone-level-access-groups-create-an-access-group
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - include
              properties:
                exclude:
                  $ref: '#/components/schemas/access_exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                name:
                  $ref: '#/components/schemas/access_components-schemas-name'
                require:
                  $ref: '#/components/schemas/access_require'
      responses:
        '201':
          description: Create an Access group response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_groups_components-schemas-single_response
        4XX:
          description: Create an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/groups/{uuid}:
    delete:
      tags:
        - Access
        - Groups
        - Uu
        - Zones
      summary: 'Delete An Access Group '
      description: Deletes an Access group.
      operationId: zone-level-access-groups-delete-an-access-group
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Groups
        - Uu
        - Zones
      summary: 'Get An Access Group '
      description: Fetches a single Access group.
      operationId: zone-level-access-groups-get-an-access-group
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access group response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_groups_components-schemas-single_response
        4XX:
          description: Get an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Groups
        - Uu
        - Zones
      summary: 'Update An Access Group '
      description: Updates a configured Access group.
      operationId: zone-level-access-groups-update-an-access-group
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - include
              properties:
                exclude:
                  $ref: '#/components/schemas/access_exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                name:
                  $ref: '#/components/schemas/access_components-schemas-name'
                require:
                  $ref: '#/components/schemas/access_require'
      responses:
        '200':
          description: Update an Access group response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_groups_components-schemas-single_response
        4XX:
          description: Update an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/identity_providers:
    get:
      tags:
        - Access
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Zones
      summary: 'List Access Identity Providers '
      description: Lists all configured identity providers.
      operationId: zone-level-access-identity-providers-list-access-identity-providers
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access identity providers response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_identity-providers_components-schemas-response_collection
        4XX:
          description: List Access identity providers response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Zones
      summary: 'Add An Access Identity Provider '
      description: Adds a new identity provider to Access.
      operationId: zone-level-access-identity-providers-add-an-access-identity-provider
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_schemas-identity-providers'
      responses:
        '201':
          description: Add an Access identity provider response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_identity-providers_components-schemas-single_response
        4XX:
          description: Add an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/identity_providers/{uuid}:
    delete:
      tags:
        - Access
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Uu
        - Zones
      summary: 'Delete An Access Identity Provider '
      description: Deletes an identity provider from Access.
      operationId: zone-level-access-identity-providers-delete-an-access-identity-provider
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access identity provider response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Uu
        - Zones
      summary: 'Get An Access Identity Provider '
      description: Fetches a configured identity provider.
      operationId: zone-level-access-identity-providers-get-an-access-identity-provider
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access identity provider response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_identity-providers_components-schemas-single_response
        4XX:
          description: Get an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Uu
        - Zones
      summary: 'Update An Access Identity Provider '
      description: Updates a configured identity provider.
      operationId: zone-level-access-identity-providers-update-an-access-identity-provider
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_schemas-identity-providers'
      responses:
        '200':
          description: Update an Access identity provider response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_identity-providers_components-schemas-single_response
        4XX:
          description: Update an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/organizations:
    get:
      tags:
        - Access
        - Organizations
        - Trust
        - Your
        - Zones
      summary: 'Get Your Zero Trust Organization '
      description: Returns the configuration for your Zero Trust organization.
      operationId: zone-level-zero-trust-organization-get-your-zero-trust-organization
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      responses:
        '200':
          description: Get your Zero Trust organization response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_organizations_components-schemas-single_response
        4XX:
          description: Get your Zero Trust organization response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Organizations
        - Trust
        - Your
        - Zones
      summary: 'Create Your Zero Trust Organization '
      description: Sets up a Zero Trust organization for your account.
      operationId: zone-level-zero-trust-organization-create-your-zero-trust-organization
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - auth_domain
              properties:
                auth_domain:
                  $ref: '#/components/schemas/access_auth_domain'
                is_ui_read_only:
                  $ref: '#/components/schemas/access_is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/access_login_design'
                name:
                  $ref: '#/components/schemas/access_name'
                ui_read_only_toggle_reason:
                  $ref: '#/components/schemas/access_ui_read_only_toggle_reason'
                user_seat_expiration_inactive_time:
                  $ref: >-
                    #/components/schemas/access_user_seat_expiration_inactive_time
      responses:
        '201':
          description: Create your Zero Trust organization response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_organizations_components-schemas-single_response
        4XX:
          description: Create your Zero Trust organization response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Organizations
        - Trust
        - Your
        - Zones
      summary: 'Update Your Zero Trust Organization '
      description: Updates the configuration for your Zero Trust organization.
      operationId: zone-level-zero-trust-organization-update-your-zero-trust-organization
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                auth_domain:
                  $ref: '#/components/schemas/access_auth_domain'
                is_ui_read_only:
                  $ref: '#/components/schemas/access_is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/access_login_design'
                name:
                  $ref: '#/components/schemas/access_name'
                ui_read_only_toggle_reason:
                  $ref: '#/components/schemas/access_ui_read_only_toggle_reason'
                user_seat_expiration_inactive_time:
                  $ref: >-
                    #/components/schemas/access_user_seat_expiration_inactive_time
      responses:
        '200':
          description: Update your Zero Trust organization response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_organizations_components-schemas-single_response
        4XX:
          description: Update your Zero Trust organization response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/organizations/revoke_user:
    post:
      tags:
        - Access
        - Organizations
        - Revoke
        - Tokens
        - Users
        - Zones
      summary: 'Revoke All Access Tokens For A User '
      description: Revokes a user's access across all applications.
      operationId: zone-level-zero-trust-organization-revoke-all-access-tokens-for-a-user
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
              properties:
                email:
                  type: string
                  description: The email of the user to revoke.
                  example: test@example.com
      responses:
        '200':
          description: Revoke all Access tokens for a user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_empty_response'
        4xx:
          description: Revoke all Access tokens for a user response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/service_tokens:
    get:
      tags:
        - Access
        - Services
        - Tokens
        - Zones
      summary: 'List Service Tokens '
      description: Lists all service tokens.
      operationId: zone-level-access-service-tokens-list-service-tokens
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List service tokens response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_components-schemas-response_collection
        4XX:
          description: List service tokens response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Services
        - Tokens
        - Zones
      summary: 'Create A Service Token '
      description: >-
        Generates a new service token. **Note:** This is the only time you can
        get the Client Secret. If you lose the Client Secret, you will have to
        create a new service token.
      operationId: zone-level-access-service-tokens-create-a-service-token
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                duration:
                  $ref: '#/components/schemas/access_duration'
                name:
                  $ref: >-
                    #/components/schemas/access_service-tokens_components-schemas-name
      responses:
        '201':
          description: Create a service token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_create_response'
        4XX:
          description: Create a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/access/service_tokens/{uuid}:
    delete:
      tags:
        - Access
        - Services
        - Tokens
        - Uu
        - Zones
      summary: 'Delete A Service Token '
      description: Deletes a service token.
      operationId: zone-level-access-service-tokens-delete-a-service-token
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Delete a service token response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_service-tokens_components-schemas-single_response
        4XX:
          description: Delete a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Services
        - Tokens
        - Uu
        - Zones
      summary: 'Update A Service Token '
      description: Updates a configured service token.
      operationId: zone-level-access-service-tokens-update-a-service-token
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                duration:
                  $ref: '#/components/schemas/access_duration'
                name:
                  $ref: >-
                    #/components/schemas/access_service-tokens_components-schemas-name
      responses:
        '200':
          description: Update a service token response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_service-tokens_components-schemas-single_response
        4XX:
          description: Update a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/dns_analytics/report:
    get:
      tags:
        - Analytics
        - DNS
        - Reports
        - Tables
        - Zones
      summary: 'Table '
      description: >-
        Retrieves a list of summarised aggregate metrics over a given time
        period.


        See [Analytics API
        properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/)
        for detailed information about the available query parameters.
      operationId: dns-analytics-table
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_identifier'
        - name: metrics
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_metrics'
        - name: dimensions
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_dimensions'
        - name: since
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_since'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_until'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_limit'
        - name: sort
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_sort'
        - name: filters
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_filters'
      responses:
        '200':
          description: Table response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-single
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/dns_dns_analytics_api_report'
        4XX:
          description: Table response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/dns_dns_analytics_api_api-response-single
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/dns_dns_analytics_api_report'
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/dns_analytics/report/bytime:
    get:
      tags:
        - Analytics
        - DNS
        - Reports
        - Time
        - Zones
      summary: 'By Time '
      description: >-
        Retrieves a list of aggregate metrics grouped by time interval.


        See [Analytics API
        properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/)
        for detailed information about the available query parameters.
      operationId: dns-analytics-by-time
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_identifier'
        - name: metrics
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_metrics'
        - name: dimensions
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_dimensions'
        - name: since
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_since'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_until'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_limit'
        - name: sort
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_sort'
        - name: filters
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_filters'
        - name: time_delta
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_time_delta'
      responses:
        '200':
          description: By Time response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-single
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/components/schemas/dns_dns_analytics_api_report_bytime
        4XX:
          description: By Time response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/dns_dns_analytics_api_api-response-single
                      - type: object
                        properties:
                          result:
                            $ref: >-
                              #/components/schemas/dns_dns_analytics_api_report_bytime
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{identifier}/subscription:
    get:
      tags:
        - Details
        - Subscriptions
        - Zones
      summary: 'Zone Subscription Details '
      description: Lists zone subscription details.
      operationId: zone-subscription-zone-subscription-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_schemas-identifier'
      responses:
        '200':
          description: Zone Subscription Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bill-subs-api_zone_subscription_response_single
        4XX:
          description: Zone Subscription Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bill-subs-api_zone_subscription_response_single
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Subscriptions
        - Zones
      summary: 'Create Zone Subscription '
      description: Create a zone subscription, either plan or add-ons.
      operationId: zone-subscription-create-zone-subscription
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bill-subs-api_subscription-v2'
      responses:
        '200':
          description: Create Zone Subscription response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bill-subs-api_zone_subscription_response_single
        4XX:
          description: Create Zone Subscription response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bill-subs-api_zone_subscription_response_single
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Subscriptions
        - Zones
      summary: 'Update Zone Subscription '
      description: Updates zone subscriptions, either plan or add-ons.
      operationId: zone-subscription-update-zone-subscription
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bill-subs-api_subscription-v2'
      responses:
        '200':
          description: Update Zone Subscription response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bill-subs-api_zone_subscription_response_single
        4XX:
          description: Update Zone Subscription response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bill-subs-api_zone_subscription_response_single
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}:
    delete:
      tags:
        - Zones
      summary: 'Delete Zone '
      description: Deletes an existing zone.
      operationId: zones-0-delete
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Zone response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-single-id'
        4XX:
          description: Delete Zone response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Details
        - Zones
      summary: 'Zone Details '
      operationId: zones-0-get
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Zone Details response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_api-response-common'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/zones_zone'
        4XX:
          description: Zone Details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Edit
        - Zones
      summary: 'Edit Zone '
      description: Edits a zone. Only one zone property can be changed at a time.
      operationId: zones-0-patch
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                paused: true
              properties:
                paused:
                  $ref: '#/components/schemas/zones_paused'
                plan:
                  type: object
                  description: >
                    (Deprecated) Please use the `/zones/{zone_id}/subscription`
                    API

                    to update a zone's plan. Changing this value will
                    create/cancel

                    associated subscriptions. To view available plans for this
                    zone,

                    see Zone Plans.
                  properties:
                    id:
                      $ref: '#/components/schemas/zones_identifier'
                type:
                  type: string
                  description: >
                    A full zone implies that DNS is hosted with Cloudflare. A
                    partial

                    zone is typically a partner-hosted zone or a CNAME setup.
                    This

                    parameter is only available to Enterprise customers or if it
                    has

                    been explicitly enabled on a zone.
                  enum:
                    - full
                    - partial
                    - secondary
                  example: full
                vanity_name_servers:
                  $ref: '#/components/schemas/zones_vanity_name_servers'
      responses:
        '200':
          description: Edit Zone response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_api-response-common'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/zones_zone'
        4XX:
          description: Edit Zone response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/acm/total_tls:
    get:
      tags:
        - ACM
        - Details
        - Settings
        - TLS
        - Tls
        - Totals
        - Zones
      summary: 'Total TLS Settings Details '
      description: Get Total TLS Settings for a Zone.
      operationId: total-tls-total-tls-settings-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Total TLS Settings Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_total_tls_settings_response
        4XX:
          description: Total TLS Settings Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_total_tls_settings_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - ACM
        - Disable
        - Enable
        - TLS
        - Tls
        - Totals
        - Zones
      summary: 'Enable Or Disable Total TLS '
      description: Set Total TLS Settings or disable the feature for a Zone.
      operationId: total-tls-enable-or-disable-total-tls
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - enabled
              properties:
                certificate_authority:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_authority
                enabled:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-enabled
      responses:
        '200':
          description: Enable or Disable Total TLS response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_total_tls_settings_response
        4XX:
          description: Enable or Disable Total TLS response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_total_tls_settings_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/activation_check:
    put:
      tags:
        - Activation
        - Checks
        - Rerun
        - Zones
      summary: 'Rerun The Activation Check '
      description: |-
        Triggeres a new activation check for a PENDING Zone. This can be
        triggered every 5 min for paygo/ent customers, every hour for FREE
        Zones.
      operationId: put-zones-zone_id-activation_check
      parameters:
        - name: zone_id
          in: path
          description: Zone ID
          required: true
          schema:
            $ref: '#/components/schemas/zone-activation_identifier'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zone-activation_api-response-single'
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/zone-activation_identifier'
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zone-activation_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/analytics/latency:
    get:
      tags:
        - Analytics
        - Argo
        - Latency
        - Zones
      summary: 'Argo Analytics For A Zone '
      operationId: argo-analytics-for-zone-argo-analytics-for-a-zone
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/argo-analytics_identifier'
        - name: bins
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Argo Analytics for a zone response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/argo-analytics_response_single'
        4XX:
          description: Argo Analytics for a zone response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/argo-analytics_response_single'
                  - $ref: >-
                      #/components/schemas/argo-analytics_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/analytics/latency/colos:
    get:
      tags:
        - Analytics
        - Argo
        - Different
        - Latency
        - Zones
      summary: 'Argo Analytics For A Zone At Different Po Ps '
      operationId: >-
        argo-analytics-for-geolocation-argo-analytics-for-a-zone-at-different-po-ps
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/argo-analytics_identifier'
      responses:
        '200':
          description: Argo Analytics for a zone at different PoPs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/argo-analytics_response_single'
        4XX:
          description: Argo Analytics for a zone at different PoPs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/argo-analytics_response_single'
                  - $ref: >-
                      #/components/schemas/argo-analytics_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/api_gateway/configuration:
    get:
      tags:
        - About
        - Configurations
        - Gateways
        - Information
        - Properties
        - Specific
        - Zones
      summary: 'Retrieve Information About Specific Configuration Properties '
      operationId: >-
        api-shield-settings-retrieve-information-about-specific-configuration-properties
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - name: properties
          in: query
          schema:
            $ref: '#/components/schemas/api-shield_properties'
      responses:
        '200':
          description: >-
            Retrieve information about specific configuration properties
            response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_single_response'
        4XX:
          description: >-
            Retrieve information about specific configuration properties
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_single_response'
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Configurations
        - Gateways
        - Properties
        - Sets
        - Zones
      summary: 'Set Configuration Properties '
      operationId: api-shield-settings-set-configuration-properties
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-shield_configuration'
      responses:
        '200':
          description: Set configuration properties response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_default_response'
        4XX:
          description: Set configuration properties response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_default_response'
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/discovery:
    get:
      tags:
        - Discovered
        - Discovery
        - Gateways
        - Operations
        - Rendered
        - Schemas
        - Zones
      summary: 'Retrieve Discovered Operations On A Zone Rendered As Open API Schemas '
      description: >-
        Retrieve the most up to date view of discovered operations, rendered as
        OpenAPI schemas
      operationId: >-
        api-shield-api-discovery-retrieve-discovered-operations-on-a-zone-as-openapi
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      responses:
        '200':
          description: >-
            Retrieve discovered operations on a zone, rendered as OpenAPI
            schemas response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_schema_response_discovery'
        4XX:
          description: >-
            Retrieve discovered operations on a zone, rendered as OpenAPI
            schemas response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_schema_response_discovery'
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/discovery/operations:
    get:
      tags:
        - Discovered
        - Discovery
        - Gateways
        - Operations
        - Zones
      summary: 'Retrieve Discovered Operations On A Zone '
      description: Retrieve the most up to date view of discovered operations
      operationId: api-shield-api-discovery-retrieve-discovered-operations-on-a-zone
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_page'
        - $ref: '#/components/parameters/api-shield_per_page'
        - $ref: '#/components/parameters/api-shield_host_parameter'
        - $ref: '#/components/parameters/api-shield_method_parameter'
        - $ref: '#/components/parameters/api-shield_endpoint_parameter'
        - $ref: '#/components/parameters/api-shield_direction_parameter'
        - $ref: '#/components/parameters/api-shield_order_parameter'
        - $ref: '#/components/parameters/api-shield_diff_parameter'
        - $ref: '#/components/parameters/api-shield_api_discovery_origin_parameter'
        - $ref: '#/components/parameters/api-shield_api_discovery_state_parameter'
      responses:
        '200':
          description: Retrieve discovered operations on a zone response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-response-collection'
                  - properties:
                      result:
                        type: array
                        items:
                          anyOf:
                            - $ref: >-
                                #/components/schemas/api-shield_discovery_operation
        4XX:
          description: Retrieve discovered operations on a zone response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Discovered
        - Discovery
        - Gateways
        - Operations
        - Patch
        - Zones
      summary: 'Patch Discovered Operations '
      description: Update the `state` on one or more discovered operations
      operationId: api-shield-api-patch-discovered-operations
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/api-shield_api_discovery_patch_multiple_request
      responses:
        '200':
          description: Patch discovered operations response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_patch_discoveries_response'
        4XX:
          description: Patch discovered operations response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/discovery/operations/{operation_id}:
    patch:
      tags:
        - Discovered
        - Discovery
        - Gateways
        - Operation
        - Operations
        - Patch
        - Zones
      summary: 'Patch Discovered Operation '
      description: Update the `state` on a discovered operation
      operationId: api-shield-api-patch-discovered-operation
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_parameters-operation_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  allOf:
                    - $ref: >-
                        #/components/schemas/api-shield_api_discovery_state_patch
      responses:
        '200':
          description: Patch discovered operation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_patch_discovery_response'
        4XX:
          description: Patch discovered operation response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/operations:
    get:
      tags:
        - About
        - Gateways
        - Information
        - Operations
        - Zones
      summary: 'Retrieve Information About All Operations On A Zone '
      operationId: >-
        api-shield-endpoint-management-retrieve-information-about-all-operations-on-a-zone
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_page'
        - name: per_page
          in: query
          description: Number of results to return per page
          schema:
            type: number
            default: 20
            minimum: 5
        - name: order
          in: query
          schema:
            type: string
            description: >-
              Field to order by. When requesting a feature, the feature keys are
              available for ordering as well, e.g.,
              `thresholds.suggested_threshold`.
            enum:
              - method
              - host
              - endpoint
              - thresholds.$key
            example: method
        - $ref: '#/components/parameters/api-shield_direction_parameter'
        - $ref: '#/components/parameters/api-shield_host_parameter'
        - $ref: '#/components/parameters/api-shield_method_parameter'
        - $ref: '#/components/parameters/api-shield_endpoint_parameter'
        - $ref: '#/components/parameters/api-shield_operation_feature_parameter'
      responses:
        '200':
          description: Retrieve information about all operations on a zone response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_collection_response_paginated'
        4XX:
          description: Retrieve information about all operations on a zone response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Gateways
        - Operations
        - Zones
      summary: 'Add Operations To A Zone '
      description: >-
        Add one or more operations to a zone. Endpoints can contain path
        variables. Host, method, endpoint will be normalized to a canoncial form
        when creating an operation and must be unique on the zone. Inserting an
        operation that matches an existing one will return the record of the
        already existing operation and update its last_updated date.
      operationId: api-shield-endpoint-management-add-operations-to-a-zone
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/api-shield_basic_operation'
      responses:
        '200':
          description: Add operations to a zone response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_collection_response'
        4XX:
          description: Add operations to a zone response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_collection_response'
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/operations/{operation_id}:
    delete:
      tags:
        - Gateways
        - Operation
        - Operations
        - Zones
      summary: 'Delete An Operation '
      operationId: api-shield-endpoint-management-delete-an-operation
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_operation_id'
      responses:
        '200':
          description: Delete an operation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_default_response'
        4XX:
          description: Delete an operation response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_default_response'
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - About
        - Gateways
        - Information
        - Operation
        - Operations
        - Zones
      summary: 'Retrieve Information About An Operation '
      operationId: api-shield-endpoint-management-retrieve-information-about-an-operation
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_operation_id'
        - $ref: '#/components/parameters/api-shield_operation_feature_parameter'
      responses:
        '200':
          description: Retrieve information about an operation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_schemas-single_response'
        4XX:
          description: Retrieve information about an operation response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/operations/{operation_id}/schema_validation:
    get:
      tags:
        - Ation
        - Gateways
        - Operation
        - Operation level
        - Operations
        - Schemas
        - Settings
        - Val
        - Validations
        - Zones
      summary: 'Retrieve Operation-level Schema Validation Settings '
      description: Retrieves operation-level schema validation settings on the zone
      operationId: api-shield-schema-validation-retrieve-operation-level-settings
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_operation_id'
      responses:
        '200':
          description: Operation-level schema validation settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/api-shield_operation_schema_validation_settings
        4XX:
          description: Operation-level schema validation settings response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Ation
        - Gateways
        - Operation
        - Operation level
        - Operations
        - Schemas
        - Settings
        - Val
        - Validations
        - Zones
      summary: 'Update Operation-level Schema Validation Settings '
      description: Updates operation-level schema validation settings on the zone
      operationId: api-shield-schema-validation-update-operation-level-settings
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_operation_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/api-shield_operation_schema_validation_settings
      responses:
        '200':
          description: Update operation-level schema validation settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/api-shield_operation_schema_validation_settings
        4XX:
          description: Update operation-level schema validation settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/operations/schema_validation:
    patch:
      tags:
        - Ation
        - Gateways
        - Multiple
        - Operation level
        - Operations
        - Schemas
        - Settings
        - Val
        - Validations
        - Zones
      summary: 'Update Multiple Operation-level Schema Validation Settings '
      description: Updates multiple operation-level schema validation settings on the zone
      operationId: api-shield-schema-validation-update-multiple-operation-level-settings
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/api-shield_operation_schema_validation_settings_multiple_request
      responses:
        '200':
          description: Update multiple operation-level schema validation settings response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-response-single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/api-shield_operation_schema_validation_settings_multiple_request
        4XX:
          description: >-
            Update multiple operation-level schema validation settings response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/schemas:
    get:
      tags:
        - Features
        - Gateways
        - Operations
        - Schemas
        - Zones
      summary: 'Retrieve Operations And Features As Open API Schemas '
      operationId: >-
        api-shield-endpoint-management-retrieve-operations-and-features-as-open-api-schemas
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - name: host
          in: query
          schema:
            type: array
            description: Receive schema only for the given host(s).
            uniqueItems: true
            items:
              type: string
              example: www.example.com
        - $ref: '#/components/parameters/api-shield_operation_feature_parameter'
      responses:
        '200':
          description: Retrieve operations and features as OpenAPI schemas response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/api-shield_schema_response_with_thresholds
        4XX:
          description: Retrieve operations and features as OpenAPI schemas response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_schema_response_with_thresholds
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/settings/schema_validation:
    get:
      tags:
        - Ation
        - Gateways
        - Levels
        - Schemas
        - Settings
        - Val
        - Validations
        - Zones
      summary: 'Retrieve Zone Level Schema Validation Settings '
      description: >-
        Retrieves zone level schema validation settings currently set on the
        zone
      operationId: api-shield-schema-validation-retrieve-zone-level-settings
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      responses:
        '200':
          description: Zone level schema validation settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/api-shield_zone_schema_validation_settings
        4XX:
          description: Zone level schema validation settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Ation
        - Gateways
        - Levels
        - Schemas
        - Settings
        - Val
        - Validations
        - Zones
      summary: 'Update Zone Level Schema Validation Settings '
      description: Updates zone level schema validation settings on the zone
      operationId: api-shield-schema-validation-patch-zone-level-settings
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/api-shield_zone_schema_validation_settings_patch
      responses:
        '200':
          description: Update zone level schema validation settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/api-shield_zone_schema_validation_settings
        4XX:
          description: Update zone level schema validation settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Ation
        - Gateways
        - Levels
        - Schemas
        - Settings
        - Val
        - Validations
        - Zones
      summary: 'Update Zone Level Schema Validation Settings '
      description: Updates zone level schema validation settings on the zone
      operationId: api-shield-schema-validation-update-zone-level-settings
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/api-shield_zone_schema_validation_settings_put
      responses:
        '200':
          description: Update zone level schema validation settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/api-shield_zone_schema_validation_settings
        4XX:
          description: Update zone level schema validation settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/user_schemas:
    get:
      tags:
        - About
        - Gateways
        - Information
        - Schemas
        - Users
        - Zones
      summary: 'Retrieve Information About All Schemas On A Zone '
      operationId: api-shield-schema-validation-retrieve-information-about-all-schemas
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_page'
        - $ref: '#/components/parameters/api-shield_per_page'
        - $ref: '#/components/parameters/api-shield_omit_source'
        - name: validation_enabled
          in: query
          schema:
            $ref: '#/components/schemas/api-shield_validation_enabled'
      responses:
        '200':
          description: Retrieve information about all schemas on a zone response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-response-collection'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/api-shield_public_schema'
        4XX:
          description: Retrieve information about all schemas on a zone response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/api-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Gateways
        - Schemas
        - Uploads
        - Users
        - Zones
      summary: 'Upload A Schema To A Zone '
      operationId: api-shield-schema-validation-post-schema
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - kind
              properties:
                file:
                  type: string
                  format: binary
                  description: Schema file bytes
                kind:
                  $ref: '#/components/schemas/api-shield_kind'
                name:
                  type: string
                  description: Name of the schema
                  example: petstore schema
                validation_enabled:
                  type: string
                  description: Flag whether schema is enabled for validation.
                  enum:
                    - 'true'
                    - 'false'
      responses:
        '200':
          description: Upload a schema response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/api-shield_schema_upload_response'
        4XX:
          description: Upload a schema response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_schema_upload_failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/user_schemas/{schema_id}:
    delete:
      tags:
        - Gateways
        - Schemas
        - Users
        - Zones
      summary: 'Delete A Schema '
      operationId: api-shield-schema-delete-a-schema
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_schema_id'
      responses:
        '200':
          description: Delete a schema response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_api-response-single'
        4XX:
          description: Delete a schema response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - About
        - Gateways
        - Information
        - Schemas
        - Specific
        - Users
        - Zones
      summary: 'Retrieve Information About A Specific Schema On A Zone '
      operationId: api-shield-schema-validation-retrieve-information-about-specific-schema
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_schema_id'
        - $ref: '#/components/parameters/api-shield_omit_source'
      responses:
        '200':
          description: Retrieve information about a specific schema on a zone response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/api-shield_public_schema'
        4XX:
          description: Retrieve information about a specific schema zone response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Enable
        - Gateways
        - Schemas
        - Users
        - Validations
        - Zones
      summary: 'Enable Validation For A Schema '
      operationId: api-shield-schema-validation-enable-validation-for-a-schema
      parameters:
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_schema_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                validation_enabled:
                  allOf:
                    - $ref: '#/components/schemas/api-shield_validation_enabled'
                    - enum:
                        - true
      responses:
        '200':
          description: Enable validation for a schema response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/api-shield_public_schema'
        4XX:
          description: Enable validation for a schema response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/api_gateway/user_schemas/{schema_id}/operations:
    get:
      tags:
        - Gateways
        - Operations
        - Schemas
        - Users
        - Zones
      summary: 'Retrieve All Operations From A Schema. '
      description: >-
        Retrieves all operations from the schema. Operations that already exist
        in API Shield Endpoint Management will be returned as full operations.
      operationId: api-shield-schema-validation-extract-operations-from-schema
      parameters:
        - $ref: '#/components/parameters/api-shield_schema_id'
        - $ref: '#/components/parameters/api-shield_zone_id'
        - $ref: '#/components/parameters/api-shield_operation_feature_parameter'
        - $ref: '#/components/parameters/api-shield_host_parameter'
        - $ref: '#/components/parameters/api-shield_method_parameter'
        - $ref: '#/components/parameters/api-shield_endpoint_parameter'
        - $ref: '#/components/parameters/api-shield_page'
        - $ref: '#/components/parameters/api-shield_per_page'
        - name: operation_status
          in: query
          description: >-
            Filter results by whether operations exist in API Shield Endpoint
            Management or not. `new` will just return operations from the schema
            that do not exist in API Shield Endpoint Management. `existing` will
            just return operations from the schema that already exist in API
            Shield Endpoint Management.
          schema:
            type: string
            enum:
              - new
              - existing
            example: new
      responses:
        '200':
          description: Retrieve all operations from a schema response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/api-shield_api-response-collection'
                  - properties:
                      result:
                        type: array
                        items:
                          anyOf:
                            - $ref: '#/components/schemas/api-shield_operation'
                            - $ref: '#/components/schemas/api-shield_basic_operation'
        4XX:
          description: Retrieve all operations from a schema response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-shield_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/argo/smart_routing:
    get:
      tags:
        - Argo
        - Routing
        - Settings
        - Zones
      summary: 'Get Argo Smart Routing Setting '
      operationId: argo-smart-routing-get-argo-smart-routing-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/argo-config_identifier'
      responses:
        '200':
          description: Get Argo Smart Routing setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/argo-config_response_single'
        4XX:
          description: Get Argo Smart Routing setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/argo-config_response_single'
                  - $ref: >-
                      #/components/schemas/argo-config_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Argo
        - Patch
        - Routing
        - Settings
        - Zones
      summary: 'Patch Argo Smart Routing Setting '
      description: Updates enablement of Argo Smart Routing.
      operationId: argo-smart-routing-patch-argo-smart-routing-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/argo-config_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/argo-config_patch'
      responses:
        '200':
          description: Patch Argo Smart Routing setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/argo-config_response_single'
        4XX:
          description: Patch Argo Smart Routing setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/argo-config_response_single'
                  - $ref: >-
                      #/components/schemas/argo-config_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/argo/tiered_caching:
    get:
      tags:
        - Argo
        - Caching
        - Settings
        - Tiered
        - Zones
      summary: 'Get Tiered Caching Setting '
      operationId: tiered-caching-get-tiered-caching-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get Tiered Caching setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache_response_single'
        4XX:
          description: Get Tiered Caching setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache_response_single'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Argo
        - Caching
        - Patch
        - Settings
        - Tiered
        - Zones
      summary: 'Patch Tiered Caching Setting '
      description: Updates enablement of Tiered Caching
      operationId: tiered-caching-patch-tiered-caching-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cache_patch'
      responses:
        '200':
          description: Patch Tiered Caching setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache_response_single'
        4XX:
          description: Patch Tiered Caching setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache_response_single'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/bot_management:
    get:
      tags:
        - Bots
        - Configurations
        - Management
        - Zones
      summary: 'Get Zone Bot Management Config '
      description: Retrieve a zone's Bot Management Config
      operationId: bot-management-for-a-zone-get-config
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bot-management_identifier'
      responses:
        '200':
          description: Bot Management config response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bot-management_bot_management_response_body
        4XX:
          description: Bot Management config response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bot-management_bot_management_response_body
                  - $ref: >-
                      #/components/schemas/bot-management_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Bots
        - Configurations
        - Management
        - Zones
      summary: 'Update Zone Bot Management Config '
      description: >
        Updates the Bot Management configuration for a zone.


        This API is used to update:

        - **Bot Fight Mode**

        - **Super Bot Fight Mode**

        - **Bot Management for Enterprise**


        See [Bot Plans](https://developers.cloudflare.com/bots/plans/) for more
        information on the different plans
      operationId: bot-management-for-a-zone-update-config
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bot-management_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bot-management_config_single'
      responses:
        '200':
          description: Update Bot Management response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bot-management_bot_management_response_body
        4XX:
          description: Update Bot Management response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bot-management_bot_management_response_body
                  - $ref: >-
                      #/components/schemas/bot-management_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/cache/cache_reserve:
    get:
      tags:
        - Cache
        - Reserve
        - Settings
        - Zones
      summary: 'Get Cache Reserve Setting '
      description: >-
        Increase cache lifetimes by automatically storing all cacheable files
        into Cloudflare's persistent object storage buckets. Requires Cache
        Reserve subscription. Note: using Tiered Cache with Cache Reserve is
        highly recommended to reduce Reserve operations costs. See the
        [developer
        docs](https://developers.cloudflare.com/cache/about/cache-reserve) for
        more information.
      operationId: zone-cache-settings-get-cache-reserve-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get Cache Reserve setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: '#/components/schemas/cache_cache_reserve_response_value'
              examples:
                'off':
                  $ref: '#/components/examples/cache_cache_reserve_off'
        4XX:
          description: Get Cache Reserve setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_cache_reserve_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
              examples:
                Error:
                  $ref: '#/components/examples/cache_dummy_error_response'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Cache
        - Change
        - Reserve
        - Settings
        - Zones
      summary: 'Change Cache Reserve Setting '
      description: >-
        Increase cache lifetimes by automatically storing all cacheable files
        into Cloudflare's persistent object storage buckets. Requires Cache
        Reserve subscription. Note: using Tiered Cache with Cache Reserve is
        highly recommended to reduce Reserve operations costs. See the
        [developer
        docs](https://developers.cloudflare.com/cache/about/cache-reserve) for
        more information.
      operationId: zone-cache-settings-change-cache-reserve-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/cache_cache_reserve_value'
      responses:
        '200':
          description: Change Cache Reserve setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: '#/components/schemas/cache_cache_reserve_response_value'
              examples:
                'off':
                  $ref: '#/components/examples/cache_cache_reserve_off'
        4XX:
          description: Change Cache Reserve setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_cache_reserve_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
              examples:
                Denied:
                  $ref: '#/components/examples/cache_cache_reserve_denied_clearing'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/cache/cache_reserve_clear:
    get:
      tags:
        - Cache
        - Clear
        - Reserve
        - Zones
      summary: 'Get Cache Reserve Clear '
      description: >-
        You can use Cache Reserve Clear to clear your Cache Reserve, but you
        must first disable Cache Reserve. In most cases, this will be
        accomplished within 24 hours. You cannot re-enable Cache Reserve while
        this process is ongoing. Keep in mind that you cannot undo or cancel
        this operation.
      operationId: zone-cache-settings-get-cache-reserve-clear
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get Cache Reserve Clear response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_cache_reserve_clear_response_value
              examples:
                Completed:
                  $ref: '#/components/examples/cache_cache_reserve_clear_completed'
                In-progress:
                  $ref: '#/components/examples/cache_cache_reserve_clear_in_progress'
        4XX:
          description: Get Cache Reserve Clear failure response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_cache_reserve_clear_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
              examples:
                Not found:
                  $ref: '#/components/examples/cache_cache_reserve_clear_not_found'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Cache
        - Clear
        - Reserve
        - Zones
      summary: 'Start Cache Reserve Clear '
      description: >-
        You can use Cache Reserve Clear to clear your Cache Reserve, but you
        must first disable Cache Reserve. In most cases, this will be
        accomplished within 24 hours. You cannot re-enable Cache Reserve while
        this process is ongoing. Keep in mind that you cannot undo or cancel
        this operation.
      operationId: zone-cache-settings-start-cache-reserve-clear
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        description: The request body is currently not used.
        required: true
        content:
          application/json:
            example: '{}'
      responses:
        '200':
          description: Start Cache Reserve Clear response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_cache_reserve_clear_response_value
              examples:
                In-progress:
                  $ref: '#/components/examples/cache_cache_reserve_clear_in_progress'
        4XX:
          description: Start Cache Reserve Clear failure response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_cache_reserve_clear_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
              examples:
                Rejected:
                  $ref: >-
                    #/components/examples/cache_cache_reserve_clear_rejected_cr_on
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/cache/origin_post_quantum_encryption:
    get:
      tags:
        - Cache
        - Encryption
        - Origin
        - Post Quantum
        - Posts
        - Quantum
        - Settings
        - Zones
      summary: 'Get Origin Post-Quantum Encryption Setting '
      description: >-
        Instructs Cloudflare to use Post-Quantum (PQ) key agreement algorithms
        when connecting to your origin. Preferred instructs Cloudflare to
        opportunistically send a Post-Quantum keyshare in the first message to
        the origin (for fastest connections when the origin supports and prefers
        PQ), supported means that PQ algorithms are advertised but only used
        when requested by the origin, and off means that PQ algorithms are not
        advertised
      operationId: zone-cache-settings-get-origin-post-quantum-encryption-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get Origin Post-Quantum Encryption setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_origin_post_quantum_encryption_value
        4XX:
          description: Get Origin Post-Quantum Encryption setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_origin_post_quantum_encryption_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Cache
        - Change
        - Encryption
        - Origin
        - Post Quantum
        - Posts
        - Quantum
        - Settings
        - Zones
      summary: 'Change Origin Post-Quantum Encryption Setting '
      description: >-
        Instructs Cloudflare to use Post-Quantum (PQ) key agreement algorithms
        when connecting to your origin. Preferred instructs Cloudflare to
        opportunistically send a Post-Quantum keyshare in the first message to
        the origin (for fastest connections when the origin supports and prefers
        PQ), supported means that PQ algorithms are advertised but only used
        when requested by the origin, and off means that PQ algorithms are not
        advertised
      operationId: zone-cache-settings-change-origin-post-quantum-encryption-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: >-
                    #/components/schemas/cache_origin_post_quantum_encryption_value
      responses:
        '200':
          description: Change Origin Post-Quantum Encryption setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_origin_post_quantum_encryption_value
        4XX:
          description: Change Origin Post-Quantum Encryption setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_origin_post_quantum_encryption_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/cache/regional_tiered_cache:
    get:
      tags:
        - Cache
        - Regional
        - Settings
        - Tiered
        - Zones
      summary: 'Get Regional Tiered Cache Setting '
      description: >-
        Instructs Cloudflare to check a regional hub data center on the way to
        your upper tier. This can help improve performance for smart and custom
        tiered cache topologies.
      operationId: zone-cache-settings-get-regional-tiered-cache-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get Regional Tiered Cache setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_regional_tiered_cache_response_value
        4XX:
          description: Get Regional Tiered Cache setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_regional_tiered_cache_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Cache
        - Change
        - Regional
        - Settings
        - Tiered
        - Zones
      summary: 'Change Regional Tiered Cache Setting '
      description: >-
        Instructs Cloudflare to check a regional hub data center on the way to
        your upper tier. This can help improve performance for smart and custom
        tiered cache topologies.
      operationId: zone-cache-settings-change-regional-tiered-cache-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/cache_regional_tiered_cache_value'
      responses:
        '200':
          description: Change Regional Tiered Cache setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_regional_tiered_cache_response_value
        4XX:
          description: Change Regional Tiered Cache setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_regional_tiered_cache_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/cache/tiered_cache_smart_topology_enable:
    delete:
      tags:
        - Cache
        - Enable
        - Settings
        - Tiered
        - Topology
        - Zones
      summary: 'Delete Smart Tiered Cache Setting '
      description: Remvoves enablement of Smart Tiered Cache
      operationId: smart-tiered-cache-delete-smart-tiered-cache-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Smart Tiered Cache setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache_response_single'
        4XX:
          description: Delete Smart Tiered Cache setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache_response_single'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Cache
        - Enable
        - Settings
        - Tiered
        - Topology
        - Zones
      summary: 'Get Smart Tiered Cache Setting '
      operationId: smart-tiered-cache-get-smart-tiered-cache-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get Smart Tiered Cache setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache_response_single'
        4XX:
          description: Get Smart Tiered Cache setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache_response_single'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Cache
        - Enable
        - Patch
        - Settings
        - Tiered
        - Topology
        - Zones
      summary: 'Patch Smart Tiered Cache Setting '
      description: Updates enablement of Tiered Cache
      operationId: smart-tiered-cache-patch-smart-tiered-cache-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cache_schemas-patch'
      responses:
        '200':
          description: Patch Smart Tiered Cache setting response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache_response_single'
        4XX:
          description: Patch Smart Tiered Cache setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache_response_single'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/cache/variants:
    delete:
      tags:
        - Cache
        - Settings
        - Variants
        - Zones
      summary: 'Delete Variants Setting '
      description: >-
        Variant support enables caching variants of images with certain file
        extensions in addition to the original. This only applies when the
        origin server sends the 'Vary: Accept' response header. If the origin
        server sends 'Vary: Accept' but does not serve the variant requested,
        the response will not be cached. This will be indicated with BYPASS
        cache status in the response headers.
      operationId: zone-cache-settings-delete-variants-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete variants setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - properties:
                      result:
                        $ref: '#/components/schemas/cache_variants'
        4XX:
          description: Delete variants setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - properties:
                          result:
                            $ref: '#/components/schemas/cache_variants'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Cache
        - Settings
        - Variants
        - Zones
      summary: 'Get Variants Setting '
      description: >-
        Variant support enables caching variants of images with certain file
        extensions in addition to the original. This only applies when the
        origin server sends the 'Vary: Accept' response header. If the origin
        server sends 'Vary: Accept' but does not serve the variant requested,
        the response will not be cached. This will be indicated with BYPASS
        cache status in the response headers.
      operationId: zone-cache-settings-get-variants-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get variants setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: '#/components/schemas/cache_variants_response_value'
        4XX:
          description: Get variants setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: '#/components/schemas/cache_variants_response_value'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Cache
        - Change
        - Settings
        - Variants
        - Zones
      summary: 'Change Variants Setting '
      description: >-
        Variant support enables caching variants of images with certain file
        extensions in addition to the original. This only applies when the
        origin server sends the 'Vary: Accept' response header. If the origin
        server sends 'Vary: Accept' but does not serve the variant requested,
        the response will not be cached. This will be indicated with BYPASS
        cache status in the response headers.
      operationId: zone-cache-settings-change-variants-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/cache_variants_value'
      responses:
        '200':
          description: Change variants setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: '#/components/schemas/cache_variants_response_value'
        4XX:
          description: Change variants setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: '#/components/schemas/cache_variants_response_value'
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/certificate_authorities/hostname_associations:
    get:
      tags:
        - Associations
        - Authorities
        - Certificates
        - Host Names
        - Zones
      summary: 'List Hostname Associations '
      description: List Hostname Associations
      operationId: client-certificate-for-a-zone-list-hostname-associations
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: mtls_certificate_id
          in: query
          schema:
            type: string
            description: >-
              The UUID to match against for a certificate that was uploaded to
              the mTLS Certificate Management endpoint. If no
              mtls_certificate_id is given, the results will be the hostnames
              associated to your active Cloudflare Managed CA.
            example: b2134436-2555-4acf-be5b-26c48136575e
            minLength: 36
            maxLength: 36
      responses:
        '200':
          description: List Hostname Associations Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_hostname_associations_response
        4XX:
          description: List Hostname Associations Response Failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Associations
        - Authorities
        - Certificates
        - Host Names
        - Replace
        - Zones
      summary: 'Replace Hostname Associations '
      description: Replace Hostname Associations
      operationId: client-certificate-for-a-zone-put-hostname-associations
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_hostname_association
      responses:
        '200':
          description: Replace Hostname Associations Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_hostname_associations_response
        4XX:
          description: Replace Hostname Associations Response Failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/client_certificates:
    get:
      tags:
        - Certificates
        - Clients
        - Zones
      summary: 'List Client Certificates '
      description: >-
        List all of your Zone's API Shield mTLS Client Certificates by Status
        and/or using Pagination
      operationId: client-certificate-for-a-zone-list-client-certificates
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: status
          in: query
          schema:
            description: Client Certitifcate Status to filter results by.
            enum:
              - all
              - active
              - pending_reactivation
              - pending_revocation
              - revoked
            example: all
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of records per page.
            default: 20
            minimum: 5
            maximum: 50
        - name: limit
          in: query
          schema:
            type: integer
            description: Limit to the number of records returned.
            example: 10
        - name: offset
          in: query
          schema:
            type: integer
            description: Offset the results
            example: 10
      responses:
        '200':
          description: List Client Certificates Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_client_certificate_response_collection
        4XX:
          description: List Client Certificates Response Failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Certificates
        - Clients
        - Zones
      summary: 'Create Client Certificate '
      description: Create a new API Shield mTLS Client Certificate
      operationId: client-certificate-for-a-zone-create-client-certificate
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - csr
                - validity_days
              properties:
                csr:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-csr
                validity_days:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-validity_days
      responses:
        '200':
          description: Create Client Certificate Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_client_certificate_response_single
        4XX:
          description: Create Client Certificate Response Failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_client_certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/client_certificates/{client_certificate_id}:
    delete:
      tags:
        - Certificates
        - Clients
        - Revoke
        - Zones
      summary: 'Revoke Client Certificate '
      description: >-
        Set a API Shield mTLS Client Certificate to pending_revocation status
        for processing to revoked status.
      operationId: client-certificate-for-a-zone-delete-client-certificate
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: client_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Revoke Client Certificate Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_client_certificate_response_single
        4XX:
          description: Revoke Client Certificate Response Failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Certificates
        - Clients
        - Details
        - Zones
      summary: 'Client Certificate Details '
      description: Get Details for a single mTLS API Shield Client Certificate
      operationId: client-certificate-for-a-zone-client-certificate-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: client_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Client Certificate Details Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_client_certificate_response_single
        4XX:
          description: Client Certificate Details Response Failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Certificates
        - Clients
        - Reactivate
        - Zones
      summary: 'Reactivate Client Certificate '
      description: >-
        If a API Shield mTLS Client Certificate is in a pending_revocation
        state, you may reactivate it with this endpoint.
      operationId: client-certificate-for-a-zone-edit-client-certificate
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: client_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Reactivate Client Certificate Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_client_certificate_response_single
        4XX:
          description: Reactivate Client Certificate Response Failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/custom_certificates:
    get:
      tags:
        - Certificates
        - Configurations
        - Custom
        - SSL
        - Zones
      summary: 'List SSL Configurations '
      description: >-
        List, search, and filter all of your custom SSL certificates. The higher
        priority will break ties across overlapping 'legacy_custom'
        certificates, but 'legacy_custom' certificates will always supercede
        'sni_custom' certificates.
      operationId: custom-ssl-for-a-zone-list-ssl-configurations
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of zones per page.
            default: 20
            minimum: 5
            maximum: 50
        - name: match
          in: query
          schema:
            type: string
            description: Whether to match all search requirements or at least one (any).
            enum:
              - any
              - all
            default: all
        - name: status
          in: query
          schema:
            description: Status of the zone's custom SSL.
            enum:
              - active
              - expired
              - deleted
              - pending
              - initializing
            example: active
            readOnly: true
      responses:
        '200':
          description: List SSL Configurations response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_collection
        4XX:
          description: List SSL Configurations response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Certificates
        - Configurations
        - Custom
        - SSL
        - Zones
      summary: 'Create SSL Configuration '
      description: Upload a new SSL certificate for a zone.
      operationId: custom-ssl-for-a-zone-create-ssl-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificate
                - private_key
              properties:
                bundle_method:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_bundle_method
                certificate:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_certificate
                geo_restrictions:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_geo_restrictions
                policy:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_policy'
                private_key:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_private_key
                type:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_type'
      responses:
        '200':
          description: Create SSL Configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
        4XX:
          description: Create SSL Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/custom_certificates/{custom_certificate_id}:
    delete:
      tags:
        - Certificates
        - Configurations
        - Custom
        - SSL
        - Zones
      summary: 'Delete SSL Configuration '
      description: Remove a SSL certificate from a zone.
      operationId: custom-ssl-for-a-zone-delete-ssl-configuration
      parameters:
        - name: custom_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete SSL Configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_id_only
        4XX:
          description: Delete SSL Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_id_only
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Certificates
        - Configurations
        - Custom
        - Details
        - SSL
        - Zones
      summary: 'SSL Configuration Details '
      operationId: custom-ssl-for-a-zone-ssl-configuration-details
      parameters:
        - name: custom_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: SSL Configuration Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
        4XX:
          description: SSL Configuration Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Certificates
        - Configurations
        - Custom
        - Edit
        - SSL
        - Zones
      summary: 'Edit SSL Configuration '
      description: >-
        Upload a new private key and/or PEM/CRT for the SSL certificate. Note:
        PATCHing a configuration for sni_custom certificates will result in a
        new resource id being returned, and the previous one being deleted.
      operationId: custom-ssl-for-a-zone-edit-ssl-configuration
      parameters:
        - name: custom_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bundle_method:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_bundle_method
                certificate:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_certificate
                geo_restrictions:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_geo_restrictions
                policy:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_policy'
                private_key:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_private_key
      responses:
        '200':
          description: Edit SSL Configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
        4XX:
          description: Edit SSL Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/custom_certificates/prioritize:
    put:
      tags:
        - Certificates
        - Custom
        - Prioritize
        - Re prioritize
        - SSL
        - Zones
      summary: 'Re-prioritize SSL Certificates '
      description: >-
        If a zone has multiple SSL certificates, you can set the order in which
        they should be used during a request. The higher priority will break
        ties across overlapping 'legacy_custom' certificates.
      operationId: custom-ssl-for-a-zone-re-prioritize-ssl-certificates
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - certificates
              properties:
                certificates:
                  type: array
                  description: Array of ordered certificates.
                  example:
                    - id: 5a7805061c76ada191ed06f989cc3dac
                      priority: 2
                    - id: 9a7806061c88ada191ed06f989cc3dac
                      priority: 1
                  items:
                    type: object
                    properties:
                      id:
                        $ref: >-
                          #/components/schemas/tls-certificates-and-hostnames_identifier
                      priority:
                        $ref: >-
                          #/components/schemas/tls-certificates-and-hostnames_priority
      responses:
        '200':
          description: Re-prioritize SSL Certificates response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_collection
        4XX:
          description: Re-prioritize SSL Certificates response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/custom_hostnames:
    get:
      tags:
        - Custom
        - Host Names
        - Zones
      summary: 'List Custom Hostnames '
      description: List, search, sort, and filter all of your custom hostnames.
      operationId: custom-hostname-for-a-zone-list-custom-hostnames
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: hostname
          in: query
          schema:
            type: string
            description: >-
              Fully qualified domain name to match against. This parameter
              cannot be used with the 'id' parameter.
            example: app.example.com
            maxLength: 255
        - name: id
          in: query
          schema:
            type: string
            description: >-
              Hostname ID to match against. This ID was generated and returned
              during the initial custom_hostname creation. This parameter cannot
              be used with the 'hostname' parameter.
            example: 0d89c70d-ad9f-4843-b99f-6cc0252067e9
            minLength: 36
            maxLength: 36
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of hostnames per page.
            default: 20
            minimum: 5
            maximum: 50
        - name: order
          in: query
          schema:
            description: Field to order hostnames by.
            enum:
              - ssl
              - ssl_status
            default: ssl
            example: ssl
        - name: direction
          in: query
          schema:
            description: Direction to order hostnames.
            enum:
              - asc
              - desc
            example: desc
        - name: ssl
          in: query
          schema:
            description: Whether to filter hostnames based on if they have SSL enabled.
            enum:
              - 0
              - 1
            default: '0'
      responses:
        '200':
          description: List Custom Hostnames response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_collection
        4XX:
          description: List Custom Hostnames response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Custom
        - Host Names
        - Zones
      summary: 'Create Custom Hostname '
      description: >-
        Add a new custom hostname and request that an SSL certificate be issued
        for it. One of three validation methods—http, txt, email—should be used,
        with 'http' recommended if the CNAME is already in place (or will be
        soon). Specifying 'email' will send an email to the WHOIS contacts on
        file for the base domain plus hostmaster, postmaster, webmaster, admin,
        administrator. If http is used and the domain is not already pointing to
        the Managed CNAME host, the PATCH method must be used once it is (to
        complete validation).
      operationId: custom-hostname-for-a-zone-create-custom-hostname
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hostname
                - ssl
              properties:
                custom_metadata:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_metadata
                hostname:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_hostname_post
                ssl:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_sslpost'
      responses:
        '200':
          description: Create Custom Hostname response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
        4XX:
          description: Create Custom Hostname response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/custom_hostnames/{custom_hostname_id}:
    delete:
      tags:
        - (and
        - Any
        - Certificates
        - Custom
        - Host Names
        - Issued
        - SSL
        - Zones
      summary: 'Delete Custom Hostname (and Any Issued SSL Certificates) '
      operationId: >-
        custom-hostname-for-a-zone-delete-custom-hostname-(-and-any-issued-ssl-certificates)
      parameters:
        - name: custom_hostname_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Custom Hostname (and any issued SSL certificates) response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_identifier
        4XX:
          description: >-
            Delete Custom Hostname (and any issued SSL certificates) response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        $ref: >-
                          #/components/schemas/tls-certificates-and-hostnames_identifier
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Custom
        - Details
        - Host Names
        - Zones
      summary: 'Custom Hostname Details '
      operationId: custom-hostname-for-a-zone-custom-hostname-details
      parameters:
        - name: custom_hostname_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Custom Hostname Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
        4XX:
          description: Custom Hostname Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Custom
        - Edit
        - Host Names
        - Zones
      summary: 'Edit Custom Hostname '
      description: >-
        Modify SSL configuration for a custom hostname. When sent with SSL
        config that matches existing config, used to indicate that hostname
        should pass domain control validation (DCV). Can also be used to change
        validation type, e.g., from 'http' to 'email'.
      operationId: custom-hostname-for-a-zone-edit-custom-hostname
      parameters:
        - name: custom_hostname_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                custom_metadata:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_metadata
                custom_origin_server:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_origin_server
                custom_origin_sni:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_custom_origin_sni
                ssl:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_sslpost'
      responses:
        '200':
          description: Edit Custom Hostname response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
        4XX:
          description: Edit Custom Hostname response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_custom_hostname_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/custom_hostnames/fallback_origin:
    delete:
      tags:
        - Custom
        - Fallback
        - Host Names
        - Origin
        - Zones
      summary: 'Delete Fallback Origin For Custom Hostnames '
      operationId: >-
        custom-hostname-fallback-origin-for-a-zone-delete-fallback-origin-for-custom-hostnames
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Fallback Origin for Custom Hostnames response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_fallback_origin_response
        4XX:
          description: Delete Fallback Origin for Custom Hostnames response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_fallback_origin_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Custom
        - Fallback
        - Host Names
        - Origin
        - Zones
      summary: 'Get Fallback Origin For Custom Hostnames '
      operationId: >-
        custom-hostname-fallback-origin-for-a-zone-get-fallback-origin-for-custom-hostnames
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get Fallback Origin for Custom Hostnames response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_fallback_origin_response
        4XX:
          description: Get Fallback Origin for Custom Hostnames response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_fallback_origin_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Custom
        - Fallback
        - Host Names
        - Origin
        - Zones
      summary: 'Update Fallback Origin For Custom Hostnames '
      operationId: >-
        custom-hostname-fallback-origin-for-a-zone-update-fallback-origin-for-custom-hostnames
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - origin
              properties:
                origin:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_origin'
      responses:
        '200':
          description: Update Fallback Origin for Custom Hostnames response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_fallback_origin_response
        4XX:
          description: Update Fallback Origin for Custom Hostnames response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_fallback_origin_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/custom_ns:
    get:
      tags:
        - Accounts
        - Custom
        - Metadata
        - Nameservers
        - Related
        - Zones
      summary: 'Get Account Custom Nameserver Related Zone Metadata '
      description: |
        Get metadata for account-level custom nameservers on a zone.
      operationId: >-
        account-level-custom-nameservers-usage-for-a-zone-get-account-custom-nameserver-related-zone-metadata
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_schemas-identifier'
      responses:
        '200':
          description: Get Account Custom Nameserver Related Zone Metadata response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-custom-nameservers_get_response'
        4XX:
          description: Get Account Custom Nameserver Related Zone Metadata response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-custom-nameservers_get_response'
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Custom
        - Metadata
        - Nameservers
        - Related
        - Sets
        - Zones
      summary: 'Set Account Custom Nameserver Related Zone Metadata '
      description: >
        Set metadata for account-level custom nameservers on a zone.


        If you would like new zones in the account to use account custom
        nameservers by default, use PUT /accounts/:identifier to set the account
        setting use_account_custom_ns_by_default to true.
      operationId: >-
        account-level-custom-nameservers-usage-for-a-zone-set-account-custom-nameserver-related-zone-metadata
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-custom-nameservers_zone_metadata'
      responses:
        '200':
          description: Set Account Custom Nameserver Related Zone Metadata response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dns-custom-nameservers_schemas-empty_response
        4XX:
          description: Set Account Custom Nameserver Related Zone Metadata response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_schemas-empty_response
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/dcv_delegation/uuid:
    get:
      tags:
        - DCV
        - Dcv
        - Delegation
        - Unique
        - Uu
        - Zones
      summary: 'Retrieve The DCV Delegation Unique Identifier. '
      description: >-
        Retrieve the account and zone specific unique identifier used as part of
        the CNAME target for DCV Delegation.
      operationId: dcv-delegation-uuid-get
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Retrieve the DCV Delegation unique identifier response.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_dcv_delegation_response
        4XX:
          description: Retrieve the DCV Delegation unique identifier response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_dcv_delegation_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/dns_records:
    get:
      tags:
        - DNS
        - Records
        - Zones
      summary: 'List DNS Records '
      description: List, search, sort, and filter a zones' DNS records.
      operationId: dns-records-for-a-zone-list-dns-records
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
        - name: name
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_name'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_type'
        - name: content
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_content'
        - name: proxied
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_proxied'
        - name: match
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_match'
        - name: comment
          in: query
          schema:
            type: string
            description: >
              Exact value of the DNS record comment. This is a convenience alias
              for `comment.exact`.
            example: Hello, world
        - name: comment.present
          in: query
          schema:
            type: string
            description: >
              If this parameter is present, only records *with* a comment are
              returned.
        - name: comment.absent
          in: query
          schema:
            type: string
            description: >
              If this parameter is present, only records *without* a comment are
              returned.
        - name: comment.exact
          in: query
          schema:
            type: string
            description: >
              Exact value of the DNS record comment. Comment filters are
              case-insensitive.
            example: Hello, world
        - name: comment.contains
          in: query
          schema:
            type: string
            description: >
              Substring of the DNS record comment. Comment filters are
              case-insensitive.
            example: ello, worl
        - name: comment.startswith
          in: query
          schema:
            type: string
            description: >
              Prefix of the DNS record comment. Comment filters are
              case-insensitive.
            example: Hello, w
        - name: comment.endswith
          in: query
          schema:
            type: string
            description: >
              Suffix of the DNS record comment. Comment filters are
              case-insensitive.
            example: o, world
        - name: tag
          in: query
          schema:
            type: string
            description: >
              Condition on the DNS record tag.


              Parameter values can be of the form `<tag-name>:<tag-value>` to
              search for an exact `name:value` pair, or just `<tag-name>` to
              search for records with a specific tag name regardless of its
              value.


              This is a convenience shorthand for the more powerful
              `tag.<predicate>` parameters.

              Examples:

              - `tag=important` is equivalent to `tag.present=important`

              - `tag=team:DNS` is equivalent to `tag.exact=team:DNS`
            example: team:DNS
        - name: tag.present
          in: query
          schema:
            type: string
            description: >
              Name of a tag which must be present on the DNS record. Tag filters
              are case-insensitive.
            example: important
        - name: tag.absent
          in: query
          schema:
            type: string
            description: >
              Name of a tag which must *not* be present on the DNS record. Tag
              filters are case-insensitive.
            example: important
        - name: tag.exact
          in: query
          schema:
            type: string
            description: >
              A tag and value, of the form `<tag-name>:<tag-value>`. The API
              will only return DNS records that have a tag named `<tag-name>`
              whose value is `<tag-value>`. Tag filters are case-insensitive.
            example: greeting:Hello, world
        - name: tag.contains
          in: query
          schema:
            type: string
            description: >
              A tag and value, of the form `<tag-name>:<tag-value>`. The API
              will only return DNS records that have a tag named `<tag-name>`
              whose value contains `<tag-value>`. Tag filters are
              case-insensitive.
            example: greeting:ello, worl
        - name: tag.startswith
          in: query
          schema:
            type: string
            description: >
              A tag and value, of the form `<tag-name>:<tag-value>`. The API
              will only return DNS records that have a tag named `<tag-name>`
              whose value starts with `<tag-value>`. Tag filters are
              case-insensitive.
            example: greeting:Hello, w
        - name: tag.endswith
          in: query
          schema:
            type: string
            description: >
              A tag and value, of the form `<tag-name>:<tag-value>`. The API
              will only return DNS records that have a tag named `<tag-name>`
              whose value ends with `<tag-value>`. Tag filters are
              case-insensitive.
            example: greeting:o, world
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_search'
        - name: tag_match
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_tag_match'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_page'
        - name: per_page
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_per_page'
        - name: order
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_order'
        - name: direction
          in: query
          schema:
            $ref: '#/components/schemas/dns-records_direction'
      responses:
        '200':
          description: List DNS Records response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_dns_response_collection'
        4xx:
          description: List DNS Records response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-records_dns_response_collection'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - DNS
        - Record
        - Records
        - Zones
      summary: 'Create DNS Record '
      description: |
        Create a new DNS record for a zone.

        Notes:
        - A/AAAA records cannot exist on the same name as CNAME records.
        - NS records cannot exist on the same name as any other record type.
        - Domain names are always represented in Punycode, even if Unicode
          characters were used when creating the record.
      operationId: dns-records-for-a-zone-create-dns-record
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-records_dns-record'
      responses:
        '200':
          description: Create DNS Record response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_dns_response_single'
        4xx:
          description: Create DNS Record response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-records_dns_response_single'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/dns_records/{dns_record_id}:
    delete:
      tags:
        - DNS
        - Record
        - Records
        - Zones
      summary: 'Delete DNS Record '
      operationId: dns-records-for-a-zone-delete-dns-record
      parameters:
        - name: dns_record_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete DNS Record response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    properties:
                      id:
                        $ref: '#/components/schemas/dns-records_identifier'
        4xx:
          description: Delete DNS Record response failure
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/dns-records_identifier'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - DNS
        - Details
        - Record
        - Records
        - Zones
      summary: 'DNS Record Details '
      operationId: dns-records-for-a-zone-dns-record-details
      parameters:
        - name: dns_record_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      responses:
        '200':
          description: DNS Record Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_dns_response_single'
        4xx:
          description: DNS Record Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-records_dns_response_single'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - DNS
        - Record
        - Records
        - Zones
      summary: 'Update DNS Record '
      description: |
        Update an existing DNS record.
        Notes:
        - A/AAAA records cannot exist on the same name as CNAME records.
        - NS records cannot exist on the same name as any other record type.
        - Domain names are always represented in Punycode, even if Unicode
          characters were used when creating the record.
      operationId: dns-records-for-a-zone-patch-dns-record
      parameters:
        - name: dns_record_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-records_dns-record'
      responses:
        '200':
          description: Patch DNS Record response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_dns_response_single'
        4xx:
          description: Patch DNS Record response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-records_dns_response_single'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - DNS
        - Overwrite
        - Record
        - Records
        - Zones
      summary: 'Overwrite DNS Record '
      description: |
        Overwrite an existing DNS record.
        Notes:
        - A/AAAA records cannot exist on the same name as CNAME records.
        - NS records cannot exist on the same name as any other record type.
        - Domain names are always represented in Punycode, even if Unicode
          characters were used when creating the record.
      operationId: dns-records-for-a-zone-update-dns-record
      parameters:
        - name: dns_record_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-records_dns-record'
      responses:
        '200':
          description: Update DNS Record response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_dns_response_single'
        4xx:
          description: Update DNS Record response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-records_dns_response_single'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/dns_records/export:
    get:
      tags:
        - DNS
        - Exports
        - Records
        - Zones
      summary: 'Export DNS Records '
      description: >-
        You can export your [BIND
        config](https://en.wikipedia.org/wiki/Zone_file "Zone file") through
        this endpoint.


        See [the
        documentation](https://developers.cloudflare.com/dns/manage-dns-records/how-to/import-and-export/
        "Import and export records") for more information.
      operationId: dns-records-for-a-zone-export-dns-records
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      responses:
        '200':
          description: Export DNS Records response
          content:
            text/plain:
              schema:
                type: string
                description: Exported BIND zone file.
                example: |
                  www.example.com. 300 IN  A 127.0.0.1
        4XX:
          description: Export DNS Records response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/dns_records/import:
    post:
      tags:
        - DNS
        - Import
        - Records
        - Zones
      summary: 'Import DNS Records '
      description: >-
        You can upload your [BIND
        config](https://en.wikipedia.org/wiki/Zone_file "Zone file") through
        this endpoint. It assumes that cURL is called from a location with
        bind_config.txt (valid BIND config) present.


        See [the
        documentation](https://developers.cloudflare.com/dns/manage-dns-records/how-to/import-and-export/
        "Import and export records") for more information.
      operationId: dns-records-for-a-zone-import-dns-records
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  description: >
                    BIND config to import.


                    **Tip:** When using cURL, a file can be uploaded using
                    `--form 'file=@bind_config.txt'`.
                  example: www.example.com. 300 IN  A 127.0.0.1
                proxied:
                  type: string
                  description: >-
                    Whether or not proxiable records should receive the
                    performance and security benefits of Cloudflare.


                    The value should be either `true` or `false`.
                  default: 'false'
                  example: 'true'
      responses:
        '200':
          description: Import DNS Records response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_dns_response_import_scan'
        4XX:
          description: Import DNS Records response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-records_dns_response_import_scan'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/dns_records/scan:
    post:
      tags:
        - DNS
        - Records
        - Scans
        - Zones
      summary: 'Scan DNS Records '
      description: >-
        Scan for common DNS records on your domain and automatically add them to
        your zone. Useful if you haven't updated your nameservers yet.
      operationId: dns-records-for-a-zone-scan-dns-records
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-records_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Scan DNS Records response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-records_dns_response_import_scan'
        4XX:
          description: Scan DNS Records response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-records_dns_response_import_scan'
                  - $ref: >-
                      #/components/schemas/dns-records_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/dnssec:
    delete:
      tags:
        - DNS Security
        - DNSSEC
        - Records
        - Zones
      summary: 'Delete DNSSEC Records '
      description: Delete DNSSEC.
      operationId: dnssec-delete-dnssec-records
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dnssec_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete DNSSEC records response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_delete_dnssec_response_single'
        4XX:
          description: Delete DNSSEC records response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_delete_dnssec_response_single'
                  - $ref: '#/components/schemas/dnssec_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - DNS Security
        - DNSSEC
        - Details
        - Zones
      summary: 'DNSSEC Details '
      description: Details about DNSSEC status and configuration.
      operationId: dnssec-dnssec-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dnssec_identifier'
      responses:
        '200':
          description: DNSSEC Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_dnssec_response_single'
        4XX:
          description: DNSSEC Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_dnssec_response_single'
                  - $ref: '#/components/schemas/dnssec_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - DNS Security
        - DNSSEC
        - Edit
        - Status
        - Zones
      summary: 'Edit DNSSEC Status '
      description: Enable or disable DNSSEC.
      operationId: dnssec-edit-dnssec-status
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dnssec_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                dnssec_multi_signer:
                  $ref: '#/components/schemas/dnssec_dnssec_multi_signer'
                dnssec_presigned:
                  $ref: '#/components/schemas/dnssec_dnssec_presigned'
                status:
                  description: >-
                    Status of DNSSEC, based on user-desired state and presence
                    of necessary records.
                  enum:
                    - active
                    - disabled
                  example: active
      responses:
        '200':
          description: Edit DNSSEC Status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dnssec_dnssec_response_single'
        4XX:
          description: Edit DNSSEC Status response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dnssec_dnssec_response_single'
                  - $ref: '#/components/schemas/dnssec_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/firewall/access_rules/rules:
    get:
      tags:
        - Access
        - Firewall
        - IP
        - Rules
        - Zones
      summary: 'List IP Access Rules '
      description: >-
        Fetches IP Access rules of a zone. You can filter the results using
        several optional parameters.
      operationId: ip-access-rules-for-a-zone-list-ip-access-rules
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: filters
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-filters'
        - name: egs-pagination.json
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_egs-pagination'
        - name: page
          in: query
          schema:
            type: number
            description: Requested page within paginated list of results.
            example: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of results requested.
            example: 20
        - name: order
          in: query
          schema:
            type: string
            description: The field used to sort returned rules.
            enum:
              - configuration.target
              - configuration.value
              - mode
            example: mode
        - name: direction
          in: query
          schema:
            type: string
            description: The direction used to sort returned rules.
            enum:
              - asc
              - desc
            example: desc
      responses:
        '200':
          description: List IP Access rules response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_rule_collection_response'
        4xx:
          description: List IP Access rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_rule_collection_response'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Access
        - Firewall
        - IP
        - Rules
        - Zones
      summary: 'Create An IP Access Rule '
      description: >-
        Creates a new IP Access rule for a zone.


        Note: To create an IP Access rule that applies to multiple zones, refer
        to [IP Access rules for a user](#ip-access-rules-for-a-user) or [IP
        Access rules for an account](#ip-access-rules-for-an-account) as
        appropriate.
      operationId: ip-access-rules-for-a-zone-create-an-ip-access-rule
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - mode
                - configuration
                - notes
              properties:
                configuration:
                  $ref: '#/components/schemas/legacy-jhs_schemas-configuration'
                mode:
                  $ref: '#/components/schemas/legacy-jhs_schemas-mode'
                notes:
                  $ref: '#/components/schemas/legacy-jhs_notes'
      responses:
        '200':
          description: Create an IP Access rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_rule_single_response'
        4xx:
          description: Create an IP Access rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_rule_single_response'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_id}/firewall/access_rules/rules/{identifier}:
    delete:
      tags:
        - Access
        - Firewall
        - IP
        - Rules
        - Zones
      summary: 'Delete An IP Access Rule '
      description: >-
        Deletes an IP Access rule defined at the zone level.


        Optionally, you can use the `cascade` property to specify that you wish
        to delete similar rules in other zones managed by the same zone owner.
      operationId: ip-access-rules-for-a-zone-delete-an-ip-access-rule
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_rule_components-schemas-identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                cascade:
                  type: string
                  description: >-
                    The level to attempt to delete similar rules defined for
                    other zones with the same owner. The default value is
                    `none`, which will only delete the current rule. Using
                    `basic` will delete rules that match the same action (mode)
                    and configuration, while using `aggressive` will delete
                    rules that match the same configuration.
                  enum:
                    - none
                    - basic
                    - aggressive
                  default: none
      responses:
        '200':
          description: Delete an IP Access rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_rule_single_id_response'
        4xx:
          description: Delete an IP Access rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_rule_single_id_response'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    patch:
      tags:
        - Access
        - Firewall
        - IP
        - Rules
        - Zones
      summary: 'Update An IP Access Rule '
      description: >-
        Updates an IP Access rule defined at the zone level. You can only update
        the rule action (`mode` parameter) and notes.
      operationId: ip-access-rules-for-a-zone-update-an-ip-access-rule
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_rule_components-schemas-identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mode:
                  $ref: '#/components/schemas/legacy-jhs_schemas-mode'
                notes:
                  $ref: '#/components/schemas/legacy-jhs_notes'
      responses:
        '200':
          description: Update an IP Access rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_rule_single_response'
        4xx:
          description: Update an IP Access rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_rule_single_response'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_id}/firewall/waf/packages/{package_id}/groups:
    get:
      tags:
        - Firewall
        - Groups
        - Packages
        - Rules
        - WAF
        - Zones
      summary: 'List WAF Rule Groups '
      description: >-
        Fetches the WAF rule groups in a WAF package.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-rule-groups-list-waf-rule-groups
      parameters:
        - name: package_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_schemas-identifier'
        - name: mode
          in: query
          schema:
            $ref: '#/components/schemas/waf-managed-rules_mode'
        - name: page
          in: query
          schema:
            type: number
            description: The page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: The number of rule groups per page.
            default: 50
            minimum: 5
            maximum: 100
        - name: order
          in: query
          schema:
            description: The field used to sort returned rule groups.
            enum:
              - mode
              - rules_count
            example: mode
        - name: direction
          in: query
          schema:
            description: The direction used to sort returned rule groups.
            enum:
              - asc
              - desc
            example: desc
        - name: match
          in: query
          schema:
            description: >-
              When set to `all`, all the search requirements must match. When
              set to `any`, only one of the search requirements has to match.
            enum:
              - any
              - all
            default: all
        - name: name
          in: query
          schema:
            type: string
            description: The name of the rule group.
            example: Project Honey Pot
            readOnly: true
        - name: rules_count
          in: query
          schema:
            type: number
            description: The number of rules in the current rule group.
            default: 0
            example: 10
            readOnly: true
      responses:
        '200':
          description: List WAF rule groups response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/waf-managed-rules_rule_group_response_collection
        4XX:
          description: List WAF rule groups response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_rule_group_response_collection
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/firewall/waf/packages/{package_id}/groups/{group_id}:
    get:
      tags:
        - Firewall
        - Groups
        - Packages
        - Rules
        - WAF
        - Zones
      summary: 'Get A WAF Rule Group '
      description: >-
        Fetches the details of a WAF rule group.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-rule-groups-get-a-waf-rule-group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: package_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_schemas-identifier'
      responses:
        '200':
          description: Get a WAF rule group response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/waf-managed-rules_rule_group_response_single
        4XX:
          description: Get a WAF rule group response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_rule_group_response_single
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Firewall
        - Groups
        - Packages
        - Rules
        - WAF
        - Zones
      summary: 'Update A WAF Rule Group '
      description: >-
        Updates a WAF rule group. You can update the state (`mode` parameter) of
        a rule group.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-rule-groups-update-a-waf-rule-group
      parameters:
        - name: group_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: package_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mode:
                  $ref: '#/components/schemas/waf-managed-rules_mode'
      responses:
        '200':
          description: Update a WAF rule group response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/waf-managed-rules_rule_group_response_single
        4XX:
          description: Update a WAF rule group response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_rule_group_response_single
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/firewall/waf/packages/{package_id}/rules:
    get:
      tags:
        - Firewall
        - Packages
        - Rules
        - WAF
        - Zones
      summary: 'List WAF Rules '
      description: >-
        Fetches WAF rules in a WAF package.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-rules-list-waf-rules
      parameters:
        - name: package_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_schemas-identifier'
        - name: mode
          in: query
          schema:
            type: string
            description: The action/mode a rule has been overridden to perform.
            enum:
              - DIS
              - CHL
              - BLK
              - SIM
            example: CHL
        - name: group_id
          in: query
          schema:
            $ref: >-
              #/components/schemas/waf-managed-rules_components-schemas-identifier
        - name: page
          in: query
          schema:
            type: number
            description: The page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: The number of rules per page.
            default: 50
            minimum: 5
            maximum: 100
        - name: order
          in: query
          schema:
            type: string
            description: The field used to sort returned rules.
            enum:
              - priority
              - group_id
              - description
            example: status
        - name: direction
          in: query
          schema:
            type: string
            description: The direction used to sort returned rules.
            enum:
              - asc
              - desc
            example: desc
        - name: match
          in: query
          schema:
            type: string
            description: >-
              When set to `all`, all the search requirements must match. When
              set to `any`, only one of the search requirements has to match.
            enum:
              - any
              - all
            default: all
        - name: description
          in: query
          schema:
            type: string
            description: The public description of the WAF rule.
            example: SQL injection prevention for SELECT statements
            readOnly: true
        - name: priority
          in: query
          schema:
            type: string
            description: >-
              The order in which the individual WAF rule is executed within its
              rule group.
            readOnly: true
      responses:
        '200':
          description: List WAF rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/waf-managed-rules_rule_response_collection
        4XX:
          description: List WAF rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_rule_response_collection
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/firewall/waf/packages/{package_id}/rules/{rule_id}:
    get:
      tags:
        - Firewall
        - Packages
        - Rules
        - WAF
        - Zones
      summary: 'Get A WAF Rule '
      description: >-
        Fetches the details of a WAF rule in a WAF package.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-rules-get-a-waf-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: package_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_schemas-identifier'
      responses:
        '200':
          description: Get a WAF rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waf-managed-rules_rule_response_single'
        4XX:
          description: Get a WAF rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_rule_response_single
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Firewall
        - Packages
        - Rules
        - WAF
        - Zones
      summary: 'Update A WAF Rule '
      description: >-
        Updates a WAF rule. You can only update the mode/action of the rule.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-rules-update-a-waf-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: package_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waf-managed-rules_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mode:
                  description: >-
                    The mode/action of the rule when triggered. You must use a
                    value from the `allowed_modes` array of the current rule.
                  enum:
                    - default
                    - disable
                    - simulate
                    - block
                    - challenge
                    - 'on'
                    - 'off'
                  example: 'on'
      responses:
        '200':
          description: Update a WAF rule response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_rule_response_single
                  - properties:
                      result:
                        oneOf:
                          - $ref: >-
                              #/components/schemas/waf-managed-rules_anomaly_rule
                          - $ref: >-
                              #/components/schemas/waf-managed-rules_traditional_deny_rule
                          - $ref: >-
                              #/components/schemas/waf-managed-rules_traditional_allow_rule
        4XX:
          description: Update a WAF rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/waf-managed-rules_rule_response_single
                      - properties:
                          result:
                            oneOf:
                              - $ref: >-
                                  #/components/schemas/waf-managed-rules_anomaly_rule
                              - $ref: >-
                                  #/components/schemas/waf-managed-rules_traditional_deny_rule
                              - $ref: >-
                                  #/components/schemas/waf-managed-rules_traditional_allow_rule
                  - $ref: >-
                      #/components/schemas/waf-managed-rules_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/hold:
    delete:
      tags:
        - Hold
        - Removes
        - Zones
      summary: 'Remove Zone Hold '
      description: >-
        Stop enforcement of a zone hold on the zone, permanently or temporarily,
        allowing the

        creation and activation of zones with this zone's hostname.
      operationId: zones-0-hold-delete
      parameters:
        - name: zone_id
          in: path
          description: Zone ID
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
        - name: hold_after
          in: query
          description: |-
            If `hold_after` is provided, the hold will be temporarily disabled,
            then automatically re-enabled by the system at the time specified
            in this RFC3339-formatted timestamp. Otherwise, the hold will be
            disabled indefinitely.
          schema:
            type: string
          example: '2023-01-31T15:56:36+00:00'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          hold:
                            type: boolean
                            example: false
                          hold_after:
                            type: string
                          include_subdomains:
                            type: string
                            example: false
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Hold
        - Zones
      summary: 'Get Zone Hold '
      description: >-
        Retrieve whether the zone is subject to a zone hold, and metadata about
        the hold.
      operationId: zones-0-hold-get
      parameters:
        - name: zone_id
          in: path
          description: Zone ID
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_api-response-single'
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          hold:
                            type: boolean
                            example: true
                          hold_after:
                            type: string
                            example: '2023-01-31T15:56:36+00:00'
                          include_subdomains:
                            type: string
                            example: false
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Hold
        - Zones
      summary: 'Create Zone Hold '
      description: >-
        Enforce a zone hold on the zone, blocking the creation and activation of
        zones with this zone's hostname.
      operationId: zones-0-hold-post
      parameters:
        - name: zone_id
          in: path
          description: Zone ID
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
        - name: include_subdomains
          in: query
          description: >-
            If provided, the zone hold will extend to block any subdomain of the
            given zone, as well

            as SSL4SaaS Custom Hostnames. For example, a zone hold on a zone
            with the hostname

            'example.com' and include_subdomains=true will block 'example.com',

            'staging.example.com', 'api.staging.example.com', etc.
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_api-response-single'
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          hold:
                            type: boolean
                            example: true
                          hold_after:
                            type: string
                            example: '2023-01-31T15:56:36+00:00'
                          include_subdomains:
                            type: string
                            example: true
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/hostnames/settings/{setting_id}:
    get:
      tags:
        - Host Names
        - Settings
        - TLS
        - Zones
      summary: 'List TLS Setting For Hostnames '
      description: List the requested TLS setting for the hostnames under this zone.
      operationId: per-hostname-tls-settings-list
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: setting_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_setting_id'
      responses:
        '200':
          description: List per-hostname TLS settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_per_hostname_settings_response_collection
        4XX:
          description: List per-hostname TLS settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_per_hostname_settings_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/hostnames/settings/{setting_id}/{hostname}:
    delete:
      tags:
        - Host Names
        - Settings
        - TLS
        - Zones
      summary: 'Delete TLS Setting For Hostname '
      description: Delete the tls setting value for the hostname.
      operationId: per-hostname-tls-settings-delete
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: setting_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_setting_id'
        - name: hostname
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/tls-certificates-and-hostnames_components-schemas-hostname
      responses:
        '200':
          description: Delete TLS setting for hostname response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_per_hostname_settings_response_delete
        4XX:
          description: Delete TLS setting for hostname response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_per_hostname_settings_response_delete
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Edit
        - Host Names
        - Settings
        - TLS
        - Zones
      summary: 'Edit TLS Setting For Hostname '
      description: Update the tls setting value for the hostname.
      operationId: per-hostname-tls-settings-put
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: setting_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_setting_id'
        - name: hostname
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/tls-certificates-and-hostnames_components-schemas-hostname
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_value'
      responses:
        '200':
          description: Edit TLS setting for hostname response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_per_hostname_settings_response
        4XX:
          description: Edit TLS setting for hostname response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_per_hostname_settings_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/keyless_certificates:
    get:
      tags:
        - Certificates
        - Configurations
        - Keyless
        - SSL
        - Zones
      summary: 'List Keyless SSL Configurations '
      description: List all Keyless SSL configurations for a given zone.
      operationId: keyless-ssl-for-a-zone-list-keyless-ssl-configurations
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: List Keyless SSL Configurations response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_keyless_response_collection
        4XX:
          description: List Keyless SSL Configurations response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_keyless_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Certificates
        - Configurations
        - Keyless
        - SSL
        - Zones
      summary: 'Create Keyless SSL Configuration '
      operationId: keyless-ssl-for-a-zone-create-keyless-ssl-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - host
                - port
                - certificate
              properties:
                bundle_method:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_bundle_method
                certificate:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-certificate
                host:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_host'
                name:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_name_write
                port:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_port'
                tunnel:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_keyless_tunnel
      responses:
        '200':
          description: Create Keyless SSL Configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_keyless_response_single
        4XX:
          description: Create Keyless SSL Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_keyless_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/keyless_certificates/{keyless_certificate_id}:
    delete:
      tags:
        - Certificates
        - Configurations
        - Keyless
        - SSL
        - Zones
      summary: 'Delete Keyless SSL Configuration '
      operationId: keyless-ssl-for-a-zone-delete-keyless-ssl-configuration
      parameters:
        - name: keyless_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Keyless SSL Configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_keyless_response_single_id
        4XX:
          description: Delete Keyless SSL Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_keyless_response_single_id
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Certificates
        - Configurations
        - Keyless
        - SSL
        - Zones
      summary: 'Get Keyless SSL Configuration '
      description: Get details for one Keyless SSL configuration.
      operationId: keyless-ssl-for-a-zone-get-keyless-ssl-configuration
      parameters:
        - name: keyless_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get Keyless SSL Configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_keyless_response_single
        4XX:
          description: Get Keyless SSL Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_keyless_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Certificates
        - Configurations
        - Edit
        - Keyless
        - SSL
        - Zones
      summary: 'Edit Keyless SSL Configuration '
      description: >-
        This will update attributes of a Keyless SSL. Consists of one or more of
        the following:  host,name,port.
      operationId: keyless-ssl-for-a-zone-edit-keyless-ssl-configuration
      parameters:
        - name: keyless_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_enabled_write
                host:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_host'
                name:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_name_write
                port:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_port'
                tunnel:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_keyless_tunnel
      responses:
        '200':
          description: Edit Keyless SSL Configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_keyless_response_single
        4XX:
          description: Edit Keyless SSL Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_keyless_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/load_balancers:
    get:
      tags:
        - Balancers
        - Load
        - Zones
      summary: 'List Load Balancers '
      description: List configured load balancers.
      operationId: load-balancers-list-load-balancers
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
      responses:
        '200':
          description: List Load Balancers response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_load-balancer_components-schemas-response_collection
        4XX:
          description: List Load Balancers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_load-balancer_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Balancer
        - Balancers
        - Load
        - Zones
      summary: 'Create Load Balancer '
      description: Create a new load balancer.
      operationId: load-balancers-create-load-balancer
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - default_pools
                - fallback_pool
              properties:
                adaptive_routing:
                  $ref: '#/components/schemas/load-balancing_adaptive_routing'
                country_pools:
                  $ref: '#/components/schemas/load-balancing_country_pools'
                default_pools:
                  $ref: '#/components/schemas/load-balancing_default_pools'
                description:
                  $ref: >-
                    #/components/schemas/load-balancing_components-schemas-description
                fallback_pool:
                  $ref: '#/components/schemas/load-balancing_fallback_pool'
                location_strategy:
                  $ref: '#/components/schemas/load-balancing_location_strategy'
                name:
                  $ref: '#/components/schemas/load-balancing_components-schemas-name'
                pop_pools:
                  $ref: '#/components/schemas/load-balancing_pop_pools'
                proxied:
                  $ref: '#/components/schemas/load-balancing_proxied'
                random_steering:
                  $ref: '#/components/schemas/load-balancing_random_steering'
                region_pools:
                  $ref: '#/components/schemas/load-balancing_region_pools'
                rules:
                  $ref: '#/components/schemas/load-balancing_rules'
                session_affinity:
                  $ref: '#/components/schemas/load-balancing_session_affinity'
                session_affinity_attributes:
                  $ref: >-
                    #/components/schemas/load-balancing_session_affinity_attributes
                session_affinity_ttl:
                  $ref: '#/components/schemas/load-balancing_session_affinity_ttl'
                steering_policy:
                  $ref: '#/components/schemas/load-balancing_steering_policy'
                ttl:
                  $ref: '#/components/schemas/load-balancing_ttl'
      responses:
        '200':
          description: Create Load Balancer response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
        4XX:
          description: Create Load Balancer response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/load_balancers/{load_balancer_id}:
    delete:
      tags:
        - Balancer
        - Balancers
        - Load
        - Zones
      summary: 'Delete Load Balancer '
      description: Delete a configured load balancer.
      operationId: load-balancers-delete-load-balancer
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
        - name: load_balancer_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Load Balancer response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_components-schemas-id_response
        4XX:
          description: Delete Load Balancer response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_components-schemas-id_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Balancer
        - Balancers
        - Details
        - Load
        - Zones
      summary: 'Load Balancer Details '
      description: Fetch a single configured load balancer.
      operationId: load-balancers-load-balancer-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
        - name: load_balancer_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
      responses:
        '200':
          description: Load Balancer Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
        4XX:
          description: Load Balancer Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Balancer
        - Balancers
        - Load
        - Patch
        - Zones
      summary: 'Patch Load Balancer '
      description: >-
        Apply changes to an existing load balancer, overwriting the supplied
        properties.
      operationId: load-balancers-patch-load-balancer
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
        - name: load_balancer_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                adaptive_routing:
                  $ref: '#/components/schemas/load-balancing_adaptive_routing'
                country_pools:
                  $ref: '#/components/schemas/load-balancing_country_pools'
                default_pools:
                  $ref: '#/components/schemas/load-balancing_default_pools'
                description:
                  $ref: >-
                    #/components/schemas/load-balancing_components-schemas-description
                enabled:
                  $ref: >-
                    #/components/schemas/load-balancing_components-schemas-enabled
                fallback_pool:
                  $ref: '#/components/schemas/load-balancing_fallback_pool'
                location_strategy:
                  $ref: '#/components/schemas/load-balancing_location_strategy'
                name:
                  $ref: '#/components/schemas/load-balancing_components-schemas-name'
                pop_pools:
                  $ref: '#/components/schemas/load-balancing_pop_pools'
                proxied:
                  $ref: '#/components/schemas/load-balancing_proxied'
                random_steering:
                  $ref: '#/components/schemas/load-balancing_random_steering'
                region_pools:
                  $ref: '#/components/schemas/load-balancing_region_pools'
                rules:
                  $ref: '#/components/schemas/load-balancing_rules'
                session_affinity:
                  $ref: '#/components/schemas/load-balancing_session_affinity'
                session_affinity_attributes:
                  $ref: >-
                    #/components/schemas/load-balancing_session_affinity_attributes
                session_affinity_ttl:
                  $ref: '#/components/schemas/load-balancing_session_affinity_ttl'
                steering_policy:
                  $ref: '#/components/schemas/load-balancing_steering_policy'
                ttl:
                  $ref: '#/components/schemas/load-balancing_ttl'
      responses:
        '200':
          description: Patch Load Balancer response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
        4XX:
          description: Patch Load Balancer response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Balancer
        - Balancers
        - Load
        - Zones
      summary: 'Update Load Balancer '
      description: Update a configured load balancer.
      operationId: load-balancers-update-load-balancer
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
        - name: load_balancer_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/load-balancing_load-balancer_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - default_pools
                - fallback_pool
              properties:
                adaptive_routing:
                  $ref: '#/components/schemas/load-balancing_adaptive_routing'
                country_pools:
                  $ref: '#/components/schemas/load-balancing_country_pools'
                default_pools:
                  $ref: '#/components/schemas/load-balancing_default_pools'
                description:
                  $ref: >-
                    #/components/schemas/load-balancing_components-schemas-description
                enabled:
                  $ref: >-
                    #/components/schemas/load-balancing_components-schemas-enabled
                fallback_pool:
                  $ref: '#/components/schemas/load-balancing_fallback_pool'
                location_strategy:
                  $ref: '#/components/schemas/load-balancing_location_strategy'
                name:
                  $ref: '#/components/schemas/load-balancing_components-schemas-name'
                pop_pools:
                  $ref: '#/components/schemas/load-balancing_pop_pools'
                proxied:
                  $ref: '#/components/schemas/load-balancing_proxied'
                random_steering:
                  $ref: '#/components/schemas/load-balancing_random_steering'
                region_pools:
                  $ref: '#/components/schemas/load-balancing_region_pools'
                rules:
                  $ref: '#/components/schemas/load-balancing_rules'
                session_affinity:
                  $ref: '#/components/schemas/load-balancing_session_affinity'
                session_affinity_attributes:
                  $ref: >-
                    #/components/schemas/load-balancing_session_affinity_attributes
                session_affinity_ttl:
                  $ref: '#/components/schemas/load-balancing_session_affinity_ttl'
                steering_policy:
                  $ref: '#/components/schemas/load-balancing_steering_policy'
                ttl:
                  $ref: '#/components/schemas/load-balancing_ttl'
      responses:
        '200':
          description: Update Load Balancer response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
        4XX:
          description: Update Load Balancer response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_load-balancer_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_id}/logpush/datasets/{dataset_id}/fields:
    get:
      tags:
        - Datasets
        - Fields
        - Log Push
        - Zones
      summary: 'List Fields '
      description: >-
        Lists all fields available for a dataset. The response result is an
        object with key-value pairs, where keys are field names, and values are
        descriptions.
      operationId: get-zones-zone_identifier-logpush-datasets-dataset-fields
      parameters:
        - name: dataset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_dataset'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: List fields response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_field_response_collection'
        4XX:
          description: List fields response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_logpush_field_response_collection
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/datasets/{dataset_id}/jobs:
    get:
      tags:
        - Datasets
        - Jobs
        - Log Push
        - Zones
      summary: 'List Logpush Jobs For A Dataset '
      description: Lists Logpush jobs for a zone for a dataset.
      operationId: get-zones-zone_identifier-logpush-datasets-dataset-jobs
      parameters:
        - name: dataset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_dataset'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: List Logpush jobs for a dataset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_collection'
        4XX:
          description: List Logpush jobs for a dataset response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_logpush_job_response_collection
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/edge:
    get:
      tags:
        - Edge
        - Instant
        - Jobs
        - Log Push
        - Logs
        - Zones
      summary: 'List Instant Logs Jobs '
      description: Lists Instant Logs jobs for a zone.
      operationId: get-zones-zone_identifier-logpush-edge-jobs
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: List Instant Logs jobs response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/logpush_instant_logs_job_response_collection
        4XX:
          description: List Instant Logs jobs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_instant_logs_job_response_collection
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Edge
        - Instant
        - Jobs
        - Log Push
        - Logs
        - Zones
      summary: 'Create Instant Logs Job '
      description: Creates a new Instant Logs job for a zone.
      operationId: post-zones-zone_identifier-logpush-edge-jobs
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                fields:
                  $ref: '#/components/schemas/logpush_fields'
                filter:
                  $ref: '#/components/schemas/logpush_filter'
                sample:
                  $ref: '#/components/schemas/logpush_sample'
      responses:
        '200':
          description: Create Instant Logs job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_instant_logs_job_response_single'
        4XX:
          description: Create Instant Logs job response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_instant_logs_job_response_single
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/jobs:
    get:
      tags:
        - Jobs
        - Log Push
        - Zones
      summary: 'List Logpush Jobs '
      description: Lists Logpush jobs for a zone.
      operationId: get-zones-zone_identifier-logpush-jobs
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: List Logpush jobs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_collection'
        4XX:
          description: List Logpush jobs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_logpush_job_response_collection
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Jobs
        - Log Push
        - Zones
      summary: 'Create Logpush Job '
      description: Creates a new Logpush job for a zone.
      operationId: post-zones-zone_identifier-logpush-jobs
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
              properties:
                dataset:
                  $ref: '#/components/schemas/logpush_dataset'
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
                enabled:
                  $ref: '#/components/schemas/logpush_enabled'
                frequency:
                  $ref: '#/components/schemas/logpush_frequency'
                logpull_options:
                  $ref: '#/components/schemas/logpush_logpull_options'
                name:
                  $ref: '#/components/schemas/logpush_name'
                output_options:
                  $ref: '#/components/schemas/logpush_output_options'
                ownership_challenge:
                  $ref: '#/components/schemas/logpush_ownership_challenge'
      responses:
        '200':
          description: Create Logpush job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_single'
        4XX:
          description: Create Logpush job response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_logpush_job_response_single'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/jobs/{job_id}:
    delete:
      tags:
        - Jobs
        - Log Push
        - Zones
      summary: 'Delete Logpush Job '
      description: Deletes a Logpush job.
      operationId: delete-zones-zone_identifier-logpush-jobs-job_identifier
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_id'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Logpush job response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_api-response-common'
                  - properties:
                      result:
                        type: object
                        example: {}
                        nullable: true
        4XX:
          description: Delete Logpush job response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/logpush_api-response-common'
                      - properties:
                          result:
                            type: object
                            example: {}
                            nullable: true
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Details
        - Jobs
        - Log Push
        - Zones
      summary: 'Get Logpush Job Details '
      description: Gets the details of a Logpush job.
      operationId: get-zones-zone_identifier-logpush-jobs-job_identifier
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_id'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: Get Logpush job details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_single'
        4XX:
          description: Get Logpush job details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_logpush_job_response_single'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Jobs
        - Log Push
        - Zones
      summary: 'Update Logpush Job '
      description: Updates a Logpush job.
      operationId: put-zones-zone_identifier-logpush-jobs-job_identifier
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_id'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
                enabled:
                  $ref: '#/components/schemas/logpush_enabled'
                frequency:
                  $ref: '#/components/schemas/logpush_frequency'
                logpull_options:
                  $ref: '#/components/schemas/logpush_logpull_options'
                output_options:
                  $ref: '#/components/schemas/logpush_output_options'
                ownership_challenge:
                  $ref: '#/components/schemas/logpush_ownership_challenge'
      responses:
        '200':
          description: Update Logpush job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_single'
        4XX:
          description: Update Logpush job response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_logpush_job_response_single'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/ownership:
    post:
      tags:
        - Challenges
        - Log Push
        - Ownership
        - Zones
      summary: 'Get Ownership Challenge '
      description: Gets a new ownership challenge sent to your destination.
      operationId: post-zones-zone_identifier-logpush-ownership
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
      responses:
        '200':
          description: Get ownership challenge response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_get_ownership_response'
        4XX:
          description: Get ownership challenge response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_get_ownership_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/ownership/validate:
    post:
      tags:
        - Ate
        - Challenges
        - Log Push
        - Ownership
        - Val
        - Validate
        - Zones
      summary: 'Validate Ownership Challenge '
      description: Validates ownership challenge of the destination.
      operationId: post-zones-zone_identifier-logpush-ownership-validate
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
                - ownership_challenge
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
                ownership_challenge:
                  $ref: '#/components/schemas/logpush_ownership_challenge'
      responses:
        '200':
          description: Validate ownership challenge response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_validate_ownership_response'
        4XX:
          description: Validate ownership challenge response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_validate_ownership_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/validate/destination/exists:
    post:
      tags:
        - Ate
        - Checks
        - Destinations
        - Exists
        - Log Push
        - Val
        - Zones
      summary: 'Check Destination Exists '
      description: Checks if there is an existing job with a destination.
      operationId: post-zones-zone_identifier-logpush-validate-destination-exists
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
      responses:
        '200':
          description: Check destination exists response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_destination_exists_response'
        4XX:
          description: Check destination exists response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_destination_exists_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/logpush/validate/origin:
    post:
      tags:
        - Ate
        - Log Push
        - Origin
        - Val
        - Validate
        - Zones
      summary: 'Validate Origin '
      description: Validates logpull origin with logpull_options.
      operationId: post-zones-zone_identifier-logpush-validate-origin
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - logpull_options
              properties:
                logpull_options:
                  $ref: '#/components/schemas/logpush_logpull_options'
      responses:
        '200':
          description: Validate origin response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_validate_response'
        4XX:
          description: Validate origin response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_validate_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/managed_headers:
    get:
      tags:
        - Headers
        - Managed
        - Transforms
        - Zones
      summary: 'List Managed Transforms '
      description: Fetches a list of all Managed Transforms.
      operationId: managed-transforms-list-managed-transforms
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_identifier'
      responses:
        '200':
          description: List Managed Transforms response
          content:
            application/json:
              schema:
                type: object
                properties:
                  managed_request_headers:
                    $ref: '#/components/schemas/rulesets_request_list'
                  managed_response_headers:
                    $ref: '#/components/schemas/rulesets_request_list'
        4XX:
          description: List Managed Transforms response failure
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      managed_request_headers:
                        $ref: '#/components/schemas/rulesets_request_list'
                      managed_response_headers:
                        $ref: '#/components/schemas/rulesets_request_list'
                  - $ref: '#/components/schemas/rulesets_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Headers
        - Managed
        - Status
        - Transforms
        - Zones
      summary: 'Update Status Of Managed Transforms '
      description: Updates the status of one or more Managed Transforms.
      operationId: managed-transforms-update-status-of-managed-transforms
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - managed_request_headers
                - managed_response_headers
              properties:
                managed_request_headers:
                  $ref: '#/components/schemas/rulesets_request_list'
                managed_response_headers:
                  $ref: '#/components/schemas/rulesets_request_list'
      responses:
        '200':
          description: Update status of Managed Transforms response
          content:
            application/json:
              schema:
                type: object
                properties:
                  managed_request_headers:
                    $ref: '#/components/schemas/rulesets_response_list'
                  managed_response_headers:
                    $ref: '#/components/schemas/rulesets_response_list'
        4XX:
          description: Update status of Managed Transforms response failure
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      managed_request_headers:
                        $ref: '#/components/schemas/rulesets_response_list'
                      managed_response_headers:
                        $ref: '#/components/schemas/rulesets_response_list'
                  - $ref: '#/components/schemas/rulesets_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/origin_tls_client_auth:
    get:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Origin
        - Tls
        - Zones
      summary: 'List Certificates '
      operationId: zone-level-authenticated-origin-pulls-list-certificates
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: List Certificates response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_collection
        4XX:
          description: List Certificates response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Origin
        - Tls
        - Uploads
        - Zones
      summary: 'Upload Certificate '
      description: >-
        Upload your own certificate you want Cloudflare to use for
        edge-to-origin communication to override the shared certificate. Please
        note that it is important to keep only one certificate active. Also,
        make sure to enable zone-level authenticated origin pulls by making a
        PUT call to settings endpoint to see the uploaded certificate in use.
      operationId: zone-level-authenticated-origin-pulls-upload-certificate
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificate
                - private_key
              properties:
                certificate:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_zone-authenticated-origin-pull_components-schemas-certificate
                private_key:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_private_key
      responses:
        '200':
          description: Upload Certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
        4XX:
          description: Upload Certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/origin_tls_client_auth/{certificate_id}:
    delete:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Origin
        - Tls
        - Zones
      summary: 'Delete Certificate '
      operationId: zone-level-authenticated-origin-pulls-delete-certificate
      parameters:
        - name: certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
        4XX:
          description: Delete Certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Details
        - Origin
        - Tls
        - Zones
      summary: 'Get Certificate Details '
      operationId: zone-level-authenticated-origin-pulls-get-certificate-details
      parameters:
        - name: certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get Certificate Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
        4XX:
          description: Get Certificate Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/origin_tls_client_auth/hostnames:
    put:
      tags:
        - Authentication
        - Clients
        - Disable
        - Enable
        - Host Names
        - Origin
        - Tls
        - Zones
      summary: 'Enable Or Disable A Hostname For Client Authentication '
      description: >-
        Associate a hostname to a certificate and enable, disable or invalidate
        the association. If disabled, client certificate will not be sent to the
        hostname even if activated at the zone level. 100 maximum associations
        on a single certificate are allowed. Note: Use a null value for
        parameter *enabled* to invalidate the association.
      operationId: >-
        per-hostname-authenticated-origin-pull-enable-or-disable-a-hostname-for-client-authentication
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - config
              properties:
                config:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_config'
      responses:
        '200':
          description: Enable or Disable a Hostname for Client Authentication response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_hostname_aop_response_collection
        4XX:
          description: >-
            Enable or Disable a Hostname for Client Authentication response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_hostname_aop_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/origin_tls_client_auth/hostnames/{hostname}:
    get:
      tags:
        - Authentication
        - Clients
        - Host Names
        - Origin
        - Status
        - Tls
        - Zones
      summary: 'Get The Hostname Status For Client Authentication '
      operationId: >-
        per-hostname-authenticated-origin-pull-get-the-hostname-status-for-client-authentication
      parameters:
        - name: hostname
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/tls-certificates-and-hostnames_schemas-hostname
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get the Hostname Status for Client Authentication response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_hostname_aop_single_response
        4XX:
          description: Get the Hostname Status for Client Authentication response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_hostname_aop_single_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/origin_tls_client_auth/hostnames/certificates:
    get:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Host Names
        - Origin
        - Tls
        - Zones
      summary: 'List Certificates '
      operationId: per-hostname-authenticated-origin-pull-list-certificates
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: List Certificates response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_hostname-authenticated-origin-pull_components-schemas-certificate_response_collection
        4XX:
          description: List Certificates response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_hostname-authenticated-origin-pull_components-schemas-certificate_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Host Names
        - Origin
        - Tls
        - Uploads
        - Zones
      summary: 'Upload A Hostname Client Certificate '
      description: >-
        Upload a certificate to be used for client authentication on a hostname.
        10 hostname certificates per zone are allowed.
      operationId: >-
        per-hostname-authenticated-origin-pull-upload-a-hostname-client-certificate
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificate
                - private_key
              properties:
                certificate:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_hostname-authenticated-origin-pull_components-schemas-certificate
                private_key:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-private_key
      responses:
        '200':
          description: Upload a Hostname Client Certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_single
        4XX:
          description: Upload a Hostname Client Certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/origin_tls_client_auth/hostnames/certificates/{certificate_id}:
    delete:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Host Names
        - Origin
        - Tls
        - Zones
      summary: 'Delete Hostname Client Certificate '
      operationId: >-
        per-hostname-authenticated-origin-pull-delete-hostname-client-certificate
      parameters:
        - name: certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Hostname Client Certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_single
        4XX:
          description: Delete Hostname Client Certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Authentication
        - Certificates
        - Clients
        - Host Names
        - Origin
        - Tls
        - Zones
      summary: 'Get The Hostname Client Certificate '
      description: >-
        Get the certificate by ID to be used for client authentication on a
        hostname.
      operationId: >-
        per-hostname-authenticated-origin-pull-get-the-hostname-client-certificate
      parameters:
        - name: certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get the Hostname Client Certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_single
        4XX:
          description: Get the Hostname Client Certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/origin_tls_client_auth/settings:
    get:
      tags:
        - Authentication
        - Clients
        - Enablement
        - Origin
        - Settings
        - Tls
        - Zones
      summary: 'Get Enablement Setting For Zone '
      description: >-
        Get whether zone-level authenticated origin pulls is enabled or not. It
        is false by default.
      operationId: zone-level-authenticated-origin-pulls-get-enablement-setting-for-zone
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get Enablement Setting for Zone response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_enabled_response
        4XX:
          description: Get Enablement Setting for Zone response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_enabled_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Authentication
        - Clients
        - Enablement
        - Origin
        - Sets
        - Settings
        - Tls
        - Zones
      summary: 'Set Enablement For Zone '
      description: >-
        Enable or disable zone-level authenticated origin pulls. 'enabled'
        should be set true either before/after the certificate is uploaded to
        see the certificate in use.
      operationId: zone-level-authenticated-origin-pulls-set-enablement-for-zone
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - enabled
              properties:
                enabled:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_zone-authenticated-origin-pull_components-schemas-enabled
      responses:
        '200':
          description: Set Enablement for Zone response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_enabled_response
        4XX:
          description: Set Enablement for Zone response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_enabled_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/page_shield:
    get:
      tags:
        - Page
        - Settings
        - Shield
        - Zones
      summary: 'Get Page Shield Settings '
      description: Fetches the Page Shield settings.
      operationId: page-shield-get-page-shield-settings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
      responses:
        '200':
          description: Get Page Shield settings response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/page-shield_zone_settings_response_single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/page-shield_get-zone-settings-response
        4XX:
          description: Get Page Shield settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/page-shield_zone_settings_response_single
                      - properties:
                          result:
                            $ref: >-
                              #/components/schemas/page-shield_get-zone-settings-response
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Page
        - Settings
        - Shield
        - Zones
      summary: 'Update Page Shield Settings '
      description: Updates Page Shield settings.
      operationId: page-shield-update-page-shield-settings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                enabled:
                  $ref: '#/components/schemas/page-shield_enabled'
                use_cloudflare_reporting_endpoint:
                  $ref: >-
                    #/components/schemas/page-shield_use_cloudflare_reporting_endpoint
                use_connection_url_path:
                  $ref: '#/components/schemas/page-shield_use_connection_url_path'
      responses:
        '200':
          description: Update Page Shield settings response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/page-shield_zone_settings_response_single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/page-shield_update-zone-settings-response
        4XX:
          description: Update Page Shield settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/page-shield_zone_settings_response_single
                      - properties:
                          result:
                            $ref: >-
                              #/components/schemas/page-shield_update-zone-settings-response
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/page_shield/connections:
    get:
      tags:
        - Connections
        - Page
        - Shield
        - Zones
      summary: 'List Page Shield Connections '
      description: Lists all connections detected by Page Shield.
      operationId: page-shield-list-page-shield-connections
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
        - name: exclude_urls
          in: query
          schema:
            type: string
            description: >
              Excludes connections whose URL contains one of the URL-encoded
              URLs separated by commas.
            example: blog.cloudflare.com,www.example
        - name: urls
          in: query
          schema:
            type: string
            description: >
              Includes connections whose URL contain one or more URL-encoded
              URLs separated by commas.
            example: blog.cloudflare.com,www.example
        - name: hosts
          in: query
          schema:
            type: string
            description: >
              Includes connections that match one or more URL-encoded hostnames
              separated by commas.


              Wildcards are supported at the start and end of each hostname to
              support starts with, ends with

              and contains. If no wildcards are used, results will be filtered
              by exact match
            example: blog.cloudflare.com,www.example*,*cloudflare.com
        - name: page
          in: query
          schema:
            type: string
            description: >
              The current page number of the paginated results.


              We additionally support a special value "all". When "all" is used,
              the API will return all the connections

              with the applied filters in a single page. Additionally, when
              using this value, the API will not return

              the categorisation data for the URL and domain of the connections.
              This feature is best-effort and it may

              only work for zones with a low number of connections
            example: 2
        - name: per_page
          in: query
          schema:
            type: number
            description: The number of results per page.
            example: 100
            minimum: 1
            maximum: 100
        - name: order_by
          in: query
          schema:
            type: string
            description: The field used to sort returned connections.
            enum:
              - first_seen_at
              - last_seen_at
            example: first_seen_at
        - name: direction
          in: query
          schema:
            type: string
            description: The direction used to sort returned connections.
            enum:
              - asc
              - desc
            example: asc
        - name: prioritize_malicious
          in: query
          schema:
            type: boolean
            description: >-
              When true, malicious connections appear first in the returned
              connections.
            example: true
        - name: exclude_cdn_cgi
          in: query
          schema:
            type: boolean
            description: >-
              When true, excludes connections seen in a `/cdn-cgi` path from the
              returned connections. The default value is true.
            example: true
        - name: status
          in: query
          schema:
            type: string
            description: >-
              Filters the returned connections using a comma-separated list of
              connection statuses. Accepted values: `active`, `infrequent`, and
              `inactive`. The default value is `active`.
            example: active,inactive
        - name: page_url
          in: query
          schema:
            type: string
            description: >
              Includes connections that match one or more page URLs (separated
              by commas) where they were last seen


              Wildcards are supported at the start and end of each page URL to
              support starts with, ends with

              and contains. If no wildcards are used, results will be filtered
              by exact match
            example: example.com/page,*/checkout,example.com/*,*checkout*
        - name: export
          in: query
          schema:
            type: string
            description: >-
              Export the list of connections as a file. Cannot be used with
              per_page or page options.
            enum:
              - csv
            example: csv
      responses:
        '200':
          description: List Page Shield connections response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/page-shield_list-zone-connections-response
        4XX:
          description: List Page Shield connections response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/page-shield_list-zone-connections-response
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/page_shield/connections/{connection_id}:
    get:
      tags:
        - Connections
        - Page
        - Shield
        - Zones
      summary: 'Get A Page Shield Connection '
      description: Fetches a connection detected by Page Shield by connection ID.
      operationId: page-shield-get-a-page-shield-connection
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
        - name: connection_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_resource_id'
      responses:
        '200':
          description: Get a Page Shield connection response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-shield_get-zone-connection-response'
        4XX:
          description: Get a Page Shield connection response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/page-shield_get-zone-connection-response
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/page_shield/policies:
    get:
      tags:
        - Page
        - Policies
        - Shield
        - Zones
      summary: 'List Page Shield Policies '
      description: Lists all Page Shield policies.
      operationId: page-shield-list-page-shield-policies
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
      responses:
        '200':
          description: List Page Shield policies response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-shield_list-zone-policies-response'
        4XX:
          description: List Page Shield policies response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/page-shield_list-zone-policies-response
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Page
        - Policies
        - Shield
        - Zones
      summary: 'Create A Page Shield Policy '
      description: Create a Page Shield policy.
      operationId: page-shield-create-a-page-shield-policy
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                action:
                  $ref: '#/components/schemas/page-shield_pageshield-policy-action'
                description:
                  $ref: >-
                    #/components/schemas/page-shield_pageshield-policy-description
                enabled:
                  $ref: '#/components/schemas/page-shield_pageshield-policy-enabled'
                expression:
                  $ref: >-
                    #/components/schemas/page-shield_pageshield-policy-expression
                value:
                  $ref: '#/components/schemas/page-shield_pageshield-policy-value'
      responses:
        '200':
          description: Create a Page Shield policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-shield_get-zone-policy-response'
        4XX:
          description: Create a Page Shield policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/page-shield_get-zone-policy-response'
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/page_shield/policies/{policy_id}:
    delete:
      tags:
        - Page
        - Policies
        - Shield
        - Zones
      summary: 'Delete A Page Shield Policy '
      description: Delete a Page Shield policy by ID.
      operationId: page-shield-delete-a-page-shield-policy
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_policy_id'
      responses:
        '204':
          description: Delete a Page Shield policy response
        4XX:
          description: Delete a Page Shield policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/page-shield_get-zone-policy-response'
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Page
        - Policies
        - Shield
        - Zones
      summary: 'Get A Page Shield Policy '
      description: Fetches a Page Shield policy by ID.
      operationId: page-shield-get-a-page-shield-policy
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_policy_id'
      responses:
        '200':
          description: Get a Page Shield policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-shield_get-zone-policy-response'
        4XX:
          description: Get a Page Shield policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/page-shield_get-zone-policy-response'
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Page
        - Policies
        - Shield
        - Zones
      summary: 'Update A Page Shield Policy '
      description: Update a Page Shield policy by ID.
      operationId: page-shield-update-a-page-shield-policy
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_policy_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                action:
                  $ref: '#/components/schemas/page-shield_pageshield-policy-action'
                description:
                  $ref: >-
                    #/components/schemas/page-shield_pageshield-policy-description
                enabled:
                  $ref: '#/components/schemas/page-shield_pageshield-policy-enabled'
                expression:
                  $ref: >-
                    #/components/schemas/page-shield_pageshield-policy-expression
                value:
                  $ref: '#/components/schemas/page-shield_pageshield-policy-value'
      responses:
        '200':
          description: Update a Page Shield policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-shield_get-zone-policy-response'
        4XX:
          description: Update a Page Shield policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/page-shield_get-zone-policy-response'
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/page_shield/scripts:
    get:
      tags:
        - Page
        - Scripts
        - Shield
        - Zones
      summary: 'List Page Shield Scripts '
      description: Lists all scripts detected by Page Shield.
      operationId: page-shield-list-page-shield-scripts
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
        - name: exclude_urls
          in: query
          schema:
            type: string
            description: >
              Excludes scripts whose URL contains one of the URL-encoded URLs
              separated by commas.
            example: blog.cloudflare.com,www.example
        - name: urls
          in: query
          schema:
            type: string
            description: >
              Includes scripts whose URL contain one or more URL-encoded URLs
              separated by commas.
            example: blog.cloudflare.com,www.example
        - name: hosts
          in: query
          schema:
            type: string
            description: >
              Includes scripts that match one or more URL-encoded hostnames
              separated by commas.


              Wildcards are supported at the start and end of each hostname to
              support starts with, ends with

              and contains. If no wildcards are used, results will be filtered
              by exact match
            example: blog.cloudflare.com,www.example*,*cloudflare.com
        - name: page
          in: query
          schema:
            type: string
            description: >
              The current page number of the paginated results.


              We additionally support a special value "all". When "all" is used,
              the API will return all the scripts

              with the applied filters in a single page. Additionally, when
              using this value, the API will not return

              the script versions or categorisation data for the URL and domain
              of the scripts. This feature is

              best-effort and it may only work for zones with a low number of
              scripts
            example: 2
        - name: per_page
          in: query
          schema:
            type: number
            description: The number of results per page.
            example: 100
            minimum: 1
            maximum: 100
        - name: order_by
          in: query
          schema:
            type: string
            description: The field used to sort returned scripts.
            enum:
              - first_seen_at
              - last_seen_at
            example: first_seen_at
        - name: direction
          in: query
          schema:
            type: string
            description: The direction used to sort returned scripts.
            enum:
              - asc
              - desc
            example: asc
        - name: prioritize_malicious
          in: query
          schema:
            type: boolean
            description: When true, malicious scripts appear first in the returned scripts.
            example: true
        - name: exclude_cdn_cgi
          in: query
          schema:
            type: boolean
            description: >-
              When true, excludes scripts seen in a `/cdn-cgi` path from the
              returned scripts. The default value is true.
            default: true
            example: true
        - name: exclude_duplicates
          in: query
          schema:
            type: boolean
            description: >
              When true, excludes duplicate scripts. We consider a script
              duplicate of another if their javascript

              content matches and they share the same url host and zone
              hostname. In such case, we return the most

              recent script for the URL host and zone hostname combination.
            default: true
            example: true
        - name: status
          in: query
          schema:
            type: string
            description: >-
              Filters the returned scripts using a comma-separated list of
              scripts statuses. Accepted values: `active`, `infrequent`, and
              `inactive`. The default value is `active`.
            example: active,inactive
        - name: page_url
          in: query
          schema:
            type: string
            description: >
              Includes scripts that match one or more page URLs (separated by
              commas) where they were last seen


              Wildcards are supported at the start and end of each page URL to
              support starts with, ends with

              and contains. If no wildcards are used, results will be filtered
              by exact match
            example: example.com/page,*/checkout,example.com/*,*checkout*
        - name: export
          in: query
          schema:
            type: string
            description: >-
              Export the list of scripts as a file. Cannot be used with per_page
              or page options.
            enum:
              - csv
            example: csv
      responses:
        '200':
          description: List Page Shield scripts response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-shield_list-zone-scripts-response'
        4XX:
          description: List Page Shield scripts response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/page-shield_list-zone-scripts-response
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/page_shield/scripts/{script_id}:
    get:
      tags:
        - Page
        - Scripts
        - Shield
        - Zones
      summary: 'Get A Page Shield Script '
      description: Fetches a script detected by Page Shield by script ID.
      operationId: page-shield-get-a-page-shield-script
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_identifier'
        - name: script_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/page-shield_resource_id'
      responses:
        '200':
          description: Get a Page Shield script response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-shield_get-zone-script-response'
        4XX:
          description: Get a Page Shield script response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/page-shield_get-zone-script-response'
                  - $ref: >-
                      #/components/schemas/page-shield_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/pagerules:
    get:
      tags:
        - Page
        - Page Rules
        - Rules
        - Zones
      summary: 'List Page Rules '
      description: Fetches Page Rules in a zone.
      operationId: page-rules-list-page-rules
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
        - name: order
          in: query
          schema:
            type: string
            description: The field used to sort returned Page Rules.
            enum:
              - status
              - priority
            default: priority
            example: status
        - name: direction
          in: query
          schema:
            type: string
            description: The direction used to sort returned Page Rules.
            enum:
              - asc
              - desc
            default: desc
            example: desc
        - name: match
          in: query
          schema:
            type: string
            description: >-
              When set to `all`, all the search requirements must match. When
              set to `any`, only one of the search requirements has to match.
            enum:
              - any
              - all
            default: all
        - name: status
          in: query
          schema:
            type: string
            description: The status of the Page Rule.
            enum:
              - active
              - disabled
            default: disabled
            example: active
      responses:
        '200':
          description: List Page Rules response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_pagerule_response_collection'
        4XX:
          description: List Page Rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_pagerule_response_collection'
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Page
        - Page Rules
        - Rules
        - Zones
      summary: 'Create A Page Rule '
      description: Creates a new Page Rule.
      operationId: page-rules-create-a-page-rule
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
                - actions
              properties:
                actions:
                  $ref: '#/components/schemas/zones_actions'
                priority:
                  $ref: '#/components/schemas/zones_priority'
                status:
                  $ref: '#/components/schemas/zones_status'
                targets:
                  $ref: '#/components/schemas/zones_targets'
      responses:
        '200':
          description: Create a Page Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_pagerule_response_single'
        4XX:
          description: Create a Page Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_pagerule_response_single'
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/pagerules/{pagerule_id}:
    delete:
      tags:
        - Page
        - Page Rules
        - Pagerule
        - Rules
        - Zones
      summary: 'Delete A Page Rule '
      description: Deletes an existing Page Rule.
      operationId: page-rules-delete-a-page-rule
      parameters:
        - name: pagerule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a Page Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_schemas-api-response-single-id'
        4XX:
          description: Delete a Page Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_schemas-api-response-single-id'
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Page
        - Page Rules
        - Pagerule
        - Rules
        - Zones
      summary: 'Get A Page Rule '
      description: Fetches the details of a Page Rule.
      operationId: page-rules-get-a-page-rule
      parameters:
        - name: pagerule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
      responses:
        '200':
          description: Get a Page Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_pagerule_response_single'
        4XX:
          description: Get a Page Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_pagerule_response_single'
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Edit
        - Page
        - Page Rules
        - Pagerule
        - Rules
        - Zones
      summary: 'Edit A Page Rule '
      description: Updates one or more fields of an existing Page Rule.
      operationId: page-rules-edit-a-page-rule
      parameters:
        - name: pagerule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actions:
                  $ref: '#/components/schemas/zones_actions'
                priority:
                  $ref: '#/components/schemas/zones_priority'
                status:
                  $ref: '#/components/schemas/zones_status'
                targets:
                  $ref: '#/components/schemas/zones_targets'
      responses:
        '200':
          description: Edit a Page Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_pagerule_response_single'
        4XX:
          description: Edit a Page Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_pagerule_response_single'
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Page
        - Page Rules
        - Pagerule
        - Rules
        - Zones
      summary: 'Update A Page Rule '
      description: >-
        Replaces the configuration of an existing Page Rule. The configuration
        of the updated Page Rule will exactly match the data passed in the API
        request.
      operationId: page-rules-update-a-page-rule
      parameters:
        - name: pagerule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
                - actions
              properties:
                actions:
                  $ref: '#/components/schemas/zones_actions'
                priority:
                  $ref: '#/components/schemas/zones_priority'
                status:
                  $ref: '#/components/schemas/zones_status'
                targets:
                  $ref: '#/components/schemas/zones_targets'
      responses:
        '200':
          description: Update a Page Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_pagerule_response_single'
        4XX:
          description: Update a Page Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_pagerule_response_single'
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/pagerules/settings:
    get:
      tags:
        - Available
        - Page
        - Page Rules
        - Rules
        - Settings
        - Zones
      summary: 'List Available Page Rules Settings '
      description: >-
        Returns a list of settings (and their details) that Page Rules can apply
        to matching requests.
      operationId: available-page-rules-settings-list-available-page-rules-settings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_schemas-identifier'
      responses:
        '200':
          description: List available Page Rules settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zones_pagerule_settings_response_collection
        4XX:
          description: List available Page Rules settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zones_pagerule_settings_response_collection
                  - $ref: >-
                      #/components/schemas/zones_schemas-api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/purge_cache:
    post:
      tags:
        - Cache
        - Cached
        - Content
        - Purge
        - Zones
      summary: 'Purge Cached Content '
      description: >
        ### Purge All Cached Content

        Removes ALL files from Cloudflare's cache. All tiers can purge
        everything.


        ### Purge Cached Content by URL

        Granularly removes one or more files from Cloudflare's cache by
        specifying URLs. All tiers can purge by URL.


        To purge files with custom cache keys, include the headers used to
        compute the cache key as in the example. If you have a device type or
        geo in your cache key, you will need to include the CF-Device-Type or
        CF-IPCountry headers. If you have lang in your cache key, you will need
        to include the Accept-Language header.


        **NB:** When including the Origin header, be sure to include the
        **scheme** and **hostname**. The port number can be omitted if it is the
        default port (80 for http, 443 for https), but must be included
        otherwise.


        ### Purge Cached Content by Tag, Host or Prefix

        Granularly removes one or more files from Cloudflare's cache either by
        specifying the host, the associated Cache-Tag, or a Prefix. Only
        Enterprise customers are permitted to purge by Tag, Host or Prefix.


        **NB:** Cache-Tag, host, and prefix purging each have a rate limit of
        30,000 purge API calls in every 24 hour period. You may purge up to 30
        tags, hosts, or prefixes in one API call. This rate limit can be raised
        for customers who need to purge at higher volume.
      operationId: zone-purge
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache-purge_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/cache-purge_Flex'
                - $ref: '#/components/schemas/cache-purge_Everything'
                - $ref: '#/components/schemas/cache-purge_Files'
      responses:
        '200':
          description: Purge Cached Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cache-purge_api-response-single-id'
        4xx:
          description: Purge Cached Content failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cache-purge_api-response-single-id'
                  - $ref: >-
                      #/components/schemas/cache-purge_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets:
    get:
      tags:
        - Rulesets
        - Zones
      summary: 'List Zone Rulesets '
      description: Fetches all rulesets at the zone level.
      operationId: listZoneRulesets
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: List zone rulesets response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetsResponse'
        4XX:
          description: List zone rulesets failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Rulesets
        - Zones
      summary: 'Create A Zone Ruleset '
      description: Creates a ruleset at the zone level.
      operationId: createZoneRuleset
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_CreateRulesetRequest'
      responses:
        '200':
          description: Create a zone ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Create a zone ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/{ruleset_id}:
    delete:
      tags:
        - Rulesets
        - Zones
      summary: 'Delete A Zone Ruleset '
      description: Deletes all versions of an existing zone ruleset.
      operationId: deleteZoneRuleset
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '204':
          description: Delete a zone ruleset response
        4XX:
          description: Delete a zone ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Rulesets
        - Zones
      summary: 'Get A Zone Ruleset '
      description: Fetches the latest version of a zone ruleset.
      operationId: getZoneRuleset
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: Get a zone ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get a zone ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Rulesets
        - Zones
      summary: 'Update A Zone Ruleset '
      description: Updates a zone ruleset, creating a new version.
      operationId: updateZoneRuleset
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_UpdateRulesetRequest'
      responses:
        '200':
          description: Update a zone ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Update a zone ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/{ruleset_id}/rules:
    post:
      tags:
        - Rules
        - Rulesets
        - Zones
      summary: 'Create A Zone Ruleset Rule '
      description: >-
        Adds a new rule to a zone ruleset. The rule will be added to the end of
        the existing list of rules in the ruleset by default.
      operationId: createZoneRulesetRule
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_CreateOrUpdateRuleRequest'
      responses:
        '200':
          description: Create a zone ruleset rule response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Create a zone ruleset rule failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}:
    delete:
      tags:
        - Rules
        - Rulesets
        - Zones
      summary: 'Delete A Zone Ruleset Rule '
      description: Deletes an existing rule from a zone ruleset.
      operationId: deleteZoneRulesetRule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RuleId'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: Delete a zone ruleset rule response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Delete a zone ruleset rule failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Rules
        - Rulesets
        - Zones
      summary: 'Update A Zone Ruleset Rule '
      description: Updates an existing rule in a zone ruleset.
      operationId: updateZoneRulesetRule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RuleId'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_CreateOrUpdateRuleRequest'
      responses:
        '200':
          description: Update a zone ruleset rule response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Update a zone ruleset rule failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/{ruleset_id}/versions:
    get:
      tags:
        - Ruleset's
        - Rulesets
        - Versions
        - Zones
      summary: 'List A Zone Ruleset''s Versions '
      description: Fetches the versions of a zone ruleset.
      operationId: listZoneRulesetVersions
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: List a zone ruleset's versions response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetsResponse'
        4XX:
          description: List a zone ruleset's versions failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/{ruleset_id}/versions/{ruleset_version}:
    delete:
      tags:
        - Rulesets
        - Versions
        - Zones
      summary: 'Delete A Zone Ruleset Version '
      description: Deletes an existing version of a zone ruleset.
      operationId: deleteZoneRulesetVersion
      parameters:
        - name: ruleset_version
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetVersion'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '204':
          description: Delete a zone ruleset version response.
        4XX:
          description: Delete a zone ruleset version failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Rulesets
        - Versions
        - Zones
      summary: 'Get A Zone Ruleset Version '
      description: Fetches a specific version of a zone ruleset.
      operationId: getZoneRulesetVersion
      parameters:
        - name: ruleset_version
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetVersion'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: Get a zone ruleset version response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get a zone ruleset version failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint:
    get:
      tags:
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Rulesets
        - Zones
      summary: 'Get A Zone Entry Point Ruleset '
      description: >-
        Fetches the latest version of the zone entry point ruleset for a given
        phase.
      operationId: getZoneEntrypointRuleset
      parameters:
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: Get a zone entry point ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get a zone entry point ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Rulesets
        - Zones
      summary: 'Update A Zone Entry Point Ruleset '
      description: Updates a zone entry point ruleset, creating a new version.
      operationId: updateZoneEntrypointRuleset
      parameters:
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_UpdateRulesetRequest'
      responses:
        '200':
          description: Update a zone entry point ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Update a zone entry point ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions:
    get:
      tags:
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Ruleset's
        - Rulesets
        - Versions
        - Zones
      summary: 'List A Zone Entry Point Ruleset''s Versions '
      description: Fetches the versions of a zone entry point ruleset.
      operationId: listZoneEntrypointRulesetVersions
      parameters:
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: List a zone entry point ruleset's versions response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetsResponse'
        4XX:
          description: List a zone entry point ruleset's versions failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions/{ruleset_version}:
    get:
      tags:
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Rulesets
        - Versions
        - Zones
      summary: 'Get A Zone Entry Point Ruleset Version '
      description: Fetches a specific version of a zone entry point ruleset.
      operationId: getZoneEntrypointRulesetVersion
      parameters:
        - name: ruleset_version
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetVersion'
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_ZoneId'
      responses:
        '200':
          description: Get a zone entry point ruleset version response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get a zone entry point ruleset version failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/secondary_dns/force_axfr:
    post:
      tags:
        - AXFR
        - Axfr
        - DNS
        - Force
        - Secondary
        - Zones
      summary: 'Force AXFR '
      description: Sends AXFR zone transfer request to primary nameserver(s).
      operationId: secondary-dns-(-secondary-zone)-force-axfr
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Force AXFR response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_force_response'
        4XX:
          description: Force AXFR response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_force_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/secondary_dns/incoming:
    delete:
      tags:
        - Configurations
        - DNS
        - Incoming
        - Secondary
        - Zones
      summary: 'Delete Secondary Zone Configuration '
      description: Delete secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-delete-secondary-zone-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Secondary Zone Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_id_response'
        4XX:
          description: Delete Secondary Zone Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_id_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Configurations
        - DNS
        - Details
        - Incoming
        - Secondary
        - Zones
      summary: 'Secondary Zone Configuration Details '
      description: Get secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-secondary-zone-configuration-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      responses:
        '200':
          description: Secondary Zone Configuration Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response_incoming'
        4XX:
          description: Secondary Zone Configuration Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_single_response_incoming
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Configurations
        - DNS
        - Incoming
        - Secondary
        - Zones
      summary: 'Create Secondary Zone Configuration '
      description: Create secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-create-secondary-zone-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_dns-secondary-secondary-zone'
      responses:
        '200':
          description: Create Secondary Zone Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response_incoming'
        4XX:
          description: Create Secondary Zone Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_single_response_incoming
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Configurations
        - DNS
        - Incoming
        - Secondary
        - Zones
      summary: 'Update Secondary Zone Configuration '
      description: Update secondary zone configuration for incoming zone transfers.
      operationId: secondary-dns-(-secondary-zone)-update-secondary-zone-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_dns-secondary-secondary-zone'
      responses:
        '200':
          description: Update Secondary Zone Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response_incoming'
        4XX:
          description: Update Secondary Zone Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_single_response_incoming
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/secondary_dns/outgoing:
    delete:
      tags:
        - Configurations
        - DNS
        - Outgoing
        - Primary
        - Secondary
        - Zones
      summary: 'Delete Primary Zone Configuration '
      description: Delete primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-delete-primary-zone-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Primary Zone Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_id_response'
        4XX:
          description: Delete Primary Zone Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_id_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Configurations
        - DNS
        - Details
        - Outgoing
        - Primary
        - Secondary
        - Zones
      summary: 'Primary Zone Configuration Details '
      description: Get primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-primary-zone-configuration-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      responses:
        '200':
          description: Primary Zone Configuration Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response_outgoing'
        4XX:
          description: Primary Zone Configuration Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_single_response_outgoing
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Configurations
        - DNS
        - Outgoing
        - Primary
        - Secondary
        - Zones
      summary: 'Create Primary Zone Configuration '
      description: Create primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-create-primary-zone-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_single_request_outgoing'
      responses:
        '200':
          description: Create Primary Zone Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response_outgoing'
        4XX:
          description: Create Primary Zone Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_single_response_outgoing
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Configurations
        - DNS
        - Outgoing
        - Primary
        - Secondary
        - Zones
      summary: 'Update Primary Zone Configuration '
      description: Update primary zone configuration for outgoing zone transfers.
      operationId: secondary-dns-(-primary-zone)-update-primary-zone-configuration
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_single_request_outgoing'
      responses:
        '200':
          description: Update Primary Zone Configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response_outgoing'
        4XX:
          description: Update Primary Zone Configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_single_response_outgoing
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/secondary_dns/outgoing/disable:
    post:
      tags:
        - DNS
        - Disable
        - Outgoing
        - Secondary
        - Transfers
        - Zones
      summary: 'Disable Outgoing Zone Transfers '
      description: >-
        Disable outgoing zone transfers for primary zone and clears IXFR backlog
        of primary zone.
      operationId: secondary-dns-(-primary-zone)-disable-outgoing-zone-transfers
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Disable Outgoing Zone Transfers response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_disable_transfer_response'
        4XX:
          description: Disable Outgoing Zone Transfers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_disable_transfer_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/secondary_dns/outgoing/enable:
    post:
      tags:
        - DNS
        - Enable
        - Outgoing
        - Secondary
        - Transfers
        - Zones
      summary: 'Enable Outgoing Zone Transfers '
      description: Enable outgoing zone transfers for primary zone.
      operationId: secondary-dns-(-primary-zone)-enable-outgoing-zone-transfers
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Enable Outgoing Zone Transfers response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_enable_transfer_response'
        4XX:
          description: Enable Outgoing Zone Transfers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_enable_transfer_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/secondary_dns/outgoing/force_notify:
    post:
      tags:
        - DNS
        - Force
        - NOTIFY
        - Notify
        - Outgoing
        - Secondary
        - Zones
      summary: 'Force DNS NOTIFY '
      description: >-
        Notifies the secondary nameserver(s) and clears IXFR backlog of primary
        zone.
      operationId: secondary-dns-(-primary-zone)-force-dns-notify
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Force DNS NOTIFY response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_schemas-force_response'
        4XX:
          description: Force DNS NOTIFY response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_schemas-force_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/secondary_dns/outgoing/status:
    get:
      tags:
        - DNS
        - Outgoing
        - Secondary
        - Status
        - Transfers
        - Zones
      summary: 'Get Outgoing Zone Transfer Status '
      description: Get primary zone transfer status.
      operationId: secondary-dns-(-primary-zone)-get-outgoing-zone-transfer-status
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_identifier'
      responses:
        '200':
          description: Get Outgoing Zone Transfer Status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_enable_transfer_response'
        4XX:
          description: Get Outgoing Zone Transfer Status response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_enable_transfer_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings:
    get:
      tags:
        - Settings
        - Zones
      summary: 'Get All Zone Settings '
      description: Available settings for your user in relation to a zone.
      operationId: zone-settings-get-all-zone-settings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get all Zone settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_zone_settings_response_collection'
        4XX:
          description: Get all Zone settings response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Edit
        - Info
        - Settings
        - Zones
      summary: 'Edit Zone Settings Info '
      description: Edit settings for a zone.
      operationId: zone-settings-edit-zone-settings-info
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - items
              properties:
                items:
                  type: array
                  description: >-
                    One or more zone setting objects. Must contain an ID and a
                    value.
                  example:
                    - id: always_online
                      value: 'on'
                    - id: browser_cache_ttl
                      value: 18000
                    - id: ip_geolocation
                      value: 'off'
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/zones_setting'
      responses:
        '200':
          description: Edit zone settings info response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_zone_settings_response_collection'
        4XX:
          description: Edit zone settings info response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/0rtt:
    get:
      tags:
        - 0 RTT
        - Resumption
        - Sessions
        - Settings
        - Zones
      summary: 'Get 0-RTT Session Resumption Setting '
      description: Gets 0-RTT session resumption setting.
      operationId: zone-settings-get-0-rtt-session-resumption-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get 0-RTT session resumption setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_0rtt'
        4XX:
          description: Get 0-RTT session resumption setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - 0 RTT
        - Change
        - Resumption
        - Sessions
        - Settings
        - Zones
      summary: 'Change 0-RTT Session Resumption Setting '
      description: Changes the 0-RTT session resumption setting.
      operationId: zone-settings-change-0-rtt-session-resumption-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_0rtt_value'
      responses:
        '200':
          description: Change 0-RTT session resumption setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_0rtt'
        4XX:
          description: Change 0-RTT session resumption setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/advanced_ddos:
    get:
      tags:
        - Advanced
        - DDOS
        - Ddos
        - Settings
        - Zones
      summary: 'Get Advanced DDOS Setting '
      description: >-
        Advanced protection from Distributed Denial of Service (DDoS) attacks on
        your website. This is an uneditable value that is 'on' in the case of
        Business and Enterprise zones.
      operationId: zone-settings-get-advanced-ddos-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Advanced DDOS setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_advanced_ddos'
        4XX:
          description: Get Advanced DDOS setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/always_online:
    get:
      tags:
        - Always
        - Settings
        - Zones
      summary: 'Get Always Online Setting '
      description: >-
        When enabled, Cloudflare serves limited copies of web pages available
        from the [Internet Archive's Wayback Machine](https://archive.org/web/)
        if your server is offline. Refer to [Always
        Online](https://developers.cloudflare.com/cache/about/always-online) for
        more information.
      operationId: zone-settings-get-always-online-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Always Online setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_always_online'
        4XX:
          description: Get Always Online setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Always
        - Change
        - Settings
        - Zones
      summary: 'Change Always Online Setting '
      description: >-
        When enabled, Cloudflare serves limited copies of web pages available
        from the [Internet Archive's Wayback Machine](https://archive.org/web/)
        if your server is offline. Refer to [Always
        Online](https://developers.cloudflare.com/cache/about/always-online) for
        more information.
      operationId: zone-settings-change-always-online-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_always_online_value'
      responses:
        '200':
          description: Change Always Online setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_always_online'
        4XX:
          description: Change Always Online setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/always_use_https:
    get:
      tags:
        - Always
        - HTTPS
        - Https
        - Settings
        - Zones
      summary: 'Get Always Use HTTPS Setting '
      description: >-
        Reply to all requests for URLs that use "http" with a 301 redirect to
        the equivalent "https" URL. If you only want to redirect for a subset of
        requests, consider creating an "Always use HTTPS" page rule.
      operationId: zone-settings-get-always-use-https-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Always Use HTTPS setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_always_use_https'
        4XX:
          description: Get Always Use HTTPS setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Always
        - Change
        - HTTPS
        - Https
        - Settings
        - Zones
      summary: 'Change Always Use HTTPS Setting '
      description: >-
        Reply to all requests for URLs that use "http" with a 301 redirect to
        the equivalent "https" URL. If you only want to redirect for a subset of
        requests, consider creating an "Always use HTTPS" page rule.
      operationId: zone-settings-change-always-use-https-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_always_use_https_value'
      responses:
        '200':
          description: Change Always Use HTTPS setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_always_use_https'
        4XX:
          description: Change Always Use HTTPS setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/automatic_https_rewrites:
    get:
      tags:
        - Automatic
        - HTTPS
        - Https
        - Rewrites
        - Settings
        - Zones
      summary: 'Get Automatic HTTPS Rewrites Setting '
      description: Enable the Automatic HTTPS Rewrites feature for this zone.
      operationId: zone-settings-get-automatic-https-rewrites-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Automatic HTTPS Rewrites setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_automatic_https_rewrites'
        4XX:
          description: Get Automatic HTTPS Rewrites setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Automatic
        - Change
        - HTTPS
        - Https
        - Rewrites
        - Settings
        - Zones
      summary: 'Change Automatic HTTPS Rewrites Setting '
      description: Enable the Automatic HTTPS Rewrites feature for this zone.
      operationId: zone-settings-change-automatic-https-rewrites-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_automatic_https_rewrites_value'
      responses:
        '200':
          description: Change Automatic HTTPS Rewrites setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_automatic_https_rewrites'
        4XX:
          description: Change Automatic HTTPS Rewrites setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/automatic_platform_optimization:
    get:
      tags:
        - Automatic
        - Optimizations
        - Platforms
        - Press
        - Settings
        - Word
        - Zones
      summary: 'Get Automatic Platform Optimization For Word Press Setting '
      description: >
        [Automatic Platform Optimization for
        WordPress](https://developers.cloudflare.com/automatic-platform-optimization/)

        serves your WordPress site from Cloudflare's edge network and caches

        third-party fonts.
      operationId: zone-settings-get-automatic_platform_optimization-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Automatic Platform Optimization for WordPress setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/zones_automatic_platform_optimization
        4XX:
          description: >-
            Get Automatic Platform Optimization for WordPress setting response
            failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Automatic
        - Change
        - Optimizations
        - Platforms
        - Press
        - Settings
        - Word
        - Zones
      summary: 'Change Automatic Platform Optimization For Word Press Setting '
      description: >
        [Automatic Platform Optimization for
        WordPress](https://developers.cloudflare.com/automatic-platform-optimization/)

        serves your WordPress site from Cloudflare's edge network and caches

        third-party fonts.
      operationId: zone-settings-change-automatic_platform_optimization-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_automatic_platform_optimization'
      responses:
        '200':
          description: >-
            Change Automatic Platform Optimization for WordPress setting
            response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/zones_automatic_platform_optimization
        4XX:
          description: >-
            Change Automatic Platform Optimization for WordPress setting
            response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/brotli:
    get:
      tags:
        - Brotli
        - Settings
        - Zones
      summary: 'Get Brotli Setting '
      description: >-
        When the client requesting an asset supports the Brotli compression
        algorithm, Cloudflare will serve a Brotli compressed version of the
        asset.
      operationId: zone-settings-get-brotli-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Brotli setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_brotli'
        4XX:
          description: Get Brotli setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Brotli
        - Change
        - Settings
        - Zones
      summary: 'Change Brotli Setting '
      description: >-
        When the client requesting an asset supports the Brotli compression
        algorithm, Cloudflare will serve a Brotli compressed version of the
        asset.
      operationId: zone-settings-change-brotli-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_brotli_value'
      responses:
        '200':
          description: Change Brotli setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_brotli'
        4XX:
          description: Change Brotli setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/browser_cache_ttl:
    get:
      tags:
        - Browser
        - Cache
        - Settings
        - TTL
        - Ttl
        - Zones
      summary: 'Get Browser Cache TTL Setting '
      description: >-
        Browser Cache TTL (in seconds) specifies how long Cloudflare-cached
        resources will remain on your visitors' computers. Cloudflare will honor
        any larger times specified by your server.
        (https://support.cloudflare.com/hc/en-us/articles/200168276).
      operationId: zone-settings-get-browser-cache-ttl-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Browser Cache TTL setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_browser_cache_ttl'
        4XX:
          description: Get Browser Cache TTL setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Browser
        - Cache
        - Change
        - Settings
        - TTL
        - Ttl
        - Zones
      summary: 'Change Browser Cache TTL Setting '
      description: >-
        Browser Cache TTL (in seconds) specifies how long Cloudflare-cached
        resources will remain on your visitors' computers. Cloudflare will honor
        any larger times specified by your server.
        (https://support.cloudflare.com/hc/en-us/articles/200168276).
      operationId: zone-settings-change-browser-cache-ttl-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_browser_cache_ttl_value'
      responses:
        '200':
          description: Change Browser Cache TTL setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_browser_cache_ttl'
        4XX:
          description: Change Browser Cache TTL setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/browser_check:
    get:
      tags:
        - Browser
        - Checks
        - Settings
        - Zones
      summary: 'Get Browser Check Setting '
      description: >-
        Browser Integrity Check is similar to Bad Behavior and looks for common
        HTTP headers abused most commonly by spammers and denies access to your
        page.  It will also challenge visitors that do not have a user agent or
        a non standard user agent (also commonly used by abuse bots, crawlers or
        visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).
      operationId: zone-settings-get-browser-check-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Browser Check setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_browser_check'
        4XX:
          description: Get Browser Check setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Browser
        - Change
        - Checks
        - Settings
        - Zones
      summary: 'Change Browser Check Setting '
      description: >-
        Browser Integrity Check is similar to Bad Behavior and looks for common
        HTTP headers abused most commonly by spammers and denies access to your
        page.  It will also challenge visitors that do not have a user agent or
        a non standard user agent (also commonly used by abuse bots, crawlers or
        visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).
      operationId: zone-settings-change-browser-check-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_browser_check_value'
      responses:
        '200':
          description: Change Browser Check setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_browser_check'
        4XX:
          description: Change Browser Check setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/cache_level:
    get:
      tags:
        - Cache
        - Levels
        - Settings
        - Zones
      summary: 'Get Cache Level Setting '
      description: >-
        Cache Level functions based off the setting level. The basic setting
        will cache most static resources (i.e., css, images, and JavaScript).
        The simplified setting will ignore the query string when delivering a
        cached resource. The aggressive setting will cache all static resources,
        including ones with a query string.
        (https://support.cloudflare.com/hc/en-us/articles/200168256).
      operationId: zone-settings-get-cache-level-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Cache Level setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_cache_level'
        4XX:
          description: Get Cache Level setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Cache
        - Change
        - Levels
        - Settings
        - Zones
      summary: 'Change Cache Level Setting '
      description: >-
        Cache Level functions based off the setting level. The basic setting
        will cache most static resources (i.e., css, images, and JavaScript).
        The simplified setting will ignore the query string when delivering a
        cached resource. The aggressive setting will cache all static resources,
        including ones with a query string.
        (https://support.cloudflare.com/hc/en-us/articles/200168256).
      operationId: zone-settings-change-cache-level-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_cache_level_value'
      responses:
        '200':
          description: Change Cache Level setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_cache_level'
        4XX:
          description: Change Cache Level setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/challenge_ttl:
    get:
      tags:
        - Challenges
        - Settings
        - TTL
        - Ttl
        - Zones
      summary: 'Get Challenge TTL Setting '
      description: >-
        Specify how long a visitor is allowed access to your site after
        successfully completing a challenge (such as a CAPTCHA). After the TTL
        has expired the visitor will have to complete a new challenge. We
        recommend a 15 - 45 minute setting and will attempt to honor any setting
        above 45 minutes.
        (https://support.cloudflare.com/hc/en-us/articles/200170136).
      operationId: zone-settings-get-challenge-ttl-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Challenge TTL setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_challenge_ttl'
        4XX:
          description: Get Challenge TTL setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Challenges
        - Change
        - Settings
        - TTL
        - Ttl
        - Zones
      summary: 'Change Challenge TTL Setting '
      description: >-
        Specify how long a visitor is allowed access to your site after
        successfully completing a challenge (such as a CAPTCHA). After the TTL
        has expired the visitor will have to complete a new challenge. We
        recommend a 15 - 45 minute setting and will attempt to honor any setting
        above 45 minutes.
        (https://support.cloudflare.com/hc/en-us/articles/200170136).
      operationId: zone-settings-change-challenge-ttl-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_challenge_ttl_value'
      responses:
        '200':
          description: Change Challenge TTL setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_challenge_ttl'
        4XX:
          description: Change Challenge TTL setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/ciphers:
    get:
      tags:
        - Ciphers
        - Settings
        - Zones
      summary: 'Get Ciphers Setting '
      description: Gets ciphers setting.
      operationId: zone-settings-get-ciphers-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get ciphers setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ciphers'
        4XX:
          description: Get ciphers setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Ciphers
        - Settings
        - Zones
      summary: 'Change Ciphers Setting '
      description: Changes ciphers setting.
      operationId: zone-settings-change-ciphers-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_ciphers_value'
      responses:
        '200':
          description: Change ciphers setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ciphers'
        4XX:
          description: Change ciphers setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/development_mode:
    get:
      tags:
        - Development
        - Mode
        - Settings
        - Zones
      summary: 'Get Development Mode Setting '
      description: >-
        Development Mode temporarily allows you to enter development mode for
        your websites if you need to make changes to your site. This will bypass
        Cloudflare's accelerated cache and slow down your site, but is useful if
        you are making changes to cacheable content (like images, css, or
        JavaScript) and would like to see those changes right away. Once
        entered, development mode will last for 3 hours and then automatically
        toggle off.
      operationId: zone-settings-get-development-mode-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Development Mode setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_development_mode'
        4XX:
          description: Get Development Mode setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Development
        - Mode
        - Settings
        - Zones
      summary: 'Change Development Mode Setting '
      description: >-
        Development Mode temporarily allows you to enter development mode for
        your websites if you need to make changes to your site. This will bypass
        Cloudflare's accelerated cache and slow down your site, but is useful if
        you are making changes to cacheable content (like images, css, or
        JavaScript) and would like to see those changes right away. Once
        entered, development mode will last for 3 hours and then automatically
        toggle off.
      operationId: zone-settings-change-development-mode-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_development_mode_value'
      responses:
        '200':
          description: Change Development Mode setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_development_mode'
        4XX:
          description: Change Development Mode setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/early_hints:
    get:
      tags:
        - Early
        - Hints
        - Settings
        - Zones
      summary: 'Get Early Hints Setting '
      description: >-
        When enabled, Cloudflare will attempt to speed up overall page loads by
        serving `103` responses with `Link` headers from the final response.
        Refer to [Early
        Hints](https://developers.cloudflare.com/cache/about/early-hints) for
        more information.
      operationId: zone-settings-get-early-hints-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Early Hints setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_early_hints'
        4XX:
          description: Get Early Hints setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Early
        - Hints
        - Settings
        - Zones
      summary: 'Change Early Hints Setting '
      description: >-
        When enabled, Cloudflare will attempt to speed up overall page loads by
        serving `103` responses with `Link` headers from the final response.
        Refer to [Early
        Hints](https://developers.cloudflare.com/cache/about/early-hints) for
        more information.
      operationId: zone-settings-change-early-hints-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_early_hints_value'
      responses:
        '200':
          description: Change Early Hints setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_early_hints'
        4XX:
          description: Change Early Hints setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/email_obfuscation:
    get:
      tags:
        - Emails
        - Obfuscation
        - Settings
        - Zones
      summary: 'Get Email Obfuscation Setting '
      description: >-
        Encrypt email adresses on your web page from bots, while keeping them
        visible to humans.
        (https://support.cloudflare.com/hc/en-us/articles/200170016).
      operationId: zone-settings-get-email-obfuscation-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Email Obfuscation setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_email_obfuscation'
        4XX:
          description: Get Email Obfuscation setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Emails
        - Obfuscation
        - Settings
        - Zones
      summary: 'Change Email Obfuscation Setting '
      description: >-
        Encrypt email adresses on your web page from bots, while keeping them
        visible to humans.
        (https://support.cloudflare.com/hc/en-us/articles/200170016).
      operationId: zone-settings-change-email-obfuscation-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_email_obfuscation_value'
      responses:
        '200':
          description: Change Email Obfuscation setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_email_obfuscation'
        4XX:
          description: Change Email Obfuscation setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/fonts:
    get:
      tags:
        - Cloudflare
        - Fonts
        - Settings
        - Zones
      summary: 'Get Cloudflare Fonts Setting '
      description: >
        Enhance your website's font delivery with Cloudflare Fonts. Deliver
        Google Hosted fonts from your own domain,

        boost performance, and enhance user privacy. Refer to the Cloudflare
        Fonts documentation for more information.
      operationId: zone-settings-get-fonts-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/speed_identifier'
      responses:
        '200':
          description: Get Cloudflare Fonts setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/speed_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/speed_cloudflare_fonts'
        4XX:
          description: Get Cloudflare Fonts setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/speed_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Cloudflare
        - Fonts
        - Settings
        - Zones
      summary: 'Change Cloudflare Fonts Setting '
      description: >
        Enhance your website's font delivery with Cloudflare Fonts. Deliver
        Google Hosted fonts from your own domain,

        boost performance, and enhance user privacy. Refer to the Cloudflare
        Fonts documentation for more information.
      operationId: zone-settings-change-fonts-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/speed_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/speed_cloudflare_fonts_value'
      responses:
        '200':
          description: Change Cloudflare Fonts setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/speed_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/speed_cloudflare_fonts'
        4XX:
          description: Change Cloudflare Fonts setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/speed_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/h2_prioritization:
    get:
      tags:
        - Edge
        - H2
        - HTTP/2
        - Prioritization
        - Settings
        - Zones
      summary: 'Get HTTP/2 Edge Prioritization Setting '
      description: |
        Gets HTTP/2 Edge Prioritization setting.
      operationId: zone-settings-get-h2_prioritization-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get HTTP/2 Edge Prioritization setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_h2_prioritization'
        4XX:
          description: Get HTTP/2 Edge Prioritization setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Edge
        - H2
        - HTTP/2
        - Prioritization
        - Settings
        - Zones
      summary: 'Change HTTP/2 Edge Prioritization Setting '
      description: |
        Gets HTTP/2 Edge Prioritization setting.
      operationId: zone-settings-change-h2_prioritization-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_h2_prioritization'
      responses:
        '200':
          description: Change HTTP/2 Edge Prioritization setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_h2_prioritization'
        4XX:
          description: Change HTTP/2 Edge Prioritization setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/hotlink_protection:
    get:
      tags:
        - Hotlink
        - Protection
        - Settings
        - Zones
      summary: 'Get Hotlink Protection Setting '
      description: >-
        When enabled, the Hotlink Protection option ensures that other sites
        cannot suck up your bandwidth by building pages that use images hosted
        on your site. Anytime a request for an image on your site hits
        Cloudflare, we check to ensure that it's not another site requesting
        them. People will still be able to download and view images from your
        page, but other sites won't be able to steal them for use on their own
        pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).
      operationId: zone-settings-get-hotlink-protection-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Hotlink Protection setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_hotlink_protection'
        4XX:
          description: Get Hotlink Protection setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Hotlink
        - Protection
        - Settings
        - Zones
      summary: 'Change Hotlink Protection Setting '
      description: >-
        When enabled, the Hotlink Protection option ensures that other sites
        cannot suck up your bandwidth by building pages that use images hosted
        on your site. Anytime a request for an image on your site hits
        Cloudflare, we check to ensure that it's not another site requesting
        them. People will still be able to download and view images from your
        page, but other sites won't be able to steal them for use on their own
        pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).
      operationId: zone-settings-change-hotlink-protection-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_hotlink_protection_value'
      responses:
        '200':
          description: Change Hotlink Protection setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_hotlink_protection'
        4XX:
          description: Change Hotlink Protection setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/http2:
    get:
      tags:
        - HTTP2
        - Http2
        - Settings
        - Zones
      summary: 'Get HTTP2 Setting '
      description: Value of the HTTP2 setting.
      operationId: zone-settings-get-h-t-t-p-2-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get HTTP2 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_http2'
        4XX:
          description: Get HTTP2 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - HTTP2
        - Http2
        - Settings
        - Zones
      summary: 'Change HTTP2 Setting '
      description: Value of the HTTP2 setting.
      operationId: zone-settings-change-h-t-t-p-2-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_http2_value'
      responses:
        '200':
          description: Change HTTP2 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_http2'
        4XX:
          description: Change HTTP2 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/http3:
    get:
      tags:
        - HTTP3
        - Http3
        - Settings
        - Zones
      summary: 'Get HTTP3 Setting '
      description: Value of the HTTP3 setting.
      operationId: zone-settings-get-h-t-t-p-3-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get HTTP3 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_http3'
        4XX:
          description: Get HTTP3 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - HTTP3
        - Http3
        - Settings
        - Zones
      summary: 'Change HTTP3 Setting '
      description: Value of the HTTP3 setting.
      operationId: zone-settings-change-h-t-t-p-3-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_http3_value'
      responses:
        '200':
          description: Change HTTP3 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_http3'
        4XX:
          description: Change HTTP3 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/image_resizing:
    get:
      tags:
        - Images
        - Resizing
        - Settings
        - Zones
      summary: 'Get Image Resizing Setting '
      description: >
        Image Resizing provides on-demand resizing, conversion and optimisation

        for images served through Cloudflare's network. Refer to the

        [Image Resizing
        documentation](https://developers.cloudflare.com/images/)

        for more information.
      operationId: zone-settings-get-image_resizing-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Image Resizing setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_image_resizing'
        4XX:
          description: Get Image Resizing setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Images
        - Resizing
        - Settings
        - Zones
      summary: 'Change Image Resizing Setting '
      description: >
        Image Resizing provides on-demand resizing, conversion and optimisation

        for images served through Cloudflare's network. Refer to the

        [Image Resizing
        documentation](https://developers.cloudflare.com/images/)

        for more information.
      operationId: zone-settings-change-image_resizing-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_image_resizing'
      responses:
        '200':
          description: Change Image Resizing setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_image_resizing'
        4XX:
          description: Change Image Resizing setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/ip_geolocation:
    get:
      tags:
        - Geolocation
        - IP
        - Settings
        - Zones
      summary: 'Get IP Geolocation Setting '
      description: >-
        Enable IP Geolocation to have Cloudflare geolocate visitors to your
        website and pass the country code to you.
        (https://support.cloudflare.com/hc/en-us/articles/200168236).
      operationId: zone-settings-get-ip-geolocation-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get IP Geolocation setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ip_geolocation'
        4XX:
          description: Get IP Geolocation setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Geolocation
        - IP
        - Settings
        - Zones
      summary: 'Change IP Geolocation Setting '
      description: >-
        Enable IP Geolocation to have Cloudflare geolocate visitors to your
        website and pass the country code to you.
        (https://support.cloudflare.com/hc/en-us/articles/200168236).
      operationId: zone-settings-change-ip-geolocation-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_ip_geolocation_value'
      responses:
        '200':
          description: Change IP Geolocation setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ip_geolocation'
        4XX:
          description: Change IP Geolocation setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/ipv6:
    get:
      tags:
        - IPv6
        - Ipv6
        - Settings
        - Zones
      summary: 'Get IPv6 Setting '
      description: >-
        Enable IPv6 on all subdomains that are Cloudflare enabled. 
        (https://support.cloudflare.com/hc/en-us/articles/200168586).
      operationId: zone-settings-get-i-pv6-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get IPv6 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ipv6'
        4XX:
          description: Get IPv6 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - IPv6
        - Ipv6
        - Settings
        - Zones
      summary: 'Change IPv6 Setting '
      description: >-
        Enable IPv6 on all subdomains that are Cloudflare enabled. 
        (https://support.cloudflare.com/hc/en-us/articles/200168586).
      operationId: zone-settings-change-i-pv6-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_ipv6_value'
      responses:
        '200':
          description: Change IPv6 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ipv6'
        4XX:
          description: Change IPv6 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/min_tls_version:
    get:
      tags:
        - Min
        - Minimum
        - Settings
        - TLS
        - Tls
        - Versions
        - Zones
      summary: 'Get Minimum TLS Version Setting '
      description: Gets Minimum TLS Version setting.
      operationId: zone-settings-get-minimum-tls-version-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Minimum TLS Version setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_min_tls_version'
        4XX:
          description: Get Minimum TLS Version setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Min
        - Minimum
        - Settings
        - TLS
        - Tls
        - Versions
        - Zones
      summary: 'Change Minimum TLS Version Setting '
      description: Changes Minimum TLS Version setting.
      operationId: zone-settings-change-minimum-tls-version-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_min_tls_version_value'
      responses:
        '200':
          description: Change Minimum TLS Version setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_min_tls_version'
        4XX:
          description: Change Minimum TLS Version setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/minify:
    get:
      tags:
        - Minify
        - Settings
        - Zones
      summary: 'Get Minify Setting '
      description: >-
        Automatically minify certain assets for your website. Refer to [Using
        Cloudflare Auto
        Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for
        more information.
      operationId: zone-settings-get-minify-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Minify setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_minify'
        4XX:
          description: Get Minify setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Minify
        - Settings
        - Zones
      summary: 'Change Minify Setting '
      description: >-
        Automatically minify certain assets for your website. Refer to [Using
        Cloudflare Auto
        Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for
        more information.
      operationId: zone-settings-change-minify-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_minify_value'
      responses:
        '200':
          description: Change Minify setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_minify'
        4XX:
          description: Change Minify setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/mirage:
    get:
      tags:
        - Mirage
        - Settings
        - Zones
      summary: 'Get Mirage Setting '
      description: >
        Automatically optimize image loading for website visitors on mobile

        devices. Refer to our [blog
        post](http://blog.cloudflare.com/mirage2-solving-mobile-speed)

        for more information.
      operationId: zone-settings-get-mirage-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Mirage setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_mirage'
        4XX:
          description: Get Mirage setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Mirage
        - Settings
        - Zones
      summary: 'Change Mirage Setting '
      description: >-
        Automatically optimize image loading for website visitors on mobile
        devices. Refer to our [blog
        post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more
        information.
      operationId: zone-settings-change-web-mirage-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_mirage_value'
      responses:
        '200':
          description: Change Mirage setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_mirage'
        4XX:
          description: Change Mirage setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/mobile_redirect:
    get:
      tags:
        - Mobile
        - Redirects
        - Settings
        - Zones
      summary: 'Get Mobile Redirect Setting '
      description: >-
        Automatically redirect visitors on mobile devices to a mobile-optimized
        subdomain. Refer to [Understanding Cloudflare Mobile
        Redirect](https://support.cloudflare.com/hc/articles/200168336) for more
        information.
      operationId: zone-settings-get-mobile-redirect-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Mobile Redirect setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_mobile_redirect'
        4XX:
          description: Get Mobile Redirect setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Mobile
        - Redirects
        - Settings
        - Zones
      summary: 'Change Mobile Redirect Setting '
      description: >-
        Automatically redirect visitors on mobile devices to a mobile-optimized
        subdomain. Refer to [Understanding Cloudflare Mobile
        Redirect](https://support.cloudflare.com/hc/articles/200168336) for more
        information.
      operationId: zone-settings-change-mobile-redirect-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_mobile_redirect_value'
      responses:
        '200':
          description: Change Mobile Redirect setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_mobile_redirect'
        4XX:
          description: Change Mobile Redirect setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/nel:
    get:
      tags:
        - Errors
        - Logging
        - Nel
        - Networks
        - Settings
        - Zones
      summary: 'Get Network Error Logging Setting '
      description: |
        Enable Network Error Logging reporting on your zone. (Beta)
      operationId: zone-settings-get-nel-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Network Error Logging setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_nel'
        4XX:
          description: Get Network Error Logging setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Errors
        - Logging
        - Nel
        - Networks
        - Settings
        - Zones
      summary: 'Change Network Error Logging Setting '
      description: >-
        Automatically optimize image loading for website visitors on mobile
        devices. Refer to our [blog
        post](http://blog.cloudflare.com/nel-solving-mobile-speed) for more
        information.
      operationId: zone-settings-change-nel-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_nel'
      responses:
        '200':
          description: Change Network Error Logging setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_nel'
        4XX:
          description: Change Network Error Logging setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/opportunistic_encryption:
    get:
      tags:
        - Encryption
        - Opportunistic
        - Settings
        - Zones
      summary: 'Get Opportunistic Encryption Setting '
      description: Gets Opportunistic Encryption setting.
      operationId: zone-settings-get-opportunistic-encryption-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Opportunistic Encryption setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_opportunistic_encryption'
        4XX:
          description: Get Opportunistic Encryption setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Encryption
        - Opportunistic
        - Settings
        - Zones
      summary: 'Change Opportunistic Encryption Setting '
      description: Changes Opportunistic Encryption setting.
      operationId: zone-settings-change-opportunistic-encryption-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_opportunistic_encryption_value'
      responses:
        '200':
          description: Change Opportunistic Encryption setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_opportunistic_encryption'
        4XX:
          description: Change Opportunistic Encryption setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/opportunistic_onion:
    get:
      tags:
        - Onion
        - Opportunistic
        - Settings
        - Zones
      summary: 'Get Opportunistic Onion Setting '
      description: >-
        Add an Alt-Svc header to all legitimate requests from Tor, allowing the
        connection to use our onion services instead of exit nodes.
      operationId: zone-settings-get-opportunistic-onion-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Opportunistic Onion setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_opportunistic_onion'
        4XX:
          description: Get Opportunistic Onion setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Onion
        - Opportunistic
        - Settings
        - Zones
      summary: 'Change Opportunistic Onion Setting '
      description: >-
        Add an Alt-Svc header to all legitimate requests from Tor, allowing the
        connection to use our onion services instead of exit nodes.
      operationId: zone-settings-change-opportunistic-onion-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_opportunistic_onion_value'
      responses:
        '200':
          description: Change Opportunistic Onion setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_opportunistic_onion'
        4XX:
          description: Change Opportunistic Onion setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/orange_to_orange:
    get:
      tags:
        - (O2O)
        - Orange
        - Settings
        - Zones
      summary: 'Get Orange To Orange (O2O) Setting '
      description: |
        Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other
        zones also on Cloudflare.
      operationId: zone-settings-get-orange_to_orange-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Orange to Orange (O2O) setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_orange_to_orange'
        4XX:
          description: Get Orange to Orange (O2O) setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - (O2O)
        - Change
        - Orange
        - Settings
        - Zones
      summary: 'Change Orange To Orange (O2O) Setting '
      description: |
        Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other
        zones also on Cloudflare.
      operationId: zone-settings-change-orange_to_orange-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_orange_to_orange'
      responses:
        '200':
          description: Change Orange to Orange (O2O) setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_orange_to_orange'
        4XX:
          description: Change Orange to Orange (O2O) setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/origin_error_page_pass_thru:
    get:
      tags:
        - Enable
        - Errors
        - Origin
        - Page
        - Pages
        - Pass
        - Settings
        - Thru
        - Zones
      summary: 'Get Enable Error Pages On Setting '
      description: >-
        Cloudflare will proxy customer error pages on any 502,504 errors on
        origin server instead of showing a default Cloudflare error page. This
        does not apply to 522 errors and is limited to Enterprise Zones.
      operationId: zone-settings-get-enable-error-pages-on-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Enable Error Pages On setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_origin_error_page_pass_thru'
        4XX:
          description: Get Enable Error Pages On setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Enable
        - Errors
        - Origin
        - Page
        - Pages
        - Pass
        - Settings
        - Thru
        - Zones
      summary: 'Change Enable Error Pages On Setting '
      description: >-
        Cloudflare will proxy customer error pages on any 502,504 errors on
        origin server instead of showing a default Cloudflare error page. This
        does not apply to 522 errors and is limited to Enterprise Zones.
      operationId: zone-settings-change-enable-error-pages-on-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_origin_error_page_pass_thru_value'
      responses:
        '200':
          description: Change Enable Error Pages On setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_origin_error_page_pass_thru'
        4XX:
          description: Change Enable Error Pages On setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/origin_max_http_version:
    get:
      tags:
        - HTTP
        - Maximum
        - Origin
        - Settings
        - Versions
        - Zones
      summary: 'Get Origin Max HTTP Version Setting '
      description: >-
        Origin Max HTTP Setting Version sets the highest HTTP version Cloudflare
        will attempt to use with your origin. This setting allows Cloudflare to
        make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to
        Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/),
        for more information.). The default value is "2" for all plan types
        except ENT where it is "1"
      operationId: zone-cache-settings-get-origin-max-http-version-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      responses:
        '200':
          description: Get Origin Max HTTP Version Setting Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_origin_max_http_version_response_value
              examples:
                max_http_version_2:
                  $ref: '#/components/examples/cache_origin_max_http_version_2'
        4XX:
          description: Get Origin Max HTTP Version Setting Response Failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_origin_max_http_version_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
              examples:
                Error:
                  $ref: '#/components/examples/cache_dummy_error_response'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - HTTP
        - Maximum
        - Origin
        - Settings
        - Versions
        - Zones
      summary: 'Change Origin Max HTTP Version Setting '
      description: >-
        Origin Max HTTP Setting Version sets the highest HTTP version Cloudflare
        will attempt to use with your origin. This setting allows Cloudflare to
        make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to
        Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/),
        for more information.). The default value is "2" for all plan types
        except ENT where it is "1"
      operationId: zone-cache-settings-change-origin-max-http-version-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cache_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/cache_origin_max_http_version_value'
      responses:
        '200':
          description: Change Origin Max HTTP Version Setting Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/cache_zone_cache_settings_response_single
                  - $ref: >-
                      #/components/schemas/cache_origin_max_http_version_response_value
              examples:
                max_http_version_2:
                  $ref: '#/components/examples/cache_origin_max_http_version_2'
        4XX:
          description: Change Origin Max HTTP Version Response Failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/cache_zone_cache_settings_response_single
                      - $ref: >-
                          #/components/schemas/cache_origin_max_http_version_response_value
                  - $ref: '#/components/schemas/cache_api-response-common-failure'
              examples:
                Error:
                  $ref: '#/components/examples/cache_dummy_error_response'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/polish:
    get:
      tags:
        - Polish
        - Settings
        - Zones
      summary: 'Get Polish Setting '
      description: >
        Automatically optimize image loading for website visitors on mobile

        devices. Refer to our [blog
        post](http://blog.cloudflare.com/polish-solving-mobile-speed)

        for more information.
      operationId: zone-settings-get-polish-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Polish setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_polish'
        4XX:
          description: Get Polish setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Polish
        - Settings
        - Zones
      summary: 'Change Polish Setting '
      description: >-
        Automatically optimize image loading for website visitors on mobile
        devices. Refer to our [blog
        post](http://blog.cloudflare.com/polish-solving-mobile-speed) for more
        information.
      operationId: zone-settings-change-polish-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_polish'
      responses:
        '200':
          description: Change Polish setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_polish'
        4XX:
          description: Change Polish setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/prefetch_preload:
    get:
      tags:
        - Prefetch
        - Preload
        - Settings
        - Zones
      summary: 'Get Prefetch Preload Setting '
      description: >-
        Cloudflare will prefetch any URLs that are included in the response
        headers. This is limited to Enterprise Zones.
      operationId: zone-settings-get-prefetch-preload-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get prefetch preload setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_prefetch_preload'
        4XX:
          description: Get prefetch preload setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Prefetch
        - Preload
        - Settings
        - Zones
      summary: 'Change Prefetch Preload Setting '
      description: >-
        Cloudflare will prefetch any URLs that are included in the response
        headers. This is limited to Enterprise Zones.
      operationId: zone-settings-change-prefetch-preload-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_prefetch_preload_value'
      responses:
        '200':
          description: Change prefetch preload setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_prefetch_preload'
        4XX:
          description: Change prefetch preload setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/proxy_read_timeout:
    get:
      tags:
        - Proxy
        - Read
        - Settings
        - Timeout
        - Zones
      summary: 'Get Proxy Read Timeout Setting '
      description: |
        Maximum time between two read operations from origin.
      operationId: zone-settings-get-proxy_read_timeout-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Proxy Read Timeout setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_proxy_read_timeout'
        4XX:
          description: Get Proxy Read Timeout setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Proxy
        - Read
        - Settings
        - Timeout
        - Zones
      summary: 'Change Proxy Read Timeout Setting '
      description: |
        Maximum time between two read operations from origin.
      operationId: zone-settings-change-proxy_read_timeout-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_proxy_read_timeout'
      responses:
        '200':
          description: Change Proxy Read Timeout setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_proxy_read_timeout'
        4XX:
          description: Change Proxy Read Timeout setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/pseudo_ipv4:
    get:
      tags:
        - IPv4
        - Ipv4
        - Pseudo
        - Settings
        - Zones
      summary: 'Get Pseudo IPv4 Setting '
      description: Value of the Pseudo IPv4 setting.
      operationId: zone-settings-get-pseudo-i-pv4-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Pseudo IPv4 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_pseudo_ipv4'
        4XX:
          description: Get Pseudo IPv4 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - IPv4
        - Ipv4
        - Pseudo
        - Settings
        - Zones
      summary: 'Change Pseudo IPv4 Setting '
      description: Value of the Pseudo IPv4 setting.
      operationId: zone-settings-change-pseudo-i-pv4-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_pseudo_ipv4_value'
      responses:
        '200':
          description: Change Pseudo IPv4 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_pseudo_ipv4'
        4XX:
          description: Change Pseudo IPv4 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/response_buffering:
    get:
      tags:
        - Buffering
        - Responses
        - Settings
        - Zones
      summary: 'Get Response Buffering Setting '
      description: >-
        Enables or disables buffering of responses from the proxied server.
        Cloudflare may buffer the whole payload to deliver it at once to the
        client versus allowing it to be delivered in chunks. By default, the
        proxied server streams directly and is not buffered by Cloudflare. This
        is limited to Enterprise Zones.
      operationId: zone-settings-get-response-buffering-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Response Buffering setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_response_buffering'
        4XX:
          description: Get Response Buffering setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Buffering
        - Change
        - Responses
        - Settings
        - Zones
      summary: 'Change Response Buffering Setting '
      description: >-
        Enables or disables buffering of responses from the proxied server.
        Cloudflare may buffer the whole payload to deliver it at once to the
        client versus allowing it to be delivered in chunks. By default, the
        proxied server streams directly and is not buffered by Cloudflare. This
        is limited to Enterprise Zones.
      operationId: zone-settings-change-response-buffering-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_response_buffering_value'
      responses:
        '200':
          description: Change Response Buffering setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_response_buffering'
        4XX:
          description: Change Response Buffering setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/rocket_loader:
    get:
      tags:
        - Loader
        - Rocket
        - Settings
        - Zones
      summary: 'Get Rocket Loader Setting '
      description: >
        Rocket Loader is a general-purpose asynchronous JavaScript optimisation

        that prioritises rendering your content while loading your site's

        Javascript asynchronously. Turning on Rocket Loader will immediately

        improve a web page's rendering time sometimes measured as Time to First

        Paint (TTFP), and also the `window.onload` time (assuming there is

        JavaScript on the page). This can have a positive impact on your Google

        search ranking. When turned on, Rocket Loader will automatically defer

        the loading of all Javascript referenced in your HTML, with no

        configuration required. Refer to

        [Understanding Rocket
        Loader](https://support.cloudflare.com/hc/articles/200168056)

        for more information.
      operationId: zone-settings-get-rocket_loader-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Rocket Loader setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_rocket_loader'
        4XX:
          description: Get Rocket Loader setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Loader
        - Rocket
        - Settings
        - Zones
      summary: 'Change Rocket Loader Setting '
      description: >
        Rocket Loader is a general-purpose asynchronous JavaScript optimisation

        that prioritises rendering your content while loading your site's

        Javascript asynchronously. Turning on Rocket Loader will immediately

        improve a web page's rendering time sometimes measured as Time to First

        Paint (TTFP), and also the `window.onload` time (assuming there is

        JavaScript on the page). This can have a positive impact on your Google

        search ranking. When turned on, Rocket Loader will automatically defer

        the loading of all Javascript referenced in your HTML, with no

        configuration required. Refer to

        [Understanding Rocket
        Loader](https://support.cloudflare.com/hc/articles/200168056)

        for more information.
      operationId: zone-settings-change-rocket_loader-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_rocket_loader'
      responses:
        '200':
          description: Change Rocket Loader setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_rocket_loader'
        4XX:
          description: Change Rocket Loader setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/security_header:
    get:
      tags:
        - (HSTS)
        - Header
        - Security
        - Settings
        - Zones
      summary: 'Get Security Header (HSTS) Setting '
      description: Cloudflare security header for a zone.
      operationId: zone-settings-get-security-header-(-hsts)-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Security Header (HSTS) setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_security_header'
        4XX:
          description: Get Security Header (HSTS) setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - (HSTS)
        - Change
        - Header
        - Security
        - Settings
        - Zones
      summary: 'Change Security Header (HSTS) Setting '
      description: Cloudflare security header for a zone.
      operationId: zone-settings-change-security-header-(-hsts)-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_security_header_value'
      responses:
        '200':
          description: Change Security Header (HSTS) setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_security_header'
        4XX:
          description: Change Security Header (HSTS) setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/security_level:
    get:
      tags:
        - Levels
        - Security
        - Settings
        - Zones
      summary: 'Get Security Level Setting '
      description: >-
        Choose the appropriate security profile for your website, which will
        automatically adjust each of the security settings. If you choose to
        customize an individual security setting, the profile will become
        Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).
      operationId: zone-settings-get-security-level-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Security Level setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_security_level'
        4XX:
          description: Get Security Level setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Levels
        - Security
        - Settings
        - Zones
      summary: 'Change Security Level Setting '
      description: >-
        Choose the appropriate security profile for your website, which will
        automatically adjust each of the security settings. If you choose to
        customize an individual security setting, the profile will become
        Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).
      operationId: zone-settings-change-security-level-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_security_level_value'
      responses:
        '200':
          description: Change Security Level setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_security_level'
        4XX:
          description: Change Security Level setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/server_side_exclude:
    get:
      tags:
        - Exclude
        - Servers
        - Settings
        - Side
        - Zones
      summary: 'Get Server Side Exclude Setting '
      description: >-
        If there is sensitive content on your website that you want visible to
        real visitors, but that you want to hide from suspicious visitors, all
        you have to do is wrap the content with Cloudflare SSE tags. Wrap any
        content that you want to be excluded from suspicious visitors in the
        following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad
        visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE
        only will work with HTML. If you have HTML minification enabled, you
        won't see the SSE tags in your HTML source when it's served through
        Cloudflare. SSE will still function in this case, as Cloudflare's HTML
        minification and SSE functionality occur on-the-fly as the resource
        moves through our network to the visitor's computer.
        (https://support.cloudflare.com/hc/en-us/articles/200170036).
      operationId: zone-settings-get-server-side-exclude-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Server Side Exclude setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_server_side_exclude'
        4XX:
          description: Get Server Side Exclude setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Exclude
        - Servers
        - Settings
        - Side
        - Zones
      summary: 'Change Server Side Exclude Setting '
      description: >-
        If there is sensitive content on your website that you want visible to
        real visitors, but that you want to hide from suspicious visitors, all
        you have to do is wrap the content with Cloudflare SSE tags. Wrap any
        content that you want to be excluded from suspicious visitors in the
        following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad
        visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE
        only will work with HTML. If you have HTML minification enabled, you
        won't see the SSE tags in your HTML source when it's served through
        Cloudflare. SSE will still function in this case, as Cloudflare's HTML
        minification and SSE functionality occur on-the-fly as the resource
        moves through our network to the visitor's computer.
        (https://support.cloudflare.com/hc/en-us/articles/200170036).
      operationId: zone-settings-change-server-side-exclude-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_server_side_exclude_value'
      responses:
        '200':
          description: Change Server Side Exclude setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_server_side_exclude'
        4XX:
          description: Change Server Side Exclude setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/sort_query_string_for_cache:
    get:
      tags:
        - Cache
        - Enable
        - Queries
        - Settings
        - Sort
        - String
        - Zones
      summary: 'Get Enable Query String Sort Setting '
      description: >-
        Cloudflare will treat files with the same query strings as the same file
        in cache, regardless of the order of the query strings. This is limited
        to Enterprise Zones.
      operationId: zone-settings-get-enable-query-string-sort-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Enable Query String Sort setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_sort_query_string_for_cache'
        4XX:
          description: Get Enable Query String Sort setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Cache
        - Change
        - Enable
        - Queries
        - Settings
        - Sort
        - String
        - Zones
      summary: 'Change Enable Query String Sort Setting '
      description: >-
        Cloudflare will treat files with the same query strings as the same file
        in cache, regardless of the order of the query strings. This is limited
        to Enterprise Zones.
      operationId: zone-settings-change-enable-query-string-sort-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_sort_query_string_for_cache_value'
      responses:
        '200':
          description: Change Enable Query String Sort setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_sort_query_string_for_cache'
        4XX:
          description: Change Enable Query String Sort setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/ssl:
    get:
      tags:
        - SSL
        - Settings
        - Ssl
        - Zones
      summary: 'Get SSL Setting '
      description: >-
        SSL encrypts your visitor's connection and safeguards credit card
        numbers and other personal data to and from your website. SSL can take
        up to 5 minutes to fully activate. Requires Cloudflare active on your
        root domain or www domain. Off: no SSL between the visitor and
        Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP
        traffic). Flexible: SSL between the visitor and Cloudflare -- visitor
        sees HTTPS on your site, but no SSL between Cloudflare and your web
        server. You don't need to have an SSL cert on your web server, but your
        vistors will still see the site as being HTTPS enabled. Full:  SSL
        between the visitor and Cloudflare -- visitor sees HTTPS on your site,
        and SSL between Cloudflare and your web server. You'll need to have your
        own SSL cert or self-signed cert at the very least. Full (Strict): SSL
        between the visitor and Cloudflare -- visitor sees HTTPS on your site,
        and SSL between Cloudflare and your web server. You'll need to have a
        valid SSL certificate installed on your web server. This certificate
        must be signed by a certificate authority, have an expiration date in
        the future, and respond for the request domain name (hostname).
        (https://support.cloudflare.com/hc/en-us/articles/200170416).
      operationId: zone-settings-get-ssl-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get SSL setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ssl'
        4XX:
          description: Get SSL setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - SSL
        - Settings
        - Ssl
        - Zones
      summary: 'Change SSL Setting '
      description: >-
        SSL encrypts your visitor's connection and safeguards credit card
        numbers and other personal data to and from your website. SSL can take
        up to 5 minutes to fully activate. Requires Cloudflare active on your
        root domain or www domain. Off: no SSL between the visitor and
        Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP
        traffic). Flexible: SSL between the visitor and Cloudflare -- visitor
        sees HTTPS on your site, but no SSL between Cloudflare and your web
        server. You don't need to have an SSL cert on your web server, but your
        vistors will still see the site as being HTTPS enabled. Full:  SSL
        between the visitor and Cloudflare -- visitor sees HTTPS on your site,
        and SSL between Cloudflare and your web server. You'll need to have your
        own SSL cert or self-signed cert at the very least. Full (Strict): SSL
        between the visitor and Cloudflare -- visitor sees HTTPS on your site,
        and SSL between Cloudflare and your web server. You'll need to have a
        valid SSL certificate installed on your web server. This certificate
        must be signed by a certificate authority, have an expiration date in
        the future, and respond for the request domain name (hostname).
        (https://support.cloudflare.com/hc/en-us/articles/200170416).
      operationId: zone-settings-change-ssl-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_ssl_value'
      responses:
        '200':
          description: Change SSL setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ssl'
        4XX:
          description: Change SSL setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/ssl_recommender:
    get:
      tags:
        - Enrollment
        - Recommenders
        - SSL/TLS
        - Settings
        - Ssl
        - Zones
      summary: 'Get SSL/TLS Recommender Enrollment Setting '
      description: |
        Enrollment in the SSL/TLS Recommender service which tries to detect and
        recommend (by sending periodic emails) the most secure SSL/TLS setting
        your origin servers support.
      operationId: zone-settings-get-ssl_recommender-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get SSL/TLS Recommender enrollment setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ssl_recommender'
        4XX:
          description: Get SSL/TLS Recommender enrollment setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Enrollment
        - Recommenders
        - SSL/TLS
        - Settings
        - Ssl
        - Zones
      summary: 'Change SSL/TLS Recommender Enrollment Setting '
      description: |
        Enrollment in the SSL/TLS Recommender service which tries to detect and
        recommend (by sending periodic emails) the most secure SSL/TLS setting
        your origin servers support.
      operationId: zone-settings-change-ssl_recommender-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_ssl_recommender'
      responses:
        '200':
          description: Change SSL/TLS Recommender enrollment setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_ssl_recommender'
        4XX:
          description: Change SSL/TLS Recommender enrollment setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/tls_1_3:
    get:
      tags:
        - 1 3
        - Enabled
        - Settings
        - TLS
        - Tls
        - Zones
      summary: 'Get TLS 1.3 Setting Enabled For A Zone '
      description: Gets TLS 1.3 setting enabled for a zone.
      operationId: zone-settings-get-tls-1.-3-setting-enabled-for-a-zone
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get TLS 1.3 setting enabled for a zone response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_tls_1_3'
        4XX:
          description: Get TLS 1.3 setting enabled for a zone response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - 1 3
        - Change
        - Settings
        - TLS
        - Tls
        - Zones
      summary: 'Change TLS 1.3 Setting '
      description: Changes TLS 1.3 setting.
      operationId: zone-settings-change-tls-1.-3-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_tls_1_3_value'
      responses:
        '200':
          description: Change TLS 1.3 setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_tls_1_3'
        4XX:
          description: Change TLS 1.3 setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/tls_client_auth:
    get:
      tags:
        - Authentication
        - Clients
        - Settings
        - TLS
        - Tls
        - Zones
      summary: 'Get TLS Client Auth Setting '
      description: >-
        TLS Client Auth requires Cloudflare to connect to your origin server
        using a client certificate (Enterprise Only).
      operationId: zone-settings-get-tls-client-auth-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get TLS Client Auth setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_tls_client_auth'
        4XX:
          description: Get TLS Client Auth setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Authentication
        - Change
        - Clients
        - Settings
        - TLS
        - Tls
        - Zones
      summary: 'Change TLS Client Auth Setting '
      description: >-
        TLS Client Auth requires Cloudflare to connect to your origin server
        using a client certificate (Enterprise Only).
      operationId: zone-settings-change-tls-client-auth-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_tls_client_auth_value'
      responses:
        '200':
          description: Change TLS Client Auth setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_tls_client_auth'
        4XX:
          description: Change TLS Client Auth setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/true_client_ip_header:
    get:
      tags:
        - Clients
        - Header
        - IP
        - Settings
        - 'True'
        - Zones
      summary: 'Get True Client IP Setting '
      description: >-
        Allows customer to continue to use True Client IP (Akamai feature) in
        the headers we send to the origin. This is limited to Enterprise Zones.
      operationId: zone-settings-get-true-client-ip-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get True Client IP setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_true_client_ip_header'
        4XX:
          description: Get True Client IP setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Clients
        - Header
        - IP
        - Settings
        - 'True'
        - Zones
      summary: 'Change True Client IP Setting '
      description: >-
        Allows customer to continue to use True Client IP (Akamai feature) in
        the headers we send to the origin. This is limited to Enterprise Zones.
      operationId: zone-settings-change-true-client-ip-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_true_client_ip_header_value'
      responses:
        '200':
          description: Change True Client IP setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_true_client_ip_header'
        4XX:
          description: Change True Client IP setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/waf:
    get:
      tags:
        - (WAF)
        - Applications
        - Firewall
        - Settings
        - WAF
        - Web
        - Zones
      summary: 'Get Web Application Firewall (WAF) Setting '
      description: >-
        The WAF examines HTTP requests to your website.  It inspects both GET
        and POST requests and applies rules to help filter out illegitimate
        traffic from legitimate website visitors. The Cloudflare WAF inspects
        website addresses or URLs to detect anything out of the ordinary. If the
        Cloudflare WAF determines suspicious user behavior, then the WAF will
        'challenge' the web visitor with a page that asks them to submit a
        CAPTCHA successfully  to continue their action. If the challenge is
        failed, the action will be stopped. What this means is that Cloudflare's
        WAF will block any traffic identified as illegitimate before it reaches
        your origin web server.
        (https://support.cloudflare.com/hc/en-us/articles/200172016).
      operationId: zone-settings-get-web-application-firewall-(-waf)-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get Web Application Firewall (WAF) setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_waf'
        4XX:
          description: Get Web Application Firewall (WAF) setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - (WAF)
        - Applications
        - Change
        - Firewall
        - Settings
        - WAF
        - Web
        - Zones
      summary: 'Change Web Application Firewall (WAF) Setting '
      description: >-
        The WAF examines HTTP requests to your website.  It inspects both GET
        and POST requests and applies rules to help filter out illegitimate
        traffic from legitimate website visitors. The Cloudflare WAF inspects
        website addresses or URLs to detect anything out of the ordinary. If the
        Cloudflare WAF determines suspicious user behavior, then the WAF will
        'challenge' the web visitor with a page that asks them to submit a
        CAPTCHA successfully  to continue their action. If the challenge is
        failed, the action will be stopped. What this means is that Cloudflare's
        WAF will block any traffic identified as illegitimate before it reaches
        your origin web server.
        (https://support.cloudflare.com/hc/en-us/articles/200172016).
      operationId: zone-settings-change-web-application-firewall-(-waf)-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_waf_value'
      responses:
        '200':
          description: Change Web Application Firewall (WAF) setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_waf'
        4XX:
          description: Change Web Application Firewall (WAF) setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/webp:
    get:
      tags:
        - Settings
        - Web
        - Webp
        - Zones
      summary: 'Get Web P Setting '
      description: >-
        When the client requesting the image supports the WebP image codec, and
        WebP offers a performance advantage over the original image format,
        Cloudflare will serve a WebP version of the original image.
      operationId: zone-settings-get-web-p-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get WebP setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_webp'
        4XX:
          description: Get WebP setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Settings
        - Web
        - Webp
        - Zones
      summary: 'Change Web P Setting '
      description: >-
        When the client requesting the image supports the WebP image codec, and
        WebP offers a performance advantage over the original image format,
        Cloudflare will serve a WebP version of the original image.
      operationId: zone-settings-change-web-p-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_webp_value'
      responses:
        '200':
          description: Change WebP setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_webp'
        4XX:
          description: Change WebP setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/websockets:
    get:
      tags:
        - Settings
        - Sockets
        - Web
        - Websockets
        - Zones
      summary: 'Get Web Sockets Setting '
      description: >-
        Gets Websockets setting. For more information about Websockets, please
        refer to [Using Cloudflare with
        WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).
      operationId: zone-settings-get-web-sockets-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      responses:
        '200':
          description: Get WebSockets setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_websockets'
        4XX:
          description: Get WebSockets setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Change
        - Settings
        - Sockets
        - Web
        - Websockets
        - Zones
      summary: 'Change Web Sockets Setting '
      description: >-
        Changes Websockets setting. For more information about Websockets,
        please refer to [Using Cloudflare with
        WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).
      operationId: zone-settings-change-web-sockets-setting
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zones_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - value
              properties:
                value:
                  $ref: '#/components/schemas/zones_websockets_value'
      responses:
        '200':
          description: Change WebSockets setting response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zones_zone_settings_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/zones_websockets'
        4XX:
          description: Change WebSockets setting response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zones_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/zaraz/config:
    get:
      tags:
        - Configurations
        - Settings
        - Zones
      summary: 'Get Zaraz Configuration '
      description: >-
        Gets latest Zaraz configuration for a zone. It can be preview or
        published configuration, whichever was the last updated. Secret
        variables values will not be included.
      operationId: get-zones-zone_identifier-zaraz-config
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      responses:
        '200':
          description: Get Zaraz configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-config-response'
        4XX:
          description: Get Zaraz configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Configurations
        - Settings
        - Zones
      summary: 'Update Zaraz Configuration '
      description: Updates Zaraz configuration for a zone.
      operationId: put-zones-zone_identifier-zaraz-config
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zaraz_zaraz-config-body'
      responses:
        '200':
          description: Update Zaraz configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-config-response'
        4XX:
          description: Update Zaraz configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/zaraz/default:
    get:
      tags:
        - Configurations
        - Default
        - Settings
        - Zones
      summary: 'Get Default Zaraz Configuration '
      description: Gets default Zaraz configuration for a zone.
      operationId: get-zones-zone_identifier-zaraz-default
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      responses:
        '200':
          description: Get Zaraz default configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-config-response'
        4XX:
          description: Get Zaraz default configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/zaraz/export:
    get:
      tags:
        - Configurations
        - Exports
        - Settings
        - Zones
      summary: 'Export Zaraz Configuration '
      description: >-
        Exports full current published Zaraz configuration for a zone, secret
        variables included.
      operationId: get-zones-zone_identifier-zaraz-export
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      responses:
        '200':
          description: Get Zaraz configuration response
          headers:
            Content-Disposition:
              parameter:
                schema:
                  type: string
                example: attachment; filename=zaraz-2023-11-10-23-00.json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-config-return'
        4XX:
          description: Get Zaraz configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/zaraz/history:
    get:
      tags:
        - Configurations
        - Historical
        - History
        - Records
        - Settings
        - Zones
      summary: 'List Zaraz Historical Configuration Records '
      description: Lists a history of published Zaraz configuration records for a zone.
      operationId: get-zones-zone_identifier-zaraz-history
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
        - name: offset
          in: query
          description: >-
            Ordinal number to start listing the results with. Default value is
            0.
          schema:
            type: integer
            minimum: 0
          example: 0
        - name: limit
          in: query
          description: Maximum amount of results to list. Default value is 10.
          schema:
            type: integer
            minimum: 1
          example: 10
        - name: sortField
          in: query
          description: The field to sort by. Default is updated_at.
          schema:
            type: string
            enum:
              - id
              - user_id
              - description
              - created_at
              - updated_at
          example: updated_at
        - name: sortOrder
          in: query
          description: Sorting order. Default is DESC.
          schema:
            type: string
            enum:
              - DESC
              - ASC
          example: DESC
      responses:
        '200':
          description: List Zaraz historical configuration records response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-history-response'
        4XX:
          description: List Zaraz historical configuration records failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Configurations
        - Historical
        - History
        - ID
        - Restore
        - Settings
        - Zones
      summary: 'Restore Zaraz Historical Configuration By ID '
      description: Restores a historical published Zaraz configuration by ID for a zone.
      operationId: put-zones-zone_identifier-zaraz-history
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: integer
              description: ID of the Zaraz configuration to restore.
              example: 12345
              minimum: 1
      responses:
        '200':
          description: Restore Zaraz historical configuration by ID response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-config-response'
        4XX:
          description: Restore Zaraz historical configuration by ID failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/zaraz/history/configs:
    get:
      tags:
        - Configurations
        - Historical
        - History
        - ID(s)
        - Settings
        - Zones
      summary: 'Get Zaraz Historical Configurations By ID(s) '
      description: Gets a history of published Zaraz configurations by ID(s) for a zone.
      operationId: get-zones-zone_identifier-zaraz-config-history
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
        - name: ids
          in: query
          description: Comma separated list of Zaraz configuration IDs
          style: form
          explode: false
          required: true
          schema:
            type: array
            items:
              type: integer
          example:
            - 12345
            - 23456
      responses:
        '200':
          description: Get Zaraz historical configurations by ID(s) response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-config-history-response'
        4XX:
          description: Get Zaraz historical configurations by ID(s) failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/zaraz/publish:
    post:
      tags:
        - Configurations
        - Previews
        - Publish
        - Settings
        - Zones
      summary: 'Publish Zaraz Preview Configuration '
      description: Publish current Zaraz preview configuration for a zone.
      operationId: post-zones-zone_identifier-zaraz-publish
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Zaraz configuration description.
              example: Config with enabled ecommerce tracking
      responses:
        '200':
          description: Update Zaraz workflow response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zaraz_api-response-common'
                  - properties:
                      result:
                        type: string
                        example: Config has been published successfully
        4XX:
          description: Update Zaraz workflow response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/settings/zaraz/workflow:
    get:
      tags:
        - Settings
        - Workflows
        - Zones
      summary: 'Get Zaraz Workflow '
      description: Gets Zaraz workflow for a zone.
      operationId: get-zones-zone_identifier-zaraz-workflow
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      responses:
        '200':
          description: Get Zaraz workflow response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-workflow-response'
        4XX:
          description: Get Zaraz workflow response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Settings
        - Workflows
        - Zones
      summary: 'Update Zaraz Workflow '
      description: Updates Zaraz workflow for a zone.
      operationId: put-zones-zone_identifier-zaraz-workflow
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zaraz_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zaraz_zaraz-workflow'
      responses:
        '200':
          description: Update Zaraz workflow response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_zaraz-workflow-response'
        4XX:
          description: Update Zaraz workflow response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zaraz_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/speed_api/availabilities:
    get:
      tags:
        - Availabilities
        - Availability
        - Quota
        - Speed
        - Zones
      summary: 'Get Quota And Availability '
      description: Retrieves quota for all plans, as well as the current zone quota.
      operationId: speed-get-availabilities
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
      responses:
        '200':
          description: Page test availability
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_availabilities-response'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/speed_api/pages:
    get:
      tags:
        - Pages
        - Speed
        - Tested
        - Webpages
        - Zones
      summary: 'List Tested Webpages '
      description: Lists all webpages which have been tested.
      operationId: speed-list-pages
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
      responses:
        '200':
          description: List of pages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_pages-response-collection'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/speed_api/pages/{url}/tests:
    delete:
      tags:
        - Page
        - Pages
        - Speed
        - Tests
        - URL
        - Zones
      summary: 'Delete All Page Tests '
      description: >-
        Deletes all tests for a specific webpage from a specific region. Deleted
        tests are still counted as part of the quota.
      operationId: speed-delete-tests
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
        - name: region
          in: query
          schema:
            $ref: '#/components/schemas/observatory_region'
      responses:
        '200':
          description: Number of deleted tests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_count-response'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - History
        - Page
        - Pages
        - Speed
        - Tests
        - URL
        - Zones
      summary: 'List Page Test History '
      description: Test history (list of tests) for a specific webpage.
      operationId: speed-list-test-history
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
        - name: page
          in: query
          schema:
            type: integer
            example: 1
        - name: per_page
          in: query
          schema:
            type: integer
            example: 20
            minimum: 5
            maximum: 50
        - name: region
          in: query
          schema:
            $ref: '#/components/schemas/observatory_region'
      responses:
        '200':
          description: List of test history for a page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_page-test-response-collection'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Page
        - Pages
        - Speed
        - Tests
        - URL
        - Zones
      summary: 'Start Page Test '
      description: Starts a test for a specific webpage, in a specific region.
      operationId: speed-create-test
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                region:
                  $ref: '#/components/schemas/observatory_region'
      responses:
        '200':
          description: Page test details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_page-test-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/speed_api/pages/{url}/tests/{test_id}:
    get:
      tags:
        - Page
        - Pages
        - Results
        - Speed
        - Tests
        - URL
        - Zones
      summary: 'Get A Page Test Result '
      description: Retrieves the result of a specific test.
      operationId: speed-get-test
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
        - name: test_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Page test result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_page-test-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/speed_api/pages/{url}/trend:
    get:
      tags:
        - Core
        - Metrics
        - Pages
        - Speed
        - Trend
        - URL
        - Vital
        - Web
        - Zones
      summary: 'List Core Web Vital Metrics Trend '
      description: Lists the core web vital metrics trend over time for a specific page.
      operationId: speed-list-page-trend
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
        - name: region
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/observatory_region'
        - name: deviceType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/observatory_device_type'
        - name: start
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/observatory_timestamp'
        - name: end
          in: query
          schema:
            $ref: '#/components/schemas/observatory_timestamp'
        - name: tz
          in: query
          description: The timezone of the start and end timestamps.
          required: true
          schema:
            type: string
          example: America/Chicago
        - name: metrics
          in: query
          description: A comma-separated list of metrics to include in the results.
          required: true
          schema:
            type: string
            example: performanceScore,ttfb,fcp,si,lcp,tti,tbt,cls
      responses:
        '200':
          description: Page trend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_trend-response'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/speed_api/schedule/{url}:
    delete:
      tags:
        - Page
        - Scheduled
        - Schedules
        - Speed
        - Tests
        - URL
        - Zones
      summary: 'Delete Scheduled Page Test '
      description: Deletes a scheduled test for a page.
      operationId: speed-delete-test-schedule
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
        - name: region
          in: query
          schema:
            $ref: '#/components/schemas/observatory_region'
      responses:
        '200':
          description: Number of deleted tests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_count-response'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Page
        - Schedules
        - Speed
        - Tests
        - URL
        - Zones
      summary: 'Get A Page Test Schedule '
      description: Retrieves the test schedule for a page in a specific region.
      operationId: speed-get-scheduled-test
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
        - name: region
          in: query
          schema:
            $ref: '#/components/schemas/observatory_region'
      responses:
        '200':
          description: Page test schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_schedule-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Page
        - Scheduled
        - Schedules
        - Speed
        - Tests
        - URL
        - Zones
      summary: 'Create Scheduled Page Test '
      description: Creates a scheduled test for a page.
      operationId: speed-create-scheduled-test
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_identifier'
        - name: url
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/observatory_url'
        - name: region
          in: query
          schema:
            $ref: '#/components/schemas/observatory_region'
      responses:
        '200':
          description: Page test schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_create-schedule-response'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observatory_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/analyze:
    post:
      tags:
        - Analyze
        - Certificates
        - Ssl
        - Zones
      summary: 'Analyze Certificate '
      description: >-
        Returns the set of hostnames, the signature algorithm, and the
        expiration date of the certificate.
      operationId: analyze-certificate-analyze-certificate
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bundle_method:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_bundle_method
                certificate:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_certificate
      responses:
        '200':
          description: Analyze Certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_analyze_response
        4XX:
          description: Analyze Certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_analyze_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/certificate_packs:
    get:
      tags:
        - Certificates
        - Packs
        - Ssl
        - Zones
      summary: 'List Certificate Packs '
      description: For a given zone, list all active certificate packs.
      operationId: certificate-packs-list-certificate-packs
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: status
          in: query
          schema:
            description: Include Certificate Packs of all statuses, not just active ones.
            enum:
              - all
            example: all
      responses:
        '200':
          description: List Certificate Packs response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_pack_response_collection
        4XX:
          description: List Certificate Packs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_pack_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/certificate_packs/{certificate_pack_id}:
    delete:
      tags:
        - Advanced
        - Certificates
        - Managers
        - Pack
        - Packs
        - Ssl
        - Zones
      summary: 'Delete Advanced Certificate Manager Certificate Pack '
      description: For a given zone, delete an advanced certificate pack.
      operationId: certificate-packs-delete-advanced-certificate-manager-certificate-pack
      parameters:
        - name: certificate_pack_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Advanced Certificate Manager Certificate Pack response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_delete_advanced_certificate_pack_response_single
        4XX:
          description: >-
            Delete Advanced Certificate Manager Certificate Pack response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_delete_advanced_certificate_pack_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Certificates
        - Pack
        - Packs
        - Ssl
        - Zones
      summary: 'Get Certificate Pack '
      description: For a given zone, get a certificate pack.
      operationId: certificate-packs-get-certificate-pack
      parameters:
        - name: certificate_pack_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get Certificate Pack response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_pack_response_single
        4XX:
          description: Get Certificate Pack response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_pack_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Advanced
        - Certificates
        - Managers
        - Pack
        - Packs
        - Restart
        - Ssl
        - Validations
        - Zones
      summary: 'Restart Validation For Advanced Certificate Manager Certificate Pack '
      description: >-
        For a given zone, restart validation for an advanced certificate pack. 
        This is only a validation operation for a Certificate Pack in a
        validation_timed_out status.
      operationId: >-
        certificate-packs-restart-validation-for-advanced-certificate-manager-certificate-pack
      parameters:
        - name: certificate_pack_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: >-
            Restart Validation for Advanced Certificate Manager Certificate Pack
            response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_advanced_certificate_pack_response_single
        4XX:
          description: >-
            Restart Validation for Advanced Certificate Manager Certificate Pack
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_advanced_certificate_pack_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/certificate_packs/order:
    post:
      tags:
        - Advanced
        - Certificates
        - Managers
        - Orders
        - Pack
        - Packs
        - Ssl
        - Zones
      summary: 'Order Advanced Certificate Manager Certificate Pack '
      description: For a given zone, order an advanced certificate pack.
      operationId: certificate-packs-order-advanced-certificate-manager-certificate-pack
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - hosts
                - validation_method
                - validity_days
                - certificate_authority
              properties:
                certificate_authority:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-certificate_authority
                cloudflare_branding:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_cloudflare_branding
                hosts:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-hosts
                type:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_advanced_type
                validation_method:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_validation_method
                validity_days:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_validity_days
      responses:
        '200':
          description: Order Advanced Certificate Manager Certificate Pack response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_advanced_certificate_pack_response_single
        4XX:
          description: Order Advanced Certificate Manager Certificate Pack response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_advanced_certificate_pack_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/certificate_packs/quota:
    get:
      tags:
        - Certificates
        - Pack
        - Packs
        - Quota
        - Quotas
        - Ssl
        - Zones
      summary: 'Get Certificate Pack Quotas '
      description: For a given zone, list certificate pack quotas.
      operationId: certificate-packs-get-certificate-pack-quotas
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get Certificate Pack Quotas response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_pack_quota_response
        4XX:
          description: Get Certificate Pack Quotas response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_pack_quota_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/universal/settings:
    get:
      tags:
        - Details
        - SSL
        - Settings
        - Ssl
        - Universal
        - Zones
      summary: 'Universal SSL Settings Details '
      description: Get Universal SSL Settings for a Zone.
      operationId: universal-ssl-settings-for-a-zone-universal-ssl-settings-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Universal SSL Settings Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_ssl_universal_settings_response
        4XX:
          description: Universal SSL Settings Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_ssl_universal_settings_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Edit
        - SSL
        - Settings
        - Ssl
        - Universal
        - Zones
      summary: 'Edit Universal SSL Settings '
      description: Patch Universal SSL Settings for a Zone.
      operationId: universal-ssl-settings-for-a-zone-edit-universal-ssl-settings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tls-certificates-and-hostnames_universal'
      responses:
        '200':
          description: Edit Universal SSL Settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_ssl_universal_settings_response
        4XX:
          description: Edit Universal SSL Settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_ssl_universal_settings_response
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/verification:
    get:
      tags:
        - Details
        - SSL
        - Ssl
        - Verification
        - Zones
      summary: 'SSL Verification Details '
      description: Get SSL Verification Info for a Zone.
      operationId: ssl-verification-ssl-verification-details
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: retry
          in: query
          schema:
            description: Immediately retry SSL Verification.
            enum:
              - true
            example: true
      responses:
        '200':
          description: SSL Verification Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_ssl_verification_response_collection
        4XX:
          description: SSL Verification Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_ssl_verification_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/ssl/verification/{certificate_pack_id}:
    patch:
      tags:
        - Certificates
        - Edit
        - Methods
        - Pack
        - SSL
        - Ssl
        - Validations
        - Verification
        - Zones
      summary: 'Edit SSL Certificate Pack Validation Method '
      description: >-
        Edit SSL validation method for a certificate pack. A PATCH request will
        request an immediate validation check on any certificate, and return the
        updated status. If a validation method is provided, the validation will
        be immediately attempted using that method.
      operationId: ssl-verification-edit-ssl-certificate-pack-validation-method
      parameters:
        - name: certificate_pack_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_cert_pack_uuid'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/tls-certificates-and-hostnames_components-schemas-validation_method
      responses:
        '200':
          description: Edit SSL Certificate Pack Validation Method response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_ssl_validation_method_response_collection
        4XX:
          description: Edit SSL Certificate Pack Validation Method response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_ssl_validation_method_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/url_normalization:
    get:
      tags:
        - Normalization
        - Settings
        - URL
        - Zones
      summary: 'Get URL Normalization Settings '
      description: Fetches the current URL normalization settings.
      operationId: url-normalization-get-url-normalization-settings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_identifier'
      responses:
        '200':
          description: Get URL normalization settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_schemas-response_model'
        4XX:
          description: Get URL normalization settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_schemas-response_model'
                  - $ref: '#/components/schemas/rulesets_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Normalization
        - Settings
        - URL
        - Zones
      summary: 'Update URL Normalization Settings '
      description: Updates the URL normalization settings.
      operationId: url-normalization-update-url-normalization-settings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_schemas-request_model'
      responses:
        '200':
          description: Update URL normalization settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_schemas-response_model'
        4XX:
          description: Update URL normalization settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_schemas-response_model'
                  - $ref: '#/components/schemas/rulesets_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_id}/workers/filters:
    get:
      tags:
        - Filters
        - Workers
        - Zones
      summary: 'List Filters '
      operationId: worker-filters-(-deprecated)-list-filters
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Filters response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_filter-response-collection'
        4XX:
          description: List Filters response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_filter-response-collection'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Filter
        - Filters
        - Workers
        - Zones
      summary: 'Create Filter '
      operationId: worker-filters-(-deprecated)-create-filter
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_filter-no-id'
      responses:
        '200':
          description: Create Filter response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-single-id'
        4XX:
          description: Create Filter response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-single-id'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/workers/filters/{filter_id}:
    delete:
      tags:
        - Filter
        - Filters
        - Workers
        - Zones
      summary: 'Delete Filter '
      operationId: worker-filters-(-deprecated)-delete-filter
      parameters:
        - name: filter_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Filter response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-single-id'
        4XX:
          description: Delete Filter response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-single-id'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Filter
        - Filters
        - Workers
        - Zones
      summary: 'Update Filter '
      operationId: worker-filters-(-deprecated)-update-filter
      parameters:
        - name: filter_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_filter-no-id'
      responses:
        '200':
          description: Update Filter response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_filter-response-single'
        4XX:
          description: Update Filter response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_filter-response-single'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/workers/routes:
    get:
      tags:
        - Routes
        - Workers
        - Zones
      summary: 'List Routes '
      description: Returns routes for a zone.
      operationId: worker-routes-list-routes
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Routes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_route-response-collection'
        4XX:
          description: List Routes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_route-response-collection'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Routes
        - Workers
        - Zones
      summary: 'Create Route '
      description: Creates a route that maps a URL pattern to a Worker.
      operationId: worker-routes-create-route
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_route-no-id'
      responses:
        '200':
          description: Create Route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-single'
        4XX:
          description: Create Route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-single'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/workers/routes/{route_id}:
    delete:
      tags:
        - Routes
        - Workers
        - Zones
      summary: 'Delete Route '
      description: Deletes a route.
      operationId: worker-routes-delete-route
      parameters:
        - name: route_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-single'
        4XX:
          description: Delete Route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-single'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Routes
        - Workers
        - Zones
      summary: 'Get Route '
      description: Returns information about a route, including URL pattern and Worker.
      operationId: worker-routes-get-route
      parameters:
        - name: route_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Get Route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_route-response-single'
        4XX:
          description: Get Route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_route-response-single'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Routes
        - Workers
        - Zones
      summary: 'Update Route '
      description: Updates the URL pattern or Worker associated with a route.
      operationId: worker-routes-update-route
      parameters:
        - name: route_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_route-no-id'
      responses:
        '200':
          description: Update Route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_route-response-single'
        4XX:
          description: Update Route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_route-response-single'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/workers/script:
    delete:
      tags:
        - Scripts
        - Workers
        - Zones
      summary: 'Delete Worker '
      description: >-
        Delete your Worker. This call has no response body on a successful
        delete.
      operationId: worker-script-(-deprecated)-delete-worker
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Worker response.
          content:
            application/json: {}
        4XX:
          description: Delete Worker response failure.
          content:
            application/json: {}
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Download
        - Scripts
        - Workers
        - Zones
      summary: 'Download Worker '
      description: >-
        Fetch raw script content for your worker. Note this is the original
        script content, not JSON encoded.
      operationId: worker-script-(-deprecated)-download-worker
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Download Worker response
          content:
            undefined:
              schema:
                example: >-
                  addEventListener('fetch', event => {
                  event.respondWith(fetch(event.request)) })
        4XX:
          description: Download Worker response failure
          content:
            undefined:
              schema:
                example: >-
                  addEventListener('fetch', event => {
                  event.respondWith(fetch(event.request)) })
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Scripts
        - Uploads
        - Workers
        - Zones
      summary: 'Upload Worker '
      description: Upload a worker, or a new version of a worker.
      operationId: worker-script-(-deprecated)-upload-worker
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/javascript:
            schema:
              example: >-
                addEventListener('fetch', event => {
                event.respondWith(fetch(event.request)) })
      responses:
        '200':
          description: Upload Worker response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_schemas-script-response-single'
        4XX:
          description: Upload Worker response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/workers_schemas-script-response-single
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_id}/workers/script/bindings:
    get:
      tags:
        - Bindings
        - Scripts
        - Workers
        - Zones
      summary: 'List Bindings '
      description: List the bindings for a Workers script.
      operationId: worker-binding-(-deprecated)-list-bindings
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Bindings response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/workers_schemas-binding'
        4XX:
          description: List Bindings response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-common'
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/workers_schemas-binding'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/analytics/colos:
    get:
      tags:
        - Analytics
        - Co locations
        - Zones
      summary: 'Get Analytics By Co-locations '
      description: >-
        This view provides a breakdown of analytics data by datacenter. Note:
        This is available to Enterprise customers only.
      operationId: zone-analytics-(-deprecated)-get-analytics-by-co-locations
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_identifier'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_until'
        - name: since
          in: query
          schema:
            anyOf:
              - type: string
              - type: integer
            description: >-
              The (inclusive) beginning of the requested time frame. This value
              can be a negative integer representing the number of minutes in
              the past relative to time the request is made, or can be an
              absolute timestamp that conforms to RFC 3339. At this point in
              time, it cannot exceed a time in the past greater than one year.


              Ranges that the Cloudflare web application provides will provide
              the following period length for each point:

              - Last 60 minutes (from -59 to -1): 1 minute resolution

              - Last 7 hours (from -419 to -60): 15 minutes resolution

              - Last 15 hours (from -899 to -420): 30 minutes resolution

              - Last 72 hours (from -4320 to -900): 1 hour resolution

              - Older than 3 days (-525600 to -4320): 1 day resolution.
            default: -10080
            example: '2015-01-01T12:23:00Z'
        - name: continuous
          in: query
          schema:
            type: boolean
            description: >-
              When set to true, the API will move the requested time window
              backward, until it finds a region with completely aggregated data.


              The API response _may not represent the requested time window_.
            default: true
      responses:
        '200':
          description: Get analytics by Co-locations response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data-zone-analytics-api_colo_response'
        4XX:
          description: Get analytics by Co-locations response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/data-zone-analytics-api_colo_response'
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_api-response-common-failure
      deprecated: true
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/analytics/dashboard:
    get:
      tags:
        - Analytics
        - Dashboard
        - Zones
      summary: 'Get Dashboard '
      description: >-
        The dashboard view provides both totals and timeseries data for the
        given zone and time period across the entire Cloudflare network.
      operationId: zone-analytics-(-deprecated)-get-dashboard
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_identifier'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_until'
        - name: since
          in: query
          schema:
            anyOf:
              - type: string
              - type: integer
            description: >-
              The (inclusive) beginning of the requested time frame. This value
              can be a negative integer representing the number of minutes in
              the past relative to time the request is made, or can be an
              absolute timestamp that conforms to RFC 3339. At this point in
              time, it cannot exceed a time in the past greater than one year.


              Ranges that the Cloudflare web application provides will provide
              the following period length for each point:

              - Last 60 minutes (from -59 to -1): 1 minute resolution

              - Last 7 hours (from -419 to -60): 15 minutes resolution

              - Last 15 hours (from -899 to -420): 30 minutes resolution

              - Last 72 hours (from -4320 to -900): 1 hour resolution

              - Older than 3 days (-525600 to -4320): 1 day resolution.
            default: -10080
            example: '2015-01-01T12:23:00Z'
        - name: continuous
          in: query
          schema:
            type: boolean
            description: >-
              When set to true, the API will move the requested time window
              backward, until it finds a region with completely aggregated data.


              The API response _may not represent the requested time window_.
            default: true
      responses:
        '200':
          description: Get dashboard response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/data-zone-analytics-api_dashboard_response
        4XX:
          description: Get dashboard response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_dashboard_response
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_api-response-common-failure
      deprecated: true
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/available_plans:
    get:
      tags:
        - Available
        - Plans
        - Zones
      summary: 'List Available Plans '
      description: Lists available plans the zone can subscribe to.
      operationId: zone-rate-plan-list-available-plans
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
      responses:
        '200':
          description: List Available Plans response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bill-subs-api_api-response-collection'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/bill-subs-api_available-rate-plan
        4XX:
          description: List Available Plans response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/bill-subs-api_api-response-collection
                      - properties:
                          result:
                            type: array
                            items:
                              $ref: >-
                                #/components/schemas/bill-subs-api_available-rate-plan
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/available_plans/{plan_identifier}:
    get:
      tags:
        - Available
        - Details
        - Plan
        - Plans
        - Zones
      summary: 'Available Plan Details '
      description: Details of the available plan that the zone can subscribe to.
      operationId: zone-rate-plan-available-plan-details
      parameters:
        - name: plan_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
      responses:
        '200':
          description: Available Plan Details response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bill-subs-api_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/bill-subs-api_available-rate-plan'
        4XX:
          description: Available Plan Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/bill-subs-api_api-response-single'
                      - properties:
                          result:
                            $ref: >-
                              #/components/schemas/bill-subs-api_available-rate-plan
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/available_rate_plans:
    get:
      tags:
        - Available
        - Plans
        - Rates
        - Zones
      summary: 'List Available Rate Plans '
      description: Lists all rate plans the zone can subscribe to.
      operationId: zone-rate-plan-list-available-rate-plans
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
      responses:
        '200':
          description: List Available Rate Plans response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bill-subs-api_plan_response_collection'
        4XX:
          description: List Available Rate Plans response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bill-subs-api_plan_response_collection
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/custom_pages:
    get:
      tags:
        - Custom
        - Pages
        - Zones
      summary: 'List Custom Pages '
      description: Fetches all the custom pages at the zone level.
      operationId: custom-pages-for-a-zone-list-custom-pages
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
      responses:
        '200':
          description: List custom pages response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/custom-pages_custom_pages_response_collection
        4xx:
          description: List custom pages response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/custom-pages_custom_pages_response_collection
                  - $ref: >-
                      #/components/schemas/custom-pages_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/custom_pages/{identifier}:
    get:
      tags:
        - Custom
        - Page
        - Pages
        - Zones
      summary: 'Get A Custom Page '
      description: Fetches the details of a custom page.
      operationId: custom-pages-for-a-zone-get-a-custom-page
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
      responses:
        '200':
          description: Get a custom page response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-pages_custom_pages_response_single'
        4xx:
          description: Get a custom page response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/custom-pages_custom_pages_response_single
                  - $ref: >-
                      #/components/schemas/custom-pages_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Custom
        - Page
        - Pages
        - Zones
      summary: 'Update A Custom Page '
      description: Updates the configuration of an existing custom page.
      operationId: custom-pages-for-a-zone-update-a-custom-page
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - url
                - state
              properties:
                state:
                  $ref: '#/components/schemas/custom-pages_state'
                url:
                  $ref: '#/components/schemas/custom-pages_url'
      responses:
        '200':
          description: Update a custom page response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-pages_custom_pages_response_single'
        4xx:
          description: Update a custom page response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/custom-pages_custom_pages_response_single
                  - $ref: >-
                      #/components/schemas/custom-pages_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/email/routing:
    get:
      tags:
        - Emails
        - Routing
        - Settings
        - Zones
      summary: 'Get Email Routing Settings '
      description: Get information about the settings for your Email Routing zone.
      operationId: email-routing-settings-get-email-routing-settings
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          description: Get Email Routing settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_email_settings_response_single'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/email/routing/disable:
    post:
      tags:
        - Disable
        - Emails
        - Routing
        - Zones
      summary: 'Disable Email Routing '
      description: >-
        Disable your Email Routing zone. Also removes additional MX records
        previously required for Email Routing to work.
      operationId: email-routing-settings-disable-email-routing
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Disable Email Routing response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_email_settings_response_single'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/email/routing/dns:
    get:
      tags:
        - DNS
        - Emails
        - Routing
        - Settings
        - Zones
      summary: 'Email Routing - DNS Settings '
      description: Show the DNS records needed to configure your Email Routing zone.
      operationId: email-routing-settings-email-routing-dns-settings
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          description: Email Routing - DNS settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_dns_settings_response_collection'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/email/routing/enable:
    post:
      tags:
        - Emails
        - Enable
        - Routing
        - Zones
      summary: 'Enable Email Routing '
      description: >-
        Enable you Email Routing zone. Add and lock the necessary MX and SPF
        records.
      operationId: email-routing-settings-enable-email-routing
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Enable Email Routing response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_email_settings_response_single'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/email/routing/rules:
    get:
      tags:
        - Emails
        - Routing
        - Rules
        - Zones
      summary: 'List Routing Rules '
      description: Lists existing routing rules.
      operationId: email-routing-routing-rules-list-routing-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of results per page.
            default: 20
            minimum: 5
            maximum: 50
        - name: enabled
          in: query
          schema:
            type: boolean
            description: Filter by enabled routing rules.
            enum:
              - true
              - false
            example: true
      responses:
        '200':
          description: List routing rules response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rules_response_collection'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Emails
        - Routing
        - Rules
        - Zones
      summary: 'Create Routing Rule '
      description: >-
        Rules consist of a set of criteria for matching emails (such as an email
        being sent to a specific custom email address) plus a set of actions to
        take on the email (like forwarding it to a specific destination
        address).
      operationId: email-routing-routing-rules-create-routing-rule
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_create_rule_properties'
      responses:
        '200':
          description: Create routing rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/email/routing/rules/{rule_identifier}:
    delete:
      tags:
        - Emails
        - Routing
        - Rules
        - Zones
      summary: 'Delete Routing Rule '
      description: Delete a specific routing rule.
      operationId: email-routing-routing-rules-delete-routing-rule
      parameters:
        - name: rule_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_rule_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          description: Delete routing rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Emails
        - Routing
        - Rules
        - Zones
      summary: 'Get Routing Rule '
      description: Get information for a specific routing rule already created.
      operationId: email-routing-routing-rules-get-routing-rule
      parameters:
        - name: rule_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_rule_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          description: Get routing rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Emails
        - Routing
        - Rules
        - Zones
      summary: 'Update Routing Rule '
      description: Update actions and matches, or enable/disable specific routing rules.
      operationId: email-routing-routing-rules-update-routing-rule
      parameters:
        - name: rule_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_rule_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_update_rule_properties'
      responses:
        '200':
          description: Update routing rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_rule_response_single'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/email/routing/rules/catch_all:
    get:
      tags:
        - Catch
        - Catch all
        - Emails
        - Routing
        - Rules
        - Zones
      summary: 'Get Catch-all Rule '
      description: Get information on the default catch-all routing rule.
      operationId: email-routing-routing-rules-get-catch-all-rule
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          description: Get catch-all rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_catch_all_rule_response_single'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Catch
        - Catch all
        - Emails
        - Routing
        - Rules
        - Zones
      summary: 'Update Catch-all Rule '
      description: >-
        Enable or disable catch-all routing rule, or change action to forward to
        specific destination address.
      operationId: email-routing-routing-rules-update-catch-all-rule
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_update_catch_all_rule_properties'
      responses:
        '200':
          description: Update catch-all rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_catch_all_rule_response_single'
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/filters:
    delete:
      tags:
        - Filters
        - Zones
      summary: 'Delete Filters '
      description: Deletes one or more existing filters.
      operationId: filters-delete-filters
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: >-
                    #/components/schemas/legacy-jhs_filters_components-schemas-id
      responses:
        '200':
          description: Delete filters response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-delete-response-collection
        4xx:
          description: Delete filters response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-delete-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Filters
        - Zones
      summary: 'List Filters '
      description: >-
        Fetches filters in a zone. You can filter the results using several
        optional parameters.
      operationId: filters-list-filters
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: paused
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_filters_components-schemas-paused'
        - name: expression
          in: query
          schema:
            type: string
            description: A case-insensitive string to find in the expression.
            example: php
        - name: description
          in: query
          schema:
            type: string
            description: A case-insensitive string to find in the description.
            example: browsers
        - name: ref
          in: query
          schema:
            type: string
            description: >-
              The filter ref (a short reference tag) to search for. Must be an
              exact match.
            example: FIL-100
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of filters per page.
            default: 25
            minimum: 5
            maximum: 100
        - name: id
          in: query
          schema:
            type: string
            description: The unique identifier of the filter.
            example: 372e67954025e0ba6aaa6d586b9e0b61
            readOnly: true
            minLength: 32
            maxLength: 32
      responses:
        '200':
          description: List filters response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_schemas-filter-response-collection
        4xx:
          description: List filters response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_schemas-filter-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Filters
        - Zones
      summary: 'Create Filters '
      description: Creates one or more filters.
      operationId: filters-create-filters
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - expression
      responses:
        '200':
          description: Create filters response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_schemas-filter-response-collection
        4xx:
          description: Create filters response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_schemas-filter-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Filters
        - Zones
      summary: 'Update Filters '
      description: Updates one or more existing filters.
      operationId: filters-update-filters
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update filters response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_schemas-filter-response-collection
        4xx:
          description: Update filters response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_schemas-filter-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/filters/{id}:
    delete:
      tags:
        - Filter
        - Filters
        - Zones
      summary: 'Delete A Filter '
      description: Deletes an existing filter.
      operationId: filters-delete-a-filter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_filters_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a filter response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_filter-delete-response-single'
        4xx:
          description: Delete a filter response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-delete-response-single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Filter
        - Filters
        - Zones
      summary: 'Get A Filter '
      description: Fetches the details of a filter.
      operationId: filters-get-a-filter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_filters_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: Get a filter response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_schemas-filter-response-single'
        4xx:
          description: Get a filter response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_schemas-filter-response-single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Filter
        - Filters
        - Zones
      summary: 'Update A Filter '
      description: Updates an existing filter.
      operationId: filters-update-a-filter
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_filters_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update a filter response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_schemas-filter-response-single'
        4xx:
          description: Update a filter response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_schemas-filter-response-single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/lockdowns:
    get:
      tags:
        - Firewall
        - Lockdown
        - Lockdowns
        - Rules
        - Zones
      summary: 'List Zone Lockdown Rules '
      description: >-
        Fetches Zone Lockdown rules. You can filter the results using several
        optional parameters.
      operationId: zone-lockdown-list-zone-lockdown-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: description
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-description_search'
        - name: modified_on
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_components-schemas-modified_on'
        - name: ip
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_ip_search'
        - name: priority
          in: query
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_lockdowns_components-schemas-priority
        - name: uri_search
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_uri_search'
        - name: ip_range_search
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_ip_range_search'
        - name: per_page
          in: query
          schema:
            type: number
            description: >-
              The maximum number of results per page. You can only set the value
              to `1` or to a multiple of 5 such as `5`, `10`, `15`, or `20`.
            default: 20
            minimum: 1
            maximum: 1000
        - name: created_on
          in: query
          schema:
            type: string
            format: date-time
            description: The timestamp of when the rule was created.
            example: '2014-01-01T05:20:00.12345Z'
            readOnly: true
        - name: description_search
          in: query
          schema:
            type: string
            description: A string to search for in the description of existing rules.
            example: endpoints
        - name: ip_search
          in: query
          schema:
            type: string
            description: A single IP address to search for in existing rules.
            example: 1.2.3.4
      responses:
        '200':
          description: List Zone Lockdown rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_zonelockdown_response_collection
        4xx:
          description: List Zone Lockdown rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_zonelockdown_response_collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Firewall
        - Lockdown
        - Lockdowns
        - Rules
        - Zones
      summary: 'Create A Zone Lockdown Rule '
      description: Creates a new Zone Lockdown rule.
      operationId: zone-lockdown-create-a-zone-lockdown-rule
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - urls
                - configurations
      responses:
        '200':
          description: Create a Zone Lockdown rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_zonelockdown_response_single'
        4xx:
          description: Create a Zone Lockdown rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_zonelockdown_response_single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/lockdowns/{id}:
    delete:
      tags:
        - Firewall
        - Lockdown
        - Lockdowns
        - Rules
        - Zones
      summary: 'Delete A Zone Lockdown Rule '
      description: Deletes an existing Zone Lockdown rule.
      operationId: zone-lockdown-delete-a-zone-lockdown-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_lockdowns_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a Zone Lockdown rule response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    properties:
                      id:
                        $ref: >-
                          #/components/schemas/legacy-jhs_lockdowns_components-schemas-id
        4xx:
          description: Delete a Zone Lockdown rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      result:
                        properties:
                          id:
                            $ref: >-
                              #/components/schemas/legacy-jhs_lockdowns_components-schemas-id
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Firewall
        - Lockdown
        - Lockdowns
        - Rules
        - Zones
      summary: 'Get A Zone Lockdown Rule '
      description: Fetches the details of a Zone Lockdown rule.
      operationId: zone-lockdown-get-a-zone-lockdown-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_lockdowns_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: Get a Zone Lockdown rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_zonelockdown_response_single'
        4xx:
          description: Get a Zone Lockdown rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_zonelockdown_response_single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Firewall
        - Lockdown
        - Lockdowns
        - Rules
        - Zones
      summary: 'Update A Zone Lockdown Rule '
      description: Updates an existing Zone Lockdown rule.
      operationId: zone-lockdown-update-a-zone-lockdown-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_lockdowns_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - urls
                - configurations
      responses:
        '200':
          description: Update a Zone Lockdown rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_zonelockdown_response_single'
        4xx:
          description: Update a Zone Lockdown rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_zonelockdown_response_single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/rules:
    delete:
      tags:
        - Firewall
        - Rules
        - Zones
      summary: 'Delete Firewall Rules '
      description: Deletes existing firewall rules.
      operationId: firewall-rules-delete-firewall-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  $ref: >-
                    #/components/schemas/legacy-jhs_firewall-rules_components-schemas-id
      responses:
        '200':
          description: Delete firewall rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-rules-response-collection-delete
        4xx:
          description: Delete firewall rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-response-collection-delete
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Firewall
        - Rules
        - Zones
      summary: 'List Firewall Rules '
      description: >-
        Fetches firewall rules in a zone. You can filter the results using
        several optional parameters.
      operationId: firewall-rules-list-firewall-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: description
          in: query
          schema:
            type: string
            description: A case-insensitive string to find in the description.
            example: mir
        - name: action
          in: query
          schema:
            type: string
            description: The action to search for. Must be an exact match.
            example: block
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of firewall rules per page.
            default: 25
            minimum: 5
            maximum: 100
        - name: id
          in: query
          schema:
            type: string
            description: The unique identifier of the firewall rule.
            example: 372e67954025e0ba6aaa6d586b9e0b60
            readOnly: true
            maxLength: 32
        - name: paused
          in: query
          schema:
            type: boolean
            description: When true, indicates that the firewall rule is currently paused.
            example: false
      responses:
        '200':
          description: List firewall rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-rules-response-collection
        4xx:
          description: List firewall rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    patch:
      tags:
        - Firewall
        - Priorities
        - Rules
        - Zones
      summary: 'Update Priority Of Firewall Rules '
      description: Updates the priority of existing firewall rules.
      operationId: firewall-rules-update-priority-of-firewall-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update priority of firewall rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-rules-response-collection
        4xx:
          description: Update priority of firewall rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Firewall
        - Rules
        - Zones
      summary: 'Create Firewall Rules '
      description: Create one or more firewall rules.
      operationId: firewall-rules-create-firewall-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - filter
                - action
      responses:
        '200':
          description: Create firewall rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-rules-response-collection
        4xx:
          description: Create firewall rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Firewall
        - Rules
        - Zones
      summary: 'Update Firewall Rules '
      description: Updates one or more existing firewall rules.
      operationId: firewall-rules-update-firewall-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update firewall rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-rules-response-collection
        4xx:
          description: Update firewall rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/rules/{id}:
    delete:
      tags:
        - Firewall
        - Rules
        - Zones
      summary: 'Delete A Firewall Rule '
      description: Deletes an existing firewall rule.
      operationId: firewall-rules-delete-a-firewall-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_firewall-rules_components-schemas-id
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delete_filter_if_unused:
                  $ref: '#/components/schemas/legacy-jhs_delete_filter_if_unused'
      responses:
        '200':
          description: Delete a firewall rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-rules-single-response-delete
        4xx:
          description: Delete a firewall rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-single-response-delete
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Firewall
        - Rules
        - Zones
      summary: 'Get A Firewall Rule '
      description: Fetches the details of a firewall rule.
      operationId: firewall-rules-get-a-firewall-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_firewall-rules_components-schemas-id
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: id
          in: query
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_firewall-rules_components-schemas-id
      responses:
        '200':
          description: Get a firewall rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_filter-rules-single-response'
        4xx:
          description: Get a firewall rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-single-response
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    patch:
      tags:
        - Firewall
        - Priorities
        - Rules
        - Zones
      summary: 'Update Priority Of A Firewall Rule '
      description: Updates the priority of an existing firewall rule.
      operationId: firewall-rules-update-priority-of-a-firewall-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_firewall-rules_components-schemas-id
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update priority of a firewall rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_filter-rules-response-collection
        4xx:
          description: Update priority of a firewall rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-response-collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Firewall
        - Rules
        - Zones
      summary: 'Update A Firewall Rule '
      description: Updates an existing firewall rule.
      operationId: firewall-rules-update-a-firewall-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_firewall-rules_components-schemas-id
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - filter
                - action
      responses:
        '200':
          description: Update a firewall rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_filter-rules-single-response'
        4xx:
          description: Update a firewall rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_filter-rules-single-response
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/ua_rules:
    get:
      tags:
        - Agent
        - Blocking
        - Firewall
        - Rules
        - Ua
        - Users
        - Zones
      summary: 'List User Agent Blocking Rules '
      description: >-
        Fetches User Agent Blocking rules in a zone. You can filter the results
        using several optional parameters.
      operationId: user-agent-blocking-rules-list-user-agent-blocking-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: description
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_description_search'
        - name: description_search
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_description_search'
        - name: per_page
          in: query
          schema:
            type: number
            description: >-
              The maximum number of results per page. You can only set the value
              to `1` or to a multiple of 5 such as `5`, `10`, `15`, or `20`.
            default: 20
            minimum: 1
            maximum: 1000
        - name: ua_search
          in: query
          schema:
            type: string
            description: A string to search for in the user agent values of existing rules.
            example: Safari
      responses:
        '200':
          description: List User Agent Blocking rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_firewalluablock_response_collection
        4xx:
          description: List User Agent Blocking rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_firewalluablock_response_collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Agent
        - Blocking
        - Firewall
        - Rules
        - Ua
        - Users
        - Zones
      summary: 'Create A User Agent Blocking Rule '
      description: Creates a new User Agent Blocking rule in a zone.
      operationId: user-agent-blocking-rules-create-a-user-agent-blocking-rule
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - mode
                - configuration
      responses:
        '200':
          description: Create a User Agent Blocking rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_firewalluablock_response_single
        4xx:
          description: Create a User Agent Blocking rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_firewalluablock_response_single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/ua_rules/{id}:
    delete:
      tags:
        - Agent
        - Blocking
        - Firewall
        - Rules
        - Ua
        - Users
        - Zones
      summary: 'Delete A User Agent Blocking Rule '
      description: Deletes an existing User Agent Blocking rule.
      operationId: user-agent-blocking-rules-delete-a-user-agent-blocking-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_ua-rules_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a User Agent Blocking rule response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_firewalluablock_response_single
                  - type: object
                    properties:
                      result:
                        properties:
                          id:
                            $ref: >-
                              #/components/schemas/legacy-jhs_ua-rules_components-schemas-id
        4xx:
          description: Delete a User Agent Blocking rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/legacy-jhs_firewalluablock_response_single
                      - type: object
                        properties:
                          result:
                            properties:
                              id:
                                $ref: >-
                                  #/components/schemas/legacy-jhs_ua-rules_components-schemas-id
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Agent
        - Blocking
        - Firewall
        - Rules
        - Ua
        - Users
        - Zones
      summary: 'Get A User Agent Blocking Rule '
      description: Fetches the details of a User Agent Blocking rule.
      operationId: user-agent-blocking-rules-get-a-user-agent-blocking-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_ua-rules_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: Get a User Agent Blocking rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_firewalluablock_response_single
        4xx:
          description: Get a User Agent Blocking rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_firewalluablock_response_single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Agent
        - Blocking
        - Firewall
        - Rules
        - Ua
        - Users
        - Zones
      summary: 'Update A User Agent Blocking Rule '
      description: Updates an existing User Agent Blocking rule.
      operationId: user-agent-blocking-rules-update-a-user-agent-blocking-rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_ua-rules_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - mode
                - configuration
      responses:
        '200':
          description: Update a User Agent Blocking rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_firewalluablock_response_single
        4xx:
          description: Update a User Agent Blocking rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_firewalluablock_response_single
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/waf/overrides:
    get:
      tags:
        - Firewall
        - Overr
        - Overrides
        - WAF
        - Zones
      summary: 'List WAF Overrides '
      description: >-
        Fetches the URI-based WAF overrides in a zone.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-overrides-list-waf-overrides
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: page
          in: query
          schema:
            type: number
            description: The page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: The number of WAF overrides per page.
            default: 50
            minimum: 5
            maximum: 100
      responses:
        '200':
          description: List WAF overrides response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_override_response_collection'
        4xx:
          description: List WAF overrides response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_override_response_collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Firewall
        - Overr
        - Override
        - WAF
        - Zones
      summary: 'Create A WAF Override '
      description: >-
        Creates a URI-based WAF override for a zone.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-overrides-create-a-waf-override
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - urls
      responses:
        '200':
          description: Create a WAF override response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_override_response_single'
        4xx:
          description: Create a WAF override response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_override_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/waf/overrides/{id}:
    delete:
      tags:
        - Firewall
        - Overr
        - Override
        - WAF
        - Zones
      summary: 'Delete A WAF Override '
      description: >-
        Deletes an existing URI-based WAF override.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-overrides-delete-a-waf-override
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_overrides_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a WAF override response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    properties:
                      id:
                        $ref: >-
                          #/components/schemas/legacy-jhs_overrides_components-schemas-id
        4xx:
          description: Delete a WAF override response failure
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      result:
                        properties:
                          id:
                            $ref: >-
                              #/components/schemas/legacy-jhs_overrides_components-schemas-id
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Firewall
        - Overr
        - Override
        - WAF
        - Zones
      summary: 'Get A WAF Override '
      description: >-
        Fetches the details of a URI-based WAF override.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-overrides-get-a-waf-override
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_overrides_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: Get a WAF override response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_override_response_single'
        4xx:
          description: Get a WAF override response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_override_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Firewall
        - Overr
        - Override
        - WAF
        - Zones
      summary: 'Update WAF Override '
      description: >-
        Updates an existing URI-based WAF override.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-overrides-update-waf-override
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_overrides_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - urls
                - rules
                - rewrite_action
      responses:
        '200':
          description: Update WAF override response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_override_response_single'
        4xx:
          description: Update WAF override response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_override_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/waf/packages:
    get:
      tags:
        - Firewall
        - Packages
        - WAF
        - Zones
      summary: 'List WAF Packages '
      description: >-
        Fetches WAF packages for a zone.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-packages-list-waf-packages
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: page
          in: query
          schema:
            type: number
            description: The page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: The number of packages per page.
            default: 50
            minimum: 5
            maximum: 100
        - name: order
          in: query
          schema:
            type: string
            description: The field used to sort returned packages.
            enum:
              - name
            example: status
        - name: direction
          in: query
          schema:
            type: string
            description: The direction used to sort returned packages.
            enum:
              - asc
              - desc
            example: desc
        - name: match
          in: query
          schema:
            type: string
            description: >-
              When set to `all`, all the search requirements must match. When
              set to `any`, only one of the search requirements has to match.
            enum:
              - any
              - all
            default: all
        - name: name
          in: query
          schema:
            type: string
            description: The name of the WAF package.
            example: USER
            readOnly: true
      responses:
        '200':
          description: List WAF packages response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_package_response_collection'
        4xx:
          description: List WAF packages response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_package_response_collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/firewall/waf/packages/{identifier}:
    get:
      tags:
        - Firewall
        - Packages
        - WAF
        - Zones
      summary: 'Get A WAF Package '
      description: >-
        Fetches the details of a WAF package.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-packages-get-a-waf-package
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_package_components-schemas-identifier
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: Get a WAF package response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_package_response_single'
        4xx:
          description: Get a WAF package response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_package_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    patch:
      tags:
        - Firewall
        - Packages
        - WAF
        - Zones
      summary: 'Update A WAF Package '
      description: >-
        Updates a WAF package. You can update the sensitivity and the action of
        an anomaly detection WAF package.


        **Note:** Applies only to the [previous version of WAF managed
        rules](https://developers.cloudflare.com/support/firewall/managed-rules-web-application-firewall-waf/understanding-waf-managed-rules-web-application-firewall/).
      operationId: waf-packages-update-a-waf-package
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_package_components-schemas-identifier
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_mode:
                  $ref: '#/components/schemas/legacy-jhs_action_mode'
                sensitivity:
                  $ref: '#/components/schemas/legacy-jhs_sensitivity'
      responses:
        '200':
          description: Update a WAF package response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_package_response_single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/legacy-jhs_anomaly_package'
        4xx:
          description: Update a WAF package response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/legacy-jhs_package_response_single
                      - properties:
                          result:
                            $ref: '#/components/schemas/legacy-jhs_anomaly_package'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/healthchecks:
    get:
      tags:
        - Checks
        - Health
        - Healthchecks
        - Zones
      summary: 'List Health Checks '
      description: List configured health checks.
      operationId: health-checks-list-health-checks
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      responses:
        '200':
          description: List Health Checks response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_response_collection'
        4XX:
          description: List Health Checks response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_response_collection'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Checks
        - Health
        - Healthchecks
        - Zones
      summary: 'Create Health Check '
      description: Create a new health check.
      operationId: health-checks-create-health-check
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
      responses:
        '200':
          description: Create Health Check response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
        4XX:
          description: Create Health Check response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/healthchecks/{identifier}:
    delete:
      tags:
        - Checks
        - Health
        - Healthchecks
        - Zones
      summary: 'Delete Health Check '
      description: Delete a health check.
      operationId: health-checks-delete-health-check
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Health Check response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_id_response'
        4XX:
          description: Delete Health Check response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_id_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Checks
        - Details
        - Health
        - Healthchecks
        - Zones
      summary: 'Health Check Details '
      description: Fetch a single configured health check.
      operationId: health-checks-health-check-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      responses:
        '200':
          description: Health Check Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
        4XX:
          description: Health Check Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Checks
        - Health
        - Healthchecks
        - Patch
        - Zones
      summary: 'Patch Health Check '
      description: Patch a configured health check.
      operationId: health-checks-patch-health-check
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
      responses:
        '200':
          description: Patch Health Check response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
        4XX:
          description: Patch Health Check response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Checks
        - Health
        - Healthchecks
        - Zones
      summary: 'Update Health Check '
      description: Update a configured health check.
      operationId: health-checks-update-health-check
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
      responses:
        '200':
          description: Update Health Check response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
        4XX:
          description: Update Health Check response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/healthchecks/preview:
    post:
      tags:
        - Checks
        - Health
        - Healthchecks
        - Previews
        - Zones
      summary: 'Create Preview Health Check '
      description: Create a new preview health check.
      operationId: health-checks-create-preview-health-check
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/healthchecks_query_healthcheck'
      responses:
        '200':
          description: Create Preview Health Check response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
        4XX:
          description: Create Preview Health Check response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/healthchecks/preview/{identifier}:
    delete:
      tags:
        - Checks
        - Health
        - Healthchecks
        - Previews
        - Zones
      summary: 'Delete Preview Health Check '
      description: Delete a health check.
      operationId: health-checks-delete-preview-health-check
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Preview Health Check response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_id_response'
        4XX:
          description: Delete Preview Health Check response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_id_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Checks
        - Details
        - Health
        - Healthchecks
        - Previews
        - Zones
      summary: 'Health Check Preview Details '
      description: Fetch a single configured health check preview.
      operationId: health-checks-health-check-preview-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/healthchecks_identifier'
      responses:
        '200':
          description: Health Check Preview Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthchecks_single_response'
        4XX:
          description: Health Check Preview Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/healthchecks_single_response'
                  - $ref: >-
                      #/components/schemas/healthchecks_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/logs/control/retention/flag:
    get:
      tags:
        - Controls
        - Flags
        - Logs
        - Retention
        - Zones
      summary: 'Get Log Retention Flag '
      description: Gets log retention flag for Logpull API.
      operationId: logs-received-get-log-retention-flag
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_identifier'
      responses:
        '200':
          description: Get log retention flag response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data-zone-analytics-api_flag_response'
        4XX:
          description: Get log retention flag response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/data-zone-analytics-api_flag_response'
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Controls
        - Flags
        - Logs
        - Retention
        - Zones
      summary: 'Update Log Retention Flag '
      description: Updates log retention flag for Logpull API.
      operationId: logs-received-update-log-retention-flag
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - flag
              properties:
                flag:
                  $ref: '#/components/schemas/data-zone-analytics-api_flag'
      responses:
        '200':
          description: Update log retention flag response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data-zone-analytics-api_flag_response'
        4XX:
          description: Update log retention flag response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/data-zone-analytics-api_flag_response'
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/logs/rayids/{ray_identifier}:
    get:
      tags:
        - IDs
        - Logs
        - Ray
        - Zones
      summary: 'Get Logs Ray IDs '
      description: >-
        The `/rayids` api route allows lookups by specific rayid. The rayids
        route will return zero, one, or more records (ray ids are not unique).
      operationId: logs-received-get-logs-ray-i-ds
      parameters:
        - name: ray_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_ray_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_identifier'
        - name: timestamps
          in: query
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_timestamps'
        - name: fields
          in: query
          schema:
            type: string
            description: >-
              The `/received` route by default returns a limited set of fields,
              and allows customers to override the default field set by
              specifying individual fields. The reasons for this are: 1. Most
              customers require only a small subset of fields, but that subset
              varies from customer to customer; 2. Flat schema is much easier to
              work with downstream (importing into BigTable etc); 3. Performance
              (time to process, file size). If `?fields=` is not specified,
              default field set is returned. This default field set may change
              at any time. When `?fields=` is provided, each record is returned
              with the specified fields. `fields` must be specified as a comma
              separated list without any whitespaces, and all fields must exist.
              The order in which fields are specified does not matter, and the
              order of fields in the response is not specified.
            example: ClientIP,RayID,EdgeStartTimestamp
      responses:
        '200':
          description: Get logs RayIDs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data-zone-analytics-api_logs'
        4XX:
          description: Get logs RayIDs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/data-zone-analytics-api_logs'
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/logs/received:
    get:
      tags:
        - Logs
        - Received
        - Zones
      summary: 'Get Logs Received '
      description: >-
        The `/received` api route allows customers to retrieve their edge HTTP
        logs. The basic access pattern is "give me all the logs for zone Z for
        minute M", where the minute M refers to the time records were received
        at Cloudflare's central data center. `start` is inclusive, and `end` is
        exclusive. Because of that, to get all data, at minutely cadence,
        starting at 10AM, the proper values are:
        `start=2018-05-20T10:00:00Z&end=2018-05-20T10:01:00Z`, then
        `start=2018-05-20T10:01:00Z&end=2018-05-20T10:02:00Z` and so on; the
        overlap will be handled properly.
      operationId: logs-received-get-logs-received
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_identifier'
        - name: end
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_end'
        - name: sample
          in: query
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_sample'
        - name: timestamps
          in: query
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_timestamps'
        - name: count
          in: query
          schema:
            type: integer
            description: >-
              When `?count=` is provided, the response will contain up to
              `count` results. Since results are not sorted, you are likely to
              get different data for repeated requests. `count` must be an
              integer > 0.
            minimum: 1
        - name: fields
          in: query
          schema:
            type: string
            description: >-
              The `/received` route by default returns a limited set of fields,
              and allows customers to override the default field set by
              specifying individual fields. The reasons for this are: 1. Most
              customers require only a small subset of fields, but that subset
              varies from customer to customer; 2. Flat schema is much easier to
              work with downstream (importing into BigTable etc); 3. Performance
              (time to process, file size). If `?fields=` is not specified,
              default field set is returned. This default field set may change
              at any time. When `?fields=` is provided, each record is returned
              with the specified fields. `fields` must be specified as a comma
              separated list without any whitespaces, and all fields must exist.
              The order in which fields are specified does not matter, and the
              order of fields in the response is not specified.
            example: ClientIP,RayID,EdgeStartTimestamp
        - name: start
          in: query
          schema:
            anyOf:
              - type: string
              - type: integer
            description: >-
              Sets the (inclusive) beginning of the requested time frame. This
              can be a unix timestamp (in seconds or nanoseconds), or an
              absolute timestamp that conforms to RFC 3339. At this point in
              time, it cannot exceed a time in the past greater than seven days.
            example: '2018-05-20T10:00:00Z'
      responses:
        '200':
          description: Get logs received response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data-zone-analytics-api_logs'
        4XX:
          description: Get logs received response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/data-zone-analytics-api_logs'
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/logs/received/fields:
    get:
      tags:
        - Fields
        - Logs
        - Received
        - Zones
      summary: 'List Fields '
      description: >-
        Lists all fields available. The response is json object with key-value
        pairs, where keys are field names, and values are descriptions.
      operationId: logs-received-list-fields
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/data-zone-analytics-api_identifier'
      responses:
        '200':
          description: List fields response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/data-zone-analytics-api_fields_response'
        4XX:
          description: List fields response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_fields_response
                  - $ref: >-
                      #/components/schemas/data-zone-analytics-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /zones/{zone_identifier}/rate_limits:
    get:
      tags:
        - Limits
        - Rates
        - Zones
      summary: 'List Rate Limits '
      description: Fetches the rate limits for a zone.
      operationId: rate-limits-for-a-zone-list-rate-limits
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: page
          in: query
          schema:
            type: number
            description: The page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: >-
              The maximum number of results per page. You can only set the value
              to `1` or to a multiple of 5 such as `5`, `10`, `15`, or `20`.
            default: 20
            minimum: 1
            maximum: 1000
      responses:
        '200':
          description: List rate limits response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_ratelimit_response_collection'
        4xx:
          description: List rate limits response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_ratelimit_response_collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Limits
        - Rates
        - Zones
      summary: 'Create A Rate Limit '
      description: >-
        Creates a new rate limit for a zone. Refer to the object definition for
        a list of required attributes.
      operationId: rate-limits-for-a-zone-create-a-rate-limit
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - match
                - threshold
                - period
                - action
      responses:
        '200':
          description: Create a rate limit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_ratelimit_response_single'
        4xx:
          description: Create a rate limit response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_ratelimit_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/rate_limits/{id}:
    delete:
      tags:
        - Limits
        - Rates
        - Zones
      summary: 'Delete A Rate Limit '
      description: Deletes an existing rate limit.
      operationId: rate-limits-for-a-zone-delete-a-rate-limit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_rate-limits_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a rate limit response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_ratelimit_response_single'
                  - type: object
                    properties:
                      result:
                        properties:
                          id:
                            $ref: >-
                              #/components/schemas/legacy-jhs_rate-limits_components-schemas-id
        4xx:
          description: Delete a rate limit response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/legacy-jhs_ratelimit_response_single
                      - type: object
                        properties:
                          result:
                            properties:
                              id:
                                $ref: >-
                                  #/components/schemas/legacy-jhs_rate-limits_components-schemas-id
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Limits
        - Rates
        - Zones
      summary: 'Get A Rate Limit '
      description: Fetches the details of a rate limit.
      operationId: rate-limits-for-a-zone-get-a-rate-limit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_rate-limits_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: Get a rate limit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_ratelimit_response_single'
        4xx:
          description: Get a rate limit response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_ratelimit_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Limits
        - Rates
        - Zones
      summary: 'Update A Rate Limit '
      description: Updates an existing rate limit.
      operationId: rate-limits-for-a-zone-update-a-rate-limit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_rate-limits_components-schemas-id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - match
                - threshold
                - period
                - action
      responses:
        '200':
          description: Update a rate limit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_ratelimit_response_single'
        4xx:
          description: Update a rate limit response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_ratelimit_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/snippets:
    get:
      tags:
        - Snippets
        - Zones
      summary: 'All Snippets '
      operationId: zone-snippets
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_identifier'
      responses:
        '200':
          description: Snippets response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/snippets-api_api-response-common'
                  - type: object
                    properties:
                      result:
                        type: array
                        description: List of all zone snippets
                        items:
                          $ref: '#/components/schemas/snippets-api_snippet'
                type: object
        4XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
        5XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/snippets/{snippet_name}:
    delete:
      tags:
        - Names
        - Snippets
        - Zones
      summary: 'Delete Snippet '
      operationId: zone-snippets-snippet-delete
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_identifier'
        - name: snippet_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_snippet_name'
      responses:
        '200':
          description: Snippet response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/snippets-api_api-response-common'
                type: object
        4XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
        5XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Names
        - Snippets
        - Zones
      summary: 'Snippet '
      operationId: zone-snippets-snippet
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_identifier'
        - name: snippet_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_snippet_name'
      responses:
        '200':
          description: Snippet response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/snippets-api_api-response-common'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/snippets-api_snippet'
                type: object
        4XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
        5XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Names
        - Snippets
        - Zones
      summary: 'Put Snippet '
      operationId: zone-snippets-snippet-put
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_identifier'
        - name: snippet_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_snippet_name'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: Content files of uploaded snippet
                  example: >-
                    export { async function fetch(request, env) {return new
                    Response('some_response') } }
                metadata:
                  type: object
                  properties:
                    main_module:
                      type: string
                      description: Main module name of uploaded snippet
                      example: main.js
      responses:
        '200':
          description: Snippet response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/snippets-api_api-response-common'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/snippets-api_snippet'
                type: object
        4XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
        5XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/snippets/{snippet_name}/content:
    get:
      tags:
        - Content
        - Names
        - Snippets
        - Zones
      summary: 'Snippet Content '
      operationId: zone-snippets-snippet-content
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_identifier'
        - name: snippet_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_snippet_name'
      responses:
        '200':
          description: Snippet response
          content:
            multipart/form-data:
              schema:
                properties:
                  files:
                    type: string
                    description: Content files of uploaded snippet
                    example: >-
                      export { async function fetch(request, env) {return new
                      Response('some_response') } }
        4XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
        5XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/snippets/snippet_rules:
    get:
      tags:
        - Rules
        - Snippets
        - Zones
      summary: 'Rules '
      operationId: zone-snippets-snippet-rules
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_identifier'
      responses:
        '200':
          description: Snippets rules response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/snippets-api_api-response-common'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/snippets-api_rules'
                type: object
        4XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
        5XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Rules
        - Snippets
        - Zones
      summary: 'Put Rules '
      operationId: zone-snippets-snippet-rules-put
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/snippets-api_identifier'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rules:
                  $ref: '#/components/schemas/snippets-api_rules'
      responses:
        '200':
          description: Snippets rules response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/snippets-api_api-response-common'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/snippets-api_rules'
                type: object
        4XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
        5XX:
          description: Snippet response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/snippets-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/ssl/recommendation:
    get:
      tags:
        - Recommendations
        - SSL/TLS
        - Ssl
        - Zones
      summary: 'SSL/TLS Recommendation '
      description: Retrieve the SSL/TLS Recommender's recommendation for a zone.
      operationId: ssl/-tls-mode-recommendation-ssl/-tls-recommendation
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: SSL/TLS Recommendation response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/legacy-jhs_id'
                          modified_on:
                            $ref: '#/components/schemas/legacy-jhs_timestamp'
                          value:
                            $ref: >-
                              #/components/schemas/legacy-jhs_ssl-recommender_components-schemas-value
        4xx:
          description: SSL/TLS Recommendation response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/legacy-jhs_api-response-single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/legacy-jhs_id'
                              modified_on:
                                $ref: '#/components/schemas/legacy-jhs_timestamp'
                              value:
                                $ref: >-
                                  #/components/schemas/legacy-jhs_ssl-recommender_components-schemas-value
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone_identifier}/waiting_rooms:
    get:
      tags:
        - Rooms
        - Waiting
        - Zones
      summary: 'List Waiting Rooms '
      description: Lists waiting rooms.
      operationId: waiting-room-list-waiting-rooms
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: List waiting rooms response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_response_collection'
        4XX:
          description: List waiting rooms response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_response_collection'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Rooms
        - Waiting
        - Zones
      summary: 'Create Waiting Room '
      description: Creates a new waiting room.
      operationId: waiting-room-create-waiting-room
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_query_waitingroom'
      responses:
        '200':
          description: Create waiting room response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_single_response'
        4XX:
          description: Create waiting room response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_single_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/{waiting_room_id}:
    delete:
      tags:
        - Rooms
        - Waiting
        - Zones
      summary: 'Delete Waiting Room '
      description: Deletes a waiting room.
      operationId: waiting-room-delete-waiting-room
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete waiting room response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_waiting_room_id_response'
        4XX:
          description: Delete waiting room response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_waiting_room_id_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Details
        - Rooms
        - Waiting
        - Zones
      summary: 'Waiting Room Details '
      description: Fetches a single configured waiting room.
      operationId: waiting-room-waiting-room-details
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: Waiting room details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_single_response'
        4XX:
          description: Waiting room details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_single_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Patch
        - Rooms
        - Waiting
        - Zones
      summary: 'Patch Waiting Room '
      description: Patches a configured waiting room.
      operationId: waiting-room-patch-waiting-room
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_query_waitingroom'
      responses:
        '200':
          description: Patch waiting room response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_single_response'
        4XX:
          description: Patch waiting room response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_single_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Rooms
        - Waiting
        - Zones
      summary: 'Update Waiting Room '
      description: Updates a configured waiting room.
      operationId: waiting-room-update-waiting-room
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_query_waitingroom'
      responses:
        '200':
          description: Update waiting room response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_single_response'
        4XX:
          description: Update waiting room response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_single_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/events:
    get:
      tags:
        - Events
        - Rooms
        - Waiting
        - Zones
      summary: 'List Events '
      description: Lists events for a waiting room.
      operationId: waiting-room-list-events
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: List events response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_event_response_collection'
        4XX:
          description: List events response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_event_response_collection'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Events
        - Rooms
        - Waiting
        - Zones
      summary: 'Create Event '
      description: >-
        Only available for the Waiting Room Advanced subscription. Creates an
        event for a waiting room. An event takes place during a specified period
        of time, temporarily changing the behavior of a waiting room. While the
        event is active, some of the properties in the event's configuration may
        either override or inherit from the waiting room's configuration. Note
        that events cannot overlap with each other, so only one event can be
        active at a time.
      operationId: waiting-room-create-event
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_query_event'
      responses:
        '200':
          description: Create event response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_event_response'
        4XX:
          description: Create event response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_event_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/events/{event_id}:
    delete:
      tags:
        - Events
        - Rooms
        - Waiting
        - Zones
      summary: 'Delete Event '
      description: Deletes an event for a waiting room.
      operationId: waiting-room-delete-event
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_event_id'
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete event response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_event_id_response'
        4XX:
          description: Delete event response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_event_id_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Details
        - Events
        - Rooms
        - Waiting
        - Zones
      summary: 'Event Details '
      description: Fetches a single configured event for a waiting room.
      operationId: waiting-room-event-details
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_event_id'
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: Event details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_event_response'
        4XX:
          description: Event details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_event_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Events
        - Patch
        - Rooms
        - Waiting
        - Zones
      summary: 'Patch Event '
      description: Patches a configured event for a waiting room.
      operationId: waiting-room-patch-event
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_event_id'
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_query_event'
      responses:
        '200':
          description: Patch event response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_event_response'
        4XX:
          description: Patch event response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_event_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Events
        - Rooms
        - Waiting
        - Zones
      summary: 'Update Event '
      description: Updates a configured event for a waiting room.
      operationId: waiting-room-update-event
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_event_id'
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_query_event'
      responses:
        '200':
          description: Update event response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_event_response'
        4XX:
          description: Update event response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_event_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/events/{event_id}/details:
    get:
      tags:
        - Active
        - Details
        - Events
        - Previews
        - Rooms
        - Waiting
        - Zones
      summary: 'Preview Active Event Details '
      description: >-
        Previews an event's configuration as if it was active. Inherited fields
        from the waiting room will be displayed with their current values.
      operationId: waiting-room-preview-active-event-details
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_event_id'
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: Preview active event details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_event_details_response'
        4XX:
          description: Preview active event details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_event_details_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/rules:
    get:
      tags:
        - Rooms
        - Rules
        - Waiting
        - Zones
      summary: 'List Waiting Room Rules '
      description: Lists rules for a waiting room.
      operationId: waiting-room-list-waiting-room-rules
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: List Waiting Room Rules response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_rules_response_collection'
        4XX:
          description: List Waiting Room Rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_rules_response_collection'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Rooms
        - Rules
        - Waiting
        - Zones
      summary: 'Create Waiting Room Rule '
      description: >-
        Only available for the Waiting Room Advanced subscription. Creates a
        rule for a waiting room.
      operationId: waiting-room-create-waiting-room-rule
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_create_rule'
      responses:
        '200':
          description: Create Waiting Room Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_rules_response_collection'
        4XX:
          description: Create Waiting Room Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_rules_response_collection'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Replace
        - Rooms
        - Rules
        - Waiting
        - Zones
      summary: 'Replace Waiting Room Rules '
      description: >-
        Only available for the Waiting Room Advanced subscription. Replaces all
        rules for a waiting room.
      operationId: waiting-room-replace-waiting-room-rules
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_update_rules'
      responses:
        '200':
          description: Replace Waiting Room Rules response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_rules_response_collection'
        4XX:
          description: Replace Waiting Room Rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_rules_response_collection'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/rules/{rule_id}:
    delete:
      tags:
        - Rooms
        - Rules
        - Waiting
        - Zones
      summary: 'Delete Waiting Room Rule '
      description: Deletes a rule for a waiting room.
      operationId: waiting-room-delete-waiting-room-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_rule_id'
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Waiting Room Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_rules_response_collection'
        4XX:
          description: Delete Waiting Room Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_rules_response_collection'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Patch
        - Rooms
        - Rules
        - Waiting
        - Zones
      summary: 'Patch Waiting Room Rule '
      description: Patches a rule for a waiting room.
      operationId: waiting-room-patch-waiting-room-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_rule_id'
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_patch_rule'
      responses:
        '200':
          description: Patch Waiting Room Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_rules_response_collection'
        4XX:
          description: Patch Waiting Room Rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_rules_response_collection'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/status:
    get:
      tags:
        - Rooms
        - Status
        - Waiting
        - Zones
      summary: 'Get Waiting Room Status '
      description: "Fetches the status of a configured waiting room. Response fields include:\n1. `status`: String indicating the status of the waiting room. The possible status are:\n\t- **not_queueing** indicates that the configured thresholds have not been met and all users are going through to the origin.\n\t- **queueing** indicates that the thresholds have been met and some users are held in the waiting room.\n\t- **event_prequeueing** indicates that an event is active and is currently prequeueing users before it starts.\n2. `event_id`: String of the current event's `id` if an event is active, otherwise an empty string.\n3. `estimated_queued_users`: Integer of the estimated number of users currently waiting in the queue.\n4. `estimated_total_active_users`: Integer of the estimated number of users currently active on the origin.\n5. `max_estimated_time_minutes`: Integer of the maximum estimated time currently presented to the users."
      operationId: waiting-room-get-waiting-room-status
      parameters:
        - name: waiting_room_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_waiting_room_id'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: Get waiting room status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_status_response'
        4XX:
          description: Get waiting room status response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_status_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/preview:
    post:
      tags:
        - Custom
        - Page
        - Previews
        - Rooms
        - Waiting
        - Zones
      summary: 'Create A Custom Waiting Room Page Preview '
      description: "Creates a waiting room page preview. Upload a custom waiting room page for preview. You will receive a preview URL in the form `http://waitingrooms.dev/preview/<uuid>`. You can use the following query parameters to change the state of the preview:\n1. `force_queue`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website (also known as queueAll).\n2. `queue_is_full`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n3. `queueing_method`: The queueing method currently used by the waiting room.\n\t- **fifo** indicates a FIFO queue.\n\t- **random** indicates a Random queue.\n\t- **passthrough** indicates a Passthrough queue. Keep in mind that the waiting room page will only be displayed if `force_queue=true` or `event=prequeueing` — for other cases the request will pass through to the origin. For our preview, this will be a fake origin website returning \"Welcome\". \n\t- **reject** indicates a Reject queue.\n4. `event`: Used to preview a waiting room event.\n\t- **none** indicates no event is occurring.\n\t- **prequeueing** indicates that an event is prequeueing (between `prequeue_start_time` and `event_start_time`).\n\t- **started** indicates that an event has started (between `event_start_time` and `event_end_time`).\n5. `shuffle_at_event_start`: Boolean indicating if the event will shuffle users in the prequeue when it starts. This can only be set to **true** if an event is active (`event` is not **none**).\n\nFor example, you can make a request to `http://waitingrooms.dev/preview/<uuid>?force_queue=false&queue_is_full=false&queueing_method=random&event=started&shuffle_at_event_start=true`\n6. `waitTime`: Non-zero, positive integer indicating the estimated wait time in minutes. The default value is 10 minutes.\n\nFor example, you can make a request to `http://waitingrooms.dev/preview/<uuid>?waitTime=50` to configure the estimated wait time as 50 minutes."
      operationId: waiting-room-create-a-custom-waiting-room-page-preview
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_query_preview'
      responses:
        '200':
          description: Create a custom waiting room page preview response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_preview_response'
        4XX:
          description: Create a custom waiting room page preview response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_preview_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/waiting_rooms/settings:
    get:
      tags:
        - Rooms
        - Settings
        - Waiting
        - Zone level
        - Zones
      summary: 'Get Zone-level Waiting Room Settings '
      operationId: waiting-room-get-zone-settings
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      responses:
        '200':
          description: The current zone-level Waiting Room settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_zone_settings_response'
        4XX:
          description: The current zone-level Waiting Room settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_zone_settings_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Patch
        - Rooms
        - Settings
        - Waiting
        - Zone level
        - Zones
      summary: 'Patch Zone-level Waiting Room Settings '
      operationId: waiting-room-patch-zone-settings
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_zone_settings'
      responses:
        '200':
          description: The updated zone-level Waiting Room settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_zone_settings_response'
        4XX:
          description: The zone-level Waiting Room settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_zone_settings_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Rooms
        - Settings
        - Waiting
        - Zone level
        - Zones
      summary: 'Update Zone-level Waiting Room Settings '
      operationId: waiting-room-update-zone-settings
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/waitingroom_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/waitingroom_zone_settings'
      responses:
        '200':
          description: The updated zone-level Waiting Room settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/waitingroom_zone_settings_response'
        4XX:
          description: The zone-level Waiting Room settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/waitingroom_zone_settings_response'
                  - $ref: >-
                      #/components/schemas/waitingroom_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/web3/hostnames:
    get:
      tags:
        - Host Names
        - Web3
        - Zones
      summary: 'List Web3 Hostnames '
      operationId: web3-hostname-list-web3-hostnames
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      responses:
        '200':
          description: List Web3 Hostnames response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_collection_response'
        5XX:
          description: List Web3 Hostnames response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dweb-config_collection_response'
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Host Names
        - Web3
        - Zones
      summary: 'Create Web3 Hostname '
      operationId: web3-hostname-create-web3-hostname
      parameters:
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dweb-config_create_request'
      responses:
        '200':
          description: Create Web3 Hostname response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_single_response'
        5XX:
          description: Create Web3 Hostname response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dweb-config_single_response'
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/web3/hostnames/{identifier}:
    delete:
      tags:
        - Host Names
        - Web3
        - Zones
      summary: 'Delete Web3 Hostname '
      operationId: web3-hostname-delete-web3-hostname
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Web3 Hostname response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_api-response-single-id'
        5XX:
          description: Delete Web3 Hostname response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dweb-config_api-response-single-id'
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Details
        - Host Names
        - Web3
        - Zones
      summary: 'Web3 Hostname Details '
      operationId: web3-hostname-web3-hostname-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      responses:
        '200':
          description: Web3 Hostname Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_single_response'
        5XX:
          description: Web3 Hostname Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dweb-config_single_response'
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Edit
        - Host Names
        - Web3
        - Zones
      summary: 'Edit Web3 Hostname '
      operationId: web3-hostname-edit-web3-hostname
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dweb-config_modify_request'
      responses:
        '200':
          description: Edit Web3 Hostname response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_single_response'
        5XX:
          description: Edit Web3 Hostname response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dweb-config_single_response'
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/web3/hostnames/{identifier}/ipfs_universal_path/content_list:
    get:
      tags:
        - Content
        - Details
        - Gateways
        - Host Names
        - IPFS
        - Ipfs
        - Paths
        - Universal
        - Web3
        - Zones
      summary: 'IPFS Universal Path Gateway Content List Details '
      operationId: web3-hostname-ipfs-universal-path-gateway-content-list-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      responses:
        '200':
          description: IPFS Universal Path Gateway Content List Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_content_list_details_response'
        5XX:
          description: IPFS Universal Path Gateway Content List Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dweb-config_content_list_details_response
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Content
        - Gateways
        - Host Names
        - IPFS
        - Ipfs
        - Paths
        - Universal
        - Web3
        - Zones
      summary: 'Update IPFS Universal Path Gateway Content List '
      operationId: web3-hostname-update-ipfs-universal-path-gateway-content-list
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dweb-config_content_list_update_request'
      responses:
        '200':
          description: Update IPFS Universal Path Gateway Content List response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_content_list_details_response'
        5XX:
          description: Update IPFS Universal Path Gateway Content List response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dweb-config_content_list_details_response
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/web3/hostnames/{identifier}/ipfs_universal_path/content_list/entries:
    get:
      tags:
        - Content
        - Entries
        - Gateways
        - Host Names
        - IPFS
        - Ipfs
        - Paths
        - Universal
        - Web3
        - Zones
      summary: 'List IPFS Universal Path Gateway Content List Entries '
      operationId: web3-hostname-list-ipfs-universal-path-gateway-content-list-entries
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      responses:
        '200':
          description: List IPFS Universal Path Gateway Content List Entries response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dweb-config_content_list_entry_collection_response
        5XX:
          description: >-
            List IPFS Universal Path Gateway Content List Entries response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dweb-config_content_list_entry_collection_response
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Content
        - Entries
        - Entry
        - Gateways
        - Host Names
        - IPFS
        - Ipfs
        - Paths
        - Universal
        - Web3
        - Zones
      summary: 'Create IPFS Universal Path Gateway Content List Entry '
      operationId: web3-hostname-create-ipfs-universal-path-gateway-content-list-entry
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/dweb-config_content_list_entry_create_request
      responses:
        '200':
          description: Create IPFS Universal Path Gateway Content List Entry response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dweb-config_content_list_entry_single_response
        5XX:
          description: >-
            Create IPFS Universal Path Gateway Content List Entry response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dweb-config_content_list_entry_single_response
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone_identifier}/web3/hostnames/{identifier}/ipfs_universal_path/content_list/entries/{content_list_entry_identifier}:
    delete:
      tags:
        - Content
        - Entries
        - Entry
        - Gateways
        - Host Names
        - IPFS
        - Ipfs
        - Paths
        - Universal
        - Web3
        - Zones
      summary: 'Delete IPFS Universal Path Gateway Content List Entry '
      operationId: web3-hostname-delete-ipfs-universal-path-gateway-content-list-entry
      parameters:
        - name: content_list_entry_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete IPFS Universal Path Gateway Content List Entry response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dweb-config_api-response-single-id'
        5XX:
          description: >-
            Delete IPFS Universal Path Gateway Content List Entry response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dweb-config_api-response-single-id'
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Content
        - Details
        - Entries
        - Entry
        - Gateways
        - Host Names
        - IPFS
        - Ipfs
        - Paths
        - Universal
        - Web3
        - Zones
      summary: 'IPFS Universal Path Gateway Content List Entry Details '
      operationId: web3-hostname-ipfs-universal-path-gateway-content-list-entry-details
      parameters:
        - name: content_list_entry_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      responses:
        '200':
          description: IPFS Universal Path Gateway Content List Entry Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dweb-config_content_list_entry_single_response
        5XX:
          description: >-
            IPFS Universal Path Gateway Content List Entry Details response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dweb-config_content_list_entry_single_response
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Content
        - Edit
        - Entries
        - Entry
        - Gateways
        - Host Names
        - IPFS
        - Ipfs
        - Paths
        - Universal
        - Web3
        - Zones
      summary: 'Edit IPFS Universal Path Gateway Content List Entry '
      operationId: web3-hostname-edit-ipfs-universal-path-gateway-content-list-entry
      parameters:
        - name: content_list_entry_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
        - name: zone_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dweb-config_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/dweb-config_content_list_entry_create_request
      responses:
        '200':
          description: Edit IPFS Universal Path Gateway Content List Entry response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dweb-config_content_list_entry_single_response
        5XX:
          description: Edit IPFS Universal Path Gateway Content List Entry response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dweb-config_content_list_entry_single_response
                  - $ref: >-
                      #/components/schemas/dweb-config_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /zones/{zone}/spectrum/analytics/aggregate/current:
    get:
      tags:
        - Aggregate
        - Aggregated
        - Analytics
        - Current
        - Spectrum
        - Zones
      summary: 'Get Current Aggregated Analytics '
      description: >-
        Retrieves analytics aggregated from the last minute of usage on Spectrum
        applications underneath a given zone.
      operationId: spectrum-aggregate-analytics-get-current-aggregated-analytics
      parameters:
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: appID
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_app_id_param'
        - name: app_id_param
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_app_id_param'
        - name: colo_name
          in: query
          schema:
            type: string
            description: Co-location identifier.
            example: PDX
            maxLength: 3
      responses:
        '200':
          description: Get current aggregated analytics response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_analytics-aggregate_components-schemas-response_collection
        4xx:
          description: Get current aggregated analytics response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_analytics-aggregate_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone}/spectrum/analytics/events/bytime:
    get:
      tags:
        - Analytics
        - Events
        - Spectrum
        - Time
        - Zones
      summary: 'Get Analytics By Time '
      description: Retrieves a list of aggregate metrics grouped by time interval.
      operationId: spectrum-analytics-(-by-time)-get-analytics-by-time
      parameters:
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: dimensions
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_dimensions'
        - name: sort
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_sort'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-until'
        - name: metrics
          in: query
          schema:
            type: array
            description: >-
              One or more metrics to compute. Options are: 


              Metric                    | Name                                |
              Example                  | Unit

              --|-|--|--

              count                     | Count of total events               |
              1000                     | Count

              bytesIngress              | Sum of ingress bytes                |
              1000                     | Sum

              bytesEgress               | Sum of egress bytes                 |
              1000                     | Sum

              durationAvg               | Average connection duration         |
              1.0                      | Time in milliseconds

              durationMedian            | Median connection duration          |
              1.0                      | Time in milliseconds

              duration90th              | 90th percentile connection duration |
              1.0                      | Time in milliseconds

              duration99th              | 99th percentile connection duration |
              1.0                      | Time in milliseconds.
            example:
              - count
              - bytesIngress
            items:
              type: string
              enum:
                - count
                - bytesIngress
                - bytesEgress
                - durationAvg
                - durationMedian
                - duration90th
                - duration99th
        - name: filters
          in: query
          schema:
            type: string
            description: >-
              Used to filter rows by one or more dimensions. Filters can be
              combined using OR and AND boolean logic. AND takes precedence over
              OR in all the expressions. The OR operator is defined using a
              comma (,) or OR keyword surrounded by whitespace. The AND operator
              is defined using a semicolon (;) or AND keyword surrounded by
              whitespace. Note that the semicolon is a reserved character in
              URLs (rfc1738) and needs to be percent-encoded as %3B. Comparison
              options are: 


              Operator                  | Name                            | URL
              Encoded

              --||--

              ==                        | Equals                          |
              %3D%3D

              !=                        | Does not equals                 | !%3D

              >                        | Greater Than                    | %3E

              <                         | Less Than                       | %3C

              >=                       | Greater than or equal to        |
              %3E%3D

              <=                        | Less than or equal to           |
              %3C%3D     .
            example: event==disconnect%20AND%20coloName!=SFO
        - name: since
          in: query
          schema:
            type: string
            format: date-time
            description: >-
              Start of time interval to query, defaults to `until` - 6 hours.
              Timestamp must be in RFC3339 format and uses UTC unless otherwise
              specified.
            example: '2014-01-02T02:20:00Z'
        - name: time_delta
          in: query
          schema:
            type: string
            description: Used to select time series resolution.
            enum:
              - year
              - quarter
              - month
              - week
              - day
              - hour
              - dekaminute
              - minute
            example: minute
      responses:
        '200':
          description: Get analytics by time response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_api-response-single'
        4xx:
          description: Get analytics by time response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_api-response-single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone}/spectrum/analytics/events/summary:
    get:
      tags:
        - Analytics
        - Events
        - Spectrum
        - Summaries
        - Zones
      summary: 'Get Analytics Summary '
      description: >-
        Retrieves a list of summarised aggregate metrics over a given time
        period.
      operationId: spectrum-analytics-(-summary)-get-analytics-summary
      parameters:
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: dimensions
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_dimensions'
        - name: sort
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_sort'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-until'
        - name: metrics
          in: query
          schema:
            type: array
            description: >-
              One or more metrics to compute. Options are: 


              Metric                    | Name                                |
              Example                  | Unit

              --|-|--|--

              count                     | Count of total events               |
              1000                     | Count

              bytesIngress              | Sum of ingress bytes                |
              1000                     | Sum

              bytesEgress               | Sum of egress bytes                 |
              1000                     | Sum

              durationAvg               | Average connection duration         |
              1.0                      | Time in milliseconds

              durationMedian            | Median connection duration          |
              1.0                      | Time in milliseconds

              duration90th              | 90th percentile connection duration |
              1.0                      | Time in milliseconds

              duration99th              | 99th percentile connection duration |
              1.0                      | Time in milliseconds.
            example:
              - count
              - bytesIngress
            items:
              type: string
              enum:
                - count
                - bytesIngress
                - bytesEgress
                - durationAvg
                - durationMedian
                - duration90th
                - duration99th
        - name: filters
          in: query
          schema:
            type: string
            description: >-
              Used to filter rows by one or more dimensions. Filters can be
              combined using OR and AND boolean logic. AND takes precedence over
              OR in all the expressions. The OR operator is defined using a
              comma (,) or OR keyword surrounded by whitespace. The AND operator
              is defined using a semicolon (;) or AND keyword surrounded by
              whitespace. Note that the semicolon is a reserved character in
              URLs (rfc1738) and needs to be percent-encoded as %3B. Comparison
              options are: 


              Operator                  | Name                            | URL
              Encoded

              --||--

              ==                        | Equals                          |
              %3D%3D

              !=                        | Does not equals                 | !%3D

              >                        | Greater Than                    | %3E

              <                         | Less Than                       | %3C

              >=                       | Greater than or equal to        |
              %3E%3D

              <=                        | Less than or equal to           |
              %3C%3D     .
            example: event==disconnect%20AND%20coloName!=SFO
        - name: since
          in: query
          schema:
            type: string
            format: date-time
            description: >-
              Start of time interval to query, defaults to `until` - 6 hours.
              Timestamp must be in RFC3339 format and uses UTC unless otherwise
              specified.
            example: '2014-01-02T02:20:00Z'
      responses:
        '200':
          description: Get analytics summary response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_api-response-single'
        4xx:
          description: Get analytics summary response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_api-response-single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone}/spectrum/apps:
    get:
      tags:
        - Applications
        - Spectrum
        - Zones
      summary: 'List Spectrum Applications '
      description: >-
        Retrieves a list of currently existing Spectrum applications inside a
        zone.
      operationId: spectrum-applications-list-spectrum-applications
      parameters:
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
        - name: page
          in: query
          schema:
            type: number
            description: >-
              Page number of paginated results. This parameter is required in
              order to use other pagination parameters. If included in the
              query, `result_info` will be present in the response.
            example: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Sets the maximum number of results per page.
            default: 20
            minimum: 1
            maximum: 100
        - name: direction
          in: query
          schema:
            type: string
            description: Sets the direction by which results are ordered.
            enum:
              - asc
              - desc
            default: asc
            example: desc
        - name: order
          in: query
          schema:
            type: string
            description: Application field by which results are ordered.
            enum:
              - protocol
              - app_id
              - created_on
              - modified_on
              - dns
            default: dns
            example: protocol
      responses:
        '200':
          description: List Spectrum applications response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/legacy-jhs_components-schemas-response_collection
        4xx:
          description: List Spectrum applications response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/legacy-jhs_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Applications
        - Names
        - Origin
        - Spectrum
        - Using
        - Zones
      summary: 'Create Spectrum Application Using A Name For The Origin '
      description: >-
        Creates a new Spectrum application from a configuration using a name for
        the origin.
      operationId: >-
        spectrum-applications-create-spectrum-application-using-a-name-for-the-origin
      parameters:
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - protocol
                - dns
                - origin_dns
                - origin_port
              properties:
                argo_smart_routing:
                  $ref: '#/components/schemas/legacy-jhs_argo_smart_routing'
                dns:
                  $ref: '#/components/schemas/legacy-jhs_dns'
                edge_ips:
                  $ref: '#/components/schemas/legacy-jhs_edge_ips'
                ip_firewall:
                  $ref: '#/components/schemas/legacy-jhs_ip_firewall'
                origin_dns:
                  $ref: '#/components/schemas/legacy-jhs_origin_dns'
                origin_port:
                  $ref: '#/components/schemas/legacy-jhs_origin_port'
                protocol:
                  $ref: '#/components/schemas/legacy-jhs_protocol'
                proxy_protocol:
                  $ref: '#/components/schemas/legacy-jhs_proxy_protocol'
                tls:
                  $ref: '#/components/schemas/legacy-jhs_tls'
                traffic_type:
                  $ref: '#/components/schemas/legacy-jhs_traffic_type'
      responses:
        '200':
          description: Create Spectrum application using a name for the origin response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_response_single_origin_dns'
        4xx:
          description: >-
            Create Spectrum application using a name for the origin response
            failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_response_single_origin_dns'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /zones/{zone}/spectrum/apps/{app_id}:
    delete:
      tags:
        - Applications
        - Spectrum
        - Zones
      summary: 'Delete Spectrum Application '
      description: Deletes a previously existing application.
      operationId: spectrum-applications-delete-spectrum-application
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_app_id'
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Spectrum application response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_api-response-single'
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/legacy-jhs_app_id'
        4xx:
          description: Delete Spectrum application response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/legacy-jhs_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            properties:
                              id:
                                $ref: '#/components/schemas/legacy-jhs_app_id'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Applications
        - Configurations
        - Spectrum
        - Zones
      summary: 'Get Spectrum Application Configuration '
      description: >-
        Gets the application configuration of a specific application inside a
        zone.
      operationId: spectrum-applications-get-spectrum-application-configuration
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_app_id'
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      responses:
        '200':
          description: Get Spectrum application configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_schemas-response_single'
        4xx:
          description: Get Spectrum application configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_schemas-response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Applications
        - Configurations
        - Names
        - Origin
        - Spectrum
        - Using
        - Zones
      summary: 'Update Spectrum Application Configuration Using A Name For The Origin '
      description: >-
        Updates a previously existing application's configuration that uses a
        name for the origin.
      operationId: >-
        spectrum-applications-update-spectrum-application-configuration-using-a-name-for-the-origin
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_app_id'
        - name: zone
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/legacy-jhs_common_components-schemas-identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - protocol
                - dns
                - origin_dns
                - origin_port
              properties:
                argo_smart_routing:
                  $ref: '#/components/schemas/legacy-jhs_argo_smart_routing'
                dns:
                  $ref: '#/components/schemas/legacy-jhs_dns'
                edge_ips:
                  $ref: '#/components/schemas/legacy-jhs_edge_ips'
                ip_firewall:
                  $ref: '#/components/schemas/legacy-jhs_ip_firewall'
                origin_dns:
                  $ref: '#/components/schemas/legacy-jhs_origin_dns'
                origin_port:
                  $ref: '#/components/schemas/legacy-jhs_origin_port'
                protocol:
                  $ref: '#/components/schemas/legacy-jhs_protocol'
                proxy_protocol:
                  $ref: '#/components/schemas/legacy-jhs_proxy_protocol'
                tls:
                  $ref: '#/components/schemas/legacy-jhs_tls'
                traffic_type:
                  $ref: '#/components/schemas/legacy-jhs_traffic_type'
      responses:
        '200':
          description: >-
            Update Spectrum application configuration using a name for the
            origin response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_response_single_origin_dns'
        4xx:
          description: >-
            Update Spectrum application configuration using a name for the
            origin response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_response_single_origin_dns'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
security:
  - api_email: []
    api_key: []
  - api_token: []
  - user_service_key: []
servers:
  - url: https://api.cloudflare.com/client/v4
    description: Client API
tags: []
