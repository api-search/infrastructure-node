openapi: 3.0.3
components:
  schemas:
    iam_response_single:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-single'
        - type: object
          properties:
            result:
              type: object
    addressing_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/addressing_address-maps'
    addressing_full_response:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-single'
        - type: object
          properties:
            result:
              allOf:
                - $ref: '#/components/schemas/addressing_address-maps'
                - type: object
                  properties:
                    ips:
                      $ref: '#/components/schemas/addressing_schemas-ips'
                    memberships:
                      $ref: '#/components/schemas/addressing_memberships'
    addressing_api-response-collection:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-common'
        - properties:
            result:
              type: array
              nullable: true
              items: {}
            result_info:
              $ref: '#/components/schemas/addressing_result_info'
      type: object
    addressing_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/addressing_address-maps'
    addressing_response_collection:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/addressing_ipam-prefixes'
    addressing_single_response:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/addressing_ipam-prefixes'
    addressing_response_collection_bgp:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/addressing_ipam-bgp-prefixes'
    addressing_single_response_bgp:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/addressing_ipam-bgp-prefixes'
    addressing_advertised_response:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-single'
        - properties:
            result:
              type: object
              properties:
                advertised:
                  $ref: '#/components/schemas/addressing_schemas-advertised'
                advertised_modified_at:
                  $ref: '#/components/schemas/addressing_modified_at_nullable'
    addressing_api-response-common:
      type: object
      required:
        - success
        - errors
        - messages
        - result
      properties:
        errors:
          $ref: '#/components/schemas/addressing_messages'
        messages:
          $ref: '#/components/schemas/addressing_messages'
        result:
          anyOf:
            - type: object
            - type: array
              items: {}
            - type: string
        success:
          type: boolean
          description: Whether the API call was successful
          enum:
            - true
          example: true
    addressing_schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/addressing_ipam-delegations'
    addressing_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/addressing_ipam-delegations'
    addressing_id_response:
      allOf:
        - $ref: '#/components/schemas/addressing_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/addressing_delegation_identifier'
    aaa_response_collection:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-collection'
        - properties:
            result:
              type: object
              example:
                Origin Monitoring:
                  - description: High levels of 5xx HTTP errors at your origin.
                    display_name: Origin Error Rate Alert
                    filter_options:
                      - AvailableValues: null
                        ComparisonOperator: '=='
                        Key: zones
                        Range: 1-n
                      - AvailableValues:
                          - Description: Service-Level Objective of 99.7
                            ID: '99.7'
                          - Description: Service-Level Objective of 99.8
                            ID: '99.8'
                        ComparisonOperator: '>='
                        Key: slo
                        Range: 0-1
                    type: http_alert_origin_error
    aaa_schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-collection'
        - properties:
            result:
              type: object
              example:
                email:
                  eligible: true
                  ready: true
                  type: email
    aaa_api-response-collection:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-common'
        - properties:
            result:
              type: array
              nullable: true
              items: {}
            result_info:
              $ref: '#/components/schemas/aaa_result_info'
      type: object
    aaa_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/aaa_pagerduty'
    aaa_id_response:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/aaa_uuid'
    aaa_webhooks_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/aaa_webhooks'
    aaa_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/aaa_webhooks'
    aaa_history_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-collection'
        - properties:
            result:
              type: array
              example:
                - alert_body:
                    data:
                      custom_csr_id: ''
                      expires_on: null
                      hosts: []
                      id: '11111111111'
                      issuer: ''
                      method: txt
                      serial_number: ''
                      settings: null
                      signature: ''
                      status: ''
                      type: ''
                      uploaded_on: null
                      validation_errors: []
                      validation_records:
                        - cname: ''
                          cname_target: ''
                          emails: []
                          http_body: ''
                          http_url: ''
                          txt_name: _acme-challenge.example.com
                          txt_value: '11111111111'
                    metadata:
                      account: null
                      event:
                        created_at: null
                        id: ''
                        type: ssl.certificate.validation.failed
                      zone:
                        id: '11111111111'
                  alert_type: universal_ssl_event_type
                  description: >-
                    Universal Certificate validation status, issuance, renewal,
                    and expiration notices.
                  id: f174e90a-fafe-4643-bbbc-4a0ed4fc8415
                  mechanism: test@example.com
                  mechanism_type: email
                  name: SSL Notification Event Policy
                  policy_id: 35040955-3102-4710-938c-0f4eaf736e25
                  sent: '2021-10-08T17:52:17.571336Z'
              items:
                $ref: '#/components/schemas/aaa_history'
            result_info:
              type: object
              example:
                count: 1
                page: 1
                per_page: 20
    aaa_policies_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/aaa_policies'
    aaa_single_response:
      allOf:
        - $ref: '#/components/schemas/aaa_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/aaa_policies'
    aaa_audit_logs_response_collection:
      oneOf:
        - properties:
            errors:
              type: object
              nullable: true
            messages:
              type: array
              example: []
              items: {}
            result:
              type: array
              items:
                $ref: '#/components/schemas/aaa_audit-logs'
            success:
              type: boolean
              example: true
        - $ref: '#/components/schemas/aaa_api-response-common'
    intel_phishing-url-submit_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_phishing-url-submit'
    intel_phishing-url-info_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_phishing-url-info'
    calls_app_response_collection:
      allOf:
        - $ref: '#/components/schemas/calls_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/calls_app'
    calls_app_response_single:
      allOf:
        - $ref: '#/components/schemas/calls_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/calls_app'
    tunnel_tunnel-response-collection:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/tunnel_cfd_tunnel'
                  - $ref: '#/components/schemas/tunnel_warp_connector_tunnel'
    tunnel_tunnel-response-single:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              anyOf:
                - $ref: '#/components/schemas/tunnel_cfd_tunnel'
                - $ref: '#/components/schemas/tunnel_warp_connector_tunnel'
    tunnel_config_response_single:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              type: object
    tunnel_empty_response:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-common'
        - type: object
          properties:
            result:
              type: object
    tunnel_tunnel_connections_response:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/tunnel_tunnel_client'
    tunnel_tunnel_client_response:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/tunnel_tunnel_client'
    tunnel_tunnel_response_token:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              type: string
              example: eyJhIjoiNWFiNGU5Z...
    dns-custom-nameservers_acns_response_collection:
      allOf:
        - $ref: '#/components/schemas/dns-custom-nameservers_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/dns-custom-nameservers_CustomNS'
    dns-custom-nameservers_acns_response_single:
      allOf:
        - $ref: '#/components/schemas/dns-custom-nameservers_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/dns-custom-nameservers_CustomNS'
    dns-custom-nameservers_empty_response:
      allOf:
        - $ref: '#/components/schemas/dns-custom-nameservers_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              maxItems: 0
              items: {}
    dns-custom-nameservers_availability_response:
      allOf:
        - $ref: '#/components/schemas/dns-custom-nameservers_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                type: string
                format: hostname
                description: >-
                  Name of zone based on which account custom nameservers can be
                  created. For example, if example.com is returned, then
                  ns1.example.com can be used as an account custom nameserver.
                example: example.com
                readOnly: true
    teams-devices_devices_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_devices'
    teams-devices_device_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              type: object
    teams-devices_override_codes_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: object
              properties:
                disable_for_time:
                  $ref: '#/components/schemas/teams-devices_disable_for_time'
    teams-devices_dex-response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection-common'
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/teams-devices_device-dex-test-schemas-http
    teams-devices_dex-single_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/teams-devices_device-dex-test-schemas-http'
    teams-devices_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_device-managed-networks'
    teams-devices_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/teams-devices_device-managed-networks'
    teams-devices_device_settings_response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_device_settings_policy'
    teams-devices_default_device_settings_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              $ref: >-
                #/components/schemas/teams-devices_default_device_settings_policy
    teams-devices_device_settings_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              $ref: '#/components/schemas/teams-devices_device_settings_policy'
    teams-devices_split_tunnel_response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_split_tunnel'
    teams-devices_fallback_domain_response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_fallback_domain'
    teams-devices_split_tunnel_include_response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_split_tunnel_include'
    teams-devices_response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_device-posture-rules'
    teams-devices_single_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/teams-devices_device-posture-rules'
    teams-devices_id_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/teams-devices_uuid'
    teams-devices_schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_device-posture-integrations'
    teams-devices_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/teams-devices_device-posture-integrations'
    teams-devices_schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              type: object
              nullable: true
    teams-devices_api-response-single:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
              type: object
              nullable: true
      type: object
    teams-devices_zero-trust-account-device-settings-response:
      allOf:
        - $ref: '#/components/schemas/teams-devices_api-response-single'
        - properties:
            result:
              $ref: >-
                #/components/schemas/teams-devices_zero-trust-account-device-settings
      type: object
    digital-experience-monitoring_fleet_status_devices_response:
      allOf:
        - $ref: >-
            #/components/schemas/digital-experience-monitoring_api-response-collection
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/digital-experience-monitoring_device'
    digital-experience-monitoring_fleet_status_live_response:
      allOf:
        - $ref: >-
            #/components/schemas/digital-experience-monitoring_api-response-single
        - type: object
          properties:
            result:
              type: object
              properties:
                deviceStats:
                  type: object
                  properties:
                    byColo:
                      type: array
                      nullable: true
                      items:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_live_stat
                    byMode:
                      type: array
                      nullable: true
                      items:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_live_stat
                    byPlatform:
                      type: array
                      nullable: true
                      items:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_live_stat
                    byStatus:
                      type: array
                      nullable: true
                      items:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_live_stat
                    byVersion:
                      type: array
                      nullable: true
                      items:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_live_stat
                    uniqueDevicesTotal:
                      $ref: >-
                        #/components/schemas/digital-experience-monitoring_uniqueDevicesTotal
    magic-transit_traceroute_response_collection:
      allOf:
        - $ref: '#/components/schemas/magic-transit_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/magic-transit_target_result'
    dlp_DatasetArrayResponse:
      allOf:
        - $ref: '#/components/schemas/dlp_V4Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/dlp_DatasetArray'
    dlp_DatasetCreationResponse:
      allOf:
        - $ref: '#/components/schemas/dlp_V4Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/dlp_DatasetCreation'
    dlp_DatasetResponse:
      allOf:
        - $ref: '#/components/schemas/dlp_V4Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/dlp_Dataset'
    dlp_DatasetNewVersionResponse:
      allOf:
        - $ref: '#/components/schemas/dlp_V4Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/dlp_DatasetNewVersion'
    dlp_validate_response:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-single'
        - properties:
            result:
              properties:
                valid:
                  type: boolean
                  example: true
    dlp_get_settings_response:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-single'
        - properties:
            result:
              required:
                - public_key
              properties:
                public_key:
                  type: string
                  example: EmpOvSXw8BfbrGCi0fhGiD/3yXk2SiV1Nzg2lru3oj0=
                  nullable: true
    dlp_update_settings_response:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-single'
        - properties:
            result:
              required:
                - public_key
              properties:
                public_key:
                  type: string
                  example: EmpOvSXw8BfbrGCi0fhGiD/3yXk2SiV1Nzg2lru3oj0=
                  nullable: true
    dlp_response_collection:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/dlp_profiles'
    dlp_either_profile_response:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-single'
        - properties:
            result:
              anyOf:
                - $ref: '#/components/schemas/dlp_predefined_profile'
                - $ref: '#/components/schemas/dlp_custom_profile'
                - $ref: '#/components/schemas/dlp_integration_profile'
    dlp_create_custom_profile_response:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/dlp_custom_profile'
    dlp_api-response-single:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                  nullable: true
                - type: string
                  nullable: true
      type: object
    dlp_custom_profile_response:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/dlp_custom_profile'
    dlp_custom_profile:
      type: object
      title: Custom profile
      properties:
        allowed_match_count:
          $ref: '#/components/schemas/dlp_allowed_match_count'
        context_awareness:
          $ref: '#/components/schemas/dlp_ContextAwareness'
        created_at:
          $ref: '#/components/schemas/dlp_timestamp'
        description:
          type: string
          description: The description of the profile.
          example: A standard CVV card number
        entries:
          type: array
          description: The entries for this profile.
          items:
            $ref: '#/components/schemas/dlp_custom_entry'
        id:
          $ref: '#/components/schemas/dlp_profile_id'
        name:
          type: string
          description: The name of the profile.
          example: Generic CVV Card Number
        type:
          type: string
          description: The type of the profile.
          enum:
            - custom
          example: custom
        updated_at:
          $ref: '#/components/schemas/dlp_timestamp'
    dlp_predefined_profile_response:
      allOf:
        - $ref: '#/components/schemas/dlp_api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/dlp_predefined_profile'
    dlp_predefined_profile:
      type: object
      title: Predefined profile
      properties:
        allowed_match_count:
          $ref: '#/components/schemas/dlp_allowed_match_count'
        context_awareness:
          $ref: '#/components/schemas/dlp_ContextAwareness'
        entries:
          type: array
          description: The entries for this profile.
          items:
            $ref: '#/components/schemas/dlp_predefined_entry'
        id:
          $ref: '#/components/schemas/dlp_profile_id'
        name:
          type: string
          description: The name of the profile.
          example: Generic CVV Card Number
        type:
          type: string
          description: The type of the profile.
          enum:
            - predefined
          example: predefined
    dns-firewall_dns_firewall_response_collection:
      allOf:
        - $ref: '#/components/schemas/dns-firewall_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/dns-firewall_dns-firewall'
    dns-firewall_dns_firewall_single_response:
      allOf:
        - $ref: '#/components/schemas/dns-firewall_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/dns-firewall_dns-firewall'
    zero-trust-gateway_gateway_account:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              type: object
              properties:
                gateway_tag:
                  $ref: '#/components/schemas/zero-trust-gateway_gateway_tag'
                id:
                  $ref: '#/components/schemas/zero-trust-gateway_cf_account_id'
                provider_name:
                  $ref: '#/components/schemas/zero-trust-gateway_provider_name'
      type: object
    zero-trust-gateway_app-types_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zero-trust-gateway_app-types'
    zero-trust-gateway_audit_ssh_settings_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/zero-trust-gateway_settings'
    zero-trust-gateway_categories_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zero-trust-gateway_categories'
    zero-trust-gateway_gateway_account_config:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/zero-trust-gateway_gateway-account-settings
                - properties:
                    created_at:
                      $ref: '#/components/schemas/zero-trust-gateway_timestamp'
                    updated_at:
                      $ref: '#/components/schemas/zero-trust-gateway_timestamp'
              type: object
      type: object
    zero-trust-gateway_response_collection:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zero-trust-gateway_lists'
    zero-trust-gateway_single_response_with_list_items:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              properties:
                created_at:
                  $ref: '#/components/schemas/zero-trust-gateway_timestamp'
                description:
                  $ref: '#/components/schemas/zero-trust-gateway_description'
                id:
                  $ref: '#/components/schemas/zero-trust-gateway_uuid'
                items:
                  $ref: '#/components/schemas/zero-trust-gateway_items'
                name:
                  $ref: '#/components/schemas/zero-trust-gateway_name'
                type:
                  $ref: '#/components/schemas/zero-trust-gateway_type'
                updated_at:
                  $ref: '#/components/schemas/zero-trust-gateway_timestamp'
    zero-trust-gateway_empty_response:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              type: object
    zero-trust-gateway_single_response:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/zero-trust-gateway_lists'
    zero-trust-gateway_list_item_response_collection:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zero-trust-gateway_items'
        - properties:
            result_info:
              type: object
              properties:
                count:
                  type: number
                  description: Total results returned based on your search parameters.
                  example: 1
                page:
                  type: number
                  description: Current page within paginated list of results.
                  example: 1
                per_page:
                  type: number
                  description: Number of results per page of results.
                  example: 20
                total_count:
                  type: number
                  description: Total results available without any search parameters.
                  example: 2000
    zero-trust-gateway_schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zero-trust-gateway_locations'
    zero-trust-gateway_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/zero-trust-gateway_locations'
    zero-trust-gateway_gateway-account-logging-settings-response:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              $ref: >-
                #/components/schemas/zero-trust-gateway_gateway-account-logging-settings
      type: object
    zero-trust-gateway_proxy-endpoints_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zero-trust-gateway_proxy-endpoints'
    zero-trust-gateway_proxy-endpoints_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/zero-trust-gateway_proxy-endpoints'
    zero-trust-gateway_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/zero-trust-gateway_rules'
    zero-trust-gateway_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/zero-trust-gateway_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/zero-trust-gateway_rules'
    images_images_list_response:
      allOf:
        - $ref: '#/components/schemas/images_api-response-common'
        - properties:
            result:
              type: object
              properties:
                images:
                  type: array
                  items:
                    $ref: '#/components/schemas/images_image'
    images_image_response_single:
      allOf:
        - $ref: '#/components/schemas/images_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/images_image'
    images_deleted_response:
      allOf:
        - $ref: '#/components/schemas/images_api-response-single'
        - properties:
            result:
              type: object
              example: {}
    images_image_key_response_collection:
      allOf:
        - $ref: '#/components/schemas/images_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/images_image_keys_response'
    images_images_stats_response:
      allOf:
        - $ref: '#/components/schemas/images_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/images_images_stats'
    images_image_variant_list_response:
      allOf:
        - $ref: '#/components/schemas/images_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/images_image_variants_response'
    images_image_variant_simple_response:
      allOf:
        - $ref: '#/components/schemas/images_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/images_image_variant_response'
    images_images_list_response_v2:
      allOf:
        - $ref: '#/components/schemas/images_api-response-collection-v2'
        - properties:
            result:
              type: object
              properties:
                images:
                  type: array
                  items:
                    $ref: '#/components/schemas/images_image'
    images_image_direct_upload_response_v2:
      allOf:
        - $ref: '#/components/schemas/images_api-response-single'
        - properties:
            result:
              properties:
                id:
                  type: string
                  description: Image unique identifier.
                  example: e22e9e6b-c02b-42fd-c405-6c32af5fe600
                  readOnly: true
                  maxLength: 32
                uploadURL:
                  type: string
                  description: >-
                    The URL the unauthenticated upload can be performed to using
                    a single HTTP POST (multipart/form-data) request.
                  example: >-
                    https://upload.imagedelivery.net/FxUufywByo0m2v3xhKSiU8/e22e9e6b-c02b-42fd-c405-6c32af5fe600
    intel_asn_components-schemas-response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_asn'
    security-center_valueCountsResponse:
      allOf:
        - $ref: '#/components/schemas/security-center_api-response-common'
        - properties:
            result:
              anyOf:
                - type: array
                  items:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 1
                      value:
                        type: string
    intel_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_passive-dns-by-ip'
    intel_single_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_domain'
    intel_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/intel_domain-history'
    intel_collection_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-collection'
        - properties:
            result:
              type: array
              items:
                properties:
                  additional_information:
                    $ref: '#/components/schemas/intel_additional_information'
                  application:
                    $ref: '#/components/schemas/intel_application'
                  content_categories:
                    $ref: '#/components/schemas/intel_content_categories'
                  domain:
                    $ref: '#/components/schemas/intel_domain_name'
                  inherited_content_categories:
                    $ref: '#/components/schemas/intel_inherited_content_categories'
                  inherited_from:
                    $ref: '#/components/schemas/intel_inherited_from'
                  inherited_risk_types:
                    $ref: '#/components/schemas/intel_inherited_risk_types'
                  popularity_rank:
                    $ref: '#/components/schemas/intel_popularity_rank'
                  risk_score:
                    $ref: '#/components/schemas/intel_risk_score'
                  risk_types:
                    $ref: '#/components/schemas/intel_risk_types'
    intel_indicator_feed_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-common'
        - properties:
            result:
              type: array
              example:
                - created_on: '2023-05-12T12:21:56.777653Z'
                  description: user specified description 1
                  id: 1
                  modified_on: '2023-06-18T03:13:34.123321Z'
                  name: user_specified_name_1
                - created_on: '2023-05-21T21:43:52.867525Z'
                  description: User specified description 2
                  id: 2
                  modified_on: '2023-06-28T18:46:18.764425Z'
                  name: user_specified_name_2
              items:
                $ref: '#/components/schemas/intel_indicator_feed_item'
    intel_create_feed_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_indicator_feed_item'
    intel_indicator_feed_metadata_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_indicator_feed_metadata'
    intel_update_feed_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_update_feed'
    intel_permissions_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_permissions_update'
    intel_permission_list_item_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-common'
        - properties:
            result:
              type: array
              example:
                - description: An important indicator list
                  id: 1
                  name: indicator_list_1
                - description: An even more important indicator list
                  id: 2
                  name: indicator_list_2
              items:
                $ref: '#/components/schemas/intel_permission_list_item'
    intel_schemas-response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/intel_schemas-ip'
    intel_components-schemas-response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/intel_ip-list'
    intel_api-response-single:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
      type: object
    intel-sinkholes_get_sinkholes_response:
      allOf:
        - $ref: '#/components/schemas/intel-sinkholes_api-response-common'
        - properties:
            result:
              type: array
              example:
                - account_tag: 233f45e61fd1f7e21e1e154ede4q2859
                  created_on: '2023-05-12T12:21:56.777653Z'
                  description: user specified description 1
                  id: 1
                  modified_on: '2023-06-18T03:13:34.123321Z'
                  name: sinkhole_1
                  r2_bucket: my_bucket
                  r2_id: <r2_id>
                - account_tag: 233f45e61fd1f7e21e1e154ede4q2859
                  created_on: '2023-05-21T21:43:52.867525Z'
                  description: user specified description 2
                  id: 2
                  modified_on: '2023-06-28T18:46:18.764425Z'
                  name: sinkhole_1
                  r2_bucket: my_bucket
                  r2_id: <r2_id>
              items:
                $ref: '#/components/schemas/intel-sinkholes_sinkhole_item'
    intel_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/intel_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/intel_whois'
    load-balancing_monitor-response-collection:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/load-balancing_monitor'
    load-balancing_monitor-response-single:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/load-balancing_monitor'
    load-balancing_id_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/load-balancing_identifier'
    load-balancing_preview_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              type: object
              properties:
                pools:
                  type: object
                  description: Monitored pool IDs mapped to their respective names.
                  example:
                    abwlnp5jbqn45ecgxd03erbgtxtqai0d: WNAM Datacenter
                    ve8h9lrcip5n5bbga9yqmdws28ay5d0l: EEU Datacenter
                preview_id:
                  $ref: '#/components/schemas/load-balancing_identifier'
    load-balancing_references_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-collection'
        - properties:
            result:
              type: array
              description: List of resources that reference a given monitor.
              example:
                - reference_type: referrer
                  resource_id: 17b5962d775c646f3f9725cbc7a53df4
                  resource_name: primary-dc-1
                  resource_type: pool
              items:
                type: object
                properties:
                  reference_type:
                    type: string
                    enum:
                      - '*'
                      - referral
                      - referrer
                  resource_id:
                    type: string
                  resource_name:
                    type: string
                  resource_type:
                    type: string
    load-balancing_schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/load-balancing_pool'
    load-balancing_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/load-balancing_pool'
    load-balancing_schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/load-balancing_schemas-identifier'
    load-balancing_health_details:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              type: object
              description: >-
                A list of regions from which to run health checks. Null means
                every Cloudflare data center.
              example:
                pool_id: 17b5962d775c646f3f9725cbc7a53df4
                pop_health:
                  Amsterdam, NL:
                    healthy: true
                    origins:
                      - 2001:DB8::5:
                          failure_reason: No failures
                          healthy: true
                          response_code: 401
                          rtt: 12.1ms
    load-balancing_schemas-references_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-collection'
        - properties:
            result:
              type: array
              description: List of resources that reference a given pool.
              example:
                - reference_type: referrer
                  resource_id: 699d98642c564d2e855e9661899b7252
                  resource_name: www.example.com
                  resource_type: load_balancer
                - reference_type: referral
                  resource_id: f1aba936b94213e5b8dca0c0dbf1f9cc
                  resource_name: Login page monitor
                  resource_type: monitor
              items:
                type: object
                properties:
                  reference_type:
                    type: string
                    enum:
                      - '*'
                      - referral
                      - referrer
                  resource_id:
                    type: string
                  resource_name:
                    type: string
                  resource_type:
                    type: string
    load-balancing_preview_result_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/load-balancing_preview_result'
    load-balancing_region_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              type: object
    load-balancing_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/load-balancing_api-response-single'
        - properties:
            result:
              type: object
              description: A list of countries and subdivisions mapped to a region.
              example:
                iso_standard: >-
                  Country and subdivision codes follow ISO 3166-1 alpha-2 and
                  ISO 3166-2
                regions:
                  - countries:
                      - country_code_a2: CA
                        country_name: Canada
                        country_subdivisions:
                          - subdivision_code_a2: AB
                            subdivision_name: Alberta
                          - subdivision_code_a2: BC
                            subdivision_name: British Columbia
                      - country_code_a2: HT
                        country_name: Haiti
                      - country_code_a2: MX
                        country_name: Mexico
                      - country_code_a2: US
                        country_name: United States
                        country_subdivisions:
                          - subdivision_code_a2: AZ
                            subdivision_name: Arizona
                          - subdivision_code_a2: CA
                            subdivision_name: California
                          - subdivision_code_a2: CO
                            subdivision_name: Colorado
                          - subdivision_code_a2: HI
                            subdivision_name: Hawaii
                          - subdivision_code_a2: MN
                            subdivision_name: Minnesota
                          - subdivision_code_a2: MO
                            subdivision_name: Missouri
                          - subdivision_code_a2: NV
                            subdivision_name: Nevada
                          - subdivision_code_a2: OR
                            subdivision_name: Oregon
                          - subdivision_code_a2: TX
                            subdivision_name: Texas
                          - subdivision_code_a2: UT
                            subdivision_name: Utah
                          - subdivision_code_a2: WA
                            subdivision_name: Washington
                    region_code: WNAM
    logpush_logpush_field_response_collection:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              items:
                type: object
                nullable: true
                properties:
                  key:
                    type: string
                    example: value
    logpush_logpush_job_response_collection:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/logpush_logpush_job'
    logpush_logpush_job_response_single:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/logpush_logpush_job'
    logpush_get_ownership_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                filename:
                  type: string
                  example: logs/challenge-filename.txt
                message:
                  type: string
                  example: ''
                valid:
                  type: boolean
                  example: true
    logpush_validate_ownership_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                valid:
                  type: boolean
                  example: true
    logpush_destination_exists_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                exists:
                  type: boolean
                  example: false
    logpush_validate_response:
      allOf:
        - $ref: '#/components/schemas/logpush_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              properties:
                message:
                  type: string
                  example: ''
                valid:
                  type: boolean
                  example: true
    logcontrol_cmb_config_response_single:
      allOf:
        - $ref: '#/components/schemas/logcontrol_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/logcontrol_cmb_config'
    iam_collection_member_response:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/iam_components-schemas-member'
    iam_single_member_response_with_code:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/iam_member_with_code'
    iam_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              required:
                - id
              properties:
                id:
                  $ref: >-
                    #/components/schemas/iam_common_components-schemas-identifier
      type: object
    iam_single_member_response:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/iam_member'
    tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificateObject
        - properties:
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 50
                total_count:
                  example: 1
                total_pages:
                  example: 1
    tls-certificates-and-hostnames_certificate_response_single_post:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_certificateObjectPost
              type: object
    tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-single
        - properties:
            result:
              allOf:
                - $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-certificateObject
              type: object
    tls-certificates-and-hostnames_association_response_collection:
      allOf:
        - $ref: >-
            #/components/schemas/tls-certificates-and-hostnames_api-response-collection
        - properties:
            result:
              type: array
              items:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_associationObject
    pages_projects-response:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/pages_deployments'
    pages_new-project-response:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result:
              type: object
    pages_project-response:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/pages_projects'
    pages_deployment-list-response:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/pages_deployments'
    pages_deployment-new-deployment:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/pages_deployments'
    pages_deployment-response-details:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/pages_deployments'
    pages_deployment-response-logs:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result:
              type: object
              example:
                data:
                  - line: Cloning repository...
                    ts: '2021-04-20T19:35:29.0749819Z'
                  - line: From https://github.com/cloudflare/example
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ' * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD'
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ''
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: HEAD is now at 209c5bb Update index.html
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ''
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: ''
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: 'Success: Finished cloning repository files'
                    ts: '2021-04-20T19:35:30.0749819Z'
                  - line: Installing dependencies
                    ts: '2021-04-20T19:35:59.0749819Z'
                  - line: Python version set to 2.7
                    ts: '2021-04-20T19:35:59.0931208Z'
                  - line: v12.18.0 is already installed.
                    ts: '2021-04-20T19:36:02.2369501Z'
                  - line: Now using node v12.18.0 (npm v6.14.4)
                    ts: '2021-04-20T19:36:02.6028886Z'
                  - line: Started restoring cached build plugins
                    ts: '2021-04-20T19:36:02.624555Z'
                  - line: Finished restoring cached build plugins
                    ts: '2021-04-20T19:36:02.6340688Z'
                  - line: Attempting ruby version 2.7.1, read from environment
                    ts: '2021-04-20T19:36:02.963095Z'
                  - line: Using ruby version 2.7.1
                    ts: '2021-04-20T19:36:04.2236084Z'
                  - line: Using PHP version 5.6
                    ts: '2021-04-20T19:36:04.5450152Z'
                  - line: 5.2 is already installed.
                    ts: '2021-04-20T19:36:04.5740509Z'
                  - line: Using Swift version 5.2
                    ts: '2021-04-20T19:36:04.577035Z'
                  - line: Installing Hugo 0.54.0
                    ts: '2021-04-20T19:36:04.5771615Z'
                  - line: >-
                      Hugo Static Site Generator v0.54.0-B1A82C61A/extended
                      linux/amd64 BuildDate: 2019-02-01T10:04:38Z
                    ts: '2021-04-20T19:36:05.4786868Z'
                  - line: Started restoring cached go cache
                    ts: '2021-04-20T19:36:05.4794366Z'
                  - line: Finished restoring cached go cache
                    ts: '2021-04-20T19:36:05.481977Z'
                  - line: go version go1.14.4 linux/amd64
                    ts: '2021-04-20T19:36:05.9049776Z'
                  - line: go version go1.14.4 linux/amd64
                    ts: '2021-04-20T19:36:05.9086053Z'
                  - line: Installing missing commands
                    ts: '2021-04-20T19:36:05.9163568Z'
                  - line: Verify run directory
                    ts: '2021-04-20T19:36:05.9163934Z'
                  - line: >-
                      Executing user command: echo "skipping build step: no
                      build command specified"
                    ts: '2021-04-20T19:36:05.9164636Z'
                  - line: 'skipping build step: no build command specified'
                    ts: '2021-04-20T19:36:05.9165087Z'
                  - line: Finished
                    ts: '2021-04-20T19:36:05.917412Z'
                includes_container_logs: true
                total: 30
    pages_domain-response-collection:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-common'
        - properties:
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
        - properties:
            result:
              type: array
              items:
                type: object
    pages_domain-response-single:
      allOf:
        - $ref: '#/components/schemas/pages_api-response-single'
        - properties:
            result:
              type: object
    magic-visibility_pcaps_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-collection'
        - properties:
            result:
              type: array
              items:
                anyOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_pcaps_response_simple
                  - $ref: '#/components/schemas/magic-visibility_pcaps_response_full'
    magic-visibility_pcaps_single_response:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-single'
        - properties:
            result:
              anyOf:
                - $ref: '#/components/schemas/magic-visibility_pcaps_response_simple'
                - $ref: '#/components/schemas/magic-visibility_pcaps_response_full'
    magic-visibility_pcaps_ownership_collection:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-collection'
        - properties:
            result:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/magic-visibility_pcaps_ownership_response'
    magic-visibility_pcaps_ownership_single_response:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/magic-visibility_pcaps_ownership_response'
    r2_v4_response:
      type: object
      required:
        - success
        - errors
        - messages
        - result
      properties:
        errors:
          $ref: '#/components/schemas/r2_errors'
        messages:
          $ref: '#/components/schemas/r2_messages'
        result:
          type: object
        success:
          type: boolean
          description: Whether the API call was successful
          enum:
            - true
    registrar-api_domain_response_collection:
      allOf:
        - $ref: '#/components/schemas/registrar-api_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/registrar-api_domains'
    registrar-api_domain_response_single:
      allOf:
        - $ref: '#/components/schemas/registrar-api_api-response-single'
        - properties:
            result:
              type: object
    iam_collection_role_response:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/iam_schemas-role'
    iam_single_role_response:
      allOf:
        - $ref: '#/components/schemas/iam_api-response-single'
        - type: object
          properties:
            result:
              type: object
    lists_lists-response-collection:
      allOf:
        - $ref: '#/components/schemas/lists_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/lists_list'
                  - type: object
                    required:
                      - id
                      - name
                      - kind
                      - num_items
                      - created_on
                      - modified_on
      type: object
    lists_list-response-collection:
      allOf:
        - $ref: '#/components/schemas/lists_api-response-collection'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/lists_list'
      type: object
    lists_list-delete-response-collection:
      allOf:
        - $ref: '#/components/schemas/lists_api-response-collection'
        - type: object
          properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/lists_item_id'
      type: object
    lists_lists-async-response:
      allOf:
        - $ref: '#/components/schemas/lists_api-response-collection'
        - type: object
          properties:
            result:
              type: object
              properties:
                operation_id:
                  $ref: '#/components/schemas/lists_operation_id'
    lists_items-list-response-collection:
      allOf:
        - $ref: '#/components/schemas/lists_api-response-collection'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/lists_items'
            result_info:
              type: object
              properties:
                cursors:
                  type: object
                  properties:
                    after:
                      type: string
                      example: yyy
                    before:
                      type: string
                      example: xxx
    rum_site-response-single:
      allOf:
        - $ref: '#/components/schemas/rum_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/rum_site'
    rum_site-tag-response-single:
      allOf:
        - $ref: '#/components/schemas/rum_api-response-single'
        - properties:
            result:
              type: object
              properties:
                site_tag:
                  $ref: '#/components/schemas/rum_site_tag'
    rum_sites-response-collection:
      allOf:
        - $ref: '#/components/schemas/rum_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/rum_site'
            result_info:
              $ref: '#/components/schemas/rum_result_info'
    rum_rule-response-single:
      allOf:
        - $ref: '#/components/schemas/rum_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/rum_rule'
    rum_rule-id-response-single:
      allOf:
        - $ref: '#/components/schemas/rum_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/rum_rule_identifier'
    rum_rules-response-collection:
      allOf:
        - $ref: '#/components/schemas/rum_api-response-collection'
        - properties:
            result:
              type: object
              properties:
                rules:
                  $ref: '#/components/schemas/rum_rules'
                ruleset:
                  $ref: '#/components/schemas/rum_ruleset'
    secondary-dns_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/secondary-dns_acl'
    secondary-dns_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/secondary-dns_acl'
    secondary-dns_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: >-
                    #/components/schemas/secondary-dns_components-schemas-identifier
    secondary-dns_schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/secondary-dns_peer'
    secondary-dns_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/secondary-dns_peer'
    secondary-dns_response_collection:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/secondary-dns_tsig'
    secondary-dns_single_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/secondary-dns_tsig'
    secondary-dns_schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/secondary-dns_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/secondary-dns_schemas-identifier'
    workers-kv_api-response-single:
      allOf:
        - $ref: '#/components/schemas/workers-kv_api-response-common'
        - properties:
            result:
              anyOf:
                - type: object
                - type: string
      type: object
    workers-kv_value:
      type: string
      description: A byte sequence to be stored, up to 25 MiB in length.
      example: Some Value
    stream_video_response_collection:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/stream_videos'
        - properties:
            range:
              type: integer
              description: The total number of remaining videos based on cursor position.
              example: 1000
            total:
              type: integer
              description: The total number of videos that match the provided filters.
              example: 35586
    stream_video_response_single:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/stream_videos'
    stream_listAudioTrackResponse:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/stream_additionalAudio'
    stream_deleted_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              type: string
              example: ok
    stream_addAudioTrackResponse:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/stream_additionalAudio'
    stream_language_response_collection:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/stream_captions'
    stream_language_response_single:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              type: object
    stream_downloads_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              type: object
    stream_signed_token_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              properties:
                token:
                  type: string
                  description: The signed token used with the signed URLs feature.
                  example: >-
                    eyJhbGciOiJSUzI1NiIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIn0.eyJzdWIiOiJlYTk1MTMyYzE1NzMyNDEyZDIyYzE0NzZmYTgzZjI3YSIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIiwiZXhwIjoiMTUzNzQ2MDM2NSIsIm5iZiI6IjE1Mzc0NTMxNjUifQ.OZhqOARADn1iubK6GKcn25hN3nU-hCFF5q9w2C4yup0C4diG7aMIowiRpP-eDod8dbAJubsiFuTKrqPcmyCKWYsiv0TQueukqbQlF7HCO1TV-oF6El5-7ldJ46eD-ZQ0XgcIYEKrQOYFF8iDQbqPm3REWd6BnjKZdeVrLzuRaiSnZ9qqFpGu5dfxIY9-nZKDubJHqCr3Imtb211VIG_b9MdtO92JjvkDS-rxT_pkEfTZSafl1OU-98A7KBGtPSJHz2dHORIrUiTA6on4eIXTj9aFhGiir4rSn-rn0OjPRTtJMWIDMoQyE_fwrSYzB7MPuzL2t82BWaEbHZTfixBm5A
    stream_clipResponseSingle:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/stream_clipping'
    stream_direct_upload_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              properties:
                scheduledDeletion:
                  $ref: '#/components/schemas/stream_scheduledDeletion'
                uid:
                  $ref: '#/components/schemas/stream_identifier'
                uploadURL:
                  type: string
                  description: >-
                    The URL an unauthenticated upload can use for a single `HTTP
                    POST multipart/form-data` request.
                  example: www.example.com/samplepath
                watermark:
                  $ref: '#/components/schemas/stream_watermarks'
    stream_key_response_collection:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              type: array
              items:
                type: object
                properties:
                  created:
                    $ref: '#/components/schemas/stream_signing_key_created'
                  id:
                    $ref: '#/components/schemas/stream_schemas-identifier'
    stream_key_generation_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/stream_keys'
    stream_live_input_response_collection:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              type: object
              properties:
                liveInputs:
                  type: array
                  items:
                    $ref: '#/components/schemas/stream_live_input_object_without_url'
                range:
                  type: integer
                  description: >-
                    The total number of remaining live inputs based on cursor
                    position.
                  example: 1000
                total:
                  type: integer
                  description: >-
                    The total number of live inputs that match the provided
                    filters.
                  example: 35586
    stream_live_input_response_single:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/stream_live_input'
    stream_output_response_collection:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/stream_output'
    stream_output_response_single:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/stream_output'
    stream_storage_use_response:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              properties:
                creator:
                  $ref: '#/components/schemas/stream_creator'
                totalStorageMinutes:
                  type: integer
                  description: The total minutes of video content stored in the account.
                totalStorageMinutesLimit:
                  type: integer
                  description: The storage capacity alloted for the account.
                videoCount:
                  type: integer
                  description: The total count of videos associated with the account.
    stream_watermark_response_collection:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/stream_watermarks'
    stream_watermark_response_single:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              type: object
    stream_webhook_response_single:
      allOf:
        - $ref: '#/components/schemas/stream_api-response-single'
        - properties:
            result:
              type: object
    tunnel_teamnet_response_collection:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/tunnel_teamnet'
    tunnel_route_response_single:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/tunnel_route'
    tunnel_teamnet_response_single:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/tunnel_teamnet'
    tunnel_vnet_response_collection:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/tunnel_virtual-network'
    tunnel_vnet_response_single:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              type: object
    tunnel_legacy-tunnel-response-single:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/tunnel_argo-tunnel'
    workers_account-settings-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                default_usage_model:
                  readOnly: true
                green_compute:
                  readOnly: true
    workers_deployments-list-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                items:
                  type: array
                  example:
                    - id: bcf48806-b317-4351-9ee7-36e7d557d4de
                      metadata:
                        author_email: user@example.com
                        author_id: 408cbcdfd4dda4617efef40b04d168a1
                        created_on: '2022-11-15T18:25:44.442097Z'
                        modified_on: '2022-11-15T18:25:44.442097Z'
                        source: api
                      number: 2
                    - id: 18f97339-c287-4872-9bdd-e2135c07ec12
                      metadata:
                        author_email: user@example.com
                        author_id: 408cbcdfd4dda4617efef40b04d168a1
                        created_on: '2022-11-08T17:30:56.968096Z'
                        modified_on: '2022-11-08T17:30:56.968096Z'
                        source: api
                      number: 1
                  items: {}
                latest:
                  type: object
                  example:
                    id: bcf48806-b317-4351-9ee7-36e7d557d4de
                    metadata:
                      author_email: user@example.com
                      author_id: 408cbcdfd4dda4617efef40b04d168a1
                      created_on: '2022-11-15T18:25:44.442097Z'
                      modified_on: '2022-11-15T18:25:44.442097Z'
                      source: api
                    number: 2
                    resources:
                      bindings:
                        - json: example_binding
                          name: JSON_VAR
                          type: json
                      script:
                        etag: >-
                          13a3240e8fb414561b0366813b0b8f42b3e6cfa0d9e70e99835dae83d0d8a794
                        handlers:
                          - fetch
                        last_deployed_from: api
                      script_runtime:
                        usage_model: bundled
    workers_deployments-single-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                id:
                  type: string
                  example: 18f97339-c287-4872-9bdd-e2135c07ec12
                metadata:
                  type: object
                  example:
                    author_email: user@example.com
                    author_id: 408cbcdfd4dda4617efef40b04d168a1
                    created_on: '2022-11-08T17:19:29.176266Z'
                    modified_on: '2022-11-08T17:19:29.176266Z'
                    source: api
                number:
                  type: number
                  example: 1
                resources:
                  type: object
                  example:
                    bindings:
                      - json: example_binding
                        name: JSON_VAR
                        type: json
                    script:
                      etag: >-
                        13a3240e8fb414561b0366813b0b8f42b3e6cfa0d9e70e99835dae83d0d8a794
                      handlers:
                        - fetch
                      last_deployed_from: api
                    script_runtime:
                      usage_model: bundled
    workers_namespace-list-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/workers_namespace-response'
    workers_namespace-single-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/workers_namespace-response'
    workers_namespace-delete-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              enum:
                - null
              nullable: true
    workers_namespace-script-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              $ref: '#/components/schemas/workers_namespace-script-response'
    workers_binding:
      oneOf:
        - $ref: '#/components/schemas/workers_kv_namespace_binding'
        - $ref: '#/components/schemas/workers_service_binding'
        - $ref: '#/components/schemas/workers_do_binding'
        - $ref: '#/components/schemas/workers_r2_binding'
        - $ref: '#/components/schemas/workers_queue_binding'
        - $ref: '#/components/schemas/workers_d1_binding'
        - $ref: '#/components/schemas/workers_dispatch_namespace_binding'
        - $ref: '#/components/schemas/workers_mtls_cert_binding'
      type: object
      description: A binding to allow the Worker to communicate with resources
    workers_script-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/workers_script-response'
    workers_script-settings-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                bindings:
                  $ref: '#/components/schemas/workers_bindings'
                compatibility_date:
                  $ref: '#/components/schemas/workers_compatibility_date'
                compatibility_flags:
                  $ref: '#/components/schemas/workers_compatibility_flags'
                logpush:
                  $ref: '#/components/schemas/workers_logpush'
                migrations:
                  oneOf:
                    - $ref: '#/components/schemas/workers_single_step_migrations'
                    - $ref: '#/components/schemas/workers_stepped_migrations'
                  description: >-
                    Migrations to apply for Durable Objects associated with this
                    Worker.
                placement:
                  $ref: '#/components/schemas/workers_placement_config'
                tags:
                  $ref: '#/components/schemas/workers_tags'
                tail_consumers:
                  $ref: '#/components/schemas/workers_tail_consumers'
                usage_model:
                  $ref: '#/components/schemas/workers_usage_model'
    workers_domain-response-collection:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/workers_domain'
    workers_domain-response-single:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/workers_domain'
    workers_script-response-collection:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/workers_script-response'
    workers_cron-trigger-response-collection:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                schedules:
                  type: array
                  items:
                    properties:
                      created_on:
                        readOnly: true
                      cron:
                        readOnly: true
                      modified_on:
                        readOnly: true
    workers_tail-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                expires_at:
                  readOnly: true
                id:
                  readOnly: true
                url:
                  readOnly: true
    workers_api-response-common:
      type: object
      required:
        - success
        - errors
        - messages
        - result
      properties:
        errors:
          $ref: '#/components/schemas/workers_messages'
        messages:
          $ref: '#/components/schemas/workers_messages'
        result:
          anyOf:
            - type: object
            - type: array
              items: {}
            - type: string
        success:
          type: boolean
          description: Whether the API call was successful
          enum:
            - true
          example: true
    workers_usage-model-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                usage_model:
                  readOnly: true
    workers_subdomain-response:
      allOf:
        - $ref: '#/components/schemas/workers_api-response-common'
        - properties:
            result:
              type: object
              properties:
                name:
                  readOnly: true
    tunnel_zero_trust_connectivity_settings_response:
      allOf:
        - $ref: '#/components/schemas/tunnel_api-response-single'
        - type: object
          properties:
            result:
              type: object
              properties:
                icmp_proxy_enabled:
                  $ref: '#/components/schemas/tunnel_icmp_proxy_enabled'
                offramp_warp_enabled:
                  $ref: '#/components/schemas/tunnel_offramp_warp_enabled'
    bill-subs-api_billing_response_single:
      allOf:
        - $ref: '#/components/schemas/bill-subs-api_api-response-single'
        - type: object
          properties:
            result:
              type: object
    cloudforce-one_api-response-common:
      type: object
      required:
        - success
        - errors
        - messages
        - result
      properties:
        errors:
          $ref: '#/components/schemas/cloudforce-one_messages'
        messages:
          $ref: '#/components/schemas/cloudforce-one_messages'
        result:
          anyOf:
            - type: object
            - type: array
              items: {}
            - type: string
        success:
          type: boolean
          description: Whether the API call was successful
          enum:
            - true
          example: true
    custom-pages_custom_pages_response_collection:
      allOf:
        - $ref: '#/components/schemas/custom-pages_api-response-collection'
        - properties:
            result:
              type: array
              items:
                type: object
    custom-pages_custom_pages_response_single:
      allOf:
        - $ref: '#/components/schemas/custom-pages_api-response-single'
        - properties:
            result:
              type: object
    email_destination_addresses_response_collection:
      allOf:
        - $ref: '#/components/schemas/email_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/email_addresses'
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 20
                total_count:
                  example: 1
    email_destination_address_response_single:
      allOf:
        - $ref: '#/components/schemas/email_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/email_addresses'
    legacy-jhs_response_collection:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                type: object
    legacy-jhs_response_single:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-single'
        - type: object
          properties:
            result:
              type: object
    legacy-jhs_api-response-single-id:
      allOf:
        - $ref: '#/components/schemas/legacy-jhs_api-response-common'
        - properties:
            result:
              type: object
              nullable: true
              required:
                - id
              properties:
                id:
                  $ref: >-
                    #/components/schemas/legacy-jhs_common_components-schemas-identifier
      type: object
    magic_components-schemas-tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                interconnects:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_interconnect'
    magic_components-schemas-modified_tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_interconnects:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_interconnect'
    magic_components-schemas-tunnel_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                interconnect:
                  type: object
    magic_components-schemas-tunnel_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_interconnect:
                  type: object
    magic_tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                gre_tunnels:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_gre-tunnel'
    magic_modified_tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_gre_tunnels:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_gre-tunnel'
    magic_tunnel_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_gre_tunnel:
                  type: object
    magic_tunnel_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                gre_tunnel:
                  type: object
    magic_tunnel_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_gre_tunnel:
                  type: object
    magic_schemas-tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                ipsec_tunnels:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_ipsec-tunnel'
    magic_schemas-modified_tunnels_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_ipsec_tunnels:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_ipsec-tunnel'
    magic_schemas-tunnel_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_ipsec_tunnel:
                  type: object
    magic_schemas-tunnel_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                ipsec_tunnel:
                  type: object
    magic_schemas-tunnel_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_ipsec_tunnel:
                  type: object
    magic_psk_generation_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                ipsec_tunnel_id:
                  $ref: '#/components/schemas/magic_identifier'
                psk:
                  $ref: '#/components/schemas/magic_psk'
                psk_metadata:
                  $ref: '#/components/schemas/magic_psk_metadata'
    magic_multiple_route_delete_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_routes:
                  type: object
    magic_routes_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                routes:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_route'
    magic_multiple_route_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_routes:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_route'
    magic_route_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_route:
                  type: object
    magic_route_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                route:
                  type: object
    magic_route_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                modified:
                  type: boolean
                  example: true
                modified_route:
                  type: object
    magic_sites_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                sites:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_site'
    magic_site_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                site:
                  $ref: '#/components/schemas/magic_site'
    magic_site_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_site:
                  $ref: '#/components/schemas/magic_site'
    magic_site_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                site:
                  $ref: '#/components/schemas/magic_site'
    magic_acls_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                acls:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_acl'
    magic_acl_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_acl:
                  $ref: '#/components/schemas/magic_acl'
    magic_acl_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                acl:
                  $ref: '#/components/schemas/magic_acl'
    magic_acl_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                acl:
                  $ref: '#/components/schemas/magic_acl'
    magic_lans_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                lans:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_lan'
    magic_lan_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_lan:
                  $ref: '#/components/schemas/magic_lan'
    magic_lan_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                lan:
                  $ref: '#/components/schemas/magic_lan'
    magic_lan_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                lan:
                  $ref: '#/components/schemas/magic_lan'
    magic_wans_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                wans:
                  type: array
                  items:
                    $ref: '#/components/schemas/magic_wan'
    magic_wan_deleted_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                deleted:
                  type: boolean
                  example: true
                deleted_wan:
                  $ref: '#/components/schemas/magic_wan'
    magic_wan_single_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                wan:
                  $ref: '#/components/schemas/magic_wan'
    magic_wan_modified_response:
      allOf:
        - $ref: '#/components/schemas/magic_api-response-single'
        - properties:
            result:
              properties:
                wan:
                  $ref: '#/components/schemas/magic_wan'
    magic-visibility_mnm_config_single_response:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/magic-visibility_mnm_config'
    magic-visibility_mnm_rules_collection_response:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-collection'
        - properties:
            result:
              type: array
              nullable: true
              items:
                $ref: '#/components/schemas/magic-visibility_mnm_rule'
    magic-visibility_mnm_rules_single_response:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/magic-visibility_mnm_rule'
    magic-visibility_mnm_rule_advertisement_single_response:
      allOf:
        - $ref: '#/components/schemas/magic-visibility_api-response-single'
        - type: object
          properties:
            result:
              $ref: >-
                #/components/schemas/magic-visibility_mnm_rule_advertisable_response
    lists_item-response-collection:
      allOf:
        - $ref: '#/components/schemas/lists_api-response-collection'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/lists_item'
    lists_bulk-operation-response-collection:
      allOf:
        - $ref: '#/components/schemas/lists_api-response-collection'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/lists_operation'
    bill-subs-api_account_subscription_response_collection:
      allOf:
        - $ref: '#/components/schemas/bill-subs-api_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/bill-subs-api_subscription'
    bill-subs-api_account_subscription_response_single:
      allOf:
        - $ref: '#/components/schemas/bill-subs-api_api-response-single'
        - type: object
          properties:
            result:
              type: object
    access_apps_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_apps'
    access_apps_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_apps'
    access_policy_check_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              type: object
              properties:
                app_state:
                  type: object
                  properties:
                    app_uid:
                      $ref: '#/components/schemas/access_uuid'
                    aud:
                      type: string
                      example: >-
                        737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe389
                    hostname:
                      type: string
                      example: test.com
                    name:
                      type: string
                      example: Test App
                    policies:
                      type: array
                      example:
                        - decision: allow
                          exclude: []
                          include:
                            - _type: email
                              email: testuser@gmail.com
                          precedence: 0
                          require: []
                          status: Success
                      items: {}
                    status:
                      type: string
                      example: Success
                user_identity:
                  type: object
                  properties:
                    account_id:
                      type: string
                      example: 41ecfbb341f033e52b46742756aabb8b
                    device_sessions:
                      type: object
                      example: {}
                    email:
                      type: string
                      example: testuser@gmail.com
                    geo:
                      type: object
                      properties:
                        country:
                          type: string
                          example: US
                    iat:
                      type: integer
                    id:
                      type: string
                      example: '1164449231815010287495'
                    is_gateway:
                      type: boolean
                      example: false
                    is_warp:
                      type: boolean
                      example: false
                    name:
                      type: string
                      example: Test User
                    user_uuid:
                      $ref: '#/components/schemas/access_uuid'
                    version:
                      type: integer
    access_ca_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              type: object
    access_policies_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_policies'
    access_policies_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_policies'
    access_ca_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_ca'
    access_bookmarks_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_bookmarks'
    access_id_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/access_uuid'
    access_bookmarks_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_bookmarks'
    access_certificates_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_certificates'
    access_components-schemas-id_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-common'
        - properties:
            result:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/access_uuid'
    access_certificates_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_certificates'
    access_response_collection_hostnames:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_settings'
    access_custom-pages_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_custom_page_without_html'
    access_custom-pages_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_custom_page'
    access_single_response_without_html:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_custom_page_without_html'
    access_schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_groups'
    access_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_groups'
    access_response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/access_azureAD'
                  - $ref: '#/components/schemas/access_centrify'
                  - $ref: '#/components/schemas/access_facebook'
                  - $ref: '#/components/schemas/access_github'
                  - $ref: '#/components/schemas/access_google'
                  - $ref: '#/components/schemas/access_google-apps'
                  - $ref: '#/components/schemas/access_linkedin'
                  - $ref: '#/components/schemas/access_oidc'
                  - $ref: '#/components/schemas/access_okta'
                  - $ref: '#/components/schemas/access_onelogin'
                  - $ref: '#/components/schemas/access_pingone'
                  - $ref: '#/components/schemas/access_saml'
                  - $ref: '#/components/schemas/access_yandex'
      type: object
    access_schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_identity-providers'
    access_keys_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - $ref: '#/components/schemas/access_key_config'
    access_access-requests_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_access-requests'
    access_single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_organizations'
    access_empty_response:
      allOf:
        - properties:
            result:
              type: boolean
              enum:
                - true
                - false
              example: true
            success:
              type: boolean
              enum:
                - true
                - false
              example: true
    access_seats_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_seats'
    access_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_service-tokens'
    access_service-tokens_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              $ref: '#/components/schemas/access_service-tokens'
    access_create_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              properties:
                client_id:
                  $ref: '#/components/schemas/access_client_id'
                client_secret:
                  $ref: '#/components/schemas/access_client_secret'
                created_at:
                  $ref: '#/components/schemas/access_timestamp'
                duration:
                  $ref: '#/components/schemas/access_duration'
                id:
                  description: The ID of the service token.
                name:
                  $ref: >-
                    #/components/schemas/access_service-tokens_components-schemas-name
                updated_at:
                  $ref: '#/components/schemas/access_timestamp'
    access_tags_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_tag'
    access_tags_components-schemas-single_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/access_tag'
    access_users_components-schemas-response_collection:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result_info:
              type: object
              properties:
                count:
                  example: 1
                page:
                  example: 1
                per_page:
                  example: 100
                total_count:
                  example: 1
        - properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/access_users'
    access_active_sessions_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                type: object
                properties:
                  expiration:
                    type: integer
                    example: 1694813506
                  metadata:
                    type: object
                    properties:
                      apps:
                        type: object
                      expires:
                        type: integer
                        example: 1694813506
                      iat:
                        type: integer
                        example: 1694791905
                      nonce:
                        type: string
                        example: X1aXj1lFVcqqyoXF
                      ttl:
                        type: integer
                        example: 21600
                  name:
                    type: string
    access_active_session_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/access_identity'
                - type: object
                  properties:
                    isActive:
                      type: boolean
                      example: true
              type: object
    access_failed_login_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-collection'
        - properties:
            result:
              type: array
              items:
                type: object
                properties:
                  expiration:
                    type: integer
                  metadata:
                    type: object
                    example:
                      app_name: Test App
                      aud: >-
                        39691c1480a2352a18ece567debc2b32552686cbd38eec0887aa18d5d3f00c04
                      datetime: '2022-02-02T21:54:34.914Z'
                      ray_id: 6d76a8a42ead4133
                      user_email: test@cloudflare.com
                      user_uuid: 57171132-e453-4ee8-b2a5-8cbaad333207
    access_last_seen_identity_response:
      allOf:
        - $ref: '#/components/schemas/access_api-response-single'
        - properties:
            result:
              allOf:
                - $ref: '#/components/schemas/access_identity'
              type: object
info:
  title: ' accounts/'
  description: Needs description.
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  version: 4.0.0
paths:
  /accounts/{account_id}:
    get:
      tags:
        - Accounts
        - Details
      summary: 'Account Details '
      description: Get information about a specific account that you are a member of.
      operationId: accounts-account-details
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_schemas-identifier'
      responses:
        '200':
          description: Account Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_response_single'
        4XX:
          description: Account Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_single'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
      summary: 'Update Account '
      description: Update an existing account.
      operationId: accounts-update-account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_components-schemas-account'
      responses:
        '200':
          description: Update Account response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_response_single'
        4XX:
          description: Update Account response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_single'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/address_maps:
    get:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
      summary: 'List Address Maps '
      description: List all address maps owned by the account.
      operationId: ip-address-management-address-maps-list-address-maps
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: List Address Maps response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/addressing_components-schemas-response_collection
        4XX:
          description: List Address Maps response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/addressing_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
      summary: 'Create Address Map '
      description: Create a new address map under the account.
      operationId: ip-address-management-address-maps-create-address-map
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                description:
                  $ref: '#/components/schemas/addressing_schemas-description'
                enabled:
                  $ref: '#/components/schemas/addressing_enabled'
      responses:
        '200':
          description: Create Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_full_response'
        4XX:
          description: Create Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_full_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/address_maps/{address_map_id}:
    delete:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
      summary: 'Delete Address Map '
      description: >-
        Delete a particular address map owned by the account. An Address Map
        must be disabled before it can be deleted.
      operationId: ip-address-management-address-maps-delete-address-map
      parameters:
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Delete Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Details
        - Maps
      summary: 'Address Map Details '
      description: Show a particular address map owned by the account.
      operationId: ip-address-management-address-maps-address-map-details
      parameters:
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Address Map Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_full_response'
        4XX:
          description: Address Map Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_full_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
      summary: 'Update Address Map '
      description: Modify properties of an address map owned by the account.
      operationId: ip-address-management-address-maps-update-address-map
      parameters:
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                default_sni:
                  $ref: '#/components/schemas/addressing_default_sni'
                description:
                  $ref: '#/components/schemas/addressing_schemas-description'
                enabled:
                  $ref: '#/components/schemas/addressing_enabled'
      responses:
        '200':
          description: Update Address Map response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/addressing_components-schemas-single_response
        4XX:
          description: Update Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/addressing_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/address_maps/{address_map_id}/accounts/{account_id}:
    delete:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
        - Memberships
        - Removes
      summary: 'Remove An Account Membership From An Address Map '
      description: Remove an account as a member of a particular address map.
      operationId: >-
        ip-address-management-address-maps-remove-an-account-membership-from-an-address-map
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Remove an account membership from an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Remove an account membership from an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
        - Memberships
      summary: 'Add An Account Membership To An Address Map '
      description: Add an account as a member of a particular address map.
      operationId: >-
        ip-address-management-address-maps-add-an-account-membership-to-an-address-map
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Add an account membership to an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Add an account membership to an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/address_maps/{address_map_id}/ips/{ip_address}:
    delete:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - IP
        - IP Addresses
        - Maps
        - Removes
      summary: 'Remove An IP From An Address Map '
      description: Remove an IP from a particular address map.
      operationId: ip-address-management-address-maps-remove-an-ip-from-an-address-map
      parameters:
        - name: ip_address
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_ip_address'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Remove an IP from an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Remove an IP from an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - IP
        - IP Addresses
        - Maps
      summary: 'Add An IP To An Address Map '
      description: >-
        Add an IP from a prefix owned by the account to a particular address
        map.
      operationId: ip-address-management-address-maps-add-an-ip-to-an-address-map
      parameters:
        - name: ip_address
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_ip_address'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Add an IP to an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Add an IP to an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/address_maps/{address_map_id}/zones/{zone_id}:
    delete:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
        - Memberships
        - Removes
        - Zones
      summary: 'Remove A Zone Membership From An Address Map '
      description: Remove a zone as a member of a particular address map.
      operationId: >-
        ip-address-management-address-maps-remove-a-zone-membership-from-an-address-map
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Remove a zone membership from an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Remove a zone membership from an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Addresses
        - Addressing
        - Maps
        - Memberships
        - Zones
      summary: 'Add A Zone Membership To An Address Map '
      description: Add a zone as a member of a particular address map.
      operationId: >-
        ip-address-management-address-maps-add-a-zone-membership-to-an-address-map
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: address_map_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Add a zone membership to an Address Map response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Add a zone membership to an Address Map response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/loa_documents:
    post:
      tags:
        - Accounts
        - Addressing
        - Documents
        - LOA
        - Loa
        - Uploads
      summary: 'Upload LOA Document '
      description: Submit LOA document (pdf format) under the account.
      operationId: ip-address-management-prefixes-upload-loa-document
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - loa_document
              properties:
                loa_document:
                  type: string
                  description: LOA document to upload.
                  example: '@document.pdf'
      responses:
        '201':
          description: Upload LOA Document response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_loa_upload_response'
        4XX:
          description: Upload LOA Document response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_loa_upload_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/loa_documents/{loa_document_id}/download:
    get:
      tags:
        - Accounts
        - Addressing
        - Documents
        - Download
        - LOA
        - Loa
      summary: 'Download LOA Document '
      description: Download specified LOA document under the account.
      operationId: ip-address-management-prefixes-download-loa-document
      parameters:
        - name: loa_document_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_loa_document_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Download LOA Document response
          content:
            application/json:
              schema: {}
        4XX:
          description: Download LOA Document response failure
          content:
            application/json:
              schema:
                allOf:
                  - {}
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes:
    get:
      tags:
        - Accounts
        - Addressing
        - Prefixes
      summary: 'List Prefixes '
      description: List all prefixes owned by the account.
      operationId: ip-address-management-prefixes-list-prefixes
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: List Prefixes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_response_collection'
        4XX:
          description: List Prefixes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_response_collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Addressing
        - Prefix
        - Prefixes
      summary: 'Add Prefix '
      description: Add a new prefix under the account.
      operationId: ip-address-management-prefixes-add-prefix
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - cidr
                - loa_document_id
                - asn
              properties:
                asn:
                  $ref: '#/components/schemas/addressing_asn'
                cidr:
                  $ref: '#/components/schemas/addressing_cidr'
                loa_document_id:
                  $ref: '#/components/schemas/addressing_loa_document_identifier'
      responses:
        '201':
          description: Add Prefix response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_single_response'
        4XX:
          description: Add Prefix response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_single_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}:
    delete:
      tags:
        - Accounts
        - Addressing
        - Prefix
        - Prefixes
      summary: 'Delete Prefix '
      description: Delete an unapproved prefix owned by the account.
      operationId: ip-address-management-prefixes-delete-prefix
      parameters:
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Prefix response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-collection'
        4XX:
          description: Delete Prefix response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-collection'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Addressing
        - Details
        - Prefix
        - Prefixes
      summary: 'Prefix Details '
      description: List a particular prefix owned by the account.
      operationId: ip-address-management-prefixes-prefix-details
      parameters:
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Prefix Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_single_response'
        4XX:
          description: Prefix Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_single_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Addressing
        - Descriptions
        - Prefix
        - Prefixes
      summary: 'Update Prefix Description '
      description: Modify the description for a prefix owned by the account.
      operationId: ip-address-management-prefixes-update-prefix-description
      parameters:
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - description
              properties:
                description:
                  $ref: '#/components/schemas/addressing_description'
      responses:
        '200':
          description: Update Prefix Description response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_single_response'
        4XX:
          description: Update Prefix Description response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_single_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}/bgp/prefixes:
    get:
      tags:
        - Accounts
        - Addressing
        - BGP
        - Prefix
        - Prefixes
      summary: 'List BGP Prefixes '
      description: >-
        List all BGP Prefixes within the specified IP Prefix. BGP Prefixes are
        used to control which specific subnets are advertised to the Internet.
        It is possible to advertise subnets more specific than an IP Prefix by
        creating more specific BGP Prefixes.
      operationId: ip-address-management-prefixes-list-bgp-prefixes
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: List BGP Prefixes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_response_collection_bgp'
        4XX:
          description: List BGP Prefixes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_response_collection_bgp'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}/bgp/prefixes/{bgp_prefix_id}:
    get:
      tags:
        - Accounts
        - Addressing
        - BGP
        - Fetch
        - Prefix
        - Prefixes
      summary: 'Fetch BGP Prefix '
      description: Retrieve a single BGP Prefix according to its identifier
      operationId: ip-address-management-prefixes-fetch-bgp-prefix
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: bgp_prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Fetch BGP Prefix response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_single_response_bgp'
        4XX:
          description: Fetch BGP Prefix response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_single_response_bgp'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Addressing
        - BGP
        - Prefix
        - Prefixes
      summary: 'Update BGP Prefix '
      description: >-
        Update the properties of a BGP Prefix, such as the on demand
        advertisement status (advertised or withdrawn).
      operationId: ip-address-management-prefixes-update-bgp-prefix
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: bgp_prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addressing_bgp_prefix_update_advertisement'
      responses:
        '200':
          description: Update BGP Prefix response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_single_response_bgp'
        4XX:
          description: Update BGP Prefix response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_single_response_bgp'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}/bgp/status:
    get:
      tags:
        - Accounts
        - Addressing
        - Advertisement
        - Prefix
        - Prefixes
        - Status
      summary: 'Get Advertisement Status '
      description: List the current advertisement state for a prefix.
      operationId: ip-address-management-dynamic-advertisement-get-advertisement-status
      parameters:
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Get Advertisement Status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_advertised_response'
        4XX:
          description: Get Advertisement Status response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_advertised_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Addressing
        - Advertisement
        - Dynamic
        - Prefix
        - Prefixes
        - Status
      summary: 'Update Prefix Dynamic Advertisement Status '
      description: Advertise or withdraw BGP route for a prefix.
      operationId: >-
        ip-address-management-dynamic-advertisement-update-prefix-dynamic-advertisement-status
      parameters:
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - advertised
              properties:
                advertised:
                  $ref: '#/components/schemas/addressing_schemas-advertised'
      responses:
        '200':
          description: Update Prefix Dynamic Advertisement Status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_advertised_response'
        4XX:
          description: Update Prefix Dynamic Advertisement Status response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_advertised_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}/bindings:
    get:
      tags:
        - Accounts
        - Addressing
        - Bindings
        - Prefix
        - Prefixes
        - Services
      summary: 'List Service Bindings '
      description: >
        List the Cloudflare services this prefix is currently bound to. Traffic
        sent to an address within an IP prefix will be routed to the Cloudflare
        service of the most-specific Service Binding matching the address.

        **Example:** binding `192.0.2.0/24` to Cloudflare Magic Transit and
        `192.0.2.1/32` to the Cloudflare CDN would route traffic for `192.0.2.1`
        to the CDN, and traffic for all other IPs in the prefix to Cloudflare
        Magic Transit.
      operationId: ip-address-management-service-bindings-list-service-bindings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Service Bindings attached to the Prefix
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/addressing_service_binding'
        4XX:
          description: List Service Bindings response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Addressing
        - Binding
        - Bindings
        - Prefix
        - Prefixes
        - Services
      summary: 'Create Service Binding '
      description: >
        Creates a new Service Binding, routing traffic to IPs within the given
        CIDR to a service running on Cloudflare's network.

        **Note:** This API may only be used on prefixes currently configured
        with a Magic Transit service binding, and only allows creating service
        bindings for the Cloudflare CDN or Cloudflare Spectrum.
      operationId: ip-address-management-service-bindings-create-service-binding
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addressing_create_binding_request'
      responses:
        '201':
          description: The created Service Binding
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/addressing_service_binding'
        4XX:
          description: Create Service Binding response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}/bindings/{binding_id}:
    delete:
      tags:
        - Accounts
        - Addressing
        - Binding
        - Bindings
        - Prefix
        - Prefixes
        - Services
      summary: 'Delete Service Binding '
      description: Delete a Service Binding
      operationId: ip-address-management-service-bindings-delete-service-binding
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: binding_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Service Binding deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-common'
        4XX:
          description: Delete Service Binding response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Addressing
        - Binding
        - Bindings
        - Prefix
        - Prefixes
        - Services
      summary: 'Get Service Binding '
      description: Fetch a single Service Binding
      operationId: ip-address-management-service-bindings-get-service-binding
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: binding_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: The Service Binding with the requested ID
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/addressing_service_binding'
        4XX:
          description: Get Service Binding response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}/delegations:
    get:
      tags:
        - Accounts
        - Addressing
        - Delegations
        - Prefix
        - Prefixes
      summary: 'List Prefix Delegations '
      description: List all delegations for a given account IP prefix.
      operationId: ip-address-management-prefix-delegation-list-prefix-delegations
      parameters:
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: List Prefix Delegations response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_schemas-response_collection'
        4XX:
          description: List Prefix Delegations response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/addressing_schemas-response_collection
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Addressing
        - Delegation
        - Delegations
        - Prefix
        - Prefixes
      summary: 'Create Prefix Delegation '
      description: Create a new account delegation for a given IP prefix.
      operationId: ip-address-management-prefix-delegation-create-prefix-delegation
      parameters:
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - cidr
                - delegated_account_id
              properties:
                cidr:
                  $ref: '#/components/schemas/addressing_cidr'
                delegated_account_id:
                  $ref: '#/components/schemas/addressing_delegated_account_identifier'
      responses:
        '200':
          description: Create Prefix Delegation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_schemas-single_response'
        4XX:
          description: Create Prefix Delegation response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/prefixes/{prefix_id}/delegations/{delegation_id}:
    delete:
      tags:
        - Accounts
        - Addressing
        - Delegation
        - Delegations
        - Prefix
        - Prefixes
      summary: 'Delete Prefix Delegation '
      description: Delete an account delegation for a given IP prefix.
      operationId: ip-address-management-prefix-delegation-delete-prefix-delegation
      parameters:
        - name: delegation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_delegation_identifier'
        - name: prefix_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Prefix Delegation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_id_response'
        4XX:
          description: Delete Prefix Delegation response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_id_response'
                  - $ref: >-
                      #/components/schemas/addressing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/addressing/services:
    get:
      tags:
        - Accounts
        - Addressing
        - Services
      summary: 'List Services '
      description: >
        Bring-Your-Own IP (BYOIP) prefixes onboarded to Cloudflare must be bound
        to a service running on the Cloudflare network to enable a Cloudflare
        product on the IP addresses. This endpoint can be used as a reference of
        available services on the Cloudflare network, and their service IDs.
      operationId: ip-address-management-service-bindings-list-services
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/addressing_identifier'
      responses:
        '200':
          description: Service names and IDs
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/addressing_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          properties:
                            id:
                              $ref: >-
                                #/components/schemas/addressing_service_identifier
                            name:
                              $ref: '#/components/schemas/addressing_service_name'
        4XX:
          description: List Services response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addressing_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/baai/bge-base-en-v1.5:
    post:
      tags:
        - '@Cf'
        - '@cf/baai/bge base en v1 5'
        - AI
        - Accounts
        - Base
        - EN
        - Execute
        - Models
        - Runs
        - V1 5
      summary: 'Execute @cf/baai/bge-base-en-v1.5 Model. '
      operationId: workers-ai-post-run-cf-baai-bge-base-en-v1-5
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  oneOf:
                    - type: string
                    - type: array
                      maxItems: 100
                      items:
                        type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: number
                      shape:
                        type: array
                        items:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/baai/bge-large-en-v1.5:
    post:
      tags:
        - '@Cf'
        - '@cf/baai/bge large en v1 5'
        - AI
        - Accounts
        - EN
        - Execute
        - Large
        - Models
        - Runs
        - V1 5
      summary: 'Execute @cf/baai/bge-large-en-v1.5 Model. '
      operationId: workers-ai-post-run-cf-baai-bge-large-en-v1-5
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  oneOf:
                    - type: string
                    - type: array
                      maxItems: 100
                      items:
                        type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: number
                      shape:
                        type: array
                        items:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/baai/bge-small-en-v1.5:
    post:
      tags:
        - '@Cf'
        - '@cf/baai/bge small en v1 5'
        - AI
        - Accounts
        - EN
        - Execute
        - Models
        - Runs
        - V1 5
      summary: 'Execute @cf/baai/bge-small-en-v1.5 Model. '
      operationId: workers-ai-post-run-cf-baai-bge-small-en-v1-5
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  oneOf:
                    - type: string
                    - type: array
                      maxItems: 100
                      items:
                        type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: number
                      shape:
                        type: array
                        items:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/bytedance/stable-diffusion-xl-lightning:
    post:
      tags:
        - '@Cf'
        - '@cf/bytedance/stable diffusion xl lightning'
        - AI
        - Accounts
        - Diffusion
        - Execute
        - Lightning
        - Models
        - Runs
        - Stable
      summary: 'Execute @cf/bytedance/stable-diffusion-xl-lightning Model. '
      operationId: workers-ai-post-run-cf-bytedance-stable-diffusion-xl-lightning
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - prompt
              properties:
                guidance:
                  type: number
                  default: 7.5
                image:
                  type: array
                  items:
                    type: number
                mask:
                  type: array
                  items:
                    type: number
                num_steps:
                  type: integer
                  default: 20
                  maximum: 20
                prompt:
                  type: string
                strength:
                  type: number
                  default: 1
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    format: binary
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/deepseek-ai/deepseek-math-7b-base:
    post:
      tags:
        - '@Cf'
        - '@cf/deepseek ai/deepseek math 7b base'
        - AI
        - Accounts
        - Base
        - Execute
        - Math
        - Models
        - Runs
      summary: 'Execute @cf/deepseek-ai/deepseek-math-7b-base Model. '
      operationId: workers-ai-post-run-cf-deepseek-ai-deepseek-math-7b-base
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/deepseek-ai/deepseek-math-7b-instruct:
    post:
      tags:
        - '@Cf'
        - '@cf/deepseek ai/deepseek math 7b instruct'
        - AI
        - Accounts
        - Execute
        - Instruct
        - Math
        - Models
        - Runs
      summary: 'Execute @cf/deepseek-ai/deepseek-math-7b-instruct Model. '
      operationId: workers-ai-post-run-cf-deepseek-ai-deepseek-math-7b-instruct
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/defog/sqlcoder-7b-2:
    post:
      tags:
        - '@Cf'
        - '@cf/defog/sqlcoder 7b 2'
        - AI
        - Accounts
        - Defog
        - Execute
        - Models
        - Runs
        - SQL
      summary: 'Execute @cf/defog/sqlcoder-7b-2 Model. '
      operationId: workers-ai-post-run-cf-defog-sqlcoder-7b-2
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/facebook/bart-large-cnn:
    post:
      tags:
        - '@Cf'
        - '@cf/facebook/bart large cnn'
        - AI
        - Accounts
        - Execute
        - Facebook
        - Large
        - Models
        - Runs
      summary: 'Execute @cf/facebook/bart-large-cnn Model. '
      operationId: workers-ai-post-run-cf-facebook-bart-large-cnn
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - input_text
              properties:
                input_text:
                  type: string
                max_length:
                  type: integer
                  default: 1024
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      summary:
                        type: string
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/facebook/detr-resnet-50:
    post:
      tags:
        - '@Cf'
        - '@cf/facebook/detr resnet 50'
        - AI
        - Accounts
        - Execute
        - Facebook
        - Models
        - Runs
      summary: 'Execute @cf/facebook/detr-resnet-50 Model. '
      operationId: workers-ai-post-run-cf-facebook-detr-resnet-50
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        box:
                          type: object
                          properties:
                            xmax:
                              type: number
                            xmin:
                              type: number
                            ymax:
                              type: number
                            ymin:
                              type: number
                        label:
                          type: string
                        score:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/huggingface/distilbert-sst-2-int8:
    post:
      tags:
        - '@Cf'
        - '@cf/huggingface/distilbert sst 2 int8'
        - AI
        - Accounts
        - Execute
        - Huggingface
        - Models
        - Runs
      summary: 'Execute @cf/huggingface/distilbert-sst-2-int8 Model. '
      operationId: workers-ai-post-run-cf-huggingface-distilbert-sst-2-int8
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        score:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/jpmorganchase/roberta-spam:
    post:
      tags:
        - '@Cf'
        - '@cf/jpmorganchase/roberta spam'
        - AI
        - Accounts
        - Execute
        - JP Morgan Chase
        - Models
        - Runs
        - Spam
      summary: 'Execute @cf/jpmorganchase/roberta-spam Model. '
      operationId: workers-ai-post-run-cf-jpmorganchase-roberta-spam
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        score:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/lykon/dreamshaper-8-lcm:
    post:
      tags:
        - '@Cf'
        - '@cf/lykon/dreamshaper 8 lcm'
        - AI
        - Accounts
        - Dreamshaper
        - Execute
        - Models
        - Runs
      summary: 'Execute @cf/lykon/dreamshaper-8-lcm Model. '
      operationId: workers-ai-post-run-cf-lykon-dreamshaper-8-lcm
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - prompt
              properties:
                guidance:
                  type: number
                  default: 7.5
                image:
                  type: array
                  items:
                    type: number
                mask:
                  type: array
                  items:
                    type: number
                num_steps:
                  type: integer
                  default: 20
                  maximum: 20
                prompt:
                  type: string
                strength:
                  type: number
                  default: 1
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    format: binary
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/meta/llama-2-7b-chat-fp16:
    post:
      tags:
        - '@Cf'
        - '@cf/meta/llama 2 7b chat fp16'
        - AI
        - Accounts
        - Chat
        - Execute
        - Llama
        - Meta
        - Models
        - Runs
      summary: 'Execute @cf/meta/llama-2-7b-chat-fp16 Model. '
      operationId: workers-ai-post-run-cf-meta-llama-2-7b-chat-fp16
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/meta/llama-2-7b-chat-int8:
    post:
      tags:
        - '@Cf'
        - '@cf/meta/llama 2 7b chat int8'
        - AI
        - Accounts
        - Chat
        - Execute
        - Llama
        - Meta
        - Models
        - Runs
      summary: 'Execute @cf/meta/llama-2-7b-chat-int8 Model. '
      operationId: workers-ai-post-run-cf-meta-llama-2-7b-chat-int8
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/meta/m2m100-1.2b:
    post:
      tags:
        - 1 2b
        - '@Cf'
        - '@cf/meta/m2m100 1 2b'
        - AI
        - Accounts
        - Execute
        - Meta
        - Models
        - Runs
      summary: 'Execute @cf/meta/m2m100-1.2b Model. '
      operationId: workers-ai-post-run-cf-meta-m2m100-1-2b
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - text
                - target_lang
              properties:
                source_lang:
                  type: string
                  default: en
                target_lang:
                  type: string
                text:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      translated_text:
                        type: string
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/microsoft/phi-2:
    post:
      tags:
        - '@Cf'
        - '@cf/microsoft/phi 2'
        - AI
        - Accounts
        - Execute
        - Microsoft
        - Models
        - Runs
      summary: 'Execute @cf/microsoft/phi-2 Model. '
      operationId: workers-ai-post-run-cf-microsoft-phi-2
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/microsoft/resnet-50:
    post:
      tags:
        - '@Cf'
        - '@cf/microsoft/resnet 50'
        - AI
        - Accounts
        - Execute
        - Microsoft
        - Models
        - Runs
      summary: 'Execute @cf/microsoft/resnet-50 Model. '
      operationId: workers-ai-post-run-cf-microsoft-resnet-50
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                        score:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/mistral/mistral-7b-instruct-v0.1:
    post:
      tags:
        - '@Cf'
        - '@cf/mistral/mistral 7b instruct v0 1'
        - AI
        - Accounts
        - Execute
        - Instruct
        - Mistral
        - Models
        - Runs
        - V0 1
      summary: 'Execute @cf/mistral/mistral-7b-instruct-v0.1 Model. '
      operationId: workers-ai-post-run-cf-mistral-mistral-7b-instruct-v0-1
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/openai/whisper:
    post:
      tags:
        - '@Cf'
        - '@cf/openai/whisper'
        - AI
        - Accounts
        - Execute
        - Models
        - OpenAI
        - Runs
        - Whisper
      summary: 'Execute @cf/openai/whisper Model. '
      operationId: workers-ai-post-run-cf-openai-whisper
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required:
                      - text
                    properties:
                      text:
                        type: string
                      word_count:
                        type: number
                      words:
                        type: array
                        items:
                          type: object
                          properties:
                            end:
                              type: number
                            start:
                              type: number
                            word:
                              type: string
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/openchat/openchat-3.5-0106:
    post:
      tags:
        - 3 5
        - '@Cf'
        - '@cf/openchat/openchat 3 5 0106'
        - AI
        - Accounts
        - Execute
        - Models
        - Runs
      summary: 'Execute @cf/openchat/openchat-3.5-0106 Model. '
      operationId: workers-ai-post-run-cf-openchat-openchat-3-5-0106
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/qwen/qwen1.5-0.5b-chat:
    post:
      tags:
        - 0 5b
        - '@Cf'
        - '@cf/qwen/qwen1 5 0 5b chat'
        - AI
        - Accounts
        - Chat
        - Execute
        - Models
        - Qwen1 5
        - Runs
      summary: 'Execute @cf/qwen/qwen1.5-0.5b-chat Model. '
      operationId: workers-ai-post-run-cf-qwen-qwen1-5-0-5b-chat
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/qwen/qwen1.5-1.8b-chat:
    post:
      tags:
        - 1 8b
        - '@Cf'
        - '@cf/qwen/qwen1 5 1 8b chat'
        - AI
        - Accounts
        - Chat
        - Execute
        - Models
        - Qwen1 5
        - Runs
      summary: 'Execute @cf/qwen/qwen1.5-1.8b-chat Model. '
      operationId: workers-ai-post-run-cf-qwen-qwen1-5-1-8b-chat
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/qwen/qwen1.5-7b-chat-awq:
    post:
      tags:
        - '@Cf'
        - '@cf/qwen/qwen1 5 7b chat awq'
        - AI
        - Accounts
        - Chat
        - Execute
        - Models
        - Qwen1 5
        - Runs
      summary: 'Execute @cf/qwen/qwen1.5-7b-chat-awq Model. '
      operationId: workers-ai-post-run-cf-qwen-qwen1-5-7b-chat-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/qwen/qwen1.5-14b-chat-awq:
    post:
      tags:
        - '@Cf'
        - '@cf/qwen/qwen1 5 14b chat awq'
        - AI
        - Accounts
        - Chat
        - Execute
        - Models
        - Qwen1 5
        - Runs
      summary: 'Execute @cf/qwen/qwen1.5-14b-chat-awq Model. '
      operationId: workers-ai-post-run-cf-qwen-qwen1-5-14b-chat-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/runwayml/stable-diffusion-v1-5-img2img:
    post:
      tags:
        - '@Cf'
        - '@cf/runwayml/stable diffusion v1 5 img2img'
        - AI
        - Accounts
        - Diffusion
        - Execute
        - Models
        - Runs
        - Stable
      summary: 'Execute @cf/runwayml/stable-diffusion-v1-5-img2img Model. '
      operationId: workers-ai-post-run-cf-runwayml-stable-diffusion-v1-5-img2img
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - prompt
              properties:
                guidance:
                  type: number
                  default: 7.5
                image:
                  type: array
                  items:
                    type: number
                mask:
                  type: array
                  items:
                    type: number
                num_steps:
                  type: integer
                  default: 20
                  maximum: 20
                prompt:
                  type: string
                strength:
                  type: number
                  default: 1
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    format: binary
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/runwayml/stable-diffusion-v1-5-inpainting:
    post:
      tags:
        - '@Cf'
        - '@cf/runwayml/stable diffusion v1 5 inpainting'
        - AI
        - Accounts
        - Diffusion
        - Execute
        - Models
        - Runs
        - Stable
      summary: 'Execute @cf/runwayml/stable-diffusion-v1-5-inpainting Model. '
      operationId: workers-ai-post-run-cf-runwayml-stable-diffusion-v1-5-inpainting
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - prompt
              properties:
                guidance:
                  type: number
                  default: 7.5
                image:
                  type: array
                  items:
                    type: number
                mask:
                  type: array
                  items:
                    type: number
                num_steps:
                  type: integer
                  default: 20
                  maximum: 20
                prompt:
                  type: string
                strength:
                  type: number
                  default: 1
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    format: binary
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/stabilityai/stable-diffusion-xl-base-1.0:
    post:
      tags:
        - 1 0
        - '@Cf'
        - '@cf/stabilityai/stable diffusion xl base 1 0'
        - AI
        - Accounts
        - Base
        - Diffusion
        - Execute
        - Models
        - Runs
        - Stability
        - Stable
      summary: 'Execute @cf/stabilityai/stable-diffusion-xl-base-1.0 Model. '
      operationId: workers-ai-post-run-cf-stabilityai-stable-diffusion-xl-base-1-0
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - prompt
              properties:
                guidance:
                  type: number
                  default: 7.5
                image:
                  type: array
                  items:
                    type: number
                mask:
                  type: array
                  items:
                    type: number
                num_steps:
                  type: integer
                  default: 20
                  maximum: 20
                prompt:
                  type: string
                strength:
                  type: number
                  default: 1
      responses:
        '200':
          description: Successful response
          content:
            image/png:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    format: binary
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/thebloke/discolm-german-7b-v1-awq:
    post:
      tags:
        - '@Cf'
        - '@cf/thebloke/discolm german 7b v1 awq'
        - AI
        - Accounts
        - Discolm
        - Execute
        - German
        - Models
        - Runs
      summary: 'Execute @cf/thebloke/discolm-german-7b-v1-awq Model. '
      operationId: workers-ai-post-run-cf-thebloke-discolm-german-7b-v1-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/thebloke/yarn-mistral-7b-64k-awq:
    post:
      tags:
        - '@Cf'
        - '@cf/thebloke/yarn mistral 7b 64k awq'
        - AI
        - Accounts
        - Execute
        - Mistral
        - Models
        - Runs
        - Yarn
      summary: 'Execute @cf/thebloke/yarn-mistral-7b-64k-awq Model. '
      operationId: workers-ai-post-run-cf-thebloke-yarn-mistral-7b-64k-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/tiiuae/falcon-7b-instruct:
    post:
      tags:
        - '@Cf'
        - '@cf/tiiuae/falcon 7b instruct'
        - AI
        - Accounts
        - Execute
        - Falcon
        - Instruct
        - Models
        - Runs
      summary: 'Execute @cf/tiiuae/falcon-7b-instruct Model. '
      operationId: workers-ai-post-run-cf-tiiuae-falcon-7b-instruct
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@cf/tinyllama/tinyllama-1.1b-chat-v1.0:
    post:
      tags:
        - 1 1b
        - '@Cf'
        - '@cf/tinyllama/tinyllama 1 1b chat v1 0'
        - AI
        - Accounts
        - Chat
        - Execute
        - Models
        - Runs
        - V1 0
      summary: 'Execute @cf/tinyllama/tinyllama-1.1b-chat-v1.0 Model. '
      operationId: workers-ai-post-run-cf-tinyllama-tinyllama-1-1b-chat-v1-0
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/baai/bge-base-en-v1.5:
    post:
      tags:
        - '@Hf'
        - '@hf/baai/bge base en v1 5'
        - AI
        - Accounts
        - Base
        - EN
        - Execute
        - Models
        - Runs
        - V1 5
      summary: 'Execute @hf/baai/bge-base-en-v1.5 Model. '
      operationId: workers-ai-post-run-hf-baai-bge-base-en-v1-5
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  oneOf:
                    - type: string
                    - type: array
                      maxItems: 100
                      items:
                        type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: array
                          items:
                            type: number
                      shape:
                        type: array
                        items:
                          type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/sentence-transformers/all-minilm-l6-v2:
    post:
      tags:
        - '@Hf'
        - '@hf/sentence transformers/all minilm l6 v2'
        - AI
        - Accounts
        - Execute
        - Models
        - Runs
        - Sentence
        - Transformers
      summary: 'Execute @hf/sentence-transformers/all-minilm-l6-v2 Model. '
      operationId: workers-ai-post-run-hf-sentence-transformers-all-minilm-l6-v2
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - source
                - sentences
              properties:
                sentences:
                  type: array
                  items:
                    type: string
                source:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: number
                  success:
                    type: boolean
                    default: 'true'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/codellama-7b-instruct-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/codellama 7b instruct awq'
        - AI
        - Accounts
        - Execute
        - Instruct
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/codellama-7b-instruct-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-codellama-7b-instruct-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/deepseek-coder-6.7b-base-awq:
    post:
      tags:
        - 6 7b
        - '@Hf'
        - '@hf/thebloke/deepseek coder 6 7b base awq'
        - AI
        - Accounts
        - Base
        - Coder
        - Execute
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/deepseek-coder-6.7b-base-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-deepseek-coder-6-7b-base-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/deepseek-coder-6.7b-instruct-awq:
    post:
      tags:
        - 6 7b
        - '@Hf'
        - '@hf/thebloke/deepseek coder 6 7b instruct awq'
        - AI
        - Accounts
        - Coder
        - Execute
        - Instruct
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/deepseek-coder-6.7b-instruct-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-deepseek-coder-6-7b-instruct-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/llama-2-13b-chat-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/llama 2 13b chat awq'
        - AI
        - Accounts
        - Chat
        - Execute
        - Llama
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/llama-2-13b-chat-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-llama-2-13b-chat-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/llamaguard-7b-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/llamaguard 7b awq'
        - AI
        - Accounts
        - Execute
        - Llama Guard
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/llamaguard-7b-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-llamaguard-7b-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/mistral-7b-instruct-v0.1-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/mistral 7b instruct v0 1 awq'
        - AI
        - Accounts
        - Execute
        - Instruct
        - Mistral
        - Models
        - Runs
        - V0 1
      summary: 'Execute @hf/thebloke/mistral-7b-instruct-v0.1-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-mistral-7b-instruct-v0-1-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/neural-chat-7b-v3-1-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/neural chat 7b v3 1 awq'
        - AI
        - Accounts
        - Chat
        - Execute
        - Models
        - Neural
        - Runs
      summary: 'Execute @hf/thebloke/neural-chat-7b-v3-1-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-neural-chat-7b-v3-1-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/openchat_3.5-awq:
    post:
      tags:
        - 3 5
        - '@Hf'
        - '@hf/thebloke/openchat 3 5 awq'
        - AI
        - Accounts
        - Execute
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/openchat_3.5-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-openchat_3-5-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/openhermes-2.5-mistral-7b-awq:
    post:
      tags:
        - 2 5
        - '@Hf'
        - '@hf/thebloke/openhermes 2 5 mistral 7b awq'
        - AI
        - Accounts
        - Execute
        - Mistral
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/openhermes-2.5-mistral-7b-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-openhermes-2-5-mistral-7b-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/orca-2-13b-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/orca 2 13b awq'
        - AI
        - Accounts
        - Execute
        - Models
        - Orca
        - Runs
      summary: 'Execute @hf/thebloke/orca-2-13b-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-orca-2-13b-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/starling-lm-7b-alpha-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/starling lm 7b alpha awq'
        - AI
        - Accounts
        - Alpha
        - Execute
        - Models
        - Runs
        - Starling
      summary: 'Execute @hf/thebloke/starling-lm-7b-alpha-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-starling-lm-7b-alpha-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/@hf/thebloke/zephyr-7b-beta-awq:
    post:
      tags:
        - '@Hf'
        - '@hf/thebloke/zephyr 7b beta awq'
        - AI
        - Accounts
        - Beta
        - Execute
        - Models
        - Runs
      summary: 'Execute @hf/thebloke/zephyr-7b-beta-awq Model. '
      operationId: workers-ai-post-run-hf-thebloke-zephyr-7b-beta-awq
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - prompt
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    prompt:
                      type: string
                      maxLength: 6144
                    raw:
                      type: boolean
                      default: false
                    stream:
                      type: boolean
                      default: false
                - required:
                    - messages
                  properties:
                    max_tokens:
                      type: integer
                      default: 256
                    messages:
                      type: array
                      items:
                        type: object
                        required:
                          - role
                          - content
                        properties:
                          content:
                            type: string
                            maxLength: 6144
                          role:
                            type: string
                    stream:
                      type: boolean
                      default: false
              type: object
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    oneOf:
                      - type: object
                        properties:
                          response:
                            type: string
                      - type: string
                        format: binary
                  success:
                    type: boolean
                    default: 'true'
            text/event-stream:
              schema: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                required:
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/ai/run/{model_name}:
    post:
      tags:
        - AI
        - Accounts
        - Execute
        - Models
        - Names
        - Runs
      summary: 'Execute AI Model '
      description: >-
        This endpoint provides users with the capability to run specific AI
        models on-demand.


        By submitting the required input data, users can receive real-time
        predictions or results generated by the chosen AI

        model. The endpoint supports various AI model types, ensuring
        flexibility and adaptability for diverse use cases.


        Model specific inputs available in [Cloudflare
        Docs](https://developers.cloudflare.com/workers-ai/models/).
      operationId: workers-ai-post-run-model
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            example: 023e105f4ecef8ad9ca31a8372d0c353
        - name: model_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Model response
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                  - success
                  - errors
                  - messages
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  messages:
                    type: array
                    items:
                      type: string
                  result:
                    type: object
                  success:
                    type: boolean
                    example: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                required:
                  - result
                  - success
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  result:
                    type: object
                  success:
                    type: boolean
                    example: false
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/available_alerts:
    get:
      tags:
        - Accounts
        - Alerting
        - Alerts
        - Available
        - Types
      summary: 'Get Alert Types '
      description: Gets a list of all alert types for which an account is eligible.
      operationId: notification-alert-types-get-alert-types
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '200':
          description: Get Alert Types response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_response_collection'
        4XX:
          description: Get Alert Types response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_response_collection'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/destinations/eligible:
    get:
      tags:
        - Accounts
        - Alerting
        - Deliveries
        - Destinations
        - Eligibility
        - Eligible
        - Mechanism
      summary: 'Get Delivery Mechanism Eligibility '
      description: >-
        Get a list of all delivery mechanism types for which an account is
        eligible.
      operationId: notification-mechanism-eligibility-get-delivery-mechanism-eligibility
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '200':
          description: Get delivery mechanism eligibility response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_schemas-response_collection'
        4XX:
          description: Get delivery mechanism eligibility response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_schemas-response_collection'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/destinations/pagerduty:
    delete:
      tags:
        - Accounts
        - Alerting
        - Destinations
        - Duty
        - Pager
        - Pagerduty
        - Services
      summary: 'Delete Pager Duty Services '
      description: Deletes all the PagerDuty Services connected to the account.
      operationId: notification-destinations-with-pager-duty-delete-pager-duty-services
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '200':
          description: Delete PagerDuty Services response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_api-response-collection'
        4XX:
          description: Delete PagerDuty Services response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_api-response-collection'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Alerting
        - Destinations
        - Duty
        - Pager
        - Pagerduty
        - Services
      summary: 'List Pager Duty Services '
      description: Get a list of all configured PagerDuty services.
      operationId: notification-destinations-with-pager-duty-list-pager-duty-services
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '200':
          description: List PagerDuty services response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/aaa_components-schemas-response_collection
        4XX:
          description: List PagerDuty services response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/aaa_components-schemas-response_collection
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/destinations/pagerduty/connect:
    post:
      tags:
        - Accounts
        - Alerting
        - Connect
        - Destinations
        - Duty
        - Integrations
        - Pager
        - Pagerduty
        - Tokens
      summary: 'Create Pager Duty Integration Token '
      description: Creates a new token for integrating with PagerDuty.
      operationId: notification-destinations-with-pager-duty-connect-pager-duty
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '201':
          description: Token for PagerDuty integration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_sensitive_id_response'
        4XX:
          description: Create a token for PagerDuty integration failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_id_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/destinations/pagerduty/connect/{token_id}:
    get:
      tags:
        - Accounts
        - Alerting
        - Connect
        - Destinations
        - Duty
        - Pager
        - Pagerduty
        - Tokens
      summary: 'Connect Pager Duty '
      description: Links PagerDuty with the account using the integration token.
      operationId: notification-destinations-with-pager-duty-connect-pager-duty-token
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
        - name: token_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_integration-token'
      responses:
        '200':
          description: Create a Notification policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_id_response'
        4XX:
          description: Create a Notification policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_id_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/destinations/webhooks:
    get:
      tags:
        - Accounts
        - Alerting
        - Destinations
        - Webhooks
      summary: 'List Webhooks '
      description: Gets a list of all configured webhook destinations.
      operationId: notification-webhooks-list-webhooks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '200':
          description: List webhooks response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/aaa_webhooks_components-schemas-response_collection
        4XX:
          description: List webhooks response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/aaa_webhooks_components-schemas-response_collection
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Alerting
        - Destinations
        - Webhooks
      summary: 'Create A Webhook '
      description: Creates a new webhook destination.
      operationId: notification-webhooks-create-a-webhook
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - url
              properties:
                name:
                  $ref: '#/components/schemas/aaa_components-schemas-name'
                secret:
                  $ref: '#/components/schemas/aaa_secret'
                url:
                  $ref: '#/components/schemas/aaa_url'
      responses:
        '201':
          description: Create a webhook response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_id_response'
        4XX:
          description: Create a webhook response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_id_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/destinations/webhooks/{webhook_id}:
    delete:
      tags:
        - Accounts
        - Alerting
        - Destinations
        - Webhooks
      summary: 'Delete A Webhook '
      description: Delete a configured webhook destination.
      operationId: notification-webhooks-delete-a-webhook
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_webhook-id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '200':
          description: Delete a webhook response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_api-response-collection'
        4XX:
          description: Delete a webhook response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_api-response-collection'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Alerting
        - Destinations
        - Webhooks
      summary: 'Get A Webhook '
      description: Get details for a single webhooks destination.
      operationId: notification-webhooks-get-a-webhook
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
        - name: webhook_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_webhook-id'
      responses:
        '200':
          description: Get a webhook response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_schemas-single_response'
        4XX:
          description: Get a webhook response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_schemas-single_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Alerting
        - Destinations
        - Webhooks
      summary: 'Update A Webhook '
      description: Update a webhook destination.
      operationId: notification-webhooks-update-a-webhook
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_webhook-id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - url
              properties:
                name:
                  $ref: '#/components/schemas/aaa_components-schemas-name'
                secret:
                  $ref: '#/components/schemas/aaa_secret'
                url:
                  $ref: '#/components/schemas/aaa_url'
      responses:
        '200':
          description: Update a webhook response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_id_response'
        4XX:
          description: Update a webhook response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_id_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/history:
    get:
      tags:
        - Accounts
        - Alerting
        - History
      summary: 'List History '
      description: >-
        Gets a list of history records for notifications sent to an account. The
        records are displayed for last `x` number of days based on the zone plan
        (free = 30, pro = 30, biz = 30, ent = 90).
      operationId: notification-history-list-history
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
        - name: per_page
          in: query
          schema:
            $ref: '#/components/schemas/aaa_per_page'
        - name: before
          in: query
          schema:
            $ref: '#/components/schemas/aaa_before'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: since
          in: query
          schema:
            type: string
            format: date-time
            description: >-
              Limit the returned results to history records newer than the
              specified date. This must be a timestamp that conforms to RFC3339.
            example: '2022-05-19T20:29:58.679897Z'
      responses:
        '200':
          description: List History response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/aaa_history_components-schemas-response_collection
        4XX:
          description: List History response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/aaa_history_components-schemas-response_collection
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/policies:
    get:
      tags:
        - Accounts
        - Alerting
        - Notifications
        - Policies
      summary: 'List Notification Policies '
      description: Get a list of all Notification policies.
      operationId: notification-policies-list-notification-policies
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      responses:
        '200':
          description: List Notification policies response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/aaa_policies_components-schemas-response_collection
        4XX:
          description: List Notification policies response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/aaa_policies_components-schemas-response_collection
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Alerting
        - Notifications
        - Policies
      summary: 'Create A Notification Policy '
      description: Creates a new Notification policy.
      operationId: notification-policies-create-a-notification-policy
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - alert_type
                - enabled
                - mechanisms
              properties:
                alert_type:
                  $ref: '#/components/schemas/aaa_alert_type'
                description:
                  $ref: '#/components/schemas/aaa_schemas-description'
                enabled:
                  $ref: '#/components/schemas/aaa_enabled'
                filters:
                  $ref: '#/components/schemas/aaa_filters'
                mechanisms:
                  $ref: '#/components/schemas/aaa_mechanisms'
                name:
                  $ref: '#/components/schemas/aaa_schemas-name'
      responses:
        '200':
          description: Create a Notification policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_id_response'
        4XX:
          description: Create a Notification policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_id_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/alerting/v3/policies/{policy_id}:
    delete:
      tags:
        - Accounts
        - Alerting
        - Notifications
        - Policies
      summary: 'Delete A Notification Policy '
      description: Delete a Notification policy.
      operationId: notification-policies-delete-a-notification-policy
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_policy-id'
      responses:
        '200':
          description: Delete a Notification policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_api-response-collection'
        4XX:
          description: Delete a Notification policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_api-response-collection'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Alerting
        - Notifications
        - Policies
      summary: 'Get A Notification Policy '
      description: Get details for a single policy.
      operationId: notification-policies-get-a-notification-policy
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_policy-id'
      responses:
        '200':
          description: Get a Notification policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_single_response'
        4XX:
          description: Get a Notification policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_single_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Alerting
        - Notifications
        - Policies
      summary: 'Update A Notification Policy '
      description: Update a Notification policy.
      operationId: notification-policies-update-a-notification-policy
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_account-id'
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_policy-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                alert_type:
                  $ref: '#/components/schemas/aaa_alert_type'
                description:
                  $ref: '#/components/schemas/aaa_schemas-description'
                enabled:
                  $ref: '#/components/schemas/aaa_enabled'
                filters:
                  $ref: '#/components/schemas/aaa_filters'
                mechanisms:
                  $ref: '#/components/schemas/aaa_mechanisms'
                name:
                  $ref: '#/components/schemas/aaa_schemas-name'
      responses:
        '200':
          description: Update a Notification policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_id_response'
        4XX:
          description: Update a Notification policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_id_response'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/audit_logs:
    get:
      tags:
        - Accounts
        - Audit
        - Logs
      summary: 'Get Account Audit Logs '
      description: >-
        Gets a list of audit logs for an account. Can be filtered by who made
        the change, on which zone, and the timeframe of the change.
      operationId: audit-logs-get-account-audit-logs
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/aaa_identifier'
        - name: id
          in: query
          schema:
            type: string
            description: Finds a specific log by its ID.
            example: f174be97-19b1-40d6-954d-70cd5fbd52db
        - name: export
          in: query
          schema:
            type: boolean
            description: Indicates that this request is an export of logs in CSV format.
            example: true
        - name: action.type
          in: query
          schema:
            type: string
            description: Filters by the action type.
            example: add
        - name: actor.ip
          in: query
          schema:
            type: string
            description: >-
              Filters by the IP address of the request that made the change by
              specific IP address or valid CIDR Range.
            example: 17.168.228.63
        - name: actor.email
          in: query
          schema:
            type: string
            format: email
            description: Filters by the email address of the actor that made the change.
            example: alice@example.com
        - name: since
          in: query
          schema:
            type: string
            format: date-time
            description: >-
              Limits the returned results to logs newer than the specified date.
              This can be a date string `2019-04-30` or an absolute timestamp
              that conforms to RFC3339.
            example: '2019-04-30T01:12:20Z'
        - name: before
          in: query
          schema:
            type: string
            format: date-time
            description: >-
              Limits the returned results to logs older than the specified date.
              This can be a date string `2019-04-30` or an absolute timestamp
              that conforms to RFC3339.
            example: '2019-04-30T01:12:20Z'
        - name: zone.name
          in: query
          schema:
            type: string
            description: Filters by the name of the zone associated to the change.
            example: example.com
        - name: direction
          in: query
          schema:
            type: string
            description: Changes the direction of the chronological sorting.
            enum:
              - desc
              - asc
            default: desc
            example: desc
        - name: per_page
          in: query
          schema:
            type: number
            description: Sets the number of results to return per page.
            default: 100
            example: 25
            minimum: 1
            maximum: 1000
        - name: page
          in: query
          schema:
            type: number
            description: Defines which page of results to return.
            default: 1
            example: 50
            minimum: 1
        - name: hide_user_logs
          in: query
          schema:
            type: boolean
            description: Indicates whether or not to hide user level audit logs.
            default: false
      responses:
        '200':
          description: Get account audit logs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aaa_audit_logs_response_collection'
        4XX:
          description: Get account audit logs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/aaa_audit_logs_response_collection'
                  - $ref: '#/components/schemas/aaa_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/brand-protection/submit:
    post:
      tags:
        - Accounts
        - Brands
        - Protection
        - Scanning
        - Submit
        - Suspicious
        - URL
      summary: 'Submit Suspicious URL For Scanning '
      operationId: phishing-url-scanner-submit-suspicious-url-for-scanning
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/intel_url_param'
              type: object
      responses:
        '200':
          description: Submit suspicious URL for scanning response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/intel_phishing-url-submit_components-schemas-single_response
        4XX:
          description: Submit suspicious URL for scanning response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/intel_phishing-url-submit_components-schemas-single_response
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/brand-protection/url-info:
    get:
      tags:
        - Accounts
        - Brands
        - Info
        - Protection
        - Results
        - Scans
        - URL
      summary: 'Get Results For A URL Scan '
      operationId: phishing-url-information-get-results-for-a-url-scan
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: url_id_param
          in: query
          schema:
            $ref: '#/components/schemas/intel_url_id_param'
        - name: url
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Get results for a URL scan response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/intel_phishing-url-info_components-schemas-single_response
        4XX:
          description: Get results for a URL scan response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/intel_phishing-url-info_components-schemas-single_response
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/calls/apps:
    get:
      tags:
        - Accounts
        - Applications
        - Calls
      summary: 'List Apps '
      description: Lists all apps in the Cloudflare account
      operationId: calls-apps-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_account_identifier'
      responses:
        '200':
          description: List apps response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_app_response_collection'
        4XX:
          description: List videos response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_api-response-common-failure'
      security:
        - api_token: []
    post:
      tags:
        - Accounts
        - Applications
        - Calls
      summary: 'Create A New App '
      description: >-
        Creates a new Cloudflare calls app. An app is an unique enviroment where
        each Session can access all Tracks within the app.
      operationId: calls-apps-create-a-new-app
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/calls_app_editable_fields'
      responses:
        '201':
          description: Created a new app
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_app_response_single_with_secret'
      security:
        - api_token: []
  /accounts/{account_id}/calls/apps/{app_id}:
    delete:
      tags:
        - Accounts
        - Applications
        - Calls
      summary: 'Delete App '
      description: Deletes an app from Cloudflare Calls
      operationId: calls-apps-delete-app
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_account_identifier'
      responses:
        '200':
          description: Delete app response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_app_response_single'
        4XX:
          description: Delete app response failure
          content:
            application/json: {}
      security:
        - api_token: []
    get:
      tags:
        - Accounts
        - Applications
        - Calls
        - Details
      summary: 'Retrieve App Details '
      description: Fetches details for a single Calls app.
      operationId: calls-apps-retrieve-app-details
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_account_identifier'
      responses:
        '200':
          description: Retrieve app details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_app_response_single'
        4XX:
          description: Retrieve video details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_api-response-common-failure'
      security:
        - api_token: []
    put:
      tags:
        - Accounts
        - Applications
        - Calls
        - Details
        - Edit
      summary: 'Edit App Details '
      description: Edit details for a single app.
      operationId: calls-apps-update-app-details
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/calls_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/calls_app_editable_fields'
      responses:
        '200':
          description: Edit app details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_app_response_single'
        4XX:
          description: Edit app details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/calls_api-response-common-failure'
      security:
        - api_token: []
  /accounts/{account_id}/cfd_tunnel:
    get:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Tunnels
      summary: 'List Cloudflare Tunnels '
      description: Lists and filters Cloudflare Tunnels in an account.
      operationId: cloudflare-tunnel-list-cloudflare-tunnels
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: name
          in: query
          schema:
            type: string
            description: A user-friendly name for the tunnel.
            example: blog
        - name: is_deleted
          in: query
          schema:
            type: boolean
            description: >-
              If `true`, only include deleted tunnels. If `false`, exclude
              deleted tunnels. If empty, all tunnels will be included.
            example: true
        - name: existed_at
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_existed_at'
        - name: uuid
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: was_active_at
          in: query
          schema:
            type: string
            format: date-time
            example: '2009-11-10T23:00:00Z'
        - name: was_inactive_at
          in: query
          schema:
            type: string
            format: date-time
            example: '2009-11-10T23:00:00Z'
        - name: include_prefix
          in: query
          schema:
            type: string
            example: vpc1-
        - name: exclude_prefix
          in: query
          schema:
            type: string
            example: vpc1-
        - name: per_page
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_per_page'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
      responses:
        '200':
          description: List Cloudflare Tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-collection'
        4XX:
          description: List Cloudflare Tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-collection'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Tunnels
      summary: 'Create A Cloudflare Tunnel '
      description: Creates a new Cloudflare Tunnel in an account.
      operationId: cloudflare-tunnel-create-a-cloudflare-tunnel
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                config_src:
                  $ref: '#/components/schemas/tunnel_config_src'
                name:
                  $ref: '#/components/schemas/tunnel_tunnel_name'
                tunnel_secret:
                  $ref: '#/components/schemas/tunnel_tunnel_secret'
      responses:
        '200':
          description: Create a Cloudflare Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Create a Cloudflare Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/cfd_tunnel/{tunnel_id}:
    delete:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Tunnels
      summary: 'Delete A Cloudflare Tunnel '
      description: Deletes a Cloudflare Tunnel from an account.
      operationId: cloudflare-tunnel-delete-a-cloudflare-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Delete a Cloudflare Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Delete a Cloudflare Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Tunnels
      summary: 'Get A Cloudflare Tunnel '
      description: Fetches a single Cloudflare Tunnel.
      operationId: cloudflare-tunnel-get-a-cloudflare-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Get a Cloudflare Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Get a Cloudflare Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Tunnels
      summary: 'Update A Cloudflare Tunnel '
      description: Updates an existing Cloudflare Tunnel.
      operationId: cloudflare-tunnel-update-a-cloudflare-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/tunnel_tunnel_name'
                tunnel_secret:
                  $ref: '#/components/schemas/tunnel_tunnel_secret'
      responses:
        '200':
          description: Update a Cloudflare Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Update a Cloudflare Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/cfd_tunnel/{tunnel_id}/configurations:
    get:
      tags:
        - Accounts
        - Cfd
        - Configurations
        - Tunnels
      summary: 'Get Configuration '
      description: Gets the configuration for a remotely-managed tunnel
      operationId: cloudflare-tunnel-configuration-get-configuration
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_identifier'
      responses:
        '200':
          description: Get configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_config_response_single'
        4XX:
          description: Get configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_config_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Cfd
        - Configurations
        - Tunnels
      summary: 'Put Configuration '
      description: Adds or updates the configuration for a remotely-managed tunnel.
      operationId: cloudflare-tunnel-configuration-put-configuration
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  $ref: '#/components/schemas/tunnel_config'
      responses:
        '200':
          description: Put configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_config_response_single'
        4XX:
          description: Put configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_config_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/cfd_tunnel/{tunnel_id}/connections:
    delete:
      tags:
        - Accounts
        - Cfd
        - Clean
        - Cloudflare
        - Connections
        - Tunnels
        - Up
      summary: 'Clean Up Cloudflare Tunnel Connections '
      description: >-
        Removes a connection (aka Cloudflare Tunnel Connector) from a Cloudflare
        Tunnel independently of its current state. If no connector id
        (client_id) is provided all connectors will be removed. We recommend
        running this command after rotating tokens.
      operationId: cloudflare-tunnel-clean-up-cloudflare-tunnel-connections
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: client_id
          in: query
          schema:
            type: string
            description: UUID of the Cloudflare Tunnel Connector to disconnect.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Clean up Cloudflare Tunnel connections response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_empty_response'
        4XX:
          description: Clean up Cloudflare Tunnel connections response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_empty_response'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Connections
        - Tunnels
      summary: 'List Cloudflare Tunnel Connections '
      description: Fetches connection details for a Cloudflare Tunnel.
      operationId: cloudflare-tunnel-list-cloudflare-tunnel-connections
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
      responses:
        '200':
          description: List Cloudflare Tunnel connections response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel_connections_response'
        4XX:
          description: List Cloudflare Tunnel connections response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel_connections_response'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/cfd_tunnel/{tunnel_id}/connectors/{connector_id}:
    get:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Connectors
        - Tunnels
      summary: 'Get Cloudflare Tunnel Connector '
      description: Fetches connector and connection details for a Cloudflare Tunnel.
      operationId: cloudflare-tunnel-get-cloudflare-tunnel-connector
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: connector_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_client_id'
      responses:
        '200':
          description: Get Cloudflare Tunnel connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel_client_response'
        4XX:
          description: Get Cloudflare Tunnel connector response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel_client_response'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/cfd_tunnel/{tunnel_id}/management:
    post:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Management
        - Tokens
        - Tunnels
      summary: 'Get A Cloudflare Tunnel Management Token '
      description: >-
        Gets a management token used to access the management resources (i.e.
        Streaming Logs) of a tunnel.
      operationId: cloudflare-tunnel-get-a-cloudflare-tunnel-management-token
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resources
              properties:
                resources:
                  type: array
                  items:
                    $ref: '#/components/schemas/tunnel_management-resources'
      responses:
        '200':
          description: Get a Cloudflare Tunnel management token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel_response_token'
        4XX:
          description: Cloudflare API response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel_response_token'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/cfd_tunnel/{tunnel_id}/token:
    get:
      tags:
        - Accounts
        - Cfd
        - Cloudflare
        - Tokens
        - Tunnels
      summary: 'Get A Cloudflare Tunnel Token '
      description: Gets the token used to associate cloudflared with a specific tunnel.
      operationId: cloudflare-tunnel-get-a-cloudflare-tunnel-token
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Get a Cloudflare Tunnel token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel_response_token'
        4XX:
          description: Get a Cloudflare Tunnel token response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel_response_token'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/challenges/widgets:
    get:
      tags:
        - Accounts
        - Challenges
        - Turnstile
        - Widgets
      summary: 'List Turnstile Widgets '
      description: Lists all turnstile widgets of an account.
      operationId: accounts-turnstile-widgets-list
      responses:
        '200':
          description: List Turnstile Widgets
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/turnstile_api-response-common'
                  - properties:
                      result_info:
                        $ref: '#/components/schemas/turnstile_result_info'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/turnstile_widget_list'
        4XX:
          description: List Turnstile Widgets Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/turnstile_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Challenges
        - Turnstile
        - Widgets
      summary: 'Create A Turnstile Widget '
      description: Lists challenge widgets.
      operationId: accounts-turnstile-widget-create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - mode
                - domains
              properties:
                bot_fight_mode:
                  $ref: '#/components/schemas/turnstile_bot_fight_mode'
                clearance_level:
                  $ref: '#/components/schemas/turnstile_clearance_level'
                domains:
                  $ref: '#/components/schemas/turnstile_domains'
                mode:
                  $ref: '#/components/schemas/turnstile_mode'
                name:
                  $ref: '#/components/schemas/turnstile_name'
                offlabel:
                  $ref: '#/components/schemas/turnstile_offlabel'
                region:
                  $ref: '#/components/schemas/turnstile_region'
      responses:
        '200':
          description: Create Turnstile Widget Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/turnstile_api-response-common'
                  - properties:
                      result_info:
                        $ref: '#/components/schemas/turnstile_result_info'
                  - properties:
                      result:
                        $ref: '#/components/schemas/turnstile_widget_detail'
        4XX:
          description: Create Turnstile Widget Response Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/turnstile_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    parameters:
      - name: account_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/turnstile_identifier'
      - name: page
        in: query
        schema:
          type: number
          description: Page number of paginated results.
          default: 1
          minimum: 1
      - name: per_page
        in: query
        schema:
          type: number
          description: Number of items per page.
          default: 25
          minimum: 5
          maximum: 1000
      - name: order
        in: query
        schema:
          description: Field to order widgets by.
          enum:
            - id
            - sitekey
            - name
            - created_on
            - modified_on
          example: id
      - name: direction
        in: query
        schema:
          description: Direction to order widgets.
          enum:
            - asc
            - desc
          example: asc
  /accounts/{account_id}/challenges/widgets/{sitekey}:
    delete:
      tags:
        - Accounts
        - Challenges
        - Site Keys
        - Turnstile
        - Widgets
      summary: 'Delete A Turnstile Widget '
      description: Destroy a Turnstile Widget.
      operationId: accounts-turnstile-widget-delete
      responses:
        '200':
          description: Delete Turnstile Widget Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/turnstile_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/turnstile_widget_detail'
        4XX:
          description: Delete Turnstile Widget Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/turnstile_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Challenges
        - Details
        - Site Keys
        - Turnstile
        - Widgets
      summary: 'Turnstile Widget Details '
      description: Show a single challenge widget configuration.
      operationId: accounts-turnstile-widget-get
      responses:
        '200':
          description: Turnstile Widget Details Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/turnstile_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/turnstile_widget_detail'
        4XX:
          description: Turnstile Widget Details Response Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/turnstile_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Challenges
        - Site Keys
        - Turnstile
        - Widgets
      summary: 'Update A Turnstile Widget '
      description: Update the configuration of a widget.
      operationId: accounts-turnstile-widget-update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - mode
                - domains
              properties:
                bot_fight_mode:
                  $ref: '#/components/schemas/turnstile_bot_fight_mode'
                clearance_level:
                  $ref: '#/components/schemas/turnstile_clearance_level'
                domains:
                  $ref: '#/components/schemas/turnstile_domains'
                mode:
                  $ref: '#/components/schemas/turnstile_mode'
                name:
                  $ref: '#/components/schemas/turnstile_name'
                offlabel:
                  $ref: '#/components/schemas/turnstile_offlabel'
      responses:
        '200':
          description: Update Turnstile Widget Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/turnstile_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/turnstile_widget_detail'
        4XX:
          description: Update Turnstile Widget Response Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/turnstile_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    parameters:
      - name: account_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/turnstile_identifier'
      - name: sitekey
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/turnstile_sitekey'
  /accounts/{account_id}/challenges/widgets/{sitekey}/rotate_secret:
    post:
      tags:
        - Accounts
        - Challenges
        - Rotate
        - Secrets
        - Site Keys
        - Turnstile
        - Widgets
      summary: 'Rotate Secret For A Turnstile Widget '
      description: |
        Generate a new secret key for this widget. If `invalidate_immediately`
        is set to `false`, the previous secret remains valid for 2 hours.

        Note that secrets cannot be rotated again during the grace period.
      operationId: accounts-turnstile-widget-rotate-secret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                invalidate_immediately:
                  $ref: '#/components/schemas/turnstile_invalidate_immediately'
      responses:
        '200':
          description: Rotate Secret Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/turnstile_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/turnstile_widget_detail'
        4XX:
          description: Rotate Secret Response Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/turnstile_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    parameters:
      - name: account_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/turnstile_identifier'
      - name: sitekey
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/turnstile_sitekey'
  /accounts/{account_id}/custom_ns:
    get:
      tags:
        - Accounts
        - Custom
        - Nameservers
      summary: 'List Account Custom Nameservers '
      description: List an account's custom nameservers.
      operationId: account-level-custom-nameservers-list-account-custom-nameservers
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_identifier'
      responses:
        '200':
          description: List Account Custom Nameservers response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dns-custom-nameservers_acns_response_collection
        4XX:
          description: List Account Custom Nameservers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_acns_response_collection
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Custom
        - Nameservers
      summary: 'Add Account Custom Nameserver '
      operationId: account-level-custom-nameservers-add-account-custom-nameserver
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-custom-nameservers_CustomNSInput'
      responses:
        '200':
          description: Add Account Custom Nameserver response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dns-custom-nameservers_acns_response_single
        4XX:
          description: Add Account Custom Nameserver response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_acns_response_single
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/custom_ns/{custom_ns_id}:
    delete:
      tags:
        - Accounts
        - Custom
        - Nameservers
      summary: 'Delete Account Custom Nameserver '
      operationId: account-level-custom-nameservers-delete-account-custom-nameserver
      parameters:
        - name: custom_ns_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_ns_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Account Custom Nameserver response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-custom-nameservers_empty_response'
        4XX:
          description: Delete Account Custom Nameserver response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-custom-nameservers_empty_response'
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/custom_ns/availability:
    get:
      tags:
        - Accounts
        - Availability
        - Custom
        - Eligible
        - Nameservers
        - Zones
      summary: 'Get Eligible Zones For Account Custom Nameservers '
      operationId: >-
        account-level-custom-nameservers-get-eligible-zones-for-account-custom-nameservers
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_identifier'
      responses:
        '200':
          description: Get Eligible Zones for Account Custom Nameservers response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dns-custom-nameservers_availability_response
        4XX:
          description: Get Eligible Zones for Account Custom Nameservers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_availability_response
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/custom_ns/verify:
    post:
      tags:
        - Accounts
        - Custom
        - Glue
        - Nameservers
        - Records
        - Verify
      summary: 'Verify Account Custom Nameserver Glue Records '
      operationId: >-
        account-level-custom-nameservers-verify-account-custom-nameserver-glue-records
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-custom-nameservers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Verify Account Custom Nameserver Glue Records response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dns-custom-nameservers_acns_response_collection
        4XX:
          description: Verify Account Custom Nameserver Glue Records response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_acns_response_collection
                  - $ref: >-
                      #/components/schemas/dns-custom-nameservers_api-response-common-failure
      deprecated: true
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/d1/database:
    get:
      tags:
        - Accounts
        - Databases
      summary: 'List D1 Databases '
      description: Returns a list of D1 databases.
      operationId: cloudflare-d1-list-databases
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_account-identifier'
        - name: name
          in: query
          schema:
            type: string
            description: a database name to search for.
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of items per page.
            default: 1000
            minimum: 10
            maximum: 10000
      responses:
        '200':
          description: List D1 databases response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/d1_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/d1_create-database-response'
                      result_info:
                        type: object
                        properties:
                          count:
                            type: number
                            description: Total number of results for the requested service
                            example: 1
                          page:
                            type: number
                            description: Current page within paginated list of results
                            example: 1
                          per_page:
                            type: number
                            description: Number of results per page of results
                            example: 20
                          total_count:
                            type: number
                            description: >-
                              Total results available without any search
                              parameters
                            example: 2000
        4XX:
          description: List D1 databases response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/d1_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/d1_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Databases
      summary: 'Create D1 Database '
      description: Returns the created D1 database.
      operationId: cloudflare-d1-create-database
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_account-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  $ref: '#/components/schemas/d1_database-name'
      responses:
        '200':
          description: Returns the created D1 database's metadata
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/d1_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/d1_create-database-response'
        4XX:
          description: Database details response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/d1_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/d1_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices:
    get:
      tags:
        - Accounts
        - Devices
      summary: 'List Devices '
      description: Fetches a list of enrolled devices.
      operationId: devices-list-devices
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: List devices response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_devices_response'
        4XX:
          description: List devices response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_devices_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/{device_id}:
    get:
      tags:
        - Accounts
        - Details
        - Device
        - Devices
      summary: 'Get Device Details '
      description: Fetches details for a single device.
      operationId: devices-device-details
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get device details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_device_response'
        4XX:
          description: Get device details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_device_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/{device_id}/override_codes:
    get:
      tags:
        - Accounts
        - Administrative
        - Code
        - Codes
        - Device
        - Devices
        - Overr
        - Override
      summary: 'Get An Admin Override Code For A Device '
      description: >-
        Fetches a one-time use admin override code for a device. This relies on
        the **Admin Override** setting being enabled in your device
        configuration.
      operationId: devices-list-admin-override-code-for-device
      parameters:
        - name: device_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get an admin override code for a device response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_override_codes_response'
        4XX:
          description: Get an admin override code for a device response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_override_codes_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/dex_tests:
    get:
      tags:
        - Accounts
        - DEX
        - Device
        - Devices
        - Tests
      summary: 'List Device DEX Tests '
      description: Fetch all DEX tests.
      operationId: device-dex-test-details
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Device DEX test details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_dex-response_collection'
        4XX:
          description: Device DEX test response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_dex-single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - DEX
        - Device
        - Devices
        - Tests
      summary: 'Create Device DEX Test '
      description: Create a DEX test.
      operationId: device-dex-test-create-device-dex-test
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teams-devices_device-dex-test-schemas-http'
      responses:
        '200':
          description: Update Dex test response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_dex-single_response'
        4XX:
          description: Update Dex test response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_dex-single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/dex_tests/{dex_test_id}:
    delete:
      tags:
        - Accounts
        - DEX
        - Device
        - Devices
        - Tests
      summary: 'Delete Device DEX Test '
      description: >-
        Delete a Device DEX test. Returns the remaining device dex tests for the
        account.
      operationId: device-dex-test-delete-device-dex-test
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
        - name: dex_test_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
      responses:
        '200':
          description: Delete Device DEX test response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_dex-response_collection'
        4XX:
          description: Delete DEX test response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_dex-response_collection'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - DEX
        - Device
        - Devices
        - Tests
      summary: 'Get Device DEX Test '
      description: Fetch a single DEX test.
      operationId: device-dex-test-get-device-dex-test
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
        - name: dex_test_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
      responses:
        '200':
          description: Device DEX test details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_dex-single_response'
        4XX:
          description: Device DEX test response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_dex-single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - DEX
        - Device
        - Devices
        - Tests
      summary: 'Update Device DEX Test '
      description: Update a DEX test.
      operationId: device-dex-test-update-device-dex-test
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
        - name: dex_test_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teams-devices_device-dex-test-schemas-http'
      responses:
        '200':
          description: Update Dex test response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_dex-single_response'
        4XX:
          description: Update Dex test response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_dex-single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/networks:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Managed
        - Networks
        - Your
      summary: 'List Your Device Managed Networks '
      description: Fetches a list of managed networks for an account.
      operationId: device-managed-networks-list-device-managed-networks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: List your device managed networks response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_components-schemas-response_collection
        4XX:
          description: List your device managed networks response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Device
        - Devices
        - Managed
        - Networks
      summary: 'Create A Device Managed Network '
      description: Creates a new device managed network.
      operationId: device-managed-networks-create-device-managed-network
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - type
                - config
              properties:
                config:
                  $ref: '#/components/schemas/teams-devices_schemas-config_request'
                name:
                  $ref: >-
                    #/components/schemas/teams-devices_device-managed-networks_components-schemas-name
                type:
                  $ref: '#/components/schemas/teams-devices_components-schemas-type'
      responses:
        '200':
          description: Create a device managed networks response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_components-schemas-single_response
        4XX:
          description: Create a device managed networks response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/networks/{network_id}:
    delete:
      tags:
        - Accounts
        - Device
        - Devices
        - Managed
        - Networks
      summary: 'Delete A Device Managed Network '
      description: >-
        Deletes a device managed network and fetches a list of the remaining
        device managed networks for an account.
      operationId: device-managed-networks-delete-device-managed-network
      parameters:
        - name: network_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a device managed network response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_components-schemas-response_collection
        4XX:
          description: Delete a device managed network response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Device
        - Devices
        - Managed
        - Networks
      summary: 'Get Device Managed Network Details '
      description: Fetches details for a single managed network.
      operationId: device-managed-networks-device-managed-network-details
      parameters:
        - name: network_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get device managed network details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_components-schemas-single_response
        4XX:
          description: Get device managed network details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Device
        - Devices
        - Managed
        - Networks
      summary: 'Update A Device Managed Network '
      description: Updates a configured device managed network.
      operationId: device-managed-networks-update-device-managed-network
      parameters:
        - name: network_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  $ref: '#/components/schemas/teams-devices_schemas-config_request'
                name:
                  $ref: >-
                    #/components/schemas/teams-devices_device-managed-networks_components-schemas-name
                type:
                  $ref: '#/components/schemas/teams-devices_components-schemas-type'
      responses:
        '200':
          description: Update a device managed network response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_components-schemas-single_response
        4XX:
          description: Update a device managed network response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policies:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Policies
        - Profiles
        - Settings
      summary: 'List Device Settings Profiles '
      description: Fetches a list of the device settings profiles for an account.
      operationId: devices-list-device-settings-policies
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: List device settings profiles response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_device_settings_response_collection
        4XX:
          description: List device settings profiles response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_device_settings_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy:
    get:
      tags:
        - Accounts
        - Default
        - Device
        - Devices
        - Policies
        - Profiles
        - Settings
      summary: 'Get The Default Device Settings Profile '
      description: Fetches the default device settings profile for an account.
      operationId: devices-get-default-device-settings-policy
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get the default device settings profile response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_default_device_settings_response
        4XX:
          description: Get the default device settings profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_default_device_settings_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Default
        - Device
        - Devices
        - Policies
        - Profiles
        - Settings
      summary: 'Update The Default Device Settings Profile '
      description: Updates the default device settings profile for an account.
      operationId: devices-update-default-device-settings-policy
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                allow_mode_switch:
                  $ref: '#/components/schemas/teams-devices_allow_mode_switch'
                allow_updates:
                  $ref: '#/components/schemas/teams-devices_allow_updates'
                allowed_to_leave:
                  $ref: '#/components/schemas/teams-devices_allowed_to_leave'
                auto_connect:
                  $ref: '#/components/schemas/teams-devices_auto_connect'
                captive_portal:
                  $ref: '#/components/schemas/teams-devices_captive_portal'
                disable_auto_fallback:
                  $ref: '#/components/schemas/teams-devices_disable_auto_fallback'
                exclude_office_ips:
                  $ref: '#/components/schemas/teams-devices_exclude_office_ips'
                service_mode_v2:
                  $ref: '#/components/schemas/teams-devices_service_mode_v2'
                support_url:
                  $ref: '#/components/schemas/teams-devices_support_url'
                switch_locked:
                  $ref: '#/components/schemas/teams-devices_switch_locked'
      responses:
        '200':
          description: Update the default device settings profile response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_default_device_settings_response
        4XX:
          description: Update the default device settings profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_default_device_settings_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Device
        - Devices
        - Policies
        - Profiles
        - Settings
      summary: 'Create A Device Settings Profile '
      description: >-
        Creates a device settings profile to be applied to certain devices
        matching the criteria.
      operationId: devices-create-device-settings-policy
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - precedence
                - match
              properties:
                allow_mode_switch:
                  $ref: '#/components/schemas/teams-devices_allow_mode_switch'
                allow_updates:
                  $ref: '#/components/schemas/teams-devices_allow_updates'
                allowed_to_leave:
                  $ref: '#/components/schemas/teams-devices_allowed_to_leave'
                auto_connect:
                  $ref: '#/components/schemas/teams-devices_auto_connect'
                captive_portal:
                  $ref: '#/components/schemas/teams-devices_captive_portal'
                description:
                  $ref: '#/components/schemas/teams-devices_schemas-description'
                disable_auto_fallback:
                  $ref: '#/components/schemas/teams-devices_disable_auto_fallback'
                enabled:
                  type: boolean
                  description: Whether the policy will be applied to matching devices.
                  example: true
                exclude_office_ips:
                  $ref: '#/components/schemas/teams-devices_exclude_office_ips'
                lan_allow_minutes:
                  $ref: '#/components/schemas/teams-devices_lan_allow_minutes'
                lan_allow_subnet_size:
                  $ref: '#/components/schemas/teams-devices_lan_allow_subnet_size'
                match:
                  $ref: '#/components/schemas/teams-devices_schemas-match'
                name:
                  type: string
                  description: The name of the device settings profile.
                  example: Allow Developers
                  maxLength: 100
                precedence:
                  $ref: '#/components/schemas/teams-devices_precedence'
                service_mode_v2:
                  $ref: '#/components/schemas/teams-devices_service_mode_v2'
                support_url:
                  $ref: '#/components/schemas/teams-devices_support_url'
                switch_locked:
                  $ref: '#/components/schemas/teams-devices_switch_locked'
      responses:
        '200':
          description: Create a device settings profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_device_settings_response'
        4XX:
          description: Create a device settings profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_device_settings_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy/{policy_id}:
    delete:
      tags:
        - Accounts
        - Device
        - Devices
        - Policies
        - Profiles
        - Settings
      summary: 'Delete A Device Settings Profile '
      description: >-
        Deletes a device settings profile and fetches a list of the remaining
        profiles for an account.
      operationId: devices-delete-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a device settings profile response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_device_settings_response_collection
        4XX:
          description: Delete a device settings profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_device_settings_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - ID
        - Policies
        - Profiles
        - Settings
      summary: 'Get Device Settings Profile By ID '
      description: Fetches a device settings profile by ID.
      operationId: devices-get-device-settings-policy-by-id
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get device settings profile by ID response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_device_settings_response'
        4XX:
          description: Get device settings profile by ID response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_device_settings_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Device
        - Devices
        - Policies
        - Profiles
        - Settings
      summary: 'Update A Device Settings Profile '
      description: Updates a configured device settings profile.
      operationId: devices-update-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                allow_mode_switch:
                  $ref: '#/components/schemas/teams-devices_allow_mode_switch'
                allow_updates:
                  $ref: '#/components/schemas/teams-devices_allow_updates'
                allowed_to_leave:
                  $ref: '#/components/schemas/teams-devices_allowed_to_leave'
                auto_connect:
                  $ref: '#/components/schemas/teams-devices_auto_connect'
                captive_portal:
                  $ref: '#/components/schemas/teams-devices_captive_portal'
                description:
                  $ref: '#/components/schemas/teams-devices_schemas-description'
                disable_auto_fallback:
                  $ref: '#/components/schemas/teams-devices_disable_auto_fallback'
                enabled:
                  type: boolean
                  description: Whether the policy will be applied to matching devices.
                  example: true
                exclude_office_ips:
                  $ref: '#/components/schemas/teams-devices_exclude_office_ips'
                match:
                  $ref: '#/components/schemas/teams-devices_schemas-match'
                name:
                  type: string
                  description: The name of the device settings profile.
                  example: Allow Developers
                  maxLength: 100
                precedence:
                  $ref: '#/components/schemas/teams-devices_precedence'
                service_mode_v2:
                  $ref: '#/components/schemas/teams-devices_service_mode_v2'
                support_url:
                  $ref: '#/components/schemas/teams-devices_support_url'
                switch_locked:
                  $ref: '#/components/schemas/teams-devices_switch_locked'
      responses:
        '200':
          description: Update a device settings profile Policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_device_settings_response'
        4XX:
          description: Update a device settings profile Policy response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_device_settings_response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy/{policy_id}/exclude:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Exclude
        - Policies
        - Profiles
        - Settings
        - Split
        - Tunnels
      summary: 'Get The Split Tunnel Exclude List For A Device Settings Profile '
      description: >-
        Fetches the list of routes excluded from the WARP client's tunnel for a
        specific device settings profile.
      operationId: devices-get-split-tunnel-exclude-list-for-a-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: >-
            Get the Split Tunnel exclude list for a device settings profile
            response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_response_collection
        4XX:
          description: >-
            Get the Split Tunnel exclude list for a device settings profile
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Device
        - Devices
        - Exclude
        - Policies
        - Profiles
        - Sets
        - Settings
        - Split
        - Tunnels
      summary: 'Set The Split Tunnel Exclude List For A Device Settings Profile '
      description: >-
        Sets the list of routes excluded from the WARP client's tunnel for a
        specific device settings profile.
      operationId: devices-set-split-tunnel-exclude-list-for-a-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_split_tunnel'
      responses:
        '200':
          description: >-
            Set the Split Tunnel exclude list for a device settings profile
            response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_response_collection
        4XX:
          description: >-
            Set the Split Tunnel exclude list for a device settings profile
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy/{policy_id}/fallback_domains:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Domains
        - Fallback
        - Local
        - Policies
        - Profiles
        - Settings
      summary: 'Get The Local Domain Fallback List For A Device Settings Profile '
      description: >-
        Fetches the list of domains to bypass Gateway DNS resolution from a
        specified device settings profile. These domains will use the specified
        local DNS resolver instead.
      operationId: devices-get-local-domain-fallback-list-for-a-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: >-
            Get the Local Domain Fallback list for a device settings profile
            response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_fallback_domain_response_collection
        4XX:
          description: >-
            Get the Local Domain Fallback list for a device settings profile
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_fallback_domain_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Device
        - Devices
        - Domains
        - Fallback
        - Local
        - Policies
        - Profiles
        - Sets
        - Settings
      summary: 'Set The Local Domain Fallback List For A Device Settings Profile '
      description: >-
        Sets the list of domains to bypass Gateway DNS resolution. These domains
        will use the specified local DNS resolver instead. This will only apply
        to the specified device settings profile.
      operationId: devices-set-local-domain-fallback-list-for-a-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_fallback_domain'
      responses:
        '200':
          description: >-
            Set the Local Domain Fallback list for a device settings profile
            response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_fallback_domain_response_collection
        4XX:
          description: >-
            Set the Local Domain Fallback list for a device settings profile
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_fallback_domain_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy/{policy_id}/include:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Includes
        - Policies
        - Profiles
        - Settings
        - Split
        - Tunnels
      summary: 'Get The Split Tunnel Include List For A Device Settings Profile '
      description: >-
        Fetches the list of routes included in the WARP client's tunnel for a
        specific device settings profile.
      operationId: devices-get-split-tunnel-include-list-for-a-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: >-
            Get the Split Tunnel include list for a device settings profile
            response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_include_response_collection
        4XX:
          description: >-
            Get the Split Tunnel include list for a device settings profile
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_include_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Device
        - Devices
        - Includes
        - Policies
        - Profiles
        - Sets
        - Settings
        - Split
        - Tunnels
      summary: 'Set The Split Tunnel Include List For A Device Settings Profile '
      description: >-
        Sets the list of routes included in the WARP client's tunnel for a
        specific device settings profile.
      operationId: devices-set-split-tunnel-include-list-for-a-device-settings-policy
      parameters:
        - name: policy_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_split_tunnel_include'
      responses:
        '200':
          description: >-
            Set the Split Tunnel include list for a device settings profile
            response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_include_response_collection
        4XX:
          description: >-
            Set the Split Tunnel include list for a device settings profile
            response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_include_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy/exclude:
    get:
      tags:
        - Accounts
        - Devices
        - Exclude
        - Policies
        - Split
        - Tunnels
      summary: 'Get The Split Tunnel Exclude List '
      description: Fetches the list of routes excluded from the WARP client's tunnel.
      operationId: devices-get-split-tunnel-exclude-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get the Split Tunnel exclude list response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_response_collection
        4XX:
          description: Get the Split Tunnel exclude list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Devices
        - Exclude
        - Policies
        - Sets
        - Split
        - Tunnels
      summary: 'Set The Split Tunnel Exclude List '
      description: Sets the list of routes excluded from the WARP client's tunnel.
      operationId: devices-set-split-tunnel-exclude-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_split_tunnel'
      responses:
        '200':
          description: Set the Split Tunnel exclude list response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_response_collection
        4XX:
          description: Set the Split Tunnel exclude list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy/fallback_domains:
    get:
      tags:
        - Accounts
        - Devices
        - Domains
        - Fallback
        - Local
        - Policies
        - Your
      summary: 'Get Your Local Domain Fallback List '
      description: >-
        Fetches a list of domains to bypass Gateway DNS resolution. These
        domains will use the specified local DNS resolver instead.
      operationId: devices-get-local-domain-fallback-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get your Local Domain Fallback list response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_fallback_domain_response_collection
        4XX:
          description: Get your Local Domain Fallback list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_fallback_domain_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Devices
        - Domains
        - Fallback
        - Local
        - Policies
        - Sets
        - Your
      summary: 'Set Your Local Domain Fallback List '
      description: >-
        Sets the list of domains to bypass Gateway DNS resolution. These domains
        will use the specified local DNS resolver instead.
      operationId: devices-set-local-domain-fallback-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_fallback_domain'
      responses:
        '200':
          description: Set your Local Domain Fallback list response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_fallback_domain_response_collection
        4XX:
          description: Set your Local Domain Fallback list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_fallback_domain_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/policy/include:
    get:
      tags:
        - Accounts
        - Devices
        - Includes
        - Policies
        - Split
        - Tunnels
      summary: 'Get The Split Tunnel Include List '
      description: Fetches the list of routes included in the WARP client's tunnel.
      operationId: devices-get-split-tunnel-include-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get the Split Tunnel include list response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_include_response_collection
        4XX:
          description: Get the Split Tunnel include list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_include_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Devices
        - Includes
        - Policies
        - Sets
        - Split
        - Tunnels
      summary: 'Set The Split Tunnel Include List '
      description: Sets the list of routes included in the WARP client's tunnel.
      operationId: devices-set-split-tunnel-include-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/teams-devices_split_tunnel_include'
      responses:
        '200':
          description: Set the Split Tunnel include list response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_split_tunnel_include_response_collection
        4XX:
          description: Set the Split Tunnel include list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_split_tunnel_include_response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/posture:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Posture
        - Rules
      summary: 'List Device Posture Rules '
      description: Fetches device posture rules for a Zero Trust account.
      operationId: device-posture-rules-list-device-posture-rules
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: List device posture rules response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_response_collection'
        4XX:
          description: List device posture rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_response_collection'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Device
        - Devices
        - Posture
        - Rules
      summary: 'Create A Device Posture Rule '
      description: Creates a new device posture rule.
      operationId: device-posture-rules-create-device-posture-rule
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - type
              properties:
                description:
                  $ref: '#/components/schemas/teams-devices_description'
                expiration:
                  $ref: '#/components/schemas/teams-devices_expiration'
                input:
                  $ref: '#/components/schemas/teams-devices_input'
                match:
                  $ref: '#/components/schemas/teams-devices_match'
                name:
                  $ref: '#/components/schemas/teams-devices_name'
                schedule:
                  $ref: '#/components/schemas/teams-devices_schedule'
                type:
                  $ref: '#/components/schemas/teams-devices_type'
      responses:
        '200':
          description: Create device posture rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_single_response'
        4XX:
          description: Create device posture rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/posture/{rule_id}:
    delete:
      tags:
        - Accounts
        - Device
        - Devices
        - Posture
        - Rules
      summary: 'Delete A Device Posture Rule '
      description: Deletes a device posture rule.
      operationId: device-posture-rules-delete-device-posture-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a device posture rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_id_response'
        4XX:
          description: Delete a device posture rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_id_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Device
        - Devices
        - Posture
        - Rules
      summary: 'Get Device Posture Rule Details '
      description: Fetches a single device posture rule.
      operationId: device-posture-rules-device-posture-rules-details
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get device posture rule details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_single_response'
        4XX:
          description: Get device posture rule details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Device
        - Devices
        - Posture
        - Rules
      summary: 'Update A Device Posture Rule '
      description: Updates a device posture rule.
      operationId: device-posture-rules-update-device-posture-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - type
              properties:
                description:
                  $ref: '#/components/schemas/teams-devices_description'
                expiration:
                  $ref: '#/components/schemas/teams-devices_expiration'
                input:
                  $ref: '#/components/schemas/teams-devices_input'
                match:
                  $ref: '#/components/schemas/teams-devices_match'
                name:
                  $ref: '#/components/schemas/teams-devices_name'
                schedule:
                  $ref: '#/components/schemas/teams-devices_schedule'
                type:
                  $ref: '#/components/schemas/teams-devices_type'
      responses:
        '200':
          description: Update a device posture rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_single_response'
        4XX:
          description: Update a device posture rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/posture/integration:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Integrations
        - Posture
        - Your
      summary: 'List Your Device Posture Integrations '
      description: Fetches the list of device posture integrations for an account.
      operationId: device-posture-integrations-list-device-posture-integrations
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: List your device posture integrations response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_schemas-response_collection'
        4XX:
          description: List your device posture integrations response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_schemas-response_collection
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Device
        - Devices
        - Integrations
        - Posture
      summary: 'Create A Device Posture Integration '
      description: Create a new device posture integration.
      operationId: device-posture-integrations-create-device-posture-integration
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - type
                - interval
                - config
              properties:
                config:
                  $ref: '#/components/schemas/teams-devices_config_request'
                interval:
                  $ref: '#/components/schemas/teams-devices_interval'
                name:
                  $ref: '#/components/schemas/teams-devices_components-schemas-name'
                type:
                  $ref: '#/components/schemas/teams-devices_schemas-type'
      responses:
        '200':
          description: Create a device posture integration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_schemas-single_response'
        4XX:
          description: Create a device posture integration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/posture/integration/{integration_id}:
    delete:
      tags:
        - Accounts
        - Device
        - Devices
        - Integrations
        - Posture
      summary: 'Delete A Device Posture Integration '
      description: Delete a configured device posture integration.
      operationId: device-posture-integrations-delete-device-posture-integration
      parameters:
        - name: integration_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a device posture integration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_schemas-id_response'
        4XX:
          description: Delete a device posture integration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_schemas-id_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Device
        - Devices
        - Integrations
        - Posture
      summary: 'Get Device Posture Integration Details '
      description: Fetches details for a single device posture integration.
      operationId: device-posture-integrations-device-posture-integration-details
      parameters:
        - name: integration_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get device posture integration details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_schemas-single_response'
        4XX:
          description: Get device posture integration details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Device
        - Devices
        - Integrations
        - Posture
      summary: 'Update A Device Posture Integration '
      description: Updates a configured device posture integration.
      operationId: device-posture-integrations-update-device-posture-integration
      parameters:
        - name: integration_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                config:
                  $ref: '#/components/schemas/teams-devices_config_request'
                interval:
                  $ref: '#/components/schemas/teams-devices_interval'
                name:
                  $ref: '#/components/schemas/teams-devices_components-schemas-name'
                type:
                  $ref: '#/components/schemas/teams-devices_schemas-type'
      responses:
        '200':
          description: Update a device posture integration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_schemas-single_response'
        4XX:
          description: Update a device posture integration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/revoke:
    post:
      tags:
        - Accounts
        - Devices
        - Revoke
      summary: 'Revoke Devices '
      description: Revokes a list of devices.
      operationId: devices-revoke-devices
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teams-devices_revoke_devices_request'
      responses:
        '200':
          description: Revoke devices response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_api-response-single'
        4XX:
          description: Revoke devices response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_api-response-single'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/settings:
    get:
      tags:
        - Accounts
        - Device
        - Devices
        - Settings
        - Trust
      summary: 'Get Device Settings For A Zero Trust Account '
      description: Describes the current device settings for a Zero Trust account.
      operationId: zero-trust-accounts-get-device-settings-for-zero-trust-account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      responses:
        '200':
          description: Get device settings for a Zero Trust account response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_zero-trust-account-device-settings-response
        4XX:
          description: Get device settings for a Zero Trust account response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_zero-trust-account-device-settings-response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Device
        - Devices
        - Settings
        - Trust
      summary: 'Update Device Settings For A Zero Trust Account '
      description: Updates the current device settings for a Zero Trust account.
      operationId: zero-trust-accounts-update-device-settings-for-the-zero-trust-account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/teams-devices_zero-trust-account-device-settings
      responses:
        '200':
          description: Update device settings for a Zero Trust account response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/teams-devices_zero-trust-account-device-settings-response
        4XX:
          description: Update device settings for a Zero Trust account response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/teams-devices_zero-trust-account-device-settings-response
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/devices/unrevoke:
    post:
      tags:
        - Accounts
        - Devices
        - Unrevoke
      summary: 'Unrevoke Devices '
      description: Unrevokes a list of devices.
      operationId: devices-unrevoke-devices
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/teams-devices_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teams-devices_unrevoke_devices_request'
      responses:
        '200':
          description: Unrevoke devices response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams-devices_api-response-single'
        4XX:
          description: Unrevoke devices response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/teams-devices_api-response-single'
                  - $ref: >-
                      #/components/schemas/teams-devices_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/colos:
    get:
      tags:
        - Accounts
        - Cloudflare
      summary: 'List Cloudflare Colos '
      description: >-
        List Cloudflare colos that account's devices were connected to during a
        time period, sorted by usage starting from the most used colo. Colos
        without traffic are also returned and sorted alphabetically.
      operationId: dex-endpoints-list-colos
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account in the API request path.
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: timeStart
          in: query
          description: Start time for connection period in RFC3339 (ISO 8601) format.
          required: true
          schema:
            type: string
            example: '2023-08-20T20:45:00Z'
        - name: timeEnd
          in: query
          description: End time for connection period in RFC3339 (ISO 8601) format.
          required: true
          schema:
            type: string
            example: '2023-08-24T20:45:00Z'
        - name: sortBy
          in: query
          description: >-
            Type of usage that colos should be sorted by. If unspecified,
            returns all Cloudflare colos sorted alphabetically.
          schema:
            type: string
            enum:
              - fleet-status-usage
              - application-tests-usage
      responses:
        '200':
          description: List colos response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-collection
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_colos_response
        4XX:
          description: List colos failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/fleet-status/devices:
    get:
      tags:
        - Accounts
        - Devices
        - Fleets
        - Status
      summary: 'List Fleet Status Devices '
      description: List details for devices using WARP
      operationId: dex-fleet-status-devices
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: time_end
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_timestamp'
        - name: time_start
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_timestamp'
        - name: page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_page'
        - name: per_page
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_per_page'
        - name: sort_by
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_sort_by'
        - name: colo
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_colo'
        - name: device_id
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_device_id'
        - name: mode
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_mode'
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_status'
        - name: platform
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_platform'
        - name: version
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_version'
      responses:
        '200':
          description: List devices response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_fleet_status_devices_response
        4xx:
          description: List devices response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/fleet-status/live:
    get:
      tags:
        - Accounts
        - Details
        - Dimensions
        - Fleets
        - Live
        - Status
      summary: 'List Fleet Status Details By Dimension '
      description: List details for live (up to 60 minutes) devices using WARP
      operationId: dex-fleet-status-live
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: since_minutes
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_since_minutes'
      responses:
        '200':
          description: List device details (live) response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_fleet_status_live_response
        4xx:
          description: List device details (live) response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/fleet-status/over-time:
    get:
      tags:
        - Accounts
        - Aggregate
        - Details
        - Dimensions
        - Fleets
        - Status
        - Time
      summary: 'List Fleet Status Aggregate Details By Dimension '
      description: List details for devices using WARP, up to 7 days
      operationId: dex-fleet-status-over-time
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: time_end
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_timestamp'
        - name: time_start
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_timestamp'
        - name: colo
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_colo'
        - name: device_id
          in: query
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_device_id'
      responses:
        '200':
          description: List DEX devices response
        4xx:
          description: DEX HTTP test details failure response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/http-tests/{test_id}:
    get:
      tags:
        - Accounts
        - Aggregate
        - Details
        - HTTP
        - Metrics
        - Tests
      summary: 'Get Details And Aggregate Metrics For An Http Test '
      description: >-
        Get test details and aggregate performance metrics for an http test for
        a given time period between 1 hour and 7 days.
      operationId: dex-endpoints-http-test-details
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account in the API request path.
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: test_id
          in: path
          description: unique identifier for a specific test
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_uuid'
        - name: deviceId
          in: query
          description: >-
            Optionally filter result stats to a specific device(s). Cannot be
            used in combination with colo param.
          schema:
            type: array
            items:
              type: string
        - name: timeStart
          in: query
          description: Start time for aggregate metrics in ISO ms
          required: true
          schema:
            type: string
            example: 1689520412000
        - name: timeEnd
          in: query
          description: End time for aggregate metrics in ISO ms
          required: true
          schema:
            type: string
            example: 1689606812000
        - name: interval
          in: query
          description: Time interval for aggregate time slots.
          required: true
          schema:
            type: string
            enum:
              - minute
              - hour
        - name: colo
          in: query
          description: >-
            Optionally filter result stats to a Cloudflare colo. Cannot be used
            in combination with deviceId param.
          schema:
            type: string
      responses:
        '200':
          description: DEX HTTP test details response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_http_details_response
        4XX:
          description: DEX HTTP test details failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/http-tests/{test_id}/percentiles:
    get:
      tags:
        - Accounts
        - HTTP
        - Percentiles
        - Tests
      summary: 'Get Percentiles For An Http Test '
      description: >-
        Get percentiles for an http test for a given time period between 1 hour
        and 7 days.
      operationId: dex-endpoints-http-test-percentiles
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account in the API request path.
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: test_id
          in: path
          description: unique identifier for a specific test
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_uuid'
        - name: deviceId
          in: query
          description: >-
            Optionally filter result stats to a specific device(s). Cannot be
            used in combination with colo param.
          schema:
            type: array
            items:
              type: string
        - name: timeStart
          in: query
          description: Start time for aggregate metrics in ISO format
          required: true
          schema:
            type: string
            example: '2023-09-20T17:00:00Z'
        - name: timeEnd
          in: query
          description: End time for aggregate metrics in ISO format
          required: true
          schema:
            type: string
            example: '2023-09-20T17:00:00Z'
        - name: colo
          in: query
          description: >-
            Optionally filter result stats to a Cloudflare colo. Cannot be used
            in combination with deviceId param.
          schema:
            type: string
      responses:
        '200':
          description: DEX HTTP test percentiles response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_http_details_percentiles_response
        4XX:
          description: DEX HTTP test percentiles failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/tests:
    get:
      tags:
        - Accounts
        - Analytics
        - DEX
        - Tests
      summary: 'List DEX Test Analytics '
      description: List DEX tests
      operationId: dex-endpoints-list-tests
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account in the API request path.
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: colo
          in: query
          description: >-
            Optionally filter result stats to a Cloudflare colo. Cannot be used
            in combination with deviceId param.
          schema:
            type: string
        - name: testName
          in: query
          description: Optionally filter results by test name
          schema:
            type: string
        - name: deviceId
          in: query
          description: >-
            Optionally filter result stats to a specific device(s). Cannot be
            used in combination with colo param.
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          description: Page number of paginated results
          schema:
            type: number
            default: 1
            minimum: 1
        - name: per_page
          in: query
          description: Number of items per page
          schema:
            type: number
            default: 10
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: DEX tests list response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_tests_response
                      result_info:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_result_info
        4XX:
          description: List DEX tests failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/tests/unique-devices:
    get:
      tags:
        - Accounts
        - Count
        - Devices
        - Targets
        - Tests
        - Unique
      summary: 'Get Count Of Devices Targeted '
      description: >-
        Returns unique count of devices that have run synthetic application
        monitoring tests in the past 7 days.
      operationId: dex-endpoints-tests-unique-devices
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account in the API request path.
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: testName
          in: query
          description: Optionally filter results by test name
          schema:
            type: string
        - name: deviceId
          in: query
          description: >-
            Optionally filter result stats to a specific device(s). Cannot be
            used in combination with colo param.
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: DEX unique devices targeted response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_unique_devices_response
        4XX:
          description: DEX unique devices targeted failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/traceroute-test-results/{test_result_id}/network-path:
    get:
      tags:
        - Accounts
        - Details
        - Networks
        - Paths
        - Results
        - Runs
        - Specific
        - Tests
        - Trace Routes
      summary: 'Get Details For A Specific Traceroute Test Run '
      description: >-
        Get a breakdown of hops and performance metrics for a specific
        traceroute test run
      operationId: dex-endpoints-traceroute-test-result-network-path
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: test_result_id
          in: path
          description: unique identifier for a specific traceroute test
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_uuid'
      responses:
        '200':
          description: DEX traceroute test result network path response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_traceroute_test_result_network_path_response
        4XX:
          description: DEX traceroute test result network path failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/traceroute-tests/{test_id}:
    get:
      tags:
        - Accounts
        - Aggregate
        - Details
        - Metrics
        - Tests
        - Trace Routes
      summary: 'Get Details And Aggregate Metrics For A Traceroute Test '
      description: >-
        Get test details and aggregate performance metrics for an traceroute
        test for a given time period between 1 hour and 7 days.
      operationId: dex-endpoints-traceroute-test-details
      parameters:
        - name: account_id
          in: path
          description: Unique identifier linked to an account
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: test_id
          in: path
          description: Unique identifier for a specific test
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_uuid'
        - name: deviceId
          in: query
          description: >-
            Optionally filter result stats to a specific device(s). Cannot be
            used in combination with colo param.
          schema:
            type: array
            items:
              type: string
        - name: timeStart
          in: query
          description: Start time for aggregate metrics in ISO ms
          required: true
          schema:
            type: string
            example: 1689520412000
        - name: timeEnd
          in: query
          description: End time for aggregate metrics in ISO ms
          required: true
          schema:
            type: string
            example: 1689606812000
        - name: interval
          in: query
          description: Time interval for aggregate time slots.
          required: true
          schema:
            type: string
            enum:
              - minute
              - hour
        - name: colo
          in: query
          description: >-
            Optionally filter result stats to a Cloudflare colo. Cannot be used
            in combination with deviceId param.
          schema:
            type: string
      responses:
        '200':
          description: DEX traceroute test details response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_traceroute_details_response
        4XX:
          description: DEX traceroute test details response failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/traceroute-tests/{test_id}/network-path:
    get:
      tags:
        - Accounts
        - Breakdown
        - Networks
        - Paths
        - Tests
        - Trace Routes
      summary: 'Get Network Path Breakdown For A Traceroute Test '
      description: Get a breakdown of metrics by hop for individual traceroute test runs
      operationId: dex-endpoints-traceroute-test-network-path
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: test_id
          in: path
          description: unique identifier for a specific test
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_uuid'
        - name: deviceId
          in: query
          description: Device to filter tracroute result runs to
          required: true
          schema:
            type: string
        - name: timeStart
          in: query
          description: Start time for aggregate metrics in ISO ms
          required: true
          schema:
            type: string
            example: 1689520412000
        - name: timeEnd
          in: query
          description: End time for aggregate metrics in ISO ms
          required: true
          schema:
            type: string
            example: 1689606812000
        - name: interval
          in: query
          description: Time interval for aggregate time slots.
          required: true
          schema:
            type: string
            enum:
              - minute
              - hour
      responses:
        '200':
          description: DEX traceroute test network path response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_traceroute_test_network_path_response
        4XX:
          description: DEX traceroute test network path failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/dex/traceroute-tests/{test_id}/percentiles:
    get:
      tags:
        - Accounts
        - Percentiles
        - Tests
        - Trace Routes
      summary: 'Get Percentiles For A Traceroute Test '
      description: >-
        Get percentiles for a traceroute test for a given time period between 1
        hour and 7 days.
      operationId: dex-endpoints-traceroute-test-percentiles
      parameters:
        - name: account_id
          in: path
          description: unique identifier linked to an account in the API request path.
          required: true
          schema:
            $ref: >-
              #/components/schemas/digital-experience-monitoring_account_identifier
        - name: test_id
          in: path
          description: unique identifier for a specific test
          required: true
          schema:
            $ref: '#/components/schemas/digital-experience-monitoring_uuid'
        - name: deviceId
          in: query
          description: >-
            Optionally filter result stats to a specific device(s). Cannot be
            used in combination with colo param.
          schema:
            type: array
            items:
              type: string
        - name: timeStart
          in: query
          description: Start time for aggregate metrics in ISO format
          required: true
          schema:
            type: string
            example: '2023-09-20T17:00:00Z'
        - name: timeEnd
          in: query
          description: End time for aggregate metrics in ISO format
          required: true
          schema:
            type: string
            example: '2023-09-20T17:00:00Z'
        - name: colo
          in: query
          description: >-
            Optionally filter result stats to a Cloudflare colo. Cannot be used
            in combination with deviceId param.
          schema:
            type: string
      responses:
        '200':
          description: DEX Traceroute test percentiles response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/digital-experience-monitoring_api-response-single
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/digital-experience-monitoring_traceroute_details_percentiles_response
        4XX:
          description: DEX Traceroute test percentiles failure response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/digital-experience-monitoring_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/diagnostics/traceroute:
    post:
      tags:
        - Accounts
        - Diagnostics
        - Trace Routes
      summary: 'Traceroute '
      description: Run traceroutes from Cloudflare colos.
      operationId: diagnostics-traceroute
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-transit_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - targets
              properties:
                colos:
                  $ref: '#/components/schemas/magic-transit_colos'
                options:
                  $ref: '#/components/schemas/magic-transit_options'
                targets:
                  $ref: '#/components/schemas/magic-transit_targets'
      responses:
        '200':
          description: Traceroute response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-transit_traceroute_response_collection
        4XX:
          description: Traceroute response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-transit_traceroute_response_collection
                  - $ref: >-
                      #/components/schemas/magic-transit_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/dlp/datasets:
    get:
      tags:
        - About
        - Accounts
        - Available
        - DLP
        - Datasets
        - Fetch
        - Information
        - Versions
      summary: 'Fetch All Datasets With Information About Available Versions. '
      description: Fetch all datasets with information about available versions.
      operationId: dlp-datasets-read-all
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Datasets read successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_DatasetArrayResponse'
        4XX:
          description: Datasets read failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_V4ResponseError'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - DLP
        - Datasets
      summary: 'Create A New Dataset. '
      description: Create a new dataset.
      operationId: dlp-datasets-create
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Dataset description
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_NewDataset'
      responses:
        '200':
          description: Dataset created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_DatasetCreationResponse'
        4XX:
          description: Dataset creation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_V4ResponseError'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/datasets/{dataset_id}:
    delete:
      tags:
        - Accounts
        - DLP
        - Datasets
      summary: 'Delete A Dataset. '
      description: |-
        Delete a dataset.

        This deletes all versions of the dataset.
      operationId: dlp-datasets-delete
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dataset deleted successfully
        4XX:
          description: Dataset delete failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_V4ResponseError'
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - About
        - Accounts
        - Available
        - DLP
        - Datasets
        - Fetch
        - Information
        - Specific
        - Versions
      summary: 'Fetch A Specific Dataset With Information About Available Versions. '
      description: Fetch a specific dataset with information about available versions.
      operationId: dlp-datasets-read
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dataset read successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_DatasetResponse'
        4XX:
          description: Dataset read failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_V4ResponseError'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - About
        - Accounts
        - DLP
        - Datasets
        - Details
      summary: 'Update Details About A Dataset. '
      description: Update details about a dataset.
      operationId: dlp-datasets-update
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Dataset description
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_DatasetUpdate'
      responses:
        '200':
          description: Dataset updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_DatasetResponse'
        4XX:
          description: Dataset update failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_V4ResponseError'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/datasets/{dataset_id}/upload:
    post:
      tags:
        - Accounts
        - DLP
        - Datasets
        - Prepare
        - Uploads
        - Versions
      summary: 'Prepare To Upload A New Version Of A Dataset. '
      description: Prepare to upload a new version of a dataset.
      operationId: dlp-datasets-create-version
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dataset version created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_DatasetNewVersionResponse'
        4XX:
          description: Dataset version creation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_V4ResponseError'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/datasets/{dataset_id}/upload/{version}:
    post:
      tags:
        - Accounts
        - DLP
        - Datasets
        - Uploads
        - Versions
      summary: 'Upload A New Version Of A Dataset. '
      description: Upload a new version of a dataset.
      operationId: dlp-datasets-upload-version
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: version
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: >-
          Dataset. For custom wordlists this contains UTF-8 patterns separated
          by newline characters.
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
      responses:
        '200':
          description: Dataset version uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_DatasetResponse'
        4XX:
          description: Dataset version upload failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_V4ResponseError'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/patterns/validate:
    post:
      tags:
        - Accounts
        - Ate
        - DLP
        - Patterns
        - Val
        - Validate
      summary: 'Validate Pattern '
      description: >-
        Validates whether this pattern is a valid regular expression. Rejects it
        if the regular expression is too complex or can match an
        unbounded-length string. Your regex will be rejected if it uses the
        Kleene Star -- be sure to bound the maximum number of characters that
        can be matched.
      operationId: dlp-pattern-validation-validate-pattern
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_validate_pattern'
      responses:
        '200':
          description: Validate pattern response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_validate_response'
        4XX:
          description: Validate pattern response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_validate_response'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/payload_log:
    get:
      tags:
        - Accounts
        - DLP
        - Logs
        - Payload
        - Settings
      summary: 'Get Settings '
      description: Gets the current DLP payload log settings for this account.
      operationId: dlp-payload-log-settings-get-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      responses:
        '200':
          description: Get settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_get_settings_response'
        4XX:
          description: Get settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_get_settings_response'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - DLP
        - Logs
        - Payload
        - Settings
      summary: 'Update Settings '
      description: Updates the DLP payload log settings for this account.
      operationId: dlp-payload-log-settings-update-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_update_settings'
      responses:
        '200':
          description: Update settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_update_settings_response'
        4XX:
          description: Update settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_update_settings_response'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/profiles:
    get:
      tags:
        - Accounts
        - DLP
        - Profiles
      summary: 'List All Profiles '
      description: Lists all DLP profiles in an account.
      operationId: dlp-profiles-list-all-profiles
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      responses:
        '200':
          description: List all profiles response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_response_collection'
        4XX:
          description: List all profiles response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_response_collection'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/profiles/{profile_id}:
    get:
      tags:
        - Accounts
        - DLP
        - Profiles
      summary: 'Get DLP Profile '
      description: >-
        Fetches a DLP profile by ID. Supports both predefined and custom
        profiles
      operationId: dlp-profiles-get-dlp-profile
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_profile_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      responses:
        '200':
          description: Get DLP Profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_either_profile_response'
        4XX:
          description: Get DLP Profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_either_profile_response'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/profiles/custom:
    post:
      tags:
        - Accounts
        - Custom
        - DLP
        - Profiles
      summary: 'Create Custom Profiles '
      description: Creates a set of DLP custom profiles.
      operationId: dlp-profiles-create-custom-profiles
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_create_custom_profiles'
      responses:
        '200':
          description: Create custom profiles response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_create_custom_profile_response'
        4XX:
          description: Create custom profiles response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_create_custom_profile_response'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/profiles/custom/{profile_id}:
    delete:
      tags:
        - Accounts
        - Custom
        - DLP
        - Profiles
      summary: 'Delete Custom Profile '
      description: Deletes a DLP custom profile.
      operationId: dlp-profiles-delete-custom-profile
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_profile_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete custom profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_api-response-single'
        4XX:
          description: Delete custom profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_api-response-single'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Custom
        - DLP
        - Profiles
      summary: 'Get Custom Profile '
      description: Fetches a custom DLP profile.
      operationId: dlp-profiles-get-custom-profile
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_profile_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      responses:
        '200':
          description: Get custom profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_custom_profile_response'
        4XX:
          description: Get custom profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_custom_profile_response'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Custom
        - DLP
        - Profiles
      summary: 'Update Custom Profile '
      description: Updates a DLP custom profile.
      operationId: dlp-profiles-update-custom-profile
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_profile_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_update_custom_profile'
      responses:
        '200':
          description: Update custom profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_custom_profile'
        4XX:
          description: Update custom profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_custom_profile'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dlp/profiles/predefined/{profile_id}:
    get:
      tags:
        - Accounts
        - DLP
        - Predefined
        - Profiles
      summary: 'Get Predefined Profile '
      description: Fetches a predefined DLP profile.
      operationId: dlp-profiles-get-predefined-profile
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_profile_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      responses:
        '200':
          description: Get predefined profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_predefined_profile_response'
        4XX:
          description: Get predefined profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_predefined_profile_response'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - DLP
        - Predefined
        - Profiles
      summary: 'Update Predefined Profile '
      description: >-
        Updates a DLP predefined profile. Only supports enabling/disabling
        entries.
      operationId: dlp-profiles-update-predefined-profile
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_profile_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dlp_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dlp_update_predefined_profile'
      responses:
        '200':
          description: Update predefined profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dlp_predefined_profile'
        4XX:
          description: Update predefined profile response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dlp_predefined_profile'
                  - $ref: '#/components/schemas/dlp_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/dns_firewall:
    get:
      tags:
        - Accounts
        - Clusters
        - DNS
        - Firewall
      summary: 'List DNS Firewall Clusters '
      description: List configured DNS Firewall clusters for an account.
      operationId: dns-firewall-list-dns-firewall-clusters
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of clusters per page.
            default: 20
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List DNS Firewall Clusters response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dns-firewall_dns_firewall_response_collection
        4XX:
          description: List DNS Firewall Clusters response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-firewall_dns_firewall_response_collection
                  - $ref: >-
                      #/components/schemas/dns-firewall_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Clusters
        - DNS
        - Firewall
      summary: 'Create DNS Firewall Cluster '
      description: Create a configured DNS Firewall Cluster.
      operationId: dns-firewall-create-dns-firewall-cluster
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - upstream_ips
              properties:
                attack_mitigation:
                  $ref: '#/components/schemas/dns-firewall_attack_mitigation'
                deprecate_any_requests:
                  $ref: '#/components/schemas/dns-firewall_deprecate_any_requests'
                ecs_fallback:
                  $ref: '#/components/schemas/dns-firewall_ecs_fallback'
                maximum_cache_ttl:
                  $ref: '#/components/schemas/dns-firewall_maximum_cache_ttl'
                minimum_cache_ttl:
                  $ref: '#/components/schemas/dns-firewall_minimum_cache_ttl'
                name:
                  $ref: '#/components/schemas/dns-firewall_name'
                negative_cache_ttl:
                  $ref: '#/components/schemas/dns-firewall_negative_cache_ttl'
                origin_ips:
                  description: Deprecated alias for "upstream_ips".
                  deprecated: true
                ratelimit:
                  $ref: '#/components/schemas/dns-firewall_ratelimit'
                retries:
                  $ref: '#/components/schemas/dns-firewall_retries'
                upstream_ips:
                  $ref: '#/components/schemas/dns-firewall_upstream_ips'
      responses:
        '200':
          description: Create DNS Firewall Cluster response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-firewall_dns_firewall_single_response'
        4XX:
          description: Create DNS Firewall Cluster response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-firewall_dns_firewall_single_response
                  - $ref: >-
                      #/components/schemas/dns-firewall_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/dns_firewall/{dns_firewall_id}:
    delete:
      tags:
        - Accounts
        - Clusters
        - DNS
        - Firewall
      summary: 'Delete DNS Firewall Cluster '
      description: Delete a configured DNS Firewall Cluster.
      operationId: dns-firewall-delete-dns-firewall-cluster
      parameters:
        - name: dns_firewall_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete DNS Firewall Cluster response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/dns-firewall_api-response-single'
                  - properties:
                      result:
                        properties:
                          id:
                            $ref: '#/components/schemas/dns-firewall_identifier'
        4XX:
          description: Delete DNS Firewall Cluster response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/dns-firewall_api-response-single'
                      - properties:
                          result:
                            properties:
                              id:
                                $ref: '#/components/schemas/dns-firewall_identifier'
                  - $ref: >-
                      #/components/schemas/dns-firewall_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Clusters
        - DNS
        - Details
        - Firewall
      summary: 'DNS Firewall Cluster Details '
      description: Show a single configured DNS Firewall cluster for an account.
      operationId: dns-firewall-dns-firewall-cluster-details
      parameters:
        - name: dns_firewall_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
      responses:
        '200':
          description: DNS Firewall Cluster Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-firewall_dns_firewall_single_response'
        4XX:
          description: DNS Firewall Cluster Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-firewall_dns_firewall_single_response
                  - $ref: >-
                      #/components/schemas/dns-firewall_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Clusters
        - DNS
        - Firewall
      summary: 'Update DNS Firewall Cluster '
      description: Modify a DNS Firewall Cluster configuration.
      operationId: dns-firewall-update-dns-firewall-cluster
      parameters:
        - name: dns_firewall_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns-firewall_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dns-firewall_schemas-dns-firewall'
      responses:
        '200':
          description: Update DNS Firewall Cluster response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dns-firewall_dns_firewall_single_response'
        4XX:
          description: Update DNS Firewall Cluster response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns-firewall_dns_firewall_single_response
                  - $ref: >-
                      #/components/schemas/dns-firewall_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway:
    get:
      tags:
        - Accounts
        - Gateways
        - Information
        - Trust
      summary: 'Get Zero Trust Account Information '
      description: Gets information about the current Zero Trust account.
      operationId: zero-trust-accounts-get-zero-trust-account-information
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get Zero Trust account information response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_gateway_account'
        4XX:
          description: Get Zero Trust account information response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_gateway_account'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Gateways
        - Trust
      summary: 'Create Zero Trust Account '
      description: Creates a Zero Trust account with an existing Cloudflare account.
      operationId: zero-trust-accounts-create-zero-trust-account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Create Zero Trust account response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_gateway_account'
        4XX:
          description: Create Zero Trust account response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_gateway_account'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/app_types:
    get:
      tags:
        - Accounts
        - Applications
        - Gateways
        - Mapping
        - Types
      summary: 'List Application And Application Type Mappings '
      description: Fetches all application and application type mappings.
      operationId: >-
        zero-trust-gateway-application-and-application-type-mappings-list-application-and-application-type-mappings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-identifier'
      responses:
        '200':
          description: List application and application type mappings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_app-types_components-schemas-response_collection
        4XX:
          description: List application and application type mappings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_app-types_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/audit_ssh_settings:
    get:
      tags:
        - Accounts
        - Audit
        - Gateways
        - SSH
        - Settings
        - Trust
      summary: 'Get Zero Trust Audit SSH Settings '
      description: Get all Zero Trust Audit SSH settings for an account.
      operationId: zero-trust-get-audit-ssh-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get Zero Trust Audit SSH settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_audit_ssh_settings_components-schemas-single_response
        4XX:
          description: Get Zero Trust Audit SSH Settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_audit_ssh_settings_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Audit
        - Gateways
        - SSH
        - Settings
        - Trust
      summary: 'Update Zero Trust Audit SSH Settings '
      description: Updates Zero Trust Audit SSH settings.
      operationId: zero-trust-update-audit-ssh-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - public_key
              properties:
                public_key:
                  $ref: '#/components/schemas/zero-trust-gateway_public_key'
                seed_id:
                  $ref: >-
                    #/components/schemas/zero-trust-gateway_audit_ssh_settings_components-schemas-uuid
      responses:
        '200':
          description: Update Zero Trust Audit SSH Setting response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_audit_ssh_settings_components-schemas-single_response
        4XX:
          description: Update Zero Trust Audit SSH Setting response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_audit_ssh_settings_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/categories:
    get:
      tags:
        - Accounts
        - Categories
        - Gateways
      summary: 'List Categories '
      description: Fetches a list of all categories.
      operationId: zero-trust-gateway-categories-list-categories
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-identifier'
      responses:
        '200':
          description: List categories response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_categories_components-schemas-response_collection
        4XX:
          description: List categories response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_categories_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/configuration:
    get:
      tags:
        - Accounts
        - Configurations
        - Gateways
        - Trust
      summary: 'Get Zero Trust Account Configuration '
      description: Fetches the current Zero Trust account configuration.
      operationId: zero-trust-accounts-get-zero-trust-account-configuration
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get Zero Trust account configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_gateway_account_config'
        4XX:
          description: Get Zero Trust account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_gateway_account_config
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Configurations
        - Gateways
        - Patch
        - Trust
      summary: 'Patch Zero Trust Account Configuration '
      description: >-
        Patches the current Zero Trust account configuration. This endpoint can
        update a single subcollection of settings such as `antivirus`,
        `tls_decrypt`, `activity_log`, `block_page`, `browser_isolation`,
        `fips`, `body_scanning`, or `custom_certificate`, without updating the
        entire configuration object. Returns an error if any collection of
        settings is not properly configured.
      operationId: zero-trust-accounts-patch-zero-trust-account-configuration
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zero-trust-gateway_gateway-account-settings'
      responses:
        '200':
          description: Update Zero Trust account configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_gateway_account_config'
        4XX:
          description: Update Zero Trust account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_gateway_account_config
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Configurations
        - Gateways
        - Trust
      summary: 'Update Zero Trust Account Configuration '
      description: Updates the current Zero Trust account configuration.
      operationId: zero-trust-accounts-update-zero-trust-account-configuration
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zero-trust-gateway_gateway-account-settings'
      responses:
        '200':
          description: Update Zero Trust account configuration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_gateway_account_config'
        4XX:
          description: Update Zero Trust account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_gateway_account_config
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/lists:
    get:
      tags:
        - Accounts
        - Gateways
        - Trust
      summary: 'List Zero Trust Lists '
      description: Fetches all Zero Trust lists for an account.
      operationId: zero-trust-lists-list-zero-trust-lists
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: List Zero Trust lists response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_response_collection'
        4XX:
          description: List Zero Trust lists response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_response_collection
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Gateways
        - Trust
      summary: 'Create Zero Trust List '
      description: Creates a new Zero Trust list.
      operationId: zero-trust-lists-create-zero-trust-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - type
              properties:
                description:
                  $ref: '#/components/schemas/zero-trust-gateway_description'
                items:
                  $ref: '#/components/schemas/zero-trust-gateway_items'
                name:
                  $ref: '#/components/schemas/zero-trust-gateway_name'
                type:
                  $ref: '#/components/schemas/zero-trust-gateway_type'
      responses:
        '200':
          description: Create Zero Trust list response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_single_response_with_list_items
        4XX:
          description: Create Zero Trust list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_single_response_with_list_items
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/lists/{list_id}:
    delete:
      tags:
        - Accounts
        - Gateways
        - Trust
      summary: 'Delete Zero Trust List '
      description: Deletes a Zero Trust list.
      operationId: zero-trust-lists-delete-zero-trust-list
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Zero Trust list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_empty_response'
        4XX:
          description: Delete Zero Trust list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_empty_response'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Gateways
        - Trust
      summary: 'Get Zero Trust List Details '
      description: Fetches a single Zero Trust list.
      operationId: zero-trust-lists-zero-trust-list-details
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get Zero Trust list details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_single_response'
        4XX:
          description: Get Zero Trust list details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_single_response'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Gateways
        - Patch
        - Trust
      summary: 'Patch Zero Trust List '
      description: Appends or removes an item from a configured Zero Trust list.
      operationId: zero-trust-lists-patch-zero-trust-list
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                append:
                  $ref: '#/components/schemas/zero-trust-gateway_items'
                remove:
                  type: array
                  description: A list of the item values you want to remove.
                  items:
                    $ref: '#/components/schemas/zero-trust-gateway_value'
      responses:
        '200':
          description: Patch Zero Trust list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_single_response'
        4XX:
          description: Patch Zero Trust list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_single_response'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Gateways
        - Trust
      summary: 'Update Zero Trust List '
      description: Updates a configured Zero Trust list.
      operationId: zero-trust-lists-update-zero-trust-list
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                description:
                  $ref: '#/components/schemas/zero-trust-gateway_description'
                name:
                  $ref: '#/components/schemas/zero-trust-gateway_name'
      responses:
        '200':
          description: Update Zero Trust list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_single_response'
        4XX:
          description: Update Zero Trust list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_single_response'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/lists/{list_id}/items:
    get:
      tags:
        - Accounts
        - Gateways
        - Items
        - Trust
      summary: 'Get Zero Trust List Items '
      description: Fetches all items in a single Zero Trust list.
      operationId: zero-trust-lists-zero-trust-list-items
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get Zero Trust list items response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_list_item_response_collection
        4XX:
          description: Get Zero Trust list items response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_list_item_response_collection
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/locations:
    get:
      tags:
        - Accounts
        - Gateways
        - Locations
        - Trust
      summary: 'List Zero Trust Gateway Locations '
      description: Fetches Zero Trust Gateway locations for an account.
      operationId: zero-trust-gateway-locations-list-zero-trust-gateway-locations
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: List Zero Trust Gateway locations response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_schemas-response_collection
        4XX:
          description: List Zero Trust Gateway locations response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_schemas-response_collection
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Gateways
        - Locations
        - Trust
      summary: 'Create A Zero Trust Gateway Location '
      description: Creates a new Zero Trust Gateway location.
      operationId: zero-trust-gateway-locations-create-zero-trust-gateway-location
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                client_default:
                  $ref: '#/components/schemas/zero-trust-gateway_client-default'
                ecs_support:
                  $ref: '#/components/schemas/zero-trust-gateway_ecs-support'
                name:
                  $ref: '#/components/schemas/zero-trust-gateway_schemas-name'
                networks:
                  $ref: '#/components/schemas/zero-trust-gateway_networks'
      responses:
        '200':
          description: Create a Zero Trust Gateway location response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_schemas-single_response
        4XX:
          description: Create a Zero Trust Gateway location response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/locations/{location_id}:
    delete:
      tags:
        - Accounts
        - Gateways
        - Locations
        - Trust
      summary: 'Delete A Zero Trust Gateway Location '
      description: Deletes a configured Zero Trust Gateway location.
      operationId: zero-trust-gateway-locations-delete-zero-trust-gateway-location
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a Zero Trust Gateway location response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_empty_response'
        4XX:
          description: Delete a Zero Trust Gateway location response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_empty_response'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Gateways
        - Locations
        - Trust
      summary: 'Get Zero Trust Gateway Location Details '
      description: Fetches a single Zero Trust Gateway location.
      operationId: zero-trust-gateway-locations-zero-trust-gateway-location-details
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get Zero Trust Gateway location details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_schemas-single_response
        4XX:
          description: Get Zero Trust Gateway location details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Gateways
        - Locations
        - Trust
      summary: 'Update A Zero Trust Gateway Location '
      description: Updates a configured Zero Trust Gateway location.
      operationId: zero-trust-gateway-locations-update-zero-trust-gateway-location
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                client_default:
                  $ref: '#/components/schemas/zero-trust-gateway_client-default'
                ecs_support:
                  $ref: '#/components/schemas/zero-trust-gateway_ecs-support'
                name:
                  $ref: '#/components/schemas/zero-trust-gateway_schemas-name'
                networks:
                  $ref: '#/components/schemas/zero-trust-gateway_networks'
      responses:
        '200':
          description: Update a Zero Trust Gateway location response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_schemas-single_response
        4XX:
          description: Update a Zero Trust Gateway location response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/logging:
    get:
      tags:
        - Accounts
        - Gateways
        - Logging
        - Settings
        - Trust
      summary: 'Get Logging Settings For The Zero Trust Account '
      description: Fetches the current logging settings for Zero Trust account.
      operationId: zero-trust-accounts-get-logging-settings-for-the-zero-trust-account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get logging settings for the Zero Trust account response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_gateway-account-logging-settings-response
        4XX:
          description: Get logging settings for the Zero Trust account response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_gateway-account-logging-settings-response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Gateways
        - Logging
        - Settings
        - Trust
      summary: 'Update Zero Trust Account Logging Settings '
      description: Updates logging settings for the current Zero Trust account.
      operationId: zero-trust-accounts-update-logging-settings-for-the-zero-trust-account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/zero-trust-gateway_gateway-account-logging-settings
      responses:
        '200':
          description: Update logging settings for the Zero Trust account response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_gateway-account-logging-settings-response
        4XX:
          description: Update logging settings for the Zero Trust account response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_gateway-account-logging-settings-response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/proxy_endpoints:
    get:
      tags:
        - Accounts
        - Endpoints
        - Gateways
        - Proxy
      summary: 'Get A Proxy Endpoint '
      description: Fetches a single Zero Trust Gateway proxy endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-list-proxy-endpoints
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get a proxy endpoint response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-response_collection
        4XX:
          description: Get a proxy endpoint response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Endpoints
        - Gateways
        - Proxy
      summary: 'Create A Proxy Endpoint '
      description: Creates a new Zero Trust Gateway proxy endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-create-proxy-endpoint
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - ips
              properties:
                ips:
                  $ref: '#/components/schemas/zero-trust-gateway_ips'
                name:
                  $ref: >-
                    #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-name
                subdomain:
                  $ref: '#/components/schemas/zero-trust-gateway_schemas-subdomain'
      responses:
        '200':
          description: Create a proxy endpoint response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-single_response
        4XX:
          description: Create a proxy endpoint response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/proxy_endpoints/{proxy_endpoint_id}:
    delete:
      tags:
        - Accounts
        - Endpoints
        - Gateways
        - Proxy
      summary: 'Delete A Proxy Endpoint '
      description: Deletes a configured Zero Trust Gateway proxy endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-delete-proxy-endpoint
      parameters:
        - name: proxy_endpoint_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a proxy endpoint response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_empty_response'
        4XX:
          description: Delete a proxy endpoint response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_empty_response'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Endpoints
        - Gateways
        - Proxy
      summary: 'List Proxy Endpoints '
      description: Fetches all Zero Trust Gateway proxy endpoints for an account.
      operationId: zero-trust-gateway-proxy-endpoints-proxy-endpoint-details
      parameters:
        - name: proxy_endpoint_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: List proxy endpoints response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-single_response
        4XX:
          description: List proxy endpoints response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Endpoints
        - Gateways
        - Proxy
      summary: 'Update A Proxy Endpoint '
      description: Updates a configured Zero Trust Gateway proxy endpoint.
      operationId: zero-trust-gateway-proxy-endpoints-update-proxy-endpoint
      parameters:
        - name: proxy_endpoint_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                ips:
                  $ref: '#/components/schemas/zero-trust-gateway_ips'
                name:
                  $ref: >-
                    #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-name
                subdomain:
                  $ref: '#/components/schemas/zero-trust-gateway_schemas-subdomain'
      responses:
        '200':
          description: Update a proxy endpoint response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-single_response
        4XX:
          description: Update a proxy endpoint response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_proxy-endpoints_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/rules:
    get:
      tags:
        - Accounts
        - Gateways
        - Rules
        - Trust
      summary: 'List Zero Trust Gateway Rules '
      description: Fetches the Zero Trust Gateway rules for an account.
      operationId: zero-trust-gateway-rules-list-zero-trust-gateway-rules
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: List Zero Trust Gateway rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_components-schemas-response_collection
        4XX:
          description: List Zero Trust Gateway rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Gateways
        - Rules
        - Trust
      summary: 'Create A Zero Trust Gateway Rule '
      description: Creates a new Zero Trust Gateway rule.
      operationId: zero-trust-gateway-rules-create-zero-trust-gateway-rule
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - action
              properties:
                action:
                  $ref: '#/components/schemas/zero-trust-gateway_action'
                description:
                  $ref: '#/components/schemas/zero-trust-gateway_schemas-description'
                device_posture:
                  $ref: '#/components/schemas/zero-trust-gateway_device_posture'
                enabled:
                  $ref: '#/components/schemas/zero-trust-gateway_enabled'
                filters:
                  $ref: '#/components/schemas/zero-trust-gateway_filters'
                identity:
                  $ref: '#/components/schemas/zero-trust-gateway_identity'
                name:
                  $ref: >-
                    #/components/schemas/zero-trust-gateway_components-schemas-name
                precedence:
                  $ref: '#/components/schemas/zero-trust-gateway_precedence'
                rule_settings:
                  $ref: '#/components/schemas/zero-trust-gateway_rule-settings'
                schedule:
                  $ref: '#/components/schemas/zero-trust-gateway_schedule'
                traffic:
                  $ref: '#/components/schemas/zero-trust-gateway_traffic'
      responses:
        '200':
          description: Create a Zero Trust Gateway rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_components-schemas-single_response
        4XX:
          description: Create a Zero Trust Gateway rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/gateway/rules/{rule_id}:
    delete:
      tags:
        - Accounts
        - Gateways
        - Rules
        - Trust
      summary: 'Delete A Zero Trust Gateway Rule '
      description: Deletes a Zero Trust Gateway rule.
      operationId: zero-trust-gateway-rules-delete-zero-trust-gateway-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_components-schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a Zero Trust Gateway rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zero-trust-gateway_empty_response'
        4XX:
          description: Delete a Zero Trust Gateway rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/zero-trust-gateway_empty_response'
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Gateways
        - Rules
        - Trust
      summary: 'Get Zero Trust Gateway Rule Details '
      description: Fetches a single Zero Trust Gateway rule.
      operationId: zero-trust-gateway-rules-zero-trust-gateway-rule-details
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_components-schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      responses:
        '200':
          description: Get Zero Trust Gateway rule details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_components-schemas-single_response
        4XX:
          description: Get Zero Trust Gateway rule details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Gateways
        - Rules
        - Trust
      summary: 'Update A Zero Trust Gateway Rule '
      description: Updates a configured Zero Trust Gateway rule.
      operationId: zero-trust-gateway-rules-update-zero-trust-gateway-rule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_components-schemas-uuid'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/zero-trust-gateway_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - action
              properties:
                action:
                  $ref: '#/components/schemas/zero-trust-gateway_action'
                description:
                  $ref: '#/components/schemas/zero-trust-gateway_schemas-description'
                device_posture:
                  $ref: '#/components/schemas/zero-trust-gateway_device_posture'
                enabled:
                  $ref: '#/components/schemas/zero-trust-gateway_enabled'
                filters:
                  $ref: '#/components/schemas/zero-trust-gateway_filters'
                identity:
                  $ref: '#/components/schemas/zero-trust-gateway_identity'
                name:
                  $ref: >-
                    #/components/schemas/zero-trust-gateway_components-schemas-name
                precedence:
                  $ref: '#/components/schemas/zero-trust-gateway_precedence'
                rule_settings:
                  $ref: '#/components/schemas/zero-trust-gateway_rule-settings'
                schedule:
                  $ref: '#/components/schemas/zero-trust-gateway_schedule'
                traffic:
                  $ref: '#/components/schemas/zero-trust-gateway_traffic'
      responses:
        '200':
          description: Update a Zero Trust Gateway rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/zero-trust-gateway_components-schemas-single_response
        4XX:
          description: Update a Zero Trust Gateway rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/zero-trust-gateway_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/hyperdrive/configs:
    get:
      tags:
        - Accounts
        - Configurations
        - Hyperdrives
      summary: 'List Hyperdrives '
      description: Returns a list of Hyperdrives
      operationId: list-hyperdrive
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
      responses:
        '200':
          description: List Hyperdrives Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/hyperdrive_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/hyperdrive_hyperdrive-with-identifier
        4XX:
          description: List Hyperdrives Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/hyperdrive_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: >-
                      #/components/schemas/hyperdrive_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Configurations
        - Hyperdrives
      summary: 'Create Hyperdrive '
      description: Creates and returns a new Hyperdrive configuration.
      operationId: create-hyperdrive
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hyperdrive_create-update-hyperdrive-config'
      responses:
        '200':
          description: Create Hyperdrive Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/hyperdrive_api-response-single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/hyperdrive_hyperdrive-with-identifier
        4XX:
          description: Create Hyperdrive Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/hyperdrive_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: >-
                      #/components/schemas/hyperdrive_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/hyperdrive/configs/{hyperdrive_id}:
    delete:
      tags:
        - Accounts
        - Configurations
        - Hyperdrives
      summary: 'Delete Hyperdrive '
      description: Deletes the specified Hyperdrive.
      operationId: delete-hyperdrive
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
        - name: hyperdrive_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
      responses:
        '200':
          description: Delete Hyperdrive Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/hyperdrive_api-response-single'
                  - properties:
                      result:
                        type: object
                        nullable: true
        4XX:
          description: Delete Hyperdrive Failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/hyperdrive_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: >-
                      #/components/schemas/hyperdrive_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Configurations
        - Hyperdrives
      summary: 'Get Hyperdrive '
      description: Returns the specified Hyperdrive configuration.
      operationId: get-hyperdrive
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
        - name: hyperdrive_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
      responses:
        '200':
          description: Get Hyperdrive Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/hyperdrive_api-response-single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/hyperdrive_hyperdrive-with-identifier
        4XX:
          description: Get Hyperdrive Failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/hyperdrive_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: >-
                      #/components/schemas/hyperdrive_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Configurations
        - Hyperdrives
        - Patch
      summary: 'Patch Hyperdrive '
      description: >-
        Patches and returns the specified Hyperdrive configuration. Updates to
        the origin and caching settings are applied with an all-or-nothing
        approach.
      operationId: patch-hyperdrive
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
        - name: hyperdrive_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hyperdrive_patch-hyperdrive-config'
      responses:
        '200':
          description: Patch Hyperdrive Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/hyperdrive_api-response-single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/hyperdrive_hyperdrive-with-identifier
        4XX:
          description: Patch Hyperdrive Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/hyperdrive_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: >-
                      #/components/schemas/hyperdrive_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Configurations
        - Hyperdrives
      summary: 'Update Hyperdrive '
      description: Updates and returns the specified Hyperdrive configuration.
      operationId: update-hyperdrive
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
        - name: hyperdrive_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/hyperdrive_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hyperdrive_create-update-hyperdrive-config'
      responses:
        '200':
          description: Update Hyperdrive Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/hyperdrive_api-response-single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/hyperdrive_hyperdrive-with-identifier
        4XX:
          description: Update Hyperdrive Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/hyperdrive_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: >-
                      #/components/schemas/hyperdrive_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1:
    get:
      tags:
        - Accounts
        - Images
      summary: 'List Images '
      description: >-
        List up to 100 images with one request. Use the optional parameters
        below to get a specific range of images.
      operationId: cloudflare-images-list-images
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of items per page.
            default: 1000
            minimum: 10
            maximum: 10000
      responses:
        '200':
          description: List images response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_images_list_response'
        4XX:
          description: List images response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_images_list_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      deprecated: true
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Images
        - Uploads
      summary: 'Upload An Image '
      description: >
        Upload an image with up to 10 Megabytes using a single HTTP POST
        (multipart/form-data) request.

        An image can be uploaded by sending an image file or passing an
        accessible to an API url.
      operationId: cloudflare-images-upload-an-image-via-url
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/images_image_basic_upload'
      responses:
        '200':
          description: Upload an image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_response_single'
        4XX:
          description: Upload an image response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_response_single'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1/{image_id}:
    delete:
      tags:
        - Accounts
        - Images
      summary: 'Delete Image '
      description: >-
        Delete an image on Cloudflare Images. On success, all copies of the
        image are deleted and purged from cache.
      operationId: cloudflare-images-delete-image
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_image_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_deleted_response'
        4XX:
          description: Delete image response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_deleted_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Images
      summary: 'Image Details '
      description: Fetch details for a single image.
      operationId: cloudflare-images-image-details
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_image_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: Image details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_response_single'
        4XX:
          description: Image details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_response_single'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Images
      summary: 'Update Image '
      description: >-
        Update image access control. On access control change, all copies of the
        image are purged from cache.
      operationId: cloudflare-images-update-image
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_image_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/images_image_patch_request'
      responses:
        '200':
          description: Update image response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_response_single'
        4XX:
          description: Update image response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_response_single'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1/{image_id}/blob:
    get:
      tags:
        - Accounts
        - Base
        - Blobs
        - Images
      summary: 'Base Image '
      description: >-
        Fetch base image. For most images this will be the originally uploaded
        file. For larger images it can be a near-lossless version of the
        original.
      operationId: cloudflare-images-base-image
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_image_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: Base image response. Returns uploaded image data.
          content:
            image/*:
              schema:
                type: string
                format: binary
        4XX:
          description: Base image response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_response_blob'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1/keys:
    get:
      tags:
        - Accounts
        - Images
        - Keys
        - Signing
      summary: 'List Signing Keys '
      description: >-
        Lists your signing keys. These can be found on your Cloudflare Images
        dashboard.
      operationId: cloudflare-images-keys-list-signing-keys
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: List Signing Keys response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_key_response_collection'
        4XX:
          description: List Signing Keys response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_key_response_collection'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1/keys/{signing_key_name}:
    delete:
      tags:
        - Accounts
        - Images
        - Keys
        - Names
        - Signing
      summary: 'Delete Signing Key '
      description: |
        Delete signing key with specified name. Returns all keys available.
        When last key is removed, a new default signing key will be generated.
      operationId: cloudflare-images-keys-delete-signing-key
      parameters:
        - name: signing_key_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_signing_key_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: Delete Signing Key response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_key_response_collection'
        4XX:
          description: Delete Signing Key response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_key_response_collection'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Images
        - Keys
        - Names
        - Signing
      summary: 'Create A New Signing Key '
      description: >-
        Create a new signing key with specified name. Returns all keys
        available.
      operationId: cloudflare-images-keys-add-signing-key
      parameters:
        - name: signing_key_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_signing_key_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: Add Signing Key response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_key_response_collection'
        4XX:
          description: Add Signing Key response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_key_response_collection'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1/stats:
    get:
      tags:
        - Accounts
        - Images
        - Statistics
        - Usage
      summary: 'Images Usage Statistics '
      description: Fetch usage statistics details for Cloudflare Images.
      operationId: cloudflare-images-images-usage-statistics
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: Images usage statistics response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_images_stats_response'
        4XX:
          description: Images usage statistics response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_images_stats_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1/variants:
    get:
      tags:
        - Accounts
        - Images
        - Variants
      summary: 'List Variants '
      description: Lists existing variants.
      operationId: cloudflare-images-variants-list-variants
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: List variants response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_variant_list_response'
        4XX:
          description: List variants response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_variant_list_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Images
        - Variants
      summary: 'Create A Variant '
      description: >-
        Specify variants that allow you to resize images for different use
        cases.
      operationId: cloudflare-images-variants-create-a-variant
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/images_image_variant_definition'
      responses:
        '200':
          description: Create a variant response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_variant_simple_response'
        4XX:
          description: Create a variant response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_variant_simple_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v1/variants/{variant_id}:
    delete:
      tags:
        - Accounts
        - Images
        - Variants
      summary: 'Delete A Variant '
      description: >-
        Deleting a variant purges the cache for all images associated with the
        variant.
      operationId: cloudflare-images-variants-delete-a-variant
      parameters:
        - name: variant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_image_variant_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a variant response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_deleted_response'
        4XX:
          description: Delete a variant response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_deleted_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Images
        - Variants
      summary: 'Variant Details '
      description: Fetch details for a single variant.
      operationId: cloudflare-images-variants-variant-details
      parameters:
        - name: variant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_image_variant_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      responses:
        '200':
          description: Variant details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_variant_simple_response'
        4XX:
          description: Variant details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_variant_simple_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Images
        - Variants
      summary: 'Update A Variant '
      description: >-
        Updating a variant purges the cache for all images associated with the
        variant.
      operationId: cloudflare-images-variants-update-a-variant
      parameters:
        - name: variant_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_image_variant_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/images_image_variant_patch_request'
      responses:
        '200':
          description: Update a variant response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_variant_simple_response'
        4XX:
          description: Update a variant response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_image_variant_simple_response'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v2:
    get:
      tags:
        - Accounts
        - Images
      summary: 'List Images V2 '
      description: >
        List up to 10000 images with one request. Use the optional parameters
        below to get a specific range of images.

        Endpoint returns continuation_token if more images are present.
      operationId: cloudflare-images-list-images-v2
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
        - name: continuation_token
          in: query
          schema:
            type: string
            description: >-
              Continuation token for a next page. List images V2 returns
              continuation_token
            nullable: true
        - name: per_page
          in: query
          schema:
            type: number
            description: Number of items per page.
            default: 1000
            minimum: 10
            maximum: 10000
        - name: sort_order
          in: query
          schema:
            type: string
            description: Sorting order by upload time.
            enum:
              - asc
              - desc
            default: desc
      responses:
        '200':
          description: List images response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_images_list_response_v2'
        4XX:
          description: List images response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/images_images_list_response_v2'
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/images/v2/direct_upload:
    post:
      tags:
        - Accounts
        - Authenticated
        - Direct
        - Images
        - URL
        - Uploads
      summary: 'Create Authenticated Direct Upload URL V2 '
      description: >-
        Direct uploads allow users to upload images without API keys. A common
        use case are web apps, client-side applications, or mobile devices where
        users upload content directly to Cloudflare Images. This method creates
        a draft record for a future image. It returns an upload URL and an image
        identifier. To verify if the image itself has been uploaded, send an
        image details request
        (accounts/:account_identifier/images/v1/:identifier), and check that the
        `draft: true` property is not present.
      operationId: cloudflare-images-create-authenticated-direct-upload-url-v-2
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/images_account_identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/images_image_direct_upload_request_v2'
      responses:
        '200':
          description: Create authenticated direct upload URL V2 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/images_image_direct_upload_response_v2'
        4XX:
          description: Create authenticated direct upload URL V2 response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/images_image_direct_upload_response_v2
                  - $ref: '#/components/schemas/images_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/asn/{asn}:
    get:
      tags:
        - ASN
        - Accounts
        - Intelligence
        - Overview
      summary: 'Get ASN Overview '
      operationId: asn-intelligence-get-asn-overview
      parameters:
        - name: asn
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_asn'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      responses:
        '200':
          description: Get ASN Overview response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_asn_components-schemas-response'
        4XX:
          description: Get ASN Overview response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_asn_components-schemas-response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/asn/{asn}/subnets:
    get:
      tags:
        - ASN
        - Accounts
        - Intelligence
        - Subnets
      summary: 'Get ASN Subnets '
      operationId: asn-intelligence-get-asn-subnets
      parameters:
        - name: asn
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_asn'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      responses:
        '200':
          description: Get ASN Subnets response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asn:
                    $ref: '#/components/schemas/intel_asn'
                  count:
                    $ref: '#/components/schemas/intel_count'
                  ip_count_total:
                    type: integer
                  page:
                    $ref: '#/components/schemas/intel_page'
                  per_page:
                    $ref: '#/components/schemas/intel_per_page'
                  subnets:
                    type: array
                    example:
                      - 192.0.2.0/24
                      - 2001:DB8::/32
                    items:
                      type: string
        4XX:
          description: Get ASN Subnets response failure
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      asn:
                        $ref: '#/components/schemas/intel_asn'
                      count:
                        $ref: '#/components/schemas/intel_count'
                      ip_count_total:
                        type: integer
                      page:
                        $ref: '#/components/schemas/intel_page'
                      per_page:
                        $ref: '#/components/schemas/intel_per_page'
                      subnets:
                        type: array
                        example:
                          - 192.0.2.0/24
                          - 2001:DB8::/32
                        items:
                          type: string
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/attack-surface-report/{issue_id}/dismiss:
    put:
      tags:
        - Accounts
        - Archive
        - Attacks
        - Center
        - Dismiss
        - Insights
        - Intelligence
        - Issues
        - Reports
        - Security
        - Surface
      summary: 'Archive Security Center Insight '
      operationId: archive-security-center-insight
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/security-center_identifier'
        - name: issue_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dismiss:
                  type: boolean
                  default: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/security-center_api-response-single'
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/security-center_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_id}/intel/attack-surface-report/issue-types:
    get:
      tags:
        - Accounts
        - Attacks
        - Center
        - Intelligence
        - Issues
        - Reports
        - Security
        - Surface
        - Types
      summary: 'Get Security Center Issues Types '
      operationId: get-security-center-issue-types
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/security-center_identifier'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/security-center_api-response-common'
                  - properties:
                      result:
                        anyOf:
                          - type: array
                            items:
                              type: string
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/security-center_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_id}/intel/attack-surface-report/issues:
    get:
      tags:
        - Accounts
        - Attacks
        - Center
        - Intelligence
        - Issues
        - Reports
        - Security
        - Surface
      summary: 'Get Security Center Issues '
      operationId: get-security-center-issues
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/security-center_identifier'
        - name: dismissed
          in: query
          schema:
            $ref: '#/components/schemas/security-center_dismissed'
        - name: issue_class
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
        - name: issue_class~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
        - name: page
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/security-center_page'
            default: 1
        - name: per_page
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/security-center_perPage'
            default: 25
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/security-center_api-response-common'
                  - properties:
                      result:
                        anyOf:
                          - type: object
                            properties:
                              count:
                                $ref: '#/components/schemas/security-center_count'
                              issues:
                                type: array
                                items:
                                  $ref: '#/components/schemas/security-center_issue'
                              page:
                                $ref: '#/components/schemas/security-center_page'
                              per_page:
                                $ref: '#/components/schemas/security-center_perPage'
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/security-center_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_id}/intel/attack-surface-report/issues/class:
    get:
      tags:
        - Accounts
        - Attacks
        - Center
        - Classes
        - Counts
        - Intelligence
        - Issues
        - Reports
        - Security
        - Surface
      summary: 'Get Security Center Issue Counts By Class '
      operationId: get-security-center-issue-counts-by-class
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/security-center_identifier'
        - name: dismissed
          in: query
          schema:
            $ref: '#/components/schemas/security-center_dismissed'
        - name: issue_class
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
        - name: issue_class~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/security-center_valueCountsResponse'
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/security-center_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_id}/intel/attack-surface-report/issues/severity:
    get:
      tags:
        - Accounts
        - Attacks
        - Center
        - Counts
        - Intelligence
        - Issues
        - Reports
        - Security
        - Severity
        - Surface
      summary: 'Get Security Center Issue Counts By Severity '
      operationId: get-security-center-issue-counts-by-severity
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/security-center_identifier'
        - name: dismissed
          in: query
          schema:
            $ref: '#/components/schemas/security-center_dismissed'
        - name: issue_class
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
        - name: issue_class~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/security-center_valueCountsResponse'
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/security-center_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_id}/intel/attack-surface-report/issues/type:
    get:
      tags:
        - Accounts
        - Attacks
        - Center
        - Counts
        - Intelligence
        - Issues
        - Reports
        - Security
        - Surface
        - Types
      summary: 'Get Security Center Issue Counts By Type '
      operationId: get-security-center-issue-counts-by-type
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/security-center_identifier'
        - name: dismissed
          in: query
          schema:
            $ref: '#/components/schemas/security-center_dismissed'
        - name: issue_class
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
        - name: issue_class~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueClasses'
        - name: issue_type~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_issueTypes'
        - name: product~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_products'
        - name: severity~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_severityQueryParam'
        - name: subject~neq
          in: query
          schema:
            $ref: '#/components/schemas/security-center_subjects'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/security-center_valueCountsResponse'
        4XX:
          description: Client Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/security-center_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_id}/intel/dns:
    get:
      tags:
        - Accounts
        - DNS
        - IP
        - Intelligence
        - Passive
      summary: 'Get Passive DNS By IP '
      operationId: passive-dns-by-ip-get-passive-dns-by-ip
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: start_end_params
          in: query
          schema:
            $ref: '#/components/schemas/intel_start_end_params'
        - name: ipv4
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: number
            description: Requested page within paginated list of results.
            example: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of results requested.
            example: 20
      responses:
        '200':
          description: Get Passive DNS by IP response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_components-schemas-single_response'
        4XX:
          description: Get Passive DNS by IP response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/intel_components-schemas-single_response
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/domain:
    get:
      tags:
        - Accounts
        - Details
        - Domains
        - Intelligence
      summary: 'Get Domain Details '
      operationId: domain-intelligence-get-domain-details
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: domain
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Get Domain Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_single_response'
        4XX:
          description: Get Domain Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_single_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/domain-history:
    get:
      tags:
        - Accounts
        - Domains
        - History
        - Intelligence
      summary: 'Get Domain History '
      operationId: domain-history-get-domain-history
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: domain
          in: query
          schema:
            example: example.com
      responses:
        '200':
          description: Get Domain History response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_response'
        4XX:
          description: Get Domain History response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/domain/bulk:
    get:
      tags:
        - Accounts
        - Bulk
        - Details
        - Domains
        - Intelligence
        - Multiple
      summary: 'Get Multiple Domain Details '
      operationId: domain-intelligence-get-multiple-domain-details
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: domain
          in: query
          schema:
            description: >-
              Accepts multiple values, i.e.
              `?domain=cloudflare.com&domain=example.com`.
      responses:
        '200':
          description: Get Multiple Domain Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_collection_response'
        4XX:
          description: Get Multiple Domain Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_collection_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/indicator-feeds:
    get:
      tags:
        - Accounts
        - Feeds
        - Indicators
        - Intelligence
        - Owned
      summary: 'Get Indicator Feeds Owned By This Account '
      operationId: custom-indicator-feeds-get-indicator-feeds
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      responses:
        '200':
          description: Get indicator feeds response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_indicator_feed_response'
        4XX:
          description: Get indicator feeds response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_indicator_feed_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Feeds
        - Indicators
        - Intelligence
      summary: 'Create New Indicator Feed '
      operationId: custom-indicator-feeds-create-indicator-feeds
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/intel_create_feed'
      responses:
        '200':
          description: Create indicator feed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_create_feed_response'
        4XX:
          description: Get indicator feeds failure response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_create_feed_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/indicator-feeds/{feed_id}:
    get:
      tags:
        - Accounts
        - Feeds
        - Indicators
        - Intelligence
        - Metadata
      summary: 'Get Indicator Feed Metadata '
      operationId: custom-indicator-feeds-get-indicator-feed-metadata
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: feed_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_feed_id'
      responses:
        '200':
          description: Get indicator feed metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_indicator_feed_metadata_response'
        4XX:
          description: Get indicator feeds response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/intel_indicator_feed_metadata_response
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/indicator-feeds/{feed_id}/data:
    get:
      tags:
        - Accounts
        - Data
        - Feeds
        - Indicators
        - Intelligence
      summary: 'Get Indicator Feed Data '
      operationId: custom-indicator-feeds-get-indicator-feed-data
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: feed_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_feed_id'
      responses:
        '200':
          description: Get indicator feed metadata
          content:
            text/csv:
              schema:
                type: string
        4XX:
          description: Get indicator feeds response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/indicator-feeds/{feed_id}/snapshot:
    put:
      tags:
        - Accounts
        - Data
        - Feeds
        - Indicators
        - Intelligence
        - Snapshots
      summary: 'Update Indicator Feed Data '
      operationId: custom-indicator-feeds-update-indicator-feed-data
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: feed_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_feed_id'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                source:
                  type: string
                  description: The file to upload
                  example: '@/Users/me/test.stix2'
      responses:
        '200':
          description: Get indicator feed metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_update_feed_response'
        4XX:
          description: Get indicator feeds response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/indicator-feeds/permissions/add:
    put:
      tags:
        - Accounts
        - Feeds
        - Grants""
        - Indicators
        - Intelligence
        - Permission
        - Permissions
      summary: 'Grant Permission To Indicator Feed '
      operationId: custom-indicator-feeds-add-permission
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/intel_permissions-request'
      responses:
        '200':
          description: Get indicator feed metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_permissions_response'
        4XX:
          description: Get indicator feeds response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_permissions_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/indicator-feeds/permissions/remove:
    put:
      tags:
        - Accounts
        - Feeds
        - Indicators
        - Intelligence
        - Permission
        - Permissions
        - Removes
        - Revoke
      summary: 'Revoke Permission To Indicator Feed '
      operationId: custom-indicator-feeds-remove-permission
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/intel_permissions-request'
      responses:
        '200':
          description: Get indicator feed metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_permissions_response'
        4XX:
          description: Get indicator feeds response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_permissions_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/indicator-feeds/permissions/view:
    get:
      tags:
        - Accounts
        - Feeds
        - Indicators
        - Intelligence
        - Permissions
        - View
      summary: 'List Indicator Feed Permissions '
      operationId: custom-indicator-feeds-view-permissions
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      responses:
        '200':
          description: Get indicator feed metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_permission_list_item_response'
        4XX:
          description: Get indicator feeds response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_permission_list_item_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/ip:
    get:
      tags:
        - Accounts
        - IP
        - Intelligence
        - Overview
      summary: 'Get IP Overview '
      operationId: ip-intelligence-get-ip-overview
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: ipv4
          in: query
          schema:
            type: string
        - name: ipv6
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Get IP Overview response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_schemas-response'
        4XX:
          description: Get IP Overview response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_schemas-response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/ip-list:
    get:
      tags:
        - Accounts
        - IP
        - Intelligence
      summary: 'Get IP Lists '
      operationId: ip-list-get-ip-lists
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      responses:
        '200':
          description: Get IP Lists response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_components-schemas-response'
        4XX:
          description: Get IP Lists response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_components-schemas-response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/miscategorization:
    post:
      tags:
        - Accounts
        - Intelligence
        - Miscategorization
      summary: 'Create Miscategorization '
      operationId: miscategorization-create-miscategorization
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/intel_miscategorization'
      responses:
        '200':
          description: Create Miscategorization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_api-response-single'
        4XX:
          description: Create Miscategorization response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_api-response-single'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/sinkholes:
    get:
      tags:
        - Accounts
        - Intelligence
        - Owned
        - Sinkholes
      summary: 'List Sinkholes Owned By This Account '
      operationId: sinkhole-config-get-sinkholes
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel-sinkholes_identifier'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel-sinkholes_get_sinkholes_response'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/intel/whois:
    get:
      tags:
        - Accounts
        - Intelligence
        - Record
        - WHOIS
        - Whois
      summary: 'Get WHOIS Record '
      operationId: whois-record-get-whois-record
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/intel_identifier'
        - name: domain
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Get WHOIS Record response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/intel_schemas-single_response'
        4XX:
          description: Get WHOIS Record response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/intel_schemas-single_response'
                  - $ref: '#/components/schemas/intel_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/load_balancers/monitors:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Monitors
      summary: 'List Monitors '
      description: List configured monitors for an account.
      operationId: account-load-balancer-monitors-list-monitors
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: List Monitors response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_monitor-response-collection
        4XX:
          description: List Monitors response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_monitor-response-collection
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Balancers
        - Load
        - Monitors
      summary: 'Create Monitor '
      description: Create a configured monitor.
      operationId: account-load-balancer-monitors-create-monitor
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/load-balancing_monitor-editable'
                - required:
                    - expected_codes
      responses:
        '200':
          description: Create Monitor response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_monitor-response-single'
        4XX:
          description: Create Monitor response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_monitor-response-single
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/monitors/{monitor_id}:
    delete:
      tags:
        - Accounts
        - Balancers
        - Load
        - Monitors
      summary: 'Delete Monitor '
      description: Delete a configured monitor.
      operationId: account-load-balancer-monitors-delete-monitor
      parameters:
        - name: monitor_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Monitor response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_id_response'
        4XX:
          description: Delete Monitor response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/load-balancing_id_response'
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Balancers
        - Details
        - Load
        - Monitors
      summary: 'Monitor Details '
      description: List a single configured monitor for an account.
      operationId: account-load-balancer-monitors-monitor-details
      parameters:
        - name: monitor_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: Monitor Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_monitor-response-single'
        4XX:
          description: Monitor Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_monitor-response-single
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Accounts
        - Balancers
        - Load
        - Monitors
        - Patch
      summary: 'Patch Monitor '
      description: >-
        Apply changes to an existing monitor, overwriting the supplied
        properties.
      operationId: account-load-balancer-monitors-patch-monitor
      parameters:
        - name: monitor_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/load-balancing_monitor-editable'
                - required:
                    - expected_codes
      responses:
        '200':
          description: Patch Monitor response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_monitor-response-single'
        4XX:
          description: Patch Monitor response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_monitor-response-single
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Balancers
        - Load
        - Monitors
      summary: 'Update Monitor '
      description: Modify a configured monitor.
      operationId: account-load-balancer-monitors-update-monitor
      parameters:
        - name: monitor_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/load-balancing_monitor-editable'
                - required:
                    - expected_codes
      responses:
        '200':
          description: Update Monitor response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_monitor-response-single'
        4XX:
          description: Update Monitor response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_monitor-response-single
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/monitors/{monitor_id}/preview:
    post:
      tags:
        - Accounts
        - Balancers
        - Load
        - Monitors
        - Previews
      summary: 'Preview Monitor '
      description: >-
        Preview pools using the specified monitor with provided monitor details.
        The returned preview_id can be used in the preview endpoint to retrieve
        the results.
      operationId: account-load-balancer-monitors-preview-monitor
      parameters:
        - name: monitor_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/load-balancing_monitor-editable'
                - required:
                    - expected_codes
      responses:
        '200':
          description: Preview Monitor response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_preview_response'
        4XX:
          description: Preview Monitor response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/load-balancing_preview_response'
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/monitors/{monitor_id}/references:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Monitors
        - References
      summary: 'List Monitor References '
      description: Get the list of resources that reference the provided monitor.
      operationId: account-load-balancer-monitors-list-monitor-references
      parameters:
        - name: monitor_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: List Monitor References response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_references_response'
        4XX:
          description: List Monitor References response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/load-balancing_references_response'
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/pools:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Pools
      summary: 'List Pools '
      description: List configured pools.
      operationId: account-load-balancer-pools-list-pools
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
        - name: monitor
          in: query
          schema:
            description: >-
              The ID of the Monitor to use for checking the health of origins
              within this pool.
      responses:
        '200':
          description: List Pools response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_schemas-response_collection
        4XX:
          description: List Pools response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_schemas-response_collection
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Accounts
        - Balancers
        - Load
        - Patch
        - Pools
      summary: 'Patch Pools '
      description: >-
        Apply changes to a number of existing pools, overwriting the supplied
        properties. Pools are ordered by ascending `name`. Returns the list of
        affected pools. Supports the standard pagination query parameters,
        either `limit`/`offset` or `per_page`/`page`.
      operationId: account-load-balancer-pools-patch-pools
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                notification_email:
                  $ref: >-
                    #/components/schemas/load-balancing_patch_pools_notification_email
      responses:
        '200':
          description: Patch Pools response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_schemas-response_collection
        4XX:
          description: Patch Pools response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_schemas-response_collection
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Balancers
        - Load
        - Pools
      summary: 'Create Pool '
      description: Create a new pool.
      operationId: account-load-balancer-pools-create-pool
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - origins
                - name
              properties:
                description:
                  $ref: '#/components/schemas/load-balancing_schemas-description'
                enabled:
                  $ref: '#/components/schemas/load-balancing_enabled'
                latitude:
                  $ref: '#/components/schemas/load-balancing_latitude'
                load_shedding:
                  $ref: '#/components/schemas/load-balancing_load_shedding'
                longitude:
                  $ref: '#/components/schemas/load-balancing_longitude'
                minimum_origins:
                  $ref: '#/components/schemas/load-balancing_minimum_origins'
                monitor:
                  $ref: '#/components/schemas/load-balancing_monitor_id'
                name:
                  $ref: '#/components/schemas/load-balancing_name'
                notification_email:
                  $ref: '#/components/schemas/load-balancing_notification_email'
                notification_filter:
                  $ref: '#/components/schemas/load-balancing_notification_filter'
                origin_steering:
                  $ref: '#/components/schemas/load-balancing_origin_steering'
                origins:
                  $ref: '#/components/schemas/load-balancing_origins'
      responses:
        '200':
          description: Create Pool response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_schemas-single_response'
        4XX:
          description: Create Pool response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/pools/{pool_id}:
    delete:
      tags:
        - Accounts
        - Balancers
        - Load
        - Pools
      summary: 'Delete Pool '
      description: Delete a configured pool.
      operationId: account-load-balancer-pools-delete-pool
      parameters:
        - name: pool_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Pool response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_schemas-id_response'
        4XX:
          description: Delete Pool response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/load-balancing_schemas-id_response'
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Balancers
        - Details
        - Load
        - Pools
      summary: 'Pool Details '
      description: Fetch a single configured pool.
      operationId: account-load-balancer-pools-pool-details
      parameters:
        - name: pool_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: Pool Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_schemas-single_response'
        4XX:
          description: Pool Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Accounts
        - Balancers
        - Load
        - Patch
        - Pools
      summary: 'Patch Pool '
      description: Apply changes to an existing pool, overwriting the supplied properties.
      operationId: account-load-balancer-pools-patch-pool
      parameters:
        - name: pool_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                check_regions:
                  $ref: '#/components/schemas/load-balancing_check_regions'
                description:
                  $ref: '#/components/schemas/load-balancing_schemas-description'
                disabled_at:
                  $ref: '#/components/schemas/load-balancing_schemas-disabled_at'
                enabled:
                  $ref: '#/components/schemas/load-balancing_enabled'
                latitude:
                  $ref: '#/components/schemas/load-balancing_latitude'
                load_shedding:
                  $ref: '#/components/schemas/load-balancing_load_shedding'
                longitude:
                  $ref: '#/components/schemas/load-balancing_longitude'
                minimum_origins:
                  $ref: '#/components/schemas/load-balancing_minimum_origins'
                monitor:
                  $ref: '#/components/schemas/load-balancing_monitor_id'
                name:
                  $ref: '#/components/schemas/load-balancing_name'
                notification_email:
                  $ref: '#/components/schemas/load-balancing_notification_email'
                notification_filter:
                  $ref: '#/components/schemas/load-balancing_notification_filter'
                origin_steering:
                  $ref: '#/components/schemas/load-balancing_origin_steering'
                origins:
                  $ref: '#/components/schemas/load-balancing_origins'
      responses:
        '200':
          description: Patch Pool response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_schemas-single_response'
        4XX:
          description: Patch Pool response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Balancers
        - Load
        - Pools
      summary: 'Update Pool '
      description: Modify a configured pool.
      operationId: account-load-balancer-pools-update-pool
      parameters:
        - name: pool_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - origins
                - name
              properties:
                check_regions:
                  $ref: '#/components/schemas/load-balancing_check_regions'
                description:
                  $ref: '#/components/schemas/load-balancing_schemas-description'
                disabled_at:
                  $ref: '#/components/schemas/load-balancing_schemas-disabled_at'
                enabled:
                  $ref: '#/components/schemas/load-balancing_enabled'
                latitude:
                  $ref: '#/components/schemas/load-balancing_latitude'
                load_shedding:
                  $ref: '#/components/schemas/load-balancing_load_shedding'
                longitude:
                  $ref: '#/components/schemas/load-balancing_longitude'
                minimum_origins:
                  $ref: '#/components/schemas/load-balancing_minimum_origins'
                monitor:
                  $ref: '#/components/schemas/load-balancing_monitor_id'
                name:
                  $ref: '#/components/schemas/load-balancing_name'
                notification_email:
                  $ref: '#/components/schemas/load-balancing_notification_email'
                notification_filter:
                  $ref: '#/components/schemas/load-balancing_notification_filter'
                origin_steering:
                  $ref: '#/components/schemas/load-balancing_origin_steering'
                origins:
                  $ref: '#/components/schemas/load-balancing_origins'
      responses:
        '200':
          description: Update Pool response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_schemas-single_response'
        4XX:
          description: Update Pool response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/pools/{pool_id}/health:
    get:
      tags:
        - Accounts
        - Balancers
        - Details
        - Health
        - Load
        - Pools
      summary: 'Pool Health Details '
      description: Fetch the latest pool health status for a single pool.
      operationId: account-load-balancer-pools-pool-health-details
      parameters:
        - name: pool_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: Pool Health Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_health_details'
        4XX:
          description: Pool Health Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/load-balancing_health_details'
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/pools/{pool_id}/preview:
    post:
      tags:
        - Accounts
        - Balancers
        - Load
        - Pools
        - Previews
      summary: 'Preview Pool '
      description: >-
        Preview pool health using provided monitor details. The returned
        preview_id can be used in the preview endpoint to retrieve the results.
      operationId: account-load-balancer-pools-preview-pool
      parameters:
        - name: pool_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/load-balancing_monitor-editable'
                - required:
                    - expected_codes
      responses:
        '200':
          description: Preview Pool response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_preview_response'
        4XX:
          description: Preview Pool response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/load-balancing_preview_response'
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/pools/{pool_id}/references:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Pools
        - References
      summary: 'List Pool References '
      description: Get the list of resources that reference the provided pool.
      operationId: account-load-balancer-pools-list-pool-references
      parameters:
        - name: pool_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: List Pool References response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_schemas-references_response
        4XX:
          description: List Pool References response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_schemas-references_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/preview/{preview_id}:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Previews
        - Results
      summary: 'Preview Result '
      description: >-
        Get the result of a previous preview operation using the provided
        preview_id.
      operationId: account-load-balancer-monitors-preview-result
      parameters:
        - name: preview_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_schemas-preview_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: Preview Result response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/load-balancing_preview_result_response'
        4XX:
          description: Preview Result response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_preview_result_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/regions:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Regions
      summary: 'List Regions '
      description: List all region mappings.
      operationId: load-balancer-regions-list-regions
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
        - name: subdivision_code
          in: query
          schema:
            $ref: '#/components/schemas/load-balancing_subdivision_code_a2'
        - name: subdivision_code_a2
          in: query
          schema:
            $ref: '#/components/schemas/load-balancing_subdivision_code_a2'
        - name: country_code_a2
          in: query
          schema:
            type: string
            description: Two-letter alpha-2 country code followed in ISO 3166-1.
            example: US
      responses:
        '200':
          description: List Regions response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_region_components-schemas-response_collection
        4XX:
          description: List Regions response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_region_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/regions/{region_id}:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Regions
      summary: 'Get Region '
      description: Get a single region mapping.
      operationId: load-balancer-regions-get-region
      parameters:
        - name: region_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_region_code'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
      responses:
        '200':
          description: Get Region response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/load-balancing_components-schemas-single_response
        4XX:
          description: Get Region response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/load_balancers/search:
    get:
      tags:
        - Accounts
        - Balancers
        - Load
        - Resources
        - Search
      summary: 'Search Resources '
      description: Search for Load Balancing resources.
      operationId: account-load-balancer-search-search-resources
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/load-balancing_components-schemas-identifier'
        - name: search_params
          in: query
          schema:
            $ref: '#/components/schemas/load-balancing_search_params'
        - name: page
          in: query
          schema:
            minimum: 1
        - name: per_page
          in: query
          schema:
            default: 25
            minimum: 1
            maximum: 1000
      responses:
        '200':
          description: Search Resources response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-collection
                  - $ref: '#/components/schemas/load-balancing_search_result'
        4XX:
          description: Search Resources response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/load-balancing_api-response-collection
                      - $ref: '#/components/schemas/load-balancing_search_result'
                  - $ref: >-
                      #/components/schemas/load-balancing_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/logpush/datasets/{dataset_id}/fields:
    get:
      tags:
        - Accounts
        - Datasets
        - Fields
        - Log Push
      summary: 'List Fields '
      description: >-
        Lists all fields available for a dataset. The response result is an
        object with key-value pairs, where keys are field names, and values are
        descriptions.
      operationId: get-accounts-account_identifier-logpush-datasets-dataset-fields
      parameters:
        - name: dataset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_dataset'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: List fields response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_field_response_collection'
        4XX:
          description: List fields response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_logpush_field_response_collection
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logpush/datasets/{dataset_id}/jobs:
    get:
      tags:
        - Accounts
        - Datasets
        - Jobs
        - Log Push
      summary: 'List Logpush Jobs For A Dataset '
      description: Lists Logpush jobs for an account for a dataset.
      operationId: get-accounts-account_identifier-logpush-datasets-dataset-jobs
      parameters:
        - name: dataset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_dataset'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: List Logpush jobs for a dataset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_collection'
        4XX:
          description: List Logpush jobs for a dataset response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_logpush_job_response_collection
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logpush/jobs:
    get:
      tags:
        - Accounts
        - Jobs
        - Log Push
      summary: 'List Logpush Jobs '
      description: Lists Logpush jobs for an account.
      operationId: get-accounts-account_identifier-logpush-jobs
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: List Logpush jobs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_collection'
        4XX:
          description: List Logpush jobs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logpush_logpush_job_response_collection
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Jobs
        - Log Push
      summary: 'Create Logpush Job '
      description: Creates a new Logpush job for an account.
      operationId: post-accounts-account_identifier-logpush-jobs
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
              properties:
                dataset:
                  $ref: '#/components/schemas/logpush_dataset'
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
                enabled:
                  $ref: '#/components/schemas/logpush_enabled'
                frequency:
                  $ref: '#/components/schemas/logpush_frequency'
                logpull_options:
                  $ref: '#/components/schemas/logpush_logpull_options'
                name:
                  $ref: '#/components/schemas/logpush_name'
                output_options:
                  $ref: '#/components/schemas/logpush_output_options'
                ownership_challenge:
                  $ref: '#/components/schemas/logpush_ownership_challenge'
      responses:
        '200':
          description: Create Logpush job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_single'
        4XX:
          description: Create Logpush job response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_logpush_job_response_single'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logpush/jobs/{job_id}:
    delete:
      tags:
        - Accounts
        - Jobs
        - Log Push
      summary: 'Delete Logpush Job '
      description: Deletes a Logpush job.
      operationId: delete-accounts-account_identifier-logpush-jobs-job_identifier
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Logpush job response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_api-response-common'
                  - properties:
                      result:
                        type: object
                        example: {}
                        nullable: true
        4XX:
          description: Delete Logpush job response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/logpush_api-response-common'
                      - properties:
                          result:
                            type: object
                            example: {}
                            nullable: true
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Jobs
        - Log Push
      summary: 'Get Logpush Job Details '
      description: Gets the details of a Logpush job.
      operationId: get-accounts-account_identifier-logpush-jobs-job_identifier
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      responses:
        '200':
          description: Get Logpush job details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_single'
        4XX:
          description: Get Logpush job details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_logpush_job_response_single'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Jobs
        - Log Push
      summary: 'Update Logpush Job '
      description: Updates a Logpush job.
      operationId: put-accounts-account_identifier-logpush-jobs-job_identifier
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
                enabled:
                  $ref: '#/components/schemas/logpush_enabled'
                frequency:
                  $ref: '#/components/schemas/logpush_frequency'
                logpull_options:
                  $ref: '#/components/schemas/logpush_logpull_options'
                output_options:
                  $ref: '#/components/schemas/logpush_output_options'
                ownership_challenge:
                  $ref: '#/components/schemas/logpush_ownership_challenge'
      responses:
        '200':
          description: Update Logpush job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_logpush_job_response_single'
        4XX:
          description: Update Logpush job response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_logpush_job_response_single'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logpush/ownership:
    post:
      tags:
        - Accounts
        - Challenges
        - Log Push
        - Ownership
      summary: 'Get Ownership Challenge '
      description: Gets a new ownership challenge sent to your destination.
      operationId: post-accounts-account_identifier-logpush-ownership
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
      responses:
        '200':
          description: Get ownership challenge response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_get_ownership_response'
        4XX:
          description: Get ownership challenge response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_get_ownership_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logpush/ownership/validate:
    post:
      tags:
        - Accounts
        - Ate
        - Challenges
        - Log Push
        - Ownership
        - Val
        - Validate
      summary: 'Validate Ownership Challenge '
      description: Validates ownership challenge of the destination.
      operationId: post-accounts-account_identifier-logpush-ownership-validate
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
                - ownership_challenge
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
                ownership_challenge:
                  $ref: '#/components/schemas/logpush_ownership_challenge'
      responses:
        '200':
          description: Validate ownership challenge response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_validate_ownership_response'
        4XX:
          description: Validate ownership challenge response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_validate_ownership_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logpush/validate/destination/exists:
    post:
      tags:
        - Accounts
        - Ate
        - Checks
        - Destinations
        - Exists
        - Log Push
        - Val
      summary: 'Check Destination Exists '
      description: Checks if there is an existing job with a destination.
      operationId: delete-accounts-account_identifier-logpush-validate-destination-exists
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - destination_conf
              properties:
                destination_conf:
                  $ref: '#/components/schemas/logpush_destination_conf'
      responses:
        '200':
          description: Check destination exists response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_destination_exists_response'
        4XX:
          description: Check destination exists response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_destination_exists_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logpush/validate/origin:
    post:
      tags:
        - Accounts
        - Ate
        - Log Push
        - Origin
        - Val
        - Validate
      summary: 'Validate Origin '
      description: Validates logpull origin with logpull_options.
      operationId: post-accounts-account_identifier-logpush-validate-origin
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logpush_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - logpull_options
              properties:
                logpull_options:
                  $ref: '#/components/schemas/logpush_logpull_options'
      responses:
        '200':
          description: Validate origin response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logpush_validate_response'
        4XX:
          description: Validate origin response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logpush_validate_response'
                  - $ref: '#/components/schemas/logpush_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/logs/control/cmb/config:
    delete:
      tags:
        - Accounts
        - CMB
        - Configurations
        - Controls
        - Logs
      summary: 'Delete CMB Config '
      description: Deletes CMB config.
      operationId: delete-accounts-account_identifier-logs-control-cmb-config
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logcontrol_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete CMB config response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/logcontrol_api-response-common'
                  - properties:
                      result:
                        type: object
                        example: {}
                        nullable: true
        4XX:
          description: Delete CMB config response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/logcontrol_api-response-common'
                      - properties:
                          result:
                            type: object
                            example: {}
                            nullable: true
                  - $ref: >-
                      #/components/schemas/logcontrol_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - CMB
        - Configurations
        - Controls
        - Logs
      summary: 'Get CMB Config '
      description: Gets CMB config.
      operationId: get-accounts-account_identifier-logs-control-cmb-config
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logcontrol_identifier'
      responses:
        '200':
          description: Get CMB config response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logcontrol_cmb_config_response_single'
        4XX:
          description: Get CMB config response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logcontrol_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - CMB
        - Configurations
        - Controls
        - Logs
      summary: 'Update CMB Config '
      description: Updates CMB config.
      operationId: put-accounts-account_identifier-logs-control-cmb-config
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/logcontrol_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logcontrol_cmb_config'
      responses:
        '200':
          description: Update CMB config response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logcontrol_cmb_config_response_single'
        4XX:
          description: Update CMB config response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/logcontrol_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/members:
    get:
      tags:
        - Accounts
        - Members
      summary: 'List Members '
      description: List all members of an account.
      operationId: account-members-list-members
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
        - name: order
          in: query
          schema:
            description: Field to order results by.
            enum:
              - user.first_name
              - user.last_name
              - user.email
              - status
            example: status
        - name: status
          in: query
          schema:
            type: string
            description: A member's status in the account.
            enum:
              - accepted
              - pending
              - rejected
            example: accepted
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of results per page.
            default: 20
            minimum: 5
            maximum: 50
        - name: direction
          in: query
          schema:
            type: string
            description: Direction to order results.
            enum:
              - asc
              - desc
            example: desc
      responses:
        '200':
          description: List Members response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_collection_member_response'
        4XX:
          description: List Members response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_collection'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Members
      summary: 'Add Member '
      description: Add a user to the list of members for this account.
      operationId: account-members-add-member
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_create'
      responses:
        '200':
          description: Add Member response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_single_member_response_with_code'
        4XX:
          description: Add Member response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_single'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/members/{member_id}:
    delete:
      tags:
        - Accounts
        - Members
        - Removes
      summary: 'Remove Member '
      description: Remove a member from an account.
      operationId: account-members-remove-member
      parameters:
        - name: member_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Remove Member response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_api-response-single-id'
        4XX:
          description: Remove Member response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_api-response-single-id'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Members
      summary: 'Member Details '
      description: Get information about a specific member of an account.
      operationId: account-members-member-details
      parameters:
        - name: member_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      responses:
        '200':
          description: Member Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_single_member_response'
        4XX:
          description: Member Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_single'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Members
      summary: 'Update Member '
      description: Modify an account member.
      operationId: account-members-update-member
      parameters:
        - name: member_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_membership_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/iam_schemas-member'
      responses:
        '200':
          description: Update Member response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_single_member_response'
        4XX:
          description: Update Member response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_single'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/mtls_certificates:
    get:
      tags:
        - Accounts
        - Certificates
        - Mtls
        - TLS
      summary: 'List M TLS Certificates '
      description: Lists all mTLS certificates.
      operationId: m-tls-certificate-management-list-m-tls-certificates
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: List mTLS certificates response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_collection
        4XX:
          description: List mTLS certificates response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Certificates
        - Mtls
        - TLS
        - Uploads
      summary: 'Upload M TLS Certificate '
      description: >-
        Upload a certificate that you want to use with mTLS-enabled Cloudflare
        services.
      operationId: m-tls-certificate-management-upload-m-tls-certificate
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - certificates
                - ca
              properties:
                ca:
                  $ref: '#/components/schemas/tls-certificates-and-hostnames_ca'
                certificates:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-certificates
                name:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_schemas-name
                private_key:
                  $ref: >-
                    #/components/schemas/tls-certificates-and-hostnames_components-schemas-private_key
      responses:
        '200':
          description: Upload mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_certificate_response_single_post
        4XX:
          description: Upload mTLS certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_certificate_response_single_post
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/mtls_certificates/{mtls_certificate_id}:
    delete:
      tags:
        - Accounts
        - Certificates
        - Mtls
        - TLS
      summary: 'Delete M TLS Certificate '
      description: >-
        Deletes the mTLS certificate unless the certificate is in use by one or
        more Cloudflare services.
      operationId: m-tls-certificate-management-delete-m-tls-certificate
      parameters:
        - name: mtls_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
        4XX:
          description: Delete mTLS certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Certificates
        - Mtls
        - TLS
      summary: 'Get M TLS Certificate '
      description: Fetches a single mTLS certificate.
      operationId: m-tls-certificate-management-get-m-tls-certificate
      parameters:
        - name: mtls_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: Get mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
        4XX:
          description: Get mTLS certificate response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_mtls-management_components-schemas-certificate_response_single
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/mtls_certificates/{mtls_certificate_id}/associations:
    get:
      tags:
        - Accounts
        - Associations
        - Certificates
        - Mtls
        - TLS
      summary: 'List M TLS Certificate Associations '
      description: >-
        Lists all active associations between the certificate and Cloudflare
        services.
      operationId: m-tls-certificate-management-list-m-tls-certificate-associations
      parameters:
        - name: mtls_certificate_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tls-certificates-and-hostnames_identifier'
      responses:
        '200':
          description: List mTLS certificate associations response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tls-certificates-and-hostnames_association_response_collection
        4XX:
          description: List mTLS certificate associations response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_association_response_collection
                  - $ref: >-
                      #/components/schemas/tls-certificates-and-hostnames_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects:
    get:
      tags:
        - Accounts
        - Pages
        - Projects
      summary: 'Get Projects '
      description: Fetch a list of all user projects.
      operationId: pages-project-get-projects
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Get projects response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_projects-response'
        4XX:
          description: Get projects response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_projects-response'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Pages
        - Projects
      summary: 'Create Project '
      description: Create a new project.
      operationId: pages-project-create-project
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pages_projects'
      responses:
        '200':
          description: Create project response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_new-project-response'
        4XX:
          description: Create project response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_new-project-response'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}:
    delete:
      tags:
        - Accounts
        - Names
        - Pages
        - Projects
      summary: 'Delete Project '
      description: Delete a project by name.
      operationId: pages-project-delete-project
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete project response.
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result: null
                  success: true
        4XX:
          description: Delete project response failure.
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result: null
                      success: true
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Names
        - Pages
        - Projects
      summary: 'Get Project '
      description: Fetch a project by name.
      operationId: pages-project-get-project
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Get project response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_project-response'
        4XX:
          description: Get project response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_project-response'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Names
        - Pages
        - Projects
      summary: 'Update Project '
      description: >-
        Set new attributes for an existing project. Modify environment
        variables. To delete an environment variable, set the key to null.
      operationId: pages-project-update-project
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pages_project-patch'
      responses:
        '200':
          description: Update project response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_new-project-response'
        4XX:
          description: Update project response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_new-project-response'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/deployments:
    get:
      tags:
        - Accounts
        - Deployments
        - Names
        - Pages
        - Projects
      summary: 'Get Deployments '
      description: Fetch a list of project deployments.
      operationId: pages-deployment-get-deployments
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Get deployments response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_deployment-list-response'
        4XX:
          description: Get deployments response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_deployment-list-response'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Deployments
        - Names
        - Pages
        - Projects
      summary: 'Create Deployment '
      description: >-
        Start a new deployment from production. The repository and account must
        have already been authorized on the Cloudflare Pages dashboard.
      operationId: pages-deployment-create-deployment
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                branch:
                  type: string
                  description: >-
                    The branch to build the new deployment from. The `HEAD` of
                    the branch will be used. If omitted, the production branch
                    will be used by default.
                  example: staging
      responses:
        '200':
          description: Create deployment response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_deployment-new-deployment'
        4XX:
          description: Create deployment response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_deployment-new-deployment'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/deployments/{deployment_id}:
    delete:
      tags:
        - Accounts
        - Deployments
        - Names
        - Pages
        - Projects
      summary: 'Delete Deployment '
      description: Delete a deployment.
      operationId: pages-deployment-delete-deployment
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete deployment response.
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result: null
                  success: true
        4XX:
          description: Delete deployment response failure.
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result: null
                      success: true
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Deployments
        - Info
        - Names
        - Pages
        - Projects
      summary: 'Get Deployment Info '
      description: Fetch information about a deployment.
      operationId: pages-deployment-get-deployment-info
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Get deployment info response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_deployment-response-details'
        4XX:
          description: Get deployment info response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_deployment-response-details'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/deployments/{deployment_id}/history/logs:
    get:
      tags:
        - Accounts
        - Deployments
        - History
        - Logs
        - Names
        - Pages
        - Projects
      summary: 'Get Deployment Logs '
      description: Fetch deployment logs for a project.
      operationId: pages-deployment-get-deployment-logs
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Get deployment logs response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_deployment-response-logs'
        4XX:
          description: Get deployment logs response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_deployment-response-logs'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/deployments/{deployment_id}/retry:
    post:
      tags:
        - Accounts
        - Deployments
        - Names
        - Pages
        - Projects
        - Retry
      summary: 'Retry Deployment '
      description: Retry a previous deployment.
      operationId: pages-deployment-retry-deployment
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Retry deployment response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_deployment-new-deployment'
        4XX:
          description: Retry deployment response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_deployment-new-deployment'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/deployments/{deployment_id}/rollback:
    post:
      tags:
        - Accounts
        - Deployments
        - Names
        - Pages
        - Projects
        - Rollback
      summary: 'Rollback Deployment '
      description: >-
        Rollback the production deployment to a previous deployment. You can
        only rollback to succesful builds on production.
      operationId: pages-deployment-rollback-deployment
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Rollback deployment response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_deployment-response-details'
        4XX:
          description: Rollback deployment response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_deployment-response-details'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/domains:
    get:
      tags:
        - Accounts
        - Domains
        - Names
        - Pages
        - Projects
      summary: 'Get Domains '
      description: Fetch a list of all domains associated with a Pages project.
      operationId: pages-domains-get-domains
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Get domains response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_domain-response-collection'
        4XX:
          description: Get domains response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_domain-response-collection'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Domains
        - Names
        - Pages
        - Projects
      summary: 'Add Domain '
      description: Add a new domain for the Pages project.
      operationId: pages-domains-add-domain
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pages_domains-post'
      responses:
        '200':
          description: Add domain response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_domain-response-single'
        4XX:
          description: Add domain response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_domain-response-single'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/domains/{domain_name}:
    delete:
      tags:
        - Accounts
        - Domains
        - Names
        - Pages
        - Projects
      summary: 'Delete Domain '
      description: Delete a Pages project's domain.
      operationId: pages-domains-delete-domain
      parameters:
        - name: domain_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_domain_name'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete domain response.
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result: null
                  success: true
        4xx:
          description: Delete domain response failure.
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result: null
                      success: true
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Domains
        - Names
        - Pages
        - Projects
      summary: 'Get Domain '
      description: Fetch a single domain.
      operationId: pages-domains-get-domain
      parameters:
        - name: domain_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_domain_name'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Get domain response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_domain-response-single'
        4XX:
          description: Get domain response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_domain-response-single'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Domains
        - Names
        - Pages
        - Patch
        - Projects
      summary: 'Patch Domain '
      description: Retry the validation status of a single domain.
      operationId: pages-domains-patch-domain
      parameters:
        - name: domain_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_domain_name'
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Patch domain response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages_domain-response-single'
        4XX:
          description: Patch domain response failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_domain-response-single'
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pages/projects/{project_name}/purge_build_cache:
    post:
      tags:
        - Accounts
        - Build
        - Cache
        - Names
        - Pages
        - Projects
        - Purge
      summary: 'Purge Build Cache '
      description: Purge all cached build artifacts for a Pages project
      operationId: pages-purge-build-cache
      parameters:
        - name: project_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_project_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/pages_identifier'
      responses:
        '200':
          description: Purge build cache response.
          content:
            application/json:
              schema:
                example:
                  errors: []
                  messages: []
                  result: null
                  success: true
        4XX:
          description: Purge build cache failure.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/pages_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pcaps:
    get:
      tags:
        - Accounts
        - Capture
        - Packets
      summary: 'List Packet Capture Requests '
      description: Lists all packet capture requests for an account.
      operationId: magic-pcap-collection-list-packet-capture-requests
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      responses:
        '200':
          description: List packet capture requests response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_pcaps_collection_response
        default:
          description: List packet capture requests response failure
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_pcaps_collection_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - PCAP
      summary: 'Create PCAP Request '
      description: Create new PCAP request for account.
      operationId: magic-pcap-collection-create-pcap-request
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic-visibility_pcaps_request_pcap'
      responses:
        '200':
          description: Create PCAP request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic-visibility_pcaps_single_response'
        default:
          description: Create PCAP request response failure
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_pcaps_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pcaps/{pcap_id}:
    get:
      tags:
        - Accounts
        - PCAP
        - Pcap
      summary: 'Get PCAP Request '
      description: Get information for a PCAP request by id.
      operationId: magic-pcap-collection-get-pcap-request
      parameters:
        - name: pcap_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      responses:
        '200':
          description: Get PCAP request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic-visibility_pcaps_single_response'
        default:
          description: Get PCAP request response failure
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_pcaps_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pcaps/{pcap_id}/download:
    get:
      tags:
        - Accounts
        - Download
        - PCAP
        - Pcap
        - Simple
      summary: 'Download Simple PCAP '
      description: Download PCAP information into a file. Response is a binary PCAP file.
      operationId: magic-pcap-collection-download-simple-pcap
      parameters:
        - name: pcap_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      responses:
        '200':
          description: Download Simple PCAP response
          content:
            application/vnd.tcpdump.pcap: {}
        default:
          description: Download Simple PCAP response failure
          content:
            application/json: {}
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pcaps/ownership:
    get:
      tags:
        - Accounts
        - Buckets
        - Ownership
        - PCAPs
      summary: 'List PCAPs Bucket Ownership '
      description: List all buckets configured for use with PCAPs API.
      operationId: magic-pcap-collection-list-pca-ps-bucket-ownership
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      responses:
        '200':
          description: List PCAPs Bucket Ownership response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_pcaps_ownership_collection
        default:
          description: List PCAPs Bucket Ownership response failure
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_pcaps_ownership_collection
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Buckets
        - Captures
        - Ownership
        - Packets
      summary: 'Add Buckets For Full Packet Captures '
      description: Adds an AWS or GCP bucket to use with full packet captures.
      operationId: magic-pcap-collection-add-buckets-for-full-packet-captures
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic-visibility_pcaps_ownership_request'
      responses:
        '200':
          description: Add buckets for full packet captures response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_pcaps_ownership_single_response
        default:
          description: Add buckets for full packet captures response failure
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_pcaps_ownership_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pcaps/ownership/{ownership_id}:
    delete:
      tags:
        - Accounts
        - Buckets
        - Captures
        - Ownership
        - Packets
      summary: 'Delete Buckets For Full Packet Captures '
      description: Deletes buckets added to the packet captures API.
      operationId: magic-pcap-collection-delete-buckets-for-full-packet-captures
      parameters:
        - name: ownership_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      responses:
        '204':
          description: Delete buckets for full packet captures response
        default:
          description: Delete buckets for full packet captures response failure
          content:
            application/json: {}
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/pcaps/ownership/validate:
    post:
      tags:
        - Accounts
        - Ate
        - Buckets
        - Captures
        - Ownership
        - Packets
        - Val
        - Validate
      summary: 'Validate Buckets For Full Packet Captures '
      description: Validates buckets added to the packet captures API.
      operationId: magic-pcap-collection-validate-buckets-for-full-packet-captures
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/magic-visibility_pcaps_ownership_validate_request
      responses:
        '200':
          description: Validate buckets for full packet captures response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_pcaps_ownership_single_response
        default:
          description: Validate buckets for full packet captures response failure
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_pcaps_ownership_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/r2/buckets:
    get:
      tags:
        - Accounts
        - Buckets
      summary: 'List Buckets '
      description: Lists all R2 buckets on your account
      operationId: r2-list-buckets
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_account_identifier'
        - name: name_contains
          in: query
          schema:
            type: string
            description: >-
              Bucket names to filter by. Only buckets with this phrase in their
              name will be returned.
            example: my-bucket
        - name: start_after
          in: query
          schema:
            type: string
            description: >-
              Bucket name to start searching after. Buckets are ordered
              lexicographically.
            example: my-bucket
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of buckets to return in a single call
            default: 20
            minimum: 1
            maximum: 1000
        - name: order
          in: query
          schema:
            type: string
            description: Field to order buckets by
            enum:
              - name
        - name: direction
          in: query
          schema:
            type: string
            description: Direction to order buckets
            enum:
              - asc
              - desc
            example: desc
        - name: cursor
          in: query
          schema:
            type: string
            description: >-
              Pagination cursor received during the last List Buckets call. R2
              buckets are paginated using cursors instead of page numbers.
      responses:
        '200':
          description: List Buckets response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2_v4_response_list'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/r2_bucket'
        4XX:
          description: List Buckets response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response_failure'
      security:
        - api_token: []
    post:
      tags:
        - Accounts
        - Buckets
      summary: 'Create Bucket '
      description: Creates a new R2 bucket.
      operationId: r2-create-bucket
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: '{"name": "example-bucket"}'
              required:
                - name
              properties:
                locationHint:
                  $ref: '#/components/schemas/r2_bucket_location'
                name:
                  $ref: '#/components/schemas/r2_bucket_name'
      responses:
        '200':
          description: Create Bucket response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2_v4_response'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/r2_bucket'
        4XX:
          description: Create Bucket response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response_failure'
      security:
        - api_token: []
  /accounts/{account_id}/r2/buckets/{bucket_name}:
    delete:
      tags:
        - Accounts
        - Buckets
        - Names
      summary: 'Delete Bucket '
      description: Deletes an existing R2 bucket.
      operationId: r2-delete-bucket
      parameters:
        - name: bucket_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_bucket_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_account_identifier'
      responses:
        '200':
          description: Delete Bucket response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response'
        4XX:
          description: Delete Bucket response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response_failure'
      security:
        - api_token: []
    get:
      tags:
        - Accounts
        - Buckets
        - Names
      summary: 'Get Bucket '
      description: Gets metadata for an existing R2 bucket.
      operationId: r2-get-bucket
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_account_identifier'
        - name: bucket_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_bucket_name'
      responses:
        '200':
          description: Get Bucket response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2_v4_response'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/r2_bucket'
        4XX:
          description: Get Bucket response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response_failure'
      security:
        - api_token: []
  /accounts/{account_id}/r2/buckets/{bucket_name}/sippy:
    delete:
      tags:
        - Accounts
        - Buckets
        - Disable
        - Names
      summary: 'Disable Sippy '
      description: Disables Sippy on this bucket
      operationId: r2-delete-bucket-sippy-config
      parameters:
        - name: bucket_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_bucket_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_account_identifier'
      responses:
        '200':
          description: Delete Sippy Configuration response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2_v4_response'
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          enabled:
                            type: boolean
                            enum:
                              - false
        4XX:
          description: Delete Sippy Configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response_failure'
      security:
        - api_token: []
    get:
      tags:
        - Accounts
        - Buckets
        - Configurations
        - Names
      summary: 'Get Sippy Configuration '
      description: Gets configuration for Sippy for an existing R2 bucket.
      operationId: r2-get-bucket-sippy-config
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_account_identifier'
        - name: bucket_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_bucket_name'
      responses:
        '200':
          description: Get Sippy Configuration response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2_v4_response'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/r2_sippy'
        4XX:
          description: Get Sippy Configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response_failure'
      security:
        - api_token: []
    put:
      tags:
        - Accounts
        - Buckets
        - Enable
        - Names
      summary: 'Enable Sippy '
      description: Sets configuration for Sippy for an existing R2 bucket.
      operationId: r2-put-bucket-sippy-config
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_account_identifier'
        - name: bucket_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/r2_bucket_name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/r2_enable_sippy_aws'
                - $ref: '#/components/schemas/r2_enable_sippy_gcs'
      responses:
        '200':
          description: Set Sippy Configuration response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/r2_v4_response'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/r2_sippy'
        4XX:
          description: Get Sippy Configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/r2_v4_response_failure'
      security:
        - api_token: []
  /accounts/{account_id}/registrar/domains:
    get:
      tags:
        - Accounts
        - Domains
        - Registrar
      summary: 'List Domains '
      description: List domains handled by Registrar.
      operationId: registrar-domains-list-domains
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/registrar-api_identifier'
      responses:
        '200':
          description: List domains response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registrar-api_domain_response_collection'
        4XX:
          description: List domains response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/registrar-api_domain_response_collection
                  - $ref: >-
                      #/components/schemas/registrar-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/registrar/domains/{domain_name}:
    get:
      tags:
        - Accounts
        - Domains
        - Names
        - Registrar
      summary: 'Get Domain '
      description: Show individual domain.
      operationId: registrar-domains-get-domain
      parameters:
        - name: domain_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/registrar-api_domain_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/registrar-api_identifier'
      responses:
        '200':
          description: Get domain response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registrar-api_domain_response_single'
        4XX:
          description: Get domain response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/registrar-api_domain_response_single'
                  - $ref: >-
                      #/components/schemas/registrar-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Domains
        - Names
        - Registrar
      summary: 'Update Domain '
      description: Update individual domain.
      operationId: registrar-domains-update-domain
      parameters:
        - name: domain_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/registrar-api_domain_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/registrar-api_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/registrar-api_domain_update_properties'
      responses:
        '200':
          description: Update domain response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registrar-api_domain_response_single'
        4XX:
          description: Update domain response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/registrar-api_domain_response_single'
                  - $ref: >-
                      #/components/schemas/registrar-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/roles:
    get:
      tags:
        - Accounts
        - Roles
      summary: 'List Roles '
      description: Get all available roles for an account.
      operationId: account-roles-list-roles
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      responses:
        '200':
          description: List Roles response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_collection_role_response'
        4XX:
          description: List Roles response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_collection'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/roles/{role_id}:
    get:
      tags:
        - Accounts
        - Details
        - Roles
      summary: 'Role Details '
      description: Get information about a specific role for an account.
      operationId: account-roles-role-details
      parameters:
        - name: role_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/iam_account_identifier'
      responses:
        '200':
          description: Role Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iam_single_role_response'
        4XX:
          description: Role Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/iam_response_single'
                  - $ref: '#/components/schemas/iam_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/rules/lists:
    get:
      tags:
        - Accounts
        - Rules
      summary: 'Get Lists '
      description: Fetches all lists in the account.
      operationId: lists-get-lists
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      responses:
        '200':
          description: Get lists response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_lists-response-collection'
        4XX:
          description: Get lists response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_lists-response-collection'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Rules
      summary: 'Create A List '
      description: Creates a new list of the specified type.
      operationId: lists-create-a-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - kind
              properties:
                description:
                  $ref: '#/components/schemas/lists_description'
                kind:
                  $ref: '#/components/schemas/lists_kind'
                name:
                  $ref: '#/components/schemas/lists_name'
      responses:
        '200':
          description: Create a list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_list-response-collection'
        4XX:
          description: Create a list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_list-response-collection'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/rules/lists/{list_id}:
    delete:
      tags:
        - Accounts
        - Rules
      summary: 'Delete A List '
      description: Deletes a specific list and all its items.
      operationId: lists-delete-a-list
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_list-delete-response-collection'
        4XX:
          description: Delete a list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_list-delete-response-collection'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Rules
      summary: 'Get A List '
      description: Fetches the details of a list.
      operationId: lists-get-a-list
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      responses:
        '200':
          description: Get a list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_list-response-collection'
        4XX:
          description: Get a list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_list-response-collection'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Rules
      summary: 'Update A List '
      description: Updates the description of a list.
      operationId: lists-update-a-list
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/lists_description'
      responses:
        '200':
          description: Update a list response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_list-response-collection'
        4XX:
          description: Update a list response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_list-response-collection'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/rules/lists/{list_id}/items:
    delete:
      tags:
        - Accounts
        - Items
        - Rules
      summary: 'Delete List Items '
      description: >-
        Removes one or more items from a list.


        This operation is asynchronous. To get current the operation status,
        invoke the [Get bulk operation
        status](/operations/lists-get-bulk-operation-status) endpoint with the
        returned `operation_id`.
      operationId: lists-delete-list-items
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  minItems: 1
                  items:
                    properties:
                      id:
                        $ref: '#/components/schemas/lists_item_id'
      responses:
        '200':
          description: Delete list items response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_lists-async-response'
        4XX:
          description: Delete list items response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_lists-async-response'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Items
        - Rules
      summary: 'Get List Items '
      description: Fetches all the items in the list.
      operationId: lists-get-list-items
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
        - name: cursor
          in: query
          schema:
            type: string
            description: >-
              The pagination cursor. An opaque string token indicating the
              position from which to continue when requesting the next/previous
              set of records. Cursor values are provided under
              `result_info.cursors` in the response. You should make no
              assumptions about a cursor's content or length.
            example: zzz
        - name: per_page
          in: query
          schema:
            type: integer
            description: >-
              Amount of results to include in each paginated response. A
              non-negative 32 bit integer.
            minimum: 1
            maximum: 500
        - name: search
          in: query
          schema:
            type: string
            description: >-
              A search query to filter returned items. Its meaning depends on
              the list type: IP addresses must start with the provided string,
              hostnames and bulk redirects must contain the string, and ASNs
              must match the string exactly.
            example: 1.1.1.
      responses:
        '200':
          description: Get list items response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_items-list-response-collection'
        4XX:
          description: Get list items response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_items-list-response-collection'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Items
        - Rules
      summary: 'Create List Items '
      description: >-
        Appends new items to the list.


        This operation is asynchronous. To get current the operation status,
        invoke the [Get bulk operation
        status](/operations/lists-get-bulk-operation-status) endpoint with the
        returned `operation_id`.
      operationId: lists-create-list-items
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_items-update-request-collection'
      responses:
        '200':
          description: Create list items response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_lists-async-response'
        4XX:
          description: Create list items response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_lists-async-response'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Items
        - Rules
      summary: 'Update All List Items '
      description: >-
        Removes all existing items from the list and adds the provided items to
        the list.


        This operation is asynchronous. To get current the operation status,
        invoke the [Get bulk operation
        status](/operations/lists-get-bulk-operation-status) endpoint with the
        returned `operation_id`.
      operationId: lists-update-all-list-items
      parameters:
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_items-update-request-collection'
      responses:
        '200':
          description: Update all list items response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_lists-async-response'
        4XX:
          description: Update all list items response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_lists-async-response'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets:
    get:
      tags:
        - Accounts
        - Rulesets
      summary: 'List Account Rulesets '
      description: Fetches all rulesets at the account level.
      operationId: listAccountRulesets
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: List account rulesets response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetsResponse'
        4XX:
          description: List account rulesets failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Rulesets
      summary: 'Create An Account Ruleset '
      description: Creates a ruleset at the account level.
      operationId: createAccountRuleset
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_CreateRulesetRequest'
      responses:
        '200':
          description: Create an account ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Create an account ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/{ruleset_id}:
    delete:
      tags:
        - Accounts
        - Rulesets
      summary: 'Delete An Account Ruleset '
      description: Deletes all versions of an existing account ruleset.
      operationId: deleteAccountRuleset
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '204':
          description: Delete an account ruleset response
        4XX:
          description: Delete an account ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Rulesets
      summary: 'Get An Account Ruleset '
      description: Fetches the latest version of an account ruleset.
      operationId: getAccountRuleset
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: Get an account ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get an account ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Rulesets
      summary: 'Update An Account Ruleset '
      description: Updates an account ruleset, creating a new version.
      operationId: updateAccountRuleset
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_UpdateRulesetRequest'
      responses:
        '200':
          description: Update an account ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Update an account ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/{ruleset_id}/rules:
    post:
      tags:
        - Accounts
        - Rules
        - Rulesets
      summary: 'Create An Account Ruleset Rule '
      description: >-
        Adds a new rule to an account ruleset. The rule will be added to the end
        of the existing list of rules in the ruleset by default.
      operationId: createAccountRulesetRule
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_CreateOrUpdateRuleRequest'
      responses:
        '200':
          description: Create an account ruleset rule response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Create an account ruleset rule failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/{ruleset_id}/rules/{rule_id}:
    delete:
      tags:
        - Accounts
        - Rules
        - Rulesets
      summary: 'Delete An Account Ruleset Rule '
      description: Deletes an existing rule from an account ruleset.
      operationId: deleteAccountRulesetRule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RuleId'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: Delete an account ruleset rule response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Delete an account ruleset rule failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Rules
        - Rulesets
      summary: 'Update An Account Ruleset Rule '
      description: Updates an existing rule in an account ruleset.
      operationId: updateAccountRulesetRule
      parameters:
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RuleId'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_CreateOrUpdateRuleRequest'
      responses:
        '200':
          description: Update an account ruleset rule response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Update an account ruleset rule failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/{ruleset_id}/versions:
    get:
      tags:
        - Accounts
        - Ruleset's
        - Rulesets
        - Versions
      summary: 'List An Account Ruleset''s Versions '
      description: Fetches the versions of an account ruleset.
      operationId: listAccountRulesetVersions
      parameters:
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: List an account ruleset's versions response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetsResponse'
        4XX:
          description: List an account ruleset's versions failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/{ruleset_id}/versions/{ruleset_version}:
    delete:
      tags:
        - Accounts
        - Rulesets
        - Versions
      summary: 'Delete An Account Ruleset Version '
      description: Deletes an existing version of an account ruleset.
      operationId: deleteAccountRulesetVersion
      parameters:
        - name: ruleset_version
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetVersion'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '204':
          description: Delete an account ruleset version response.
        4XX:
          description: Delete an account ruleset version failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Rulesets
        - Versions
      summary: 'Get An Account Ruleset Version '
      description: Fetches a specific version of an account ruleset.
      operationId: getAccountRulesetVersion
      parameters:
        - name: ruleset_version
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetVersion'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: Get an account ruleset version response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get an account ruleset version failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/{ruleset_id}/versions/{ruleset_version}/by_tag/{rule_tag}:
    get:
      tags:
        - Accounts
        - Rules
        - Rulesets
        - Tags
        - Version's
        - Versions
      summary: 'List An Account Ruleset Version''s Rules By Tag '
      description: Fetches the rules of a managed account ruleset version for a given tag.
      operationId: listAccountRulesetVersionRulesByTag
      parameters:
        - name: rule_tag
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RuleCategory'
        - name: ruleset_version
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetVersion'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetId'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: List an account ruleset version's rules by tag response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: List an account ruleset version's rules by tag failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/phases/{ruleset_phase}/entrypoint:
    get:
      tags:
        - Accounts
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Rulesets
      summary: 'Get An Account Entry Point Ruleset '
      description: >-
        Fetches the latest version of the account entry point ruleset for a
        given phase.
      operationId: getAccountEntrypointRuleset
      parameters:
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: Get an account entry point ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get an account entry point ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Rulesets
      summary: 'Update An Account Entry Point Ruleset '
      description: Updates an account entry point ruleset, creating a new version.
      operationId: updateAccountEntrypointRuleset
      parameters:
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rulesets_UpdateRulesetRequest'
      responses:
        '200':
          description: Update an account entry point ruleset response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Update an account entry point ruleset failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions:
    get:
      tags:
        - Accounts
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Ruleset's
        - Rulesets
        - Versions
      summary: 'List An Account Entry Point Ruleset''s Versions '
      description: Fetches the versions of an account entry point ruleset.
      operationId: listAccountEntrypointRulesetVersions
      parameters:
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: List an account entry point ruleset's versions response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetsResponse'
        4XX:
          description: List an account entry point ruleset's versions failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions/{ruleset_version}:
    get:
      tags:
        - Accounts
        - Entry
        - Entrypoint
        - Phase
        - Phases
        - Points
        - Rulesets
        - Versions
      summary: 'Get An Account Entry Point Ruleset Version '
      description: Fetches a specific version of an account entry point ruleset.
      operationId: getAccountEntrypointRulesetVersion
      parameters:
        - name: ruleset_version
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetVersion'
        - name: ruleset_phase
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_RulesetPhase'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rulesets_AccountId'
      responses:
        '200':
          description: Get an account entry point ruleset version response.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/rulesets_Response'
                  - properties:
                      result:
                        $ref: '#/components/schemas/rulesets_RulesetResponse'
        4XX:
          description: Get an account entry point ruleset version failure response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesets_FailureResponse'
      security:
        - api_token: []
        - api_email: []
          api_key: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/rum/site_info:
    post:
      tags:
        - Accounts
        - Analytics
        - Info
        - Sites
        - Web
      summary: 'Create A Web Analytics Site '
      description: Creates a new Web Analytics site.
      operationId: web-analytics-create-site
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rum_create-site-request'
      responses:
        '200':
          description: Created Web Analytics site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_site-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/rum/site_info/{site_id}:
    delete:
      tags:
        - Accounts
        - Analytics
        - Info
        - Sites
        - Web
      summary: 'Delete A Web Analytics Site '
      description: Deletes an existing Web Analytics site.
      operationId: web-analytics-delete-site
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: site_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
      responses:
        '200':
          description: Deleted Web Analytics site identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_site-tag-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Analytics
        - Info
        - Sites
        - Web
      summary: 'Get A Web Analytics Site '
      description: Retrieves a Web Analytics site.
      operationId: web-analytics-get-site
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: site_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
      responses:
        '200':
          description: Web Analytics site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_site-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Analytics
        - Info
        - Sites
        - Web
      summary: 'Update A Web Analytics Site '
      description: Updates an existing Web Analytics site.
      operationId: web-analytics-update-site
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: site_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rum_create-site-request'
      responses:
        '200':
          description: Updated Web Analytics site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_site-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/rum/site_info/list:
    get:
      tags:
        - Accounts
        - Analytics
        - Info
        - Sites
        - Web
      summary: 'List Web Analytics Sites '
      description: Lists all Web Analytics sites of an account.
      operationId: web-analytics-list-sites
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: per_page
          in: query
          schema:
            $ref: '#/components/schemas/rum_per_page'
        - name: page
          in: query
          schema:
            $ref: '#/components/schemas/rum_page'
        - name: order_by
          in: query
          schema:
            $ref: '#/components/schemas/rum_order_by'
      responses:
        '200':
          description: List of Web Analytics sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_sites-response-collection'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/rum/v2/{ruleset_id}/rule:
    post:
      tags:
        - Accounts
        - Analytics
        - Rules
        - Rulesets
        - Web
      summary: 'Create A Web Analytics Rule '
      description: Creates a new rule in a Web Analytics ruleset.
      operationId: web-analytics-create-rule
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_ruleset_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rum_create-rule-request'
      responses:
        '200':
          description: Created Web Analytics rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_rule-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/rum/v2/{ruleset_id}/rule/{rule_id}:
    delete:
      tags:
        - Accounts
        - Analytics
        - Rules
        - Rulesets
        - Web
      summary: 'Delete A Web Analytics Rule '
      description: Deletes an existing rule from a Web Analytics ruleset.
      operationId: web-analytics-delete-rule
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_ruleset_identifier'
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_rule_identifier'
      responses:
        '200':
          description: Deleted Web Analytics rule identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_rule-id-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Analytics
        - Rules
        - Rulesets
        - Web
      summary: 'Update A Web Analytics Rule '
      description: Updates a rule in a Web Analytics ruleset.
      operationId: web-analytics-update-rule
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_ruleset_identifier'
        - name: rule_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_rule_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rum_create-rule-request'
      responses:
        '200':
          description: Updated Web Analytics rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_rule-response-single'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/rum/v2/{ruleset_id}/rules:
    get:
      tags:
        - Accounts
        - Analytics
        - Rules
        - Rulesets
        - Web
      summary: 'List Rules In Web Analytics Ruleset '
      description: Lists all the rules in a Web Analytics ruleset.
      operationId: web-analytics-list-rules
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_ruleset_identifier'
      responses:
        '200':
          description: List of Web Analytics rules in the ruleset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_rules-response-collection'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Analytics
        - Rules
        - Rulesets
        - Web
      summary: 'Update Web Analytics Rules '
      description: >-
        Modifies one or more rules in a Web Analytics ruleset with a single
        request.
      operationId: web-analytics-modify-rules
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_identifier'
        - name: ruleset_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/rum_ruleset_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rum_modify-rules-request'
      responses:
        '200':
          description: List of modified Web Analytics rules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_rules-response-collection'
        4XX:
          description: Failure response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rum_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/secondary_dns/acls:
    get:
      tags:
        - ACL
        - ACLs
        - Accounts
        - DNS
        - Secondary
      summary: 'List ACLs '
      description: List ACLs.
      operationId: secondary-dns-(-acl)-list-ac-ls
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      responses:
        '200':
          description: List ACLs response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/secondary-dns_components-schemas-response_collection
        4XX:
          description: List ACLs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_components-schemas-response_collection
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - ACL
        - Accounts
        - DNS
        - Secondary
      summary: 'Create ACL '
      description: Create ACL.
      operationId: secondary-dns-(-acl)-create-acl
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - ip_range
      responses:
        '200':
          description: Create ACL response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/secondary-dns_components-schemas-single_response
        4XX:
          description: Create ACL response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/secondary_dns/acls/{acl_id}:
    delete:
      tags:
        - ACL
        - Accounts
        - DNS
        - Secondary
      summary: 'Delete ACL '
      description: Delete ACL.
      operationId: secondary-dns-(-acl)-delete-acl
      parameters:
        - name: acl_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete ACL response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/secondary-dns_components-schemas-id_response
        4XX:
          description: Delete ACL response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_components-schemas-id_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - ACL
        - Accounts
        - DNS
        - Details
        - Secondary
      summary: 'ACL Details '
      description: Get ACL.
      operationId: secondary-dns-(-acl)-acl-details
      parameters:
        - name: acl_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      responses:
        '200':
          description: ACL Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/secondary-dns_components-schemas-single_response
        4XX:
          description: ACL Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - ACL
        - Accounts
        - DNS
        - Secondary
      summary: 'Update ACL '
      description: Modify ACL.
      operationId: secondary-dns-(-acl)-update-acl
      parameters:
        - name: acl_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_acl'
      responses:
        '200':
          description: Update ACL response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/secondary-dns_components-schemas-single_response
        4XX:
          description: Update ACL response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_components-schemas-single_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/secondary_dns/peers:
    get:
      tags:
        - Accounts
        - DNS
        - Peers
        - Secondary
      summary: 'List Peers '
      description: List Peers.
      operationId: secondary-dns-(-peer)-list-peers
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      responses:
        '200':
          description: List Peers response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_schemas-response_collection'
        4XX:
          description: List Peers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_schemas-response_collection
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - DNS
        - Peer
        - Peers
        - Secondary
      summary: 'Create Peer '
      description: Create Peer.
      operationId: secondary-dns-(-peer)-create-peer
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
      responses:
        '200':
          description: Create Peer response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_schemas-single_response'
        4XX:
          description: Create Peer response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/secondary_dns/peers/{peer_id}:
    delete:
      tags:
        - Accounts
        - DNS
        - Peer
        - Peers
        - Secondary
      summary: 'Delete Peer '
      description: Delete Peer.
      operationId: secondary-dns-(-peer)-delete-peer
      parameters:
        - name: peer_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Peer response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/secondary-dns_components-schemas-id_response
        4XX:
          description: Delete Peer response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/secondary-dns_components-schemas-id_response
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - DNS
        - Details
        - Peer
        - Peers
        - Secondary
      summary: 'Peer Details '
      description: Get Peer.
      operationId: secondary-dns-(-peer)-peer-details
      parameters:
        - name: peer_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      responses:
        '200':
          description: Peer Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_schemas-single_response'
        4XX:
          description: Peer Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - DNS
        - Peer
        - Peers
        - Secondary
      summary: 'Update Peer '
      description: Modify Peer.
      operationId: secondary-dns-(-peer)-update-peer
      parameters:
        - name: peer_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_components-schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_peer'
      responses:
        '200':
          description: Update Peer response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_schemas-single_response'
        4XX:
          description: Update Peer response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_schemas-single_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/secondary_dns/tsigs:
    get:
      tags:
        - Accounts
        - DNS
        - Secondary
        - TSIGs
      summary: 'List TSIGs '
      description: List TSIGs.
      operationId: secondary-dns-(-tsig)-list-tsi-gs
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      responses:
        '200':
          description: List TSIGs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_response_collection'
        4XX:
          description: List TSIGs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_response_collection'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - DNS
        - Secondary
        - TSIG
      summary: 'Create TSIG '
      description: Create TSIG.
      operationId: secondary-dns-(-tsig)-create-tsig
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_tsig'
      responses:
        '200':
          description: Create TSIG response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response'
        4XX:
          description: Create TSIG response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_single_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/secondary_dns/tsigs/{tsig_id}:
    delete:
      tags:
        - Accounts
        - DNS
        - Secondary
        - TSIG
        - Tsig
      summary: 'Delete TSIG '
      description: Delete TSIG.
      operationId: secondary-dns-(-tsig)-delete-tsig
      parameters:
        - name: tsig_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete TSIG response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_schemas-id_response'
        4XX:
          description: Delete TSIG response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_schemas-id_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - DNS
        - Details
        - Secondary
        - TSIG
        - Tsig
      summary: 'TSIG Details '
      description: Get TSIG.
      operationId: secondary-dns-(-tsig)-tsig-details
      parameters:
        - name: tsig_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      responses:
        '200':
          description: TSIG Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response'
        4XX:
          description: TSIG Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_single_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - DNS
        - Secondary
        - TSIG
        - Tsig
      summary: 'Update TSIG '
      description: Modify TSIG.
      operationId: secondary-dns-(-tsig)-update-tsig
      parameters:
        - name: tsig_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/secondary-dns_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/secondary-dns_tsig'
      responses:
        '200':
          description: Update TSIG response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secondary-dns_single_response'
        4XX:
          description: Update TSIG response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/secondary-dns_single_response'
                  - $ref: >-
                      #/components/schemas/secondary-dns_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/analytics:
    get:
      tags:
        - Accounts
        - Analytics
        - Queries
        - Storage
      summary: 'Query Request Analytics '
      description: Retrieves Workers KV request metrics for the given account.
      operationId: workers-kv-request-analytics-query-request-analytics
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
        - name: query
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/workers-kv_query'
              - properties:
                  dimensions:
                    example:
                      - accountId
                      - responseCode
                    items:
                      enum:
                        - accountId
                        - responseCode
                        - requestType
                  filters:
                    example: requestType==read AND responseCode!=200
                  metrics:
                    default: '["requests"]'
                    example:
                      - requests
                      - readKiB
                    items:
                      enum:
                        - requests
                        - writeKiB
                        - readKiB
                  sort:
                    example:
                      - +requests
                      - '-responseCode'
      responses:
        '200':
          description: Query Request Analytics response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/workers-kv_schemas-result'
        4XX:
          description: Query Request Analytics response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers-kv_api-response-single'
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/workers-kv_result'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/analytics/stored:
    get:
      tags:
        - Accounts
        - Analytics
        - Data
        - Queries
        - Storage
        - Stored
      summary: 'Query Stored Data Analytics '
      description: Retrieves Workers KV stored data metrics for the given account.
      operationId: workers-kv-stored-data-analytics-query-stored-data-analytics
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
        - name: query
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/workers-kv_query'
              - properties:
                  dimensions:
                    example:
                      - namespaceId
                    items:
                      enum:
                        - namespaceId
                  filters:
                    example: namespaceId==a4e8cbb7-1b58-4990-925e-e026d40c4c64
                  metrics:
                    default: '["storedBytes"]'
                    example:
                      - storedBytes
                      - storedKeys
                    items:
                      enum:
                        - storedBytes
                        - storedKeys
                  sort:
                    example:
                      - +storedBytes
                      - '-namespaceId'
      responses:
        '200':
          description: Query Stored Data Analytics response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/components/schemas/workers-kv_components-schemas-result
        4XX:
          description: Query Stored Data Analytics response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers-kv_api-response-single'
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/workers-kv_result'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/kv/namespaces:
    get:
      tags:
        - Accounts
        - Namespaces
        - Storage
      summary: 'List Namespaces '
      description: Returns the namespaces owned by an account.
      operationId: workers-kv-namespace-list-namespaces
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of results per page.
            default: 20
            minimum: 5
            maximum: 100
        - name: order
          in: query
          schema:
            description: Field to order results by.
            enum:
              - id
              - title
            example: id
        - name: direction
          in: query
          schema:
            description: Direction to order namespaces.
            enum:
              - asc
              - desc
            example: asc
      responses:
        '200':
          description: List Namespaces response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-collection'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/workers-kv_namespace'
        4XX:
          description: List Namespaces response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/workers-kv_api-response-collection
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/workers-kv_namespace'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Namespaces
        - Storage
      summary: 'Create A Namespace '
      description: >-
        Creates a namespace under the given title. A `400` is returned if the
        account already owns a namespace with this title. A namespace must be
        explicitly deleted to be replaced.
      operationId: workers-kv-namespace-create-a-namespace
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers-kv_create_rename_namespace_body'
      responses:
        '200':
          description: Create a Namespace response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/workers-kv_namespace'
        4XX:
          description: Create a Namespace response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers-kv_api-response-single'
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/workers-kv_namespace'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/kv/namespaces/{namespace_id}:
    delete:
      tags:
        - Accounts
        - Namespaces
        - Removes
        - Storage
      summary: 'Remove A Namespace '
      description: Deletes the namespace corresponding to the given ID.
      operationId: workers-kv-namespace-remove-a-namespace
      parameters:
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Remove a Namespace response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers-kv_api-response-single'
        4XX:
          description: Remove a Namespace response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Namespaces
        - Rename
        - Storage
      summary: 'Rename A Namespace '
      description: Modifies a namespace's title.
      operationId: workers-kv-namespace-rename-a-namespace
      parameters:
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers-kv_create_rename_namespace_body'
      responses:
        '200':
          description: Rename a Namespace response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers-kv_api-response-single'
        4XX:
          description: Rename a Namespace response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/kv/namespaces/{namespace_id}/bulk:
    delete:
      tags:
        - Accounts
        - Bulk
        - Key value
        - Multiple
        - Namespaces
        - Pairs
        - Storage
      summary: 'Delete Multiple Key-value Pairs '
      description: >-
        Remove multiple KV pairs from the namespace. Body should be an array of
        up to 10,000 keys to be removed.
      operationId: workers-kv-namespace-delete-multiple-key-value-pairs
      parameters:
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers-kv_bulk_delete'
      responses:
        '200':
          description: Delete multiple key-value pairs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers-kv_api-response-single'
        4XX:
          description: Delete multiple key-value pairs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Bulk
        - Key value
        - Multiple
        - Namespaces
        - Pairs
        - Storage
        - Write
      summary: 'Write Multiple Key-value Pairs '
      description: >-
        Write multiple keys and values at once. Body should be an array of up to
        10,000 key-value pairs to be stored, along with optional expiration
        information. Existing values and expirations will be overwritten. If
        neither `expiration` nor `expiration_ttl` is specified, the key-value
        pair will never expire. If both are set, `expiration_ttl` is used and
        `expiration` is ignored. The entire request size must be 100 megabytes
        or less.
      operationId: workers-kv-namespace-write-multiple-key-value-pairs
      parameters:
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers-kv_bulk_write'
      responses:
        '200':
          description: Write multiple key-value pairs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers-kv_api-response-single'
        4XX:
          description: Write multiple key-value pairs response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/kv/namespaces/{namespace_id}/keys:
    get:
      tags:
        - Accounts
        - Keys
        - Namespace's
        - Namespaces
        - Storage
      summary: 'List A Namespace''s Keys '
      description: Lists a namespace's keys.
      operationId: workers-kv-namespace-list-a-namespace'-s-keys
      parameters:
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
        - name: limit
          in: query
          schema:
            type: number
            description: >-
              The number of keys to return. The cursor attribute may be used to
              iterate over the next batch of keys if there are more than the
              limit.
            default: 1000
            minimum: 10
            maximum: 1000
        - name: prefix
          in: query
          schema:
            type: string
            description: >-
              A string prefix used to filter down which keys will be returned.
              Exact matches and any key names that begin with the prefix will be
              returned.
            example: My-Prefix
        - name: cursor
          in: query
          schema:
            type: string
            description: >-
              Opaque token indicating the position from which to continue when
              requesting the next set of records if the amount of list results
              was limited by the limit parameter. A valid value for the cursor
              can be obtained from the `cursors` object in the `result_info`
              structure.
            example: >-
              6Ck1la0VxJ0djhidm1MdX2FyDGxLKVeeHZZmORS_8XeSuhz9SjIJRaSa2lnsF01tQOHrfTGAP3R5X1Kv5iVUuMbNKhWNAXHOl6ePB0TUL8nw
      responses:
        '200':
          description: List a Namespace's Keys response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/workers-kv_key'
                      result_info:
                        properties:
                          count:
                            type: number
                            description: >-
                              Total results returned based on your list
                              parameters.
                            example: 1
                          cursor:
                            $ref: '#/components/schemas/workers-kv_cursor'
        4XX:
          description: List a Namespace's Keys response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers-kv_api-response-common'
                      - properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/workers-kv_key'
                          result_info:
                            properties:
                              count:
                                type: number
                                description: >-
                                  Total results returned based on your list
                                  parameters.
                                example: 1
                              cursor:
                                $ref: '#/components/schemas/workers-kv_cursor'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/kv/namespaces/{namespace_id}/metadata/{key_name}:
    get:
      tags:
        - Accounts
        - Keys
        - Metadata
        - Names
        - Namespaces
        - Read
        - Storage
      summary: 'Read The Metadata For A Key '
      description: >-
        Returns the metadata associated with the given key in the given
        namespace. Use URL-encoding to use special characters (for example, `:`,
        `!`, `%`) in the key name.
      operationId: workers-kv-namespace-read-the-metadata-for-a-key
      parameters:
        - name: key_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_key_name'
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      responses:
        '200':
          description: Read the metadata for a key response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/workers-kv_list_metadata'
        4XX:
          description: Read the metadata for a key response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers-kv_api-response-single'
                      - properties:
                          result:
                            $ref: '#/components/schemas/workers-kv_list_metadata'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/storage/kv/namespaces/{namespace_id}/values/{key_name}:
    delete:
      tags:
        - Accounts
        - Key value
        - Keys
        - Names
        - Namespaces
        - Pairs
        - Storage
        - Values
      summary: 'Delete Key-value Pair '
      description: >-
        Remove a KV pair from the namespace. Use URL-encoding to use special
        characters (for example, `:`, `!`, `%`) in the key name.
      operationId: workers-kv-namespace-delete-key-value-pair
      parameters:
        - name: key_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_key_name'
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete key-value pair response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers-kv_api-response-single'
        4XX:
          description: Delete key-value pair response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Key value
        - Keys
        - Names
        - Namespaces
        - Pairs
        - Read
        - Storage
        - Values
      summary: 'Read Key-value Pair '
      description: >-
        Returns the value associated with the given key in the given namespace.
        Use URL-encoding to use special characters (for example, `:`, `!`, `%`)
        in the key name. If the KV-pair is set to expire at some point, the
        expiration time as measured in seconds since the UNIX epoch will be
        returned in the `expiration` response header.
      operationId: workers-kv-namespace-read-key-value-pair
      parameters:
        - name: key_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_key_name'
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      responses:
        '200':
          description: Read key-value pair response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers-kv_value'
        4XX:
          description: Read key-value pair response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_value'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Key value
        - Keys
        - Metadata
        - Names
        - Namespaces
        - Pairs
        - Storage
        - Values
        - Write
      summary: 'Write Key-value Pair With Metadata '
      description: >-
        Write a value identified by a key. Use URL-encoding to use special
        characters (for example, `:`, `!`, `%`) in the key name. Body should be
        the value to be stored along with JSON metadata to be associated with
        the key/value pair. Existing values, expirations, and metadata will be
        overwritten. If neither `expiration` nor `expiration_ttl` is specified,
        the key-value pair will never expire. If both are set, `expiration_ttl`
        is used and `expiration` is ignored.
      operationId: workers-kv-namespace-write-key-value-pair-with-metadata
      parameters:
        - name: key_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_key_name'
        - name: namespace_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_namespace_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers-kv_identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - value
                - metadata
              properties:
                metadata:
                  $ref: '#/components/schemas/workers-kv_metadata'
                value:
                  $ref: '#/components/schemas/workers-kv_value'
      responses:
        '200':
          description: Write key-value pair with metadata response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers-kv_api-response-single'
        4XX:
          description: Write key-value pair with metadata response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers-kv_api-response-single'
                  - $ref: >-
                      #/components/schemas/workers-kv_api-response-common-failure
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/stream:
    get:
      tags:
        - Accounts
        - Stream
        - Videos
      summary: 'List Videos '
      description: >-
        Lists up to 1000 videos from a single request. For a specific range,
        refer to the optional parameters.
      operationId: stream-videos-list-videos
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/stream_media_state'
        - name: creator
          in: query
          schema:
            $ref: '#/components/schemas/stream_creator'
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/stream_type'
        - name: asc
          in: query
          schema:
            $ref: '#/components/schemas/stream_asc'
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/stream_search'
        - name: start
          in: query
          schema:
            $ref: '#/components/schemas/stream_start'
        - name: end
          in: query
          schema:
            $ref: '#/components/schemas/stream_end'
        - name: include_counts
          in: query
          schema:
            $ref: '#/components/schemas/stream_include_counts'
      responses:
        '200':
          description: List videos response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_video_response_collection'
        4XX:
          description: List videos response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Initiate
        - Stream
        - TUS
        - Uploads
        - Using
        - Videos
      summary: 'Initiate Video Uploads Using TUS '
      description: >-
        Initiates a video upload using the TUS protocol. On success, the server
        responds with a status code 201 (created) and includes a `location`
        header to indicate where the content should be uploaded. Refer to
        https://tus.io for protocol details.
      operationId: stream-videos-initiate-video-uploads-using-tus
      parameters:
        - name: Tus-Resumable
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/stream_tus_resumable'
        - name: Upload-Creator
          in: header
          schema:
            $ref: '#/components/schemas/stream_creator'
        - name: Upload-Length
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/stream_upload_length'
        - name: Upload-Metadata
          in: header
          schema:
            $ref: '#/components/schemas/stream_upload_metadata'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Initiate video uploads using TUS response
          content:
            application/json: {}
        4XX:
          description: Initiate video uploads using TUS response failure
          content:
            application/json: {}
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}:
    delete:
      tags:
        - Accounts
        - Stream
        - Videos
      summary: 'Delete Video '
      description: Deletes a video and its copies from Cloudflare Stream.
      operationId: stream-videos-delete-video
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete video response
          content:
            application/json: {}
        4XX:
          description: Delete video response failure
          content:
            application/json: {}
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Details
        - Stream
        - Videos
      summary: 'Retrieve Video Details '
      description: Fetches details for a single video.
      operationId: stream-videos-retrieve-video-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      responses:
        '200':
          description: Retrieve video details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_video_response_single'
        4XX:
          description: Retrieve video details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Details
        - Edit
        - Stream
        - Videos
      summary: 'Edit Video Details '
      description: Edit details for a single video.
      operationId: stream-videos-update-video-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_video_update'
      responses:
        '200':
          description: Edit video details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_video_response_single'
        4XX:
          description: Edit video details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/audio:
    get:
      tags:
        - Accounts
        - Additional
        - Audio
        - Stream
        - Tracks
        - Videos
      summary: 'List Additional Audio Tracks On A Video '
      description: >-
        Lists additional audio tracks on a video. Note this API will not return
        information for audio attached to the video upload.
      operationId: list-audio-tracks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
      responses:
        '200':
          description: Lists additional audio tracks on a video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_listAudioTrackResponse'
        4XX:
          description: Lists additional audio tracks on a video response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/audio/{audio_identifier}:
    delete:
      tags:
        - Accounts
        - Additional
        - Audio
        - Stream
        - Tracks
        - Videos
      summary: 'Delete Additional Audio Tracks On A Video '
      description: >-
        Deletes additional audio tracks on a video. Deleting a default audio
        track is not allowed. You must assign another audio track as default
        prior to deletion.
      operationId: delete-audio-tracks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: audio_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_audio_identifier'
      responses:
        '200':
          description: Deletes additional audio tracks on a video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_deleted_response'
        4XX:
          description: Deletes additional audio tracks on a video response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_deleted_response'
      security:
        - api_email: []
          api_key: []
          api_token: []
    patch:
      tags:
        - Accounts
        - Additional
        - Audio
        - Edit
        - Stream
        - Tracks
        - Videos
      summary: 'Edit Additional Audio Tracks On A Video '
      description: >-
        Edits additional audio tracks on a video. Editing the default status of
        an audio track to `true` will mark all other audio tracks on the video
        default status to `false`.
      operationId: edit-audio-tracks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: audio_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_audio_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_editAudioTrack'
      responses:
        '200':
          description: Edits additional audio tracks on a video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_addAudioTrackResponse'
        4XX:
          description: Edits additional audio tracks on a video response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/audio/copy:
    post:
      tags:
        - Accounts
        - Audio
        - Copy
        - Stream
        - Tracks
        - Videos
      summary: 'Add Audio Tracks To A Video '
      description: >-
        Adds an additional audio track to a video using the provided audio track
        URL.
      operationId: add-audio-track
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_copyAudioTrack'
      responses:
        '200':
          description: Add audio tracks to a video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_addAudioTrackResponse'
        4XX:
          description: Add audio tracks to a video response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/captions:
    get:
      tags:
        - Accounts
        - Captions
        - Stream
        - Subtitles
      summary: 'List Captions Or Subtitles '
      description: Lists the available captions or subtitles for a specific video.
      operationId: stream-subtitles/-captions-list-captions-or-subtitles
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      responses:
        '200':
          description: List captions or subtitles response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_language_response_collection'
        4XX:
          description: List captions or subtitles response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/captions/{language}:
    delete:
      tags:
        - Accounts
        - Captions
        - Languages
        - Stream
        - Subtitles
      summary: 'Delete Captions Or Subtitles '
      description: Removes the captions or subtitles from a video.
      operationId: stream-subtitles/-captions-delete-captions-or-subtitles
      parameters:
        - name: language
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_language'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete captions or subtitles response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/stream_api-response-common'
                  - properties:
                      result:
                        type: string
                        example: ''
        4XX:
          description: Delete captions or subtitles response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Captions
        - Languages
        - Stream
        - Subtitles
        - Uploads
      summary: 'Upload Captions Or Subtitles '
      description: >-
        Uploads the caption or subtitle file to the endpoint for a specific
        BCP47 language. One caption or subtitle file per language is allowed.
      operationId: stream-subtitles/-captions-upload-captions-or-subtitles
      parameters:
        - name: language
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_language'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/stream_caption_basic_upload'
      responses:
        '200':
          description: Upload captions or subtitles response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_language_response_single'
        4XX:
          description: Upload captions or subtitles response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/downloads:
    delete:
      tags:
        - Accounts
        - Downloads
        - Stream
      summary: 'Delete Downloads '
      description: Delete the downloads for a video.
      operationId: stream-m-p-4-downloads-delete-downloads
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      responses:
        '200':
          description: Delete downloads response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_deleted_response'
        4XX:
          description: Delete downloads response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Downloads
        - Stream
      summary: 'List Downloads '
      description: Lists the downloads created for a video.
      operationId: stream-m-p-4-downloads-list-downloads
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      responses:
        '200':
          description: List downloads response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_downloads_response'
        4XX:
          description: List downloads response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Downloads
        - Stream
      summary: 'Create Downloads '
      description: Creates a download for a video when a video is ready to view.
      operationId: stream-m-p-4-downloads-create-downloads
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Create downloads response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_downloads_response'
        4XX:
          description: Create downloads response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/embed:
    get:
      tags:
        - Accounts
        - Code
        - Embed
        - HTML
        - Stream
      summary: 'Retrieve Embed Code HTML '
      description: >-
        Fetches an HTML code snippet to embed a video in a web page delivered
        through Cloudflare. On success, returns an HTML fragment for use on web
        pages to display a video. On failure, returns a JSON response body.
      operationId: stream-videos-retreieve-embed-code-html
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      responses:
        '200':
          description: Retreieve embed Code HTML response
          content:
            application/json:
              schema:
                example: >-
                  <stream id="ea95132c15732412d22c1476fa83f27a"></stream><script
                  data-cfasync="false" defer type="text/javascript"
                  src="https://embed.cloudflarestream.com/embed/we4g.fla9.latest.js"></script>
        4XX:
          description: Retreieve embed Code HTML response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/{identifier}/token:
    post:
      tags:
        - Accounts
        - Signed
        - Stream
        - Tokens
        - URL
        - Videos
      summary: 'Create Signed URL Tokens For Videos '
      description: >-
        Creates a signed URL token for a video. If a body is not provided in the
        request, a token is created with default values.
      operationId: stream-videos-create-signed-url-tokens-for-videos
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_signed_token_request'
      responses:
        '200':
          description: Create signed URL tokens for videos response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_signed_token_response'
        4XX:
          description: Create signed URL tokens for videos response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/clip:
    post:
      tags:
        - Accounts
        - Clip
        - Given
        - Stream
        - Time
        - Videos
      summary: 'Clip Videos Given A Start And End Time '
      description: >-
        Clips a video based on the specified start and end times provided in
        seconds.
      operationId: stream-video-clipping-clip-videos-given-a-start-and-end-time
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_videoClipStandard'
      responses:
        '200':
          description: Clip videos given a start and end time response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_clipResponseSingle'
        4XX:
          description: Clip videos given a start and end time response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/copy:
    post:
      tags:
        - Accounts
        - Copy
        - Stream
        - URL
        - Uploads
        - Videos
      summary: 'Upload Videos From A URL '
      description: Uploads a video to Stream from a provided URL.
      operationId: stream-videos-upload-videos-from-a-url
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: Upload-Creator
          in: header
          schema:
            $ref: '#/components/schemas/stream_creator'
        - name: Upload-Metadata
          in: header
          schema:
            $ref: '#/components/schemas/stream_upload_metadata'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_video_copy_request'
      responses:
        '200':
          description: Upload videos from a URL response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_video_response_single'
        4XX:
          description: Upload videos from a URL response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/direct_upload:
    post:
      tags:
        - Accounts
        - Direct
        - Stream
        - URLs
        - Uploads
        - Videos
      summary: 'Upload Videos Via Direct Upload URLs '
      description: Creates a direct upload that allows video uploads without an API key.
      operationId: stream-videos-upload-videos-via-direct-upload-ur-ls
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: Upload-Creator
          in: header
          schema:
            $ref: '#/components/schemas/stream_creator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_direct_upload_request'
      responses:
        '200':
          description: Upload videos via direct upload URLs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_direct_upload_response'
        4XX:
          description: Upload videos via direct upload URLs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/keys:
    get:
      tags:
        - Accounts
        - Keys
        - Signing
        - Stream
      summary: 'List Signing Keys '
      description: >-
        Lists the video ID and creation date and time when a signing key was
        created.
      operationId: stream-signing-keys-list-signing-keys
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      responses:
        '200':
          description: List signing keys response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_key_response_collection'
        4XX:
          description: List signing keys response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Keys
        - Signing
        - Stream
      summary: 'Create Signing Keys '
      description: >-
        Creates an RSA private key in PEM and JWK formats. Key files are only
        displayed once after creation. Keys are created, used, and deleted
        independently of videos, and every key can sign any video.
      operationId: stream-signing-keys-create-signing-keys
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Create signing keys response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_key_generation_response'
        4XX:
          description: Create signing keys response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/keys/{identifier}:
    delete:
      tags:
        - Accounts
        - Keys
        - Signing
        - Stream
      summary: 'Delete Signing Keys '
      description: Deletes signing keys and revokes all signed URLs generated with the key.
      operationId: stream-signing-keys-delete-signing-keys
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete signing keys response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_deleted_response'
        4XX:
          description: Delete signing keys response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/live_inputs:
    get:
      tags:
        - Accounts
        - Inputs
        - Live
        - Stream
      summary: 'List Live Inputs '
      description: >-
        Lists the live inputs created for an account. To get the credentials
        needed to stream to a specific live input, request a single live input.
      operationId: stream-live-inputs-list-live-inputs
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
        - name: include_counts
          in: query
          schema:
            $ref: '#/components/schemas/stream_include_counts'
      responses:
        '200':
          description: List live inputs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_live_input_response_collection'
        4XX:
          description: List live inputs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Inputs
        - Live
        - Stream
      summary: 'Create A Live Input '
      description: >-
        Creates a live input, and returns credentials that you or your users can
        use to stream live video to Cloudflare Stream.
      operationId: stream-live-inputs-create-a-live-input
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_create_input_request'
      responses:
        '200':
          description: Create a live input response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_live_input_response_single'
        4XX:
          description: Create a live input response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/live_inputs/{live_input_identifier}:
    delete:
      tags:
        - Accounts
        - Inputs
        - Live
        - Stream
      summary: 'Delete A Live Input '
      description: >-
        Prevents a live input from being streamed to and makes the live input
        inaccessible to any future API calls.
      operationId: stream-live-inputs-delete-a-live-input
      parameters:
        - name: live_input_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_live_input_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a live input response
          content:
            application/json: {}
        4XX:
          description: Delete a live input response failure
          content:
            application/json: {}
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Inputs
        - Live
        - Stream
      summary: 'Retrieve A Live Input '
      description: Retrieves details of an existing live input.
      operationId: stream-live-inputs-retrieve-a-live-input
      parameters:
        - name: live_input_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_live_input_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      responses:
        '200':
          description: Retrieve a live input response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_live_input_response_single'
        4XX:
          description: Retrieve a live input response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Inputs
        - Live
        - Stream
      summary: 'Update A Live Input '
      description: Updates a specified live input.
      operationId: stream-live-inputs-update-a-live-input
      parameters:
        - name: live_input_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_live_input_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_update_input_request'
      responses:
        '200':
          description: Update a live input response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_live_input_response_single'
        4XX:
          description: Update a live input response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/live_inputs/{live_input_identifier}/outputs:
    get:
      tags:
        - Accounts
        - Associated
        - Inputs
        - Live
        - Outputs
        - Specified
        - Stream
      summary: 'List All Outputs Associated With A Specified Live Input '
      description: Retrieves all outputs associated with a specified live input.
      operationId: >-
        stream-live-inputs-list-all-outputs-associated-with-a-specified-live-input
      parameters:
        - name: live_input_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_live_input_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      responses:
        '200':
          description: List all outputs associated with a specified live input response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_output_response_collection'
        4XX:
          description: >-
            List all outputs associated with a specified live input response
            failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Connected
        - Inputs
        - Live
        - Output
        - Outputs
        - Stream
      summary: 'Create A New Output, Connected To A Live Input '
      description: >-
        Creates a new output that can be used to simulcast or restream live
        video to other RTMP or SRT destinations. Outputs are always linked to a
        specific live input — one live input can have many outputs.
      operationId: stream-live-inputs-create-a-new-output,-connected-to-a-live-input
      parameters:
        - name: live_input_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_live_input_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_create_output_request'
      responses:
        '200':
          description: Create a new output, connected to a live input response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_output_response_single'
        4XX:
          description: Create a new output, connected to a live input response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/live_inputs/{live_input_identifier}/outputs/{output_identifier}:
    delete:
      tags:
        - Accounts
        - Inputs
        - Live
        - Output
        - Outputs
        - Stream
      summary: 'Delete An Output '
      description: Deletes an output and removes it from the associated live input.
      operationId: stream-live-inputs-delete-an-output
      parameters:
        - name: output_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_output_identifier'
        - name: live_input_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_live_input_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete an output response
          content:
            application/json: {}
        4XX:
          description: Delete an output response failure
          content:
            application/json: {}
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Inputs
        - Live
        - Output
        - Outputs
        - Stream
      summary: 'Update An Output '
      description: Updates the state of an output.
      operationId: stream-live-inputs-update-an-output
      parameters:
        - name: output_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_output_identifier'
        - name: live_input_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_live_input_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_update_output_request'
      responses:
        '200':
          description: Update an output response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_output_response_single'
        4XX:
          description: Update an output response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/storage-usage:
    get:
      tags:
        - Accounts
        - Storage
        - Stream
        - Usage
      summary: 'Storage Use '
      description: Returns information about an account's storage use.
      operationId: stream-videos-storage-usage
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
        - name: creator
          in: query
          schema:
            $ref: '#/components/schemas/stream_creator'
      responses:
        '200':
          description: Returns information about an account's storage use response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_storage_use_response'
        4XX:
          description: Returns information about an account's storage use response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/watermarks:
    get:
      tags:
        - Accounts
        - Profiles
        - Stream
        - Watermarks
      summary: 'List Watermark Profiles '
      description: Lists all watermark profiles for an account.
      operationId: stream-watermark-profile-list-watermark-profiles
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      responses:
        '200':
          description: List watermark profiles response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_watermark_response_collection'
        4XX:
          description: List watermark profiles response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Basic
        - Profiles
        - Stream
        - Uploads
        - Watermarks
      summary: 'Create Watermark Profiles Via Basic Upload '
      description: >-
        Creates watermark profiles using a single `HTTP POST
        multipart/form-data` request.
      operationId: stream-watermark-profile-create-watermark-profiles-via-basic-upload
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/stream_watermark_basic_upload'
      responses:
        '200':
          description: Create watermark profiles via basic upload response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_watermark_response_single'
        4XX:
          description: Create watermark profiles via basic upload response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/watermarks/{identifier}:
    delete:
      tags:
        - Accounts
        - Profiles
        - Stream
        - Watermarks
      summary: 'Delete Watermark Profiles '
      description: Deletes a watermark profile.
      operationId: stream-watermark-profile-delete-watermark-profiles
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_watermark_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete watermark profiles response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/stream_api-response-single'
                  - properties:
                      result:
                        type: string
                        example: ''
        4XX:
          description: Delete watermark profiles response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Details
        - Profiles
        - Stream
        - Watermarks
      summary: 'Watermark Profile Details '
      description: Retrieves details for a single watermark profile.
      operationId: stream-watermark-profile-watermark-profile-details
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_watermark_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      responses:
        '200':
          description: Watermark profile details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_watermark_response_single'
        4XX:
          description: Watermark profile details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/stream/webhook:
    delete:
      tags:
        - Accounts
        - Stream
        - Webhooks
      summary: 'Delete Webhooks '
      description: Deletes a webhook.
      operationId: stream-webhook-delete-webhooks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete webhooks response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_deleted_response'
        4XX:
          description: Delete webhooks response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    get:
      tags:
        - Accounts
        - Stream
        - View
        - Webhooks
      summary: 'View Webhooks '
      description: Retrieves a list of webhooks.
      operationId: stream-webhook-view-webhooks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      responses:
        '200':
          description: View webhooks response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_webhook_response_single'
        4XX:
          description: View webhooks response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Stream
        - Webhooks
      summary: 'Create Webhooks '
      description: Creates a webhook notification.
      operationId: stream-webhook-create-webhooks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/stream_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream_webhook_request'
      responses:
        '200':
          description: Create webhooks response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_webhook_response_single'
        4XX:
          description: Create webhooks response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_id}/teamnet/routes:
    get:
      tags:
        - Accounts
        - Routes
        - Teams
        - Tunnels
      summary: 'List Tunnel Routes '
      description: Lists and filters private network routes in an account.
      operationId: tunnel-route-list-tunnel-routes
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: comment
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_comment'
        - name: is_deleted
          in: query
          schema:
            description: >-
              If `true`, only include deleted routes. If `false`, exclude
              deleted routes. If empty, all routes will be included.
        - name: network_subset
          in: query
          schema:
            description: If set, only list routes that are contained within this IP range.
        - name: network_superset
          in: query
          schema:
            description: If set, only list routes that contain this IP range.
        - name: existed_at
          in: query
          schema:
            description: >-
              If provided, include only routes that were created (and not
              deleted) before this time.
        - name: tunnel_id
          in: query
          schema:
            description: UUID of the Cloudflare Tunnel serving the route.
        - name: route_id
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_route_id'
        - name: tun_types
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_types'
        - name: virtual_network_id
          in: query
          schema:
            description: >-
              UUID of the Tunnel Virtual Network this route belongs to. If no
              virtual networks are configured, the route is assigned to the
              default virtual network of the account.
        - name: per_page
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_per_page'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
      responses:
        '200':
          description: List tunnel routes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_teamnet_response_collection'
        4XX:
          description: List tunnel routes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_teamnet_response_collection'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Routes
        - Teams
        - Tunnels
      summary: 'Create A Tunnel Route '
      description: Routes a private network through a Cloudflare Tunnel.
      operationId: tunnel-route-create-a-tunnel-route
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ip_network
                - tunnel_id
              properties:
                comment:
                  $ref: '#/components/schemas/tunnel_comment'
                ip_network:
                  $ref: '#/components/schemas/tunnel_ip_network'
                tunnel_id:
                  $ref: '#/components/schemas/tunnel_tunnel_id'
                virtual_network_id:
                  $ref: '#/components/schemas/tunnel_route_virtual_network_id'
      responses:
        '200':
          description: Create a tunnel route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_route_response_single'
        4XX:
          description: Create a tunnel route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_route_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/teamnet/routes/{route_id}:
    delete:
      tags:
        - Accounts
        - Routes
        - Teams
        - Tunnels
      summary: 'Delete A Tunnel Route '
      description: |
        Deletes a private network route from an account.
      operationId: tunnel-route-delete-a-tunnel-route
      parameters:
        - name: route_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_route_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Delete a tunnel route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_route_response_single'
        4XX:
          description: Delete a tunnel route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_route_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Routes
        - Teams
        - Tunnels
      summary: 'Update A Tunnel Route '
      description: >-
        Updates an existing private network route in an account. The fields that
        are meant to be updated should be provided in the body of the request.
      operationId: tunnel-route-update-a-tunnel-route
      parameters:
        - name: route_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_route_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  $ref: '#/components/schemas/tunnel_comment'
                network:
                  $ref: '#/components/schemas/tunnel_ip_network'
                tun_type:
                  $ref: '#/components/schemas/tunnel_tunnel_type'
                tunnel_id:
                  $ref: '#/components/schemas/tunnel_route_tunnel_id'
                virtual_network_id:
                  $ref: '#/components/schemas/tunnel_route_virtual_network_id'
      responses:
        '200':
          description: Update a tunnel route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_route_response_single'
        4XX:
          description: Update a tunnel route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_route_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/teamnet/routes/ip/{ip}:
    get:
      tags:
        - Accounts
        - IP
        - Routes
        - Teams
        - Tunnels
      summary: 'Get Tunnel Route By IP '
      description: Fetches routes that contain the given IP address.
      operationId: tunnel-route-get-tunnel-route-by-ip
      parameters:
        - name: ip
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_ip'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: virtual_network_id
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_route_virtual_network_id'
      responses:
        '200':
          description: Get tunnel route by IP response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_teamnet_response_single'
        4XX:
          description: Get tunnel route by IP response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_teamnet_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/teamnet/routes/network/{ip_network_encoded}:
    delete:
      tags:
        - (CIDR
        - Accounts
        - Encoded
        - Endpoints
        - IP
        - Networks
        - Routes
        - Teams
        - Tunnels
      summary: 'Delete A Tunnel Route (CIDR Endpoint) '
      description: >
        Deletes a private network route from an account. The CIDR in
        `ip_network_encoded` must be written in URL-encoded format. If no
        virtual_network_id is provided it will delete the route from the default
        vnet. If no tun_type is provided it will fetch the type from the
        tunnel_id or if that is missing it will assume Cloudflare Tunnel as
        default. If tunnel_id is provided it will delete the route from that
        tunnel, otherwise it will delete the route based on the vnet and
        tun_type.
      operationId: tunnel-route-delete-a-tunnel-route-with-cidr
      parameters:
        - name: ip_network_encoded
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_ip_network_encoded'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: virtual_network_id
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_vnet_id'
        - name: tun_type
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_type'
        - name: tunnel_id
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
      responses:
        '200':
          description: Delete a tunnel route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_route_response_single'
        4XX:
          description: Delete a tunnel route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_route_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - (CIDR
        - Accounts
        - Encoded
        - Endpoints
        - IP
        - Networks
        - Routes
        - Teams
        - Tunnels
      summary: 'Update A Tunnel Route (CIDR Endpoint) '
      description: >-
        Updates an existing private network route in an account. The CIDR in
        `ip_network_encoded` must be written in URL-encoded format.
      operationId: tunnel-route-update-a-tunnel-route-with-cidr
      parameters:
        - name: ip_network_encoded
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_ip_network_encoded'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Update a tunnel route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_route_response_single'
        4XX:
          description: Update a tunnel route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_route_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - (CIDR
        - Accounts
        - Encoded
        - Endpoints
        - IP
        - Networks
        - Routes
        - Teams
        - Tunnels
      summary: 'Create A Tunnel Route (CIDR Endpoint) '
      description: >-
        Routes a private network through a Cloudflare Tunnel. The CIDR in
        `ip_network_encoded` must be written in URL-encoded format.
      operationId: tunnel-route-create-a-tunnel-route-with-cidr
      parameters:
        - name: ip_network_encoded
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_ip_network_encoded'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tunnel_id
              properties:
                comment:
                  $ref: '#/components/schemas/tunnel_comment'
                tunnel_id:
                  $ref: '#/components/schemas/tunnel_tunnel_id'
                virtual_network_id:
                  $ref: '#/components/schemas/tunnel_route_virtual_network_id'
      responses:
        '200':
          description: Create a tunnel route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_route_response_single'
        4XX:
          description: Create a tunnel route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_route_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/teamnet/virtual_networks:
    get:
      tags:
        - Accounts
        - Networks
        - Teams
        - Virtual
      summary: 'List Virtual Networks '
      description: Lists and filters virtual networks in an account.
      operationId: tunnel-virtual-network-list-virtual-networks
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: name
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_vnet_name'
        - name: is_default
          in: query
          schema:
            description: >-
              If `true`, only include the default virtual network. If `false`,
              exclude the default virtual network. If empty, all virtual
              networks will be included.
        - name: is_deleted
          in: query
          schema:
            description: >-
              If `true`, only include deleted virtual networks. If `false`,
              exclude deleted virtual networks. If empty, all virtual networks
              will be included.
        - name: vnet_name
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_vnet_name'
        - name: vnet_id
          in: query
          schema:
            type: string
            description: UUID of the virtual network.
            example: f70ff985-a4ef-4643-bbbc-4a0ed4fc8415
            readOnly: true
            maxLength: 36
      responses:
        '200':
          description: List virtual networks response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_vnet_response_collection'
        4XX:
          description: List virtual networks response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_vnet_response_collection'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Networks
        - Teams
        - Virtual
      summary: 'Create A Virtual Network '
      description: Adds a new virtual network to an account.
      operationId: tunnel-virtual-network-create-a-virtual-network
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                comment:
                  $ref: '#/components/schemas/tunnel_schemas-comment'
                is_default:
                  $ref: '#/components/schemas/tunnel_is_default_network'
                name:
                  $ref: '#/components/schemas/tunnel_vnet_name'
      responses:
        '200':
          description: Create a virtual network response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_vnet_response_single'
        4XX:
          description: Create a virtual network response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_vnet_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/teamnet/virtual_networks/{virtual_network_id}:
    delete:
      tags:
        - Accounts
        - Networks
        - Teams
        - Virtual
      summary: 'Delete A Virtual Network '
      description: Deletes an existing virtual network.
      operationId: tunnel-virtual-network-delete-a-virtual-network
      parameters:
        - name: virtual_network_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_vnet_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a virtual network response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_vnet_response_single'
        4XX:
          description: Delete a virtual network response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_vnet_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Networks
        - Teams
        - Virtual
      summary: 'Update A Virtual Network '
      description: Updates an existing virtual network.
      operationId: tunnel-virtual-network-update-a-virtual-network
      parameters:
        - name: virtual_network_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_vnet_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  $ref: '#/components/schemas/tunnel_schemas-comment'
                is_default_network:
                  $ref: '#/components/schemas/tunnel_is_default_network'
                name:
                  $ref: '#/components/schemas/tunnel_vnet_name'
      responses:
        '200':
          description: Update a virtual network response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_vnet_response_single'
        4XX:
          description: Update a virtual network response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_vnet_response_single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/tunnels:
    get:
      tags:
        - Accounts
        - Tunnels
      summary: 'List All Tunnels '
      description: Lists and filters all types of Tunnels in an account.
      operationId: cloudflare-tunnel-list-all-tunnels
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: name
          in: query
          schema:
            type: string
            description: A user-friendly name for the tunnel.
            example: blog
        - name: is_deleted
          in: query
          schema:
            type: boolean
            description: >-
              If `true`, only include deleted tunnels. If `false`, exclude
              deleted tunnels. If empty, all tunnels will be included.
            example: true
        - name: existed_at
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_existed_at'
        - name: uuid
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: was_active_at
          in: query
          schema:
            type: string
            format: date-time
            example: '2009-11-10T23:00:00Z'
        - name: was_inactive_at
          in: query
          schema:
            type: string
            format: date-time
            example: '2009-11-10T23:00:00Z'
        - name: include_prefix
          in: query
          schema:
            type: string
            example: vpc1-
        - name: exclude_prefix
          in: query
          schema:
            type: string
            example: vpc1-
        - name: tun_types
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_types'
        - name: per_page
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_per_page'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
      responses:
        '200':
          description: List Tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-collection'
        4XX:
          description: List Tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-collection'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Argo
        - Tunnels
      summary: 'Create An Argo Tunnel '
      description: Creates a new Argo Tunnel in an account.
      operationId: argo-tunnel-create-an-argo-tunnel
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - tunnel_secret
              properties:
                name:
                  $ref: '#/components/schemas/tunnel_tunnel_name'
                tunnel_secret:
                  description: >-
                    Sets the password required to run the tunnel. Must be at
                    least 32 bytes and encoded as a base64 string.
      responses:
        '200':
          description: Create an Argo Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_legacy-tunnel-response-single'
        4XX:
          description: Create an Argo Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_legacy-tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/tunnels/{tunnel_id}:
    delete:
      tags:
        - Accounts
        - Argo
        - Tunnels
      summary: 'Delete An Argo Tunnel '
      description: Deletes an Argo Tunnel from an account.
      operationId: argo-tunnel-delete-an-argo-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Delete an Argo Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_legacy-tunnel-response-single'
        4XX:
          description: Delete an Argo Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_legacy-tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Argo
        - Tunnels
      summary: 'Get An Argo Tunnel '
      description: Fetches a single Argo Tunnel.
      operationId: argo-tunnel-get-an-argo-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Get an Argo Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_legacy-tunnel-response-single'
        4XX:
          description: Get an Argo Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_legacy-tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/tunnels/{tunnel_id}/connections:
    delete:
      tags:
        - Accounts
        - Argo
        - Clean
        - Connections
        - Tunnels
        - Up
      summary: 'Clean Up Argo Tunnel Connections '
      description: >-
        Removes connections that are in a disconnected or pending reconnect
        state. We recommend running this command after shutting down a tunnel.
      operationId: argo-tunnel-clean-up-argo-tunnel-connections
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Clean up Argo Tunnel connections response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_empty_response'
        4XX:
          description: Clean up Argo Tunnel connections response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_empty_response'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/warp_connector:
    get:
      tags:
        - Accounts
        - Connectors
        - Tunnels
      summary: 'List Warp Connector Tunnels '
      description: Lists and filters Warp Connector Tunnels in an account.
      operationId: cloudflare-tunnel-list-warp-connector-tunnels
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
        - name: name
          in: query
          schema:
            type: string
            description: A user-friendly name for the tunnel.
            example: blog
        - name: is_deleted
          in: query
          schema:
            type: boolean
            description: >-
              If `true`, only include deleted tunnels. If `false`, exclude
              deleted tunnels. If empty, all tunnels will be included.
            example: true
        - name: existed_at
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_existed_at'
        - name: uuid
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: was_active_at
          in: query
          schema:
            type: string
            format: date-time
            example: '2009-11-10T23:00:00Z'
        - name: was_inactive_at
          in: query
          schema:
            type: string
            format: date-time
            example: '2009-11-10T23:00:00Z'
        - name: include_prefix
          in: query
          schema:
            type: string
            example: vpc1-
        - name: exclude_prefix
          in: query
          schema:
            type: string
            example: vpc1-
        - name: per_page
          in: query
          schema:
            $ref: '#/components/schemas/tunnel_per_page'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
      responses:
        '200':
          description: List Warp Connector Tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-collection'
        4XX:
          description: List Warp Connector Tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-collection'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Connectors
        - Tunnels
      summary: 'Create A Warp Connector Tunnel '
      description: Creates a new Warp Connector Tunnel in an account.
      operationId: cloudflare-tunnel-create-a-warp-connector-tunnel
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  $ref: '#/components/schemas/tunnel_tunnel_name'
      responses:
        '200':
          description: Create a Warp Connector Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Create a Warp Connector Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/warp_connector/{tunnel_id}:
    delete:
      tags:
        - Accounts
        - Connectors
        - Tunnels
      summary: 'Delete A Warp Connector Tunnel '
      description: Deletes a Warp Connector Tunnel from an account.
      operationId: cloudflare-tunnel-delete-a-warp-connector-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Delete a Warp Connector Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Delete a Warp Connector Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Connectors
        - Tunnels
      summary: 'Get A Warp Connector Tunnel '
      description: Fetches a single Warp Connector Tunnel.
      operationId: cloudflare-tunnel-get-a-warp-connector-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Get a Warp Connector Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Get a Warp Connector Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Connectors
        - Tunnels
      summary: 'Update A Warp Connector Tunnel '
      description: Updates an existing Warp Connector Tunnel.
      operationId: cloudflare-tunnel-update-a-warp-connector-tunnel
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/tunnel_tunnel_name'
                tunnel_secret:
                  $ref: '#/components/schemas/tunnel_tunnel_secret'
      responses:
        '200':
          description: Update a Warp Connector Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel-response-single'
        4XX:
          description: Update a Warp Connector Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel-response-single'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/warp_connector/{tunnel_id}/token:
    get:
      tags:
        - Accounts
        - Connectors
        - Tokens
        - Tunnels
      summary: 'Get A Warp Connector Tunnel Token '
      description: >-
        Gets the token used to associate warp device with a specific Warp
        Connector tunnel.
      operationId: cloudflare-tunnel-get-a-warp-connector-tunnel-token
      parameters:
        - name: tunnel_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_tunnel_id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Get a Warp Connector Tunnel token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_tunnel_response_token'
        4XX:
          description: Get a Warp Connector Tunnel token response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/tunnel_tunnel_response_token'
                  - $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/account-settings:
    get:
      tags:
        - Accounts
        - Fetch
        - Settings
        - Workers
      summary: 'Fetch Worker Account Settings '
      description: Fetches Worker account settings for an account.
      operationId: worker-account-settings-fetch-worker-account-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Fetch Worker Account Settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_account-settings-response'
        4XX:
          description: Fetch Worker Account Settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_account-settings-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Settings
        - Workers
      summary: 'Create Worker Account Settings '
      description: Creates Worker account settings for an account.
      operationId: worker-account-settings-create-worker-account-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: '{''default_usage_model'': ''unbound''}'
      responses:
        '200':
          description: Create Worker Account Settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_account-settings-response'
        4XX:
          description: Create Worker Account Settings response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_account-settings-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/deployments/by-script/{script_id}:
    get:
      tags:
        - Accounts
        - Deployments
        - Scripts
        - Workers
      summary: 'List Deployments '
      operationId: worker-deployments-list-deployments
      parameters:
        - name: script_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Deployments response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_deployments-list-response'
        4XX:
          description: List Deployments response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_deployments-list-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/deployments/by-script/{script_id}/detail/{deployment_id}:
    get:
      tags:
        - Accounts
        - Deployments
        - Detail
        - Scripts
        - Workers
      summary: 'Get Deployment Detail '
      operationId: worker-deployments-get-deployment-detail
      parameters:
        - name: deployment_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_deployment_identifier'
        - name: script_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Get Deployment Detail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_deployments-single-response'
        4XX:
          description: Get Deployment Detail response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_deployments-single-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/dispatch/namespaces:
    get:
      tags:
        - Accounts
        - Dispatch
        - Namespaces
        - Workers
      summary: 'List Dispatch Namespaces '
      description: Fetch a list of Workers for Platforms namespaces.
      operationId: namespace-worker-list
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Fetch a list of Workers for Platforms namespaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-list-response'
        4XX:
          description: Failure to get list of Workers for Platforms namespaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Dispatch
        - Namespaces
        - Workers
      summary: 'Create Dispatch Namespace '
      description: Create a new Workers for Platforms namespace.
      operationId: namespace-worker-create
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the dispatch namespace
                  example: my-dispatch-namespace
      responses:
        '200':
          description: Fetch a list of Workers for Platforms namespaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-single-response'
        4XX:
          description: Failure to get list of Workers for Platforms namespaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}:
    delete:
      tags:
        - Accounts
        - Dispatch
        - Namespaces
        - Workers
      summary: 'Delete Dispatch Namespace '
      description: Delete a Workers for Platforms namespace.
      operationId: namespace-worker-delete-namespace
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
      responses:
        '200':
          description: Delete a Workers for Platforms namespace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-delete-response'
        4XX:
          description: Failure to delete Workers for Platforms namespace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Dispatch
        - Fetch
        - Namespaces
        - Workers
      summary: 'Fetch Dispatch Namespace '
      description: Fetch a Workers for Platforms namespace.
      operationId: namespace-worker-get-namespace
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
      responses:
        '200':
          description: Fetch a Workers for Platforms namespace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-single-response'
        4XX:
          description: Failure to get Workers for Platforms namespace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}:
    delete:
      tags:
        - (Workers
        - Accounts
        - Dispatch
        - Names
        - Namespaces
        - Platforms
        - Scripts
        - Workers
      summary: 'Delete Worker (Workers For Platforms) '
      description: >-
        Delete a worker from a Workers for Platforms namespace. This call has no
        response body on a successful delete.
      operationId: namespace-worker-script-delete-worker
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: force
          in: query
          description: >-
            If set to true, delete will not be stopped by associated service
            binding, durable object, or other binding. Any of these associated
            bindings/durable objects will be deleted along with the script.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Worker response
          content:
            application/json: {}
        4XX:
          description: Delete Worker response failure
          content:
            application/json: {}
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - (Workers
        - Accounts
        - Details
        - Dispatch
        - Names
        - Namespaces
        - Platforms
        - Scripts
        - Workers
      summary: 'Worker Details (Workers For Platforms) '
      description: >-
        Fetch information about a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-script-worker-details
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          description: Worker Details Response (Workers for Platforms)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_namespace-script-response-single'
        4XX:
          description: Worker Details Failure (Workers for Platforms)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - (Workers
        - Accounts
        - Dispatch
        - Modules
        - Names
        - Namespaces
        - Platforms
        - Scripts
        - Uploads
        - Workers
      summary: 'Upload Worker Module (Workers For Platforms) '
      description: Upload a worker module to a Workers for Platforms namespace.
      operationId: namespace-worker-script-upload-worker-module
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        $ref: '#/components/requestBodies/workers_script_upload'
      responses:
        '200':
          $ref: '#/components/responses/workers_200'
        4XX:
          $ref: '#/components/responses/workers_4XX'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/bindings:
    get:
      tags:
        - (Workers
        - Accounts
        - Bindings
        - Dispatch
        - Names
        - Namespaces
        - Platforms
        - Scripts
        - Workers
      summary: 'Get Script Bindings (Workers For Platforms) '
      description: >-
        Fetch script bindings from a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-get-script-bindings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          description: Fetch script bindings (Workers for Platforms)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_binding'
        4XX:
          description: Fetch script bindings failure (Workers for Platforms)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/content:
    get:
      tags:
        - (Workers
        - Accounts
        - Content
        - Dispatch
        - Names
        - Namespaces
        - Platforms
        - Scripts
        - Workers
      summary: 'Get Script Content (Workers For Platforms) '
      description: >-
        Fetch script content from a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-get-script-content
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          description: Fetch script content (Workers for Platforms)
          content:
            string:
              schema:
                example: >-
                  addEventListener('fetch', event => {
                  event.respondWith(fetch(event.request)) })
        4XX:
          description: Fetch script content failure (Workers for Platforms)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - (Workers
        - Accounts
        - Content
        - Dispatch
        - Names
        - Namespaces
        - Platforms
        - Scripts
        - Workers
      summary: 'Put Script Content (Workers For Platforms) '
      description: >-
        Put script content for a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-put-script-content
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: CF-WORKER-BODY-PART
          in: header
          description: >-
            The multipart name of a script upload part containing script content
            in service worker format. Alternative to including in a metadata
            part.
          schema:
            type: string
        - name: CF-WORKER-MAIN-MODULE-PART
          in: header
          description: >-
            The multipart name of a script upload part containing script content
            in es module format. Alternative to including in a metadata part.
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                <any part name>:
                  type: array
                  description: >-
                    A module comprising a Worker script, often a javascript
                    file. Multiple modules may be provided as separate named
                    parts, but at least one module must be present. This should
                    be referenced either in the metadata as `main_module`
                    (esm)/`body_part` (service worker) or as a header
                    `CF-WORKER-MAIN-MODULE-PART` (esm) /`CF-WORKER-BODY-PART`
                    (service worker) by part name.
                  items:
                    type: string
                    format: binary
                metadata:
                  type: object
                  description: >-
                    JSON encoded metadata about the uploaded parts and Worker
                    configuration.
                  properties:
                    body_part:
                      type: string
                      description: >-
                        Name of the part in the multipart request that contains
                        the script (e.g. the file adding a listener to the
                        `fetch` event). Indicates a `service worker syntax`
                        Worker.
                      example: worker.js
                    main_module:
                      type: string
                      description: >-
                        Name of the part in the multipart request that contains
                        the main module (e.g. the file exporting a `fetch`
                        handler). Indicates a `module syntax` Worker.
                      example: worker.js
            encoding:
              <any part name>:
                contentType: >-
                  application/javascript+module, text/javascript+module,
                  application/javascript, text/javascript, application/wasm,
                  text/plain, application/octet-stream
      responses:
        '200':
          description: Put script content (Workers for Platforms)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-response-single'
        4XX:
          description: Put script content failure (Workers for Platforms)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/dispatch/namespaces/{dispatch_namespace}/scripts/{script_name}/settings:
    get:
      tags:
        - Accounts
        - Dispatch
        - Names
        - Namespaces
        - Scripts
        - Settings
        - Workers
      summary: 'Get Script Settings '
      description: >-
        Get script settings from a script uploaded to a Workers for Platforms
        namespace.
      operationId: namespace-worker-get-script-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          description: Fetch script settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
        4XX:
          description: Fetch script settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Dispatch
        - Names
        - Namespaces
        - Patch
        - Scripts
        - Settings
        - Workers
      summary: 'Patch Script Settings '
      description: Patch script metadata, such as bindings
      operationId: namespace-worker-patch-script-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: dispatch_namespace
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_dispatch_namespace_name'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_script-settings-response'
      responses:
        '200':
          description: Patch script settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
        4XX:
          description: Patch script settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/domains:
    get:
      tags:
        - Accounts
        - Domains
        - Workers
      summary: 'List Domains '
      description: Lists all Worker Domains for an account.
      operationId: worker-domain-list-domains
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_account_identifier'
        - name: zone_name
          in: query
          schema:
            $ref: '#/components/schemas/workers_zone_name'
        - name: service
          in: query
          schema:
            $ref: '#/components/schemas/workers_schemas-service'
        - name: zone_id
          in: query
          schema:
            $ref: '#/components/schemas/workers_zone_identifier'
        - name: hostname
          in: query
          schema:
            type: string
            description: Hostname of the Worker Domain.
            example: foo.example.com
        - name: environment
          in: query
          schema:
            type: string
            description: Worker environment associated with the zone and hostname.
            example: production
      responses:
        '200':
          description: List Domains response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_domain-response-collection'
        4XX:
          description: List Domains response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_domain-response-collection'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Attach
        - Domains
        - Workers
      summary: 'Attach To Domain '
      description: Attaches a Worker to a zone and hostname.
      operationId: worker-domain-attach-to-domain
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - zone_id
                - hostname
                - service
                - environment
              properties:
                environment:
                  $ref: '#/components/schemas/workers_schemas-environment'
                hostname:
                  $ref: '#/components/schemas/workers_hostname'
                service:
                  $ref: '#/components/schemas/workers_schemas-service'
                zone_id:
                  $ref: '#/components/schemas/workers_zone_identifier'
      responses:
        '200':
          description: Attach to Domain response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_domain-response-single'
        4XX:
          description: Attach to Domain response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_domain-response-single'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/domains/{domain_id}:
    delete:
      tags:
        - Accounts
        - Detach
        - Domains
        - Workers
      summary: 'Detach From Domain '
      description: Detaches a Worker from a zone and hostname.
      operationId: worker-domain-detach-from-domain
      parameters:
        - name: domain_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_domain_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Detach from Domain response
          content:
            application/json: {}
        4XX:
          description: Detach from Domain response failure
          content:
            application/json: {}
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Domains
        - Workers
      summary: 'Get A Domain '
      description: Gets a Worker domain.
      operationId: worker-domain-get-a-domain
      parameters:
        - name: domain_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_domain_identifier'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_account_identifier'
      responses:
        '200':
          description: Get a Domain response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_domain-response-single'
        4XX:
          description: Get a Domain response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_domain-response-single'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/durable_objects/namespaces:
    get:
      tags:
        - Accounts
        - Durable
        - Namespaces
        - Objects
        - Workers
      summary: 'List Namespaces '
      description: Returns the Durable Object namespaces owned by an account.
      operationId: durable-objects-namespace-list-namespaces
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Namespaces response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/workers_namespace'
        4XX:
          description: List Namespaces response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/workers_namespace'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/durable_objects/namespaces/{id}/objects:
    get:
      tags:
        - Accounts
        - Durable
        - Namespaces
        - Objects
        - Workers
      summary: 'List Objects '
      description: Returns the Durable Objects in a given namespace.
      operationId: durable-objects-namespace-list-objects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_schemas-id'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: limit
          in: query
          schema:
            type: number
            description: >-
              The number of objects to return. The cursor attribute may be used
              to iterate over the next batch of objects if there are more than
              the limit.
            default: 1000
            minimum: 10
            maximum: 10000
        - name: cursor
          in: query
          schema:
            type: string
            description: >-
              Opaque token indicating the position from which to continue when
              requesting the next set of records. A valid value for the cursor
              can be obtained from the cursors object in the result_info
              structure.
            example: >-
              AAAAANuhDN7SjacTnSVsDu3WW1Lvst6dxJGTjRY5BhxPXdf6L6uTcpd_NVtjhn11OUYRsVEykxoUwF-JQU4dn6QylZSKTOJuG0indrdn_MlHpMRtsxgXjs-RPdHYIVm3odE_uvEQ_dTQGFm8oikZMohns34DLBgrQpc
      responses:
        '200':
          description: List Objects response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/workers_object'
                      result_info:
                        properties:
                          count:
                            type: number
                            description: >-
                              Total results returned based on your list
                              parameters.
                            example: 1
                          cursor:
                            $ref: '#/components/schemas/workers_cursor'
        4XX:
          description: List Objects response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/workers_object'
                          result_info:
                            properties:
                              count:
                                type: number
                                description: >-
                                  Total results returned based on your list
                                  parameters.
                                example: 1
                              cursor:
                                $ref: '#/components/schemas/workers_cursor'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/queues:
    get:
      tags:
        - Accounts
        - Queues
        - Workers
      summary: 'List Queues '
      description: Returns the queues owned by an account.
      operationId: queue-list-queues
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Queues response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - properties:
                      errors:
                        type: array
                        nullable: true
                        items: {}
                  - properties:
                      messages:
                        type: array
                        nullable: true
                        items: {}
                  - properties:
                      result_info:
                        type: object
                        properties:
                          count:
                            example: 1
                          page:
                            example: 1
                          per_page:
                            example: 100
                          total_count:
                            example: 1
                          total_pages:
                            example: 1
                  - type: object
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                      - producers_total_count
                      - producers
                      - consumers_total_count
                      - consumers
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/workers_queue'
        4XX:
          description: List Queues response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - properties:
                          errors:
                            type: array
                            nullable: true
                            items: {}
                      - properties:
                          messages:
                            type: array
                            nullable: true
                            items: {}
                      - properties:
                          result_info:
                            type: object
                            properties:
                              count:
                                example: 1
                              page:
                                example: 1
                              per_page:
                                example: 100
                              total_count:
                                example: 1
                              total_pages:
                                example: 1
                      - type: object
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                          - producers_total_count
                          - producers
                          - consumers_total_count
                          - consumers
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/workers_queue'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Queues
        - Workers
      summary: 'Create Queue '
      description: Creates a new queue.
      operationId: queue-create-queue
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                queue_name: example-queue
      responses:
        '200':
          description: Create Queue response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                    properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/workers_queue_created'
                        type: object
        4XX:
          description: Create Queue response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                        properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/workers_queue_created'
                            type: object
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/queues/{name}:
    delete:
      tags:
        - Accounts
        - Names
        - Queues
        - Workers
      summary: 'Delete Queue '
      description: Deletes a queue.
      operationId: queue-delete-queue
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Queue response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    nullable: true
                    properties:
                      result:
                        type: array
                        nullable: true
                        items: {}
        4XX:
          description: Delete Queue response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        nullable: true
                        properties:
                          result:
                            type: array
                            nullable: true
                            items: {}
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Names
        - Queues
        - Workers
      summary: 'Queue Details '
      description: Get information about a specific queue.
      operationId: queue-queue-details
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Queue Details response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                    properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/workers_queue'
                        type: object
        4XX:
          description: Queue Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                        properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/workers_queue'
                            type: object
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Names
        - Queues
        - Workers
      summary: 'Update Queue '
      description: Updates a queue.
      operationId: queue-update-queue
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                queue_name: renamed-example-queue
      responses:
        '200':
          description: Update Queue response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    required:
                      - queue_id
                      - queue_name
                      - created_on
                      - modified_on
                    properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/workers_queue_updated'
                        type: object
        4XX:
          description: Update Queue response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        required:
                          - queue_id
                          - queue_name
                          - created_on
                          - modified_on
                        properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/workers_queue_updated'
                            type: object
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/queues/{name}/consumers:
    get:
      tags:
        - Accounts
        - Consumers
        - Names
        - Queues
        - Workers
      summary: 'List Queue Consumers '
      description: Returns the consumers for a queue.
      operationId: queue-list-queue-consumers
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Queue Consumers response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - properties:
                      errors:
                        type: array
                        nullable: true
                        items: {}
                  - properties:
                      messages:
                        type: array
                        nullable: true
                        items: {}
                  - properties:
                      result_info:
                        type: object
                        properties:
                          count:
                            example: 1
                          page:
                            example: 1
                          per_page:
                            example: 100
                          total_count:
                            example: 1
                          total_pages:
                            example: 1
                  - type: object
                    required:
                      - queue_name
                      - created_on
                      - settings
                    properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/workers_consumer'
        4XX:
          description: List Queue Consumers response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - properties:
                          errors:
                            type: array
                            nullable: true
                            items: {}
                      - properties:
                          messages:
                            type: array
                            nullable: true
                            items: {}
                      - properties:
                          result_info:
                            type: object
                            properties:
                              count:
                                example: 1
                              page:
                                example: 1
                              per_page:
                                example: 100
                              total_count:
                                example: 1
                              total_pages:
                                example: 1
                      - type: object
                        required:
                          - queue_name
                          - created_on
                          - settings
                        properties:
                          result:
                            type: array
                            items:
                              $ref: '#/components/schemas/workers_consumer'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Consumer
        - Consumers
        - Names
        - Queues
        - Workers
      summary: 'Create Queue Consumer '
      description: Creates a new consumer for a queue.
      operationId: queue-create-queue-consumer
      parameters:
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                dead_letter_queue: example-dlq
                environment: production
                script_name: example-consumer
                settings:
                  batch_size: 10
                  max_retries: 3
                  max_wait_time_ms: 5000
      responses:
        '200':
          description: Create Queue Consumer response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    required:
                      - queue_name
                      - script_name
                      - settings
                      - dead_letter_queue
                      - created_on
                    properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/workers_consumer_created'
                        type: object
        4XX:
          description: Create Queue Consumer response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        required:
                          - queue_name
                          - script_name
                          - settings
                          - dead_letter_queue
                          - created_on
                        properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/workers_consumer_created'
                            type: object
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/queues/{name}/consumers/{consumer_name}:
    delete:
      tags:
        - Accounts
        - Consumer
        - Consumers
        - Names
        - Queues
        - Workers
      summary: 'Delete Queue Consumer '
      description: Deletes the consumer for a queue.
      operationId: queue-delete-queue-consumer
      parameters:
        - name: consumer_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_consumer_name'
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Queue Consumer response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    nullable: true
                    properties:
                      result:
                        type: array
                        nullable: true
                        items: {}
        4XX:
          description: Delete Queue Consumer response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        nullable: true
                        properties:
                          result:
                            type: array
                            nullable: true
                            items: {}
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Consumer
        - Consumers
        - Names
        - Queues
        - Workers
      summary: 'Update Queue Consumer '
      description: Updates the consumer for a queue, or creates one if it does not exist.
      operationId: queue-update-queue-consumer
      parameters:
        - name: consumer_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_consumer_name'
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example:
                dead_letter_queue: updated-example-dlq
                environment: production
                script_name: example-consumer
                settings:
                  batch_size: 100
      responses:
        '200':
          description: Update Queue Consumer response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-collection'
                  - type: object
                    required:
                      - queue_name
                      - script_name
                      - settings
                      - dead_letter_queue
                      - created_on
                    properties:
                      result:
                        allOf:
                          - $ref: '#/components/schemas/workers_consumer_updated'
                        type: object
        4XX:
          description: Update Queue Consumer response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/workers_api-response-collection'
                      - type: object
                        required:
                          - queue_name
                          - script_name
                          - settings
                          - dead_letter_queue
                          - created_on
                        properties:
                          result:
                            allOf:
                              - $ref: '#/components/schemas/workers_consumer_updated'
                            type: object
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts:
    get:
      tags:
        - Accounts
        - Scripts
        - Workers
      summary: 'List Workers '
      description: Fetch a list of uploaded workers.
      operationId: worker-script-list-workers
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Workers response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-response-collection'
        4XX:
          description: List Workers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_script-response-collection'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}:
    delete:
      tags:
        - Accounts
        - Names
        - Scripts
        - Workers
      summary: 'Delete Worker '
      description: >-
        Delete your worker. This call has no response body on a successful
        delete.
      operationId: worker-script-delete-worker
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: force
          in: query
          description: >-
            If set to true, delete will not be stopped by associated service
            binding, durable object, or other binding. Any of these associated
            bindings/durable objects will be deleted along with the script.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Worker response
          content:
            application/json: {}
        4XX:
          description: Delete Worker response failure
          content:
            application/json: {}
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Download
        - Names
        - Scripts
        - Workers
      summary: 'Download Worker '
      description: >-
        Fetch raw script content for your worker. Note this is the original
        script content, not JSON encoded.
      operationId: worker-script-download-worker
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Download Worker response
          content:
            undefined:
              schema:
                example: >-
                  addEventListener('fetch', event => {
                  event.respondWith(fetch(event.request)) })
        4XX:
          description: Download Worker response failure
          content:
            undefined:
              schema:
                example: >-
                  addEventListener('fetch', event => {
                  event.respondWith(fetch(event.request)) })
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Modules
        - Names
        - Scripts
        - Uploads
        - Workers
      summary: 'Upload Worker Module '
      description: Upload a worker module.
      operationId: worker-script-upload-worker-module
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: rollback_to
          in: query
          description: >-
            Rollback to provided deployment based on deployment ID. Request body
            will only parse a "message" part. You can learn more about
            deployments
            [here](https://developers.cloudflare.com/workers/platform/deployments/).
          schema:
            $ref: '#/components/schemas/workers_uuid'
      requestBody:
        $ref: '#/components/requestBodies/workers_script_upload'
      responses:
        '200':
          description: Upload Worker Module response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_script-response-single'
                  - example:
                      errors: []
                      messages: []
                      result:
                        created_on: '2022-05-05T05:15:11.602148Z'
                        etag: >-
                          777f24a43bef5f69174aa69ceaf1dea67968d510a31d1vw3e49d34a0187c06d1
                        handlers:
                          - fetch
                        id: this-is_my_script-01
                        logpush: false
                        modified_on: '2022-05-20T19:02:56.446492Z'
                        placement_mode: smart
                        tail_consumers:
                          - environment: production
                            service: my-log-consumer
                        usage_model: bundled
                      success: true
        4XX:
          description: Upload Worker Module response failure
          content:
            application/json:
              schema:
                allOf:
                  - example:
                      errors: []
                      messages: []
                      result:
                        created_on: '2022-05-05T05:15:11.602148Z'
                        etag: >-
                          777f24a43bef5f69174aa69ceaf1dea67968d510a31d1vw3e49d34a0187c06d1
                        handlers:
                          - fetch
                        id: this-is_my_script-01
                        logpush: false
                        modified_on: '2022-05-20T19:02:56.446492Z'
                        tail_consumers:
                          - environment: production
                            service: my-log-consumer
                        usage_model: bundled
                      success: true
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}/content:
    put:
      tags:
        - Accounts
        - Content
        - Names
        - Scripts
        - Workers
      summary: 'Put Script Content '
      description: Put script content without touching config or metadata
      operationId: worker-script-put-content
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: CF-WORKER-BODY-PART
          in: header
          description: >-
            The multipart name of a script upload part containing script content
            in service worker format. Alternative to including in a metadata
            part.
          schema:
            type: string
        - name: CF-WORKER-MAIN-MODULE-PART
          in: header
          description: >-
            The multipart name of a script upload part containing script content
            in es module format. Alternative to including in a metadata part.
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                <any part name>:
                  type: array
                  description: >-
                    A module comprising a Worker script, often a javascript
                    file. Multiple modules may be provided as separate named
                    parts, but at least one module must be present. This should
                    be referenced either in the metadata as `main_module`
                    (esm)/`body_part` (service worker) or as a header
                    `CF-WORKER-MAIN-MODULE-PART` (esm) /`CF-WORKER-BODY-PART`
                    (service worker) by part name.
                  items:
                    type: string
                    format: binary
                metadata:
                  type: object
                  description: >-
                    JSON encoded metadata about the uploaded parts and Worker
                    configuration.
                  properties:
                    body_part:
                      type: string
                      description: >-
                        Name of the part in the multipart request that contains
                        the script (e.g. the file adding a listener to the
                        `fetch` event). Indicates a `service worker syntax`
                        Worker.
                      example: worker.js
                    main_module:
                      type: string
                      description: >-
                        Name of the part in the multipart request that contains
                        the main module (e.g. the file exporting a `fetch`
                        handler). Indicates a `module syntax` Worker.
                      example: worker.js
            encoding:
              <any part name>:
                contentType: >-
                  application/javascript+module, text/javascript+module,
                  application/javascript, text/javascript, application/wasm,
                  text/plain, application/octet-stream
      responses:
        '200':
          description: Put script content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-response-single'
        4XX:
          description: Put script content failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}/content/v2:
    get:
      tags:
        - Accounts
        - Content
        - Names
        - Scripts
        - Workers
      summary: 'Get Script Content '
      description: Fetch script content only
      operationId: worker-script-get-content
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          description: Fetch script content
          content:
            string:
              schema:
                example: >-
                  addEventListener('fetch', event => {
                  event.respondWith(fetch(event.request)) })
        4XX:
          description: Fetch script content failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}/schedules:
    get:
      tags:
        - Accounts
        - CRON
        - Names
        - Schedules
        - Scripts
        - Triggers
        - Workers
      summary: 'Get Cron Triggers '
      description: Fetches Cron Triggers for a Worker.
      operationId: worker-cron-trigger-get-cron-triggers
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Get Cron Triggers response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_cron-trigger-response-collection'
        4XX:
          description: Get Cron Triggers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/workers_cron-trigger-response-collection
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - CRON
        - Names
        - Schedules
        - Scripts
        - Triggers
        - Workers
      summary: 'Update Cron Triggers '
      description: Updates Cron Triggers for a Worker.
      operationId: worker-cron-trigger-update-cron-triggers
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: '[{''cron'': ''*/30 * * * *''}]'
      responses:
        '200':
          description: Update Cron Triggers response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_cron-trigger-response-collection'
        4XX:
          description: Update Cron Triggers response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/workers_cron-trigger-response-collection
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}/settings:
    get:
      tags:
        - Accounts
        - Names
        - Scripts
        - Settings
        - Workers
      summary: 'Get Script Settings '
      description: Get script metadata and config, such as bindings or usage model
      operationId: worker-script-get-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      responses:
        '200':
          description: Fetch script settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
        4XX:
          description: Fetch script settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Names
        - Patch
        - Scripts
        - Settings
        - Workers
      summary: 'Patch Script Settings '
      description: Patch script metadata or config, such as bindings or usage model
      operationId: worker-script-patch-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                settings:
                  $ref: '#/components/schemas/workers_script-settings-response'
      responses:
        '200':
          description: Patch script settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
        4XX:
          description: Patch script settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}/tails:
    get:
      tags:
        - Accounts
        - Names
        - Scripts
        - Tails
        - Workers
      summary: 'List Tails '
      description: Get list of tails currently deployed on a Worker.
      operationId: worker-tail-logs-list-tails
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: List Tails response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_tail-response'
        4XX:
          description: List Tails response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_tail-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Names
        - Scripts
        - Tails
        - Workers
      summary: 'Start Tail '
      description: Starts a tail that receives logs and exception from a Worker.
      operationId: worker-tail-logs-start-tail
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Start Tail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_tail-response'
        4XX:
          description: Start Tail response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_tail-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}/tails/{id}:
    delete:
      tags:
        - Accounts
        - Names
        - Scripts
        - Tails
        - Workers
      summary: 'Delete Tail '
      description: Deletes a tail from a Worker.
      operationId: worker-tail-logs-delete-tail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_id'
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Tail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
        4XX:
          description: Delete Tail response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_api-response-common'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/scripts/{script_name}/usage-model:
    get:
      tags:
        - Accounts
        - Fetch
        - Models
        - Names
        - Scripts
        - Usage
        - Workers
      summary: 'Fetch Usage Model '
      description: Fetches the Usage Model for a given Worker.
      operationId: worker-script-fetch-usage-model
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Fetch Usage Model response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_usage-model-response'
        4XX:
          description: Fetch Usage Model response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_usage-model-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Models
        - Names
        - Scripts
        - Usage
        - Workers
      summary: 'Update Usage Model '
      description: >-
        Updates the Usage Model for a given Worker. Requires a Workers Paid
        subscription.
      operationId: worker-script-update-usage-model
      parameters:
        - name: script_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_script_name'
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: '{''usage_model'': ''unbound''}'
      responses:
        '200':
          description: Update Usage Model response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_usage-model-response'
        4XX:
          description: Update Usage Model response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_usage-model-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/services/{service_name}/environments/{environment_name}/content:
    get:
      tags:
        - Accounts
        - Content
        - Environments
        - Names
        - Scripts
        - Services
        - Workers
      summary: 'Get Script Content '
      description: Get script content from a worker with an environment
      operationId: worker-environment-get-script-content
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: service_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - name: environment_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
      responses:
        '200':
          description: Get script content
          content:
            string:
              schema:
                example: >-
                  addEventListener('fetch', event => {
                  event.respondWith(fetch(event.request)) })
        4XX:
          description: Get script content failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Content
        - Environments
        - Names
        - Scripts
        - Services
        - Workers
      summary: 'Put Script Content '
      description: Put script content from a worker with an environment
      operationId: worker-environment-put-script-content
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: service_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - name: environment_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
        - name: CF-WORKER-BODY-PART
          in: header
          description: >-
            The multipart name of a script upload part containing script content
            in service worker format. Alternative to including in a metadata
            part.
          schema:
            type: string
        - name: CF-WORKER-MAIN-MODULE-PART
          in: header
          description: >-
            The multipart name of a script upload part containing script content
            in es module format. Alternative to including in a metadata part.
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                <any part name>:
                  type: array
                  description: >-
                    A module comprising a Worker script, often a javascript
                    file. Multiple modules may be provided as separate named
                    parts, but at least one module must be present. This should
                    be referenced either in the metadata as `main_module`
                    (esm)/`body_part` (service worker) or as a header
                    `CF-WORKER-MAIN-MODULE-PART` (esm) /`CF-WORKER-BODY-PART`
                    (service worker) by part name.
                  items:
                    type: string
                    format: binary
                metadata:
                  type: object
                  description: >-
                    JSON encoded metadata about the uploaded parts and Worker
                    configuration.
                  properties:
                    body_part:
                      type: string
                      description: >-
                        Name of the part in the multipart request that contains
                        the script (e.g. the file adding a listener to the
                        `fetch` event). Indicates a `service worker syntax`
                        Worker.
                      example: worker.js
                    main_module:
                      type: string
                      description: >-
                        Name of the part in the multipart request that contains
                        the main module (e.g. the file exporting a `fetch`
                        handler). Indicates a `module syntax` Worker.
                      example: worker.js
            encoding:
              <any part name>:
                contentType: >-
                  application/javascript+module, text/javascript+module,
                  application/javascript, text/javascript, application/wasm,
                  text/plain, application/octet-stream
      responses:
        '200':
          description: Put script content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-response-single'
        4XX:
          description: Put script content failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/services/{service_name}/environments/{environment_name}/settings:
    get:
      tags:
        - Accounts
        - Environments
        - Names
        - Scripts
        - Services
        - Settings
        - Workers
      summary: 'Get Script Settings '
      description: Get script settings from a worker with an environment
      operationId: worker-script-environment-get-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: service_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - name: environment_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
      responses:
        '200':
          description: Fetch script settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
        4XX:
          description: Fetch script settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Environments
        - Names
        - Patch
        - Scripts
        - Services
        - Settings
        - Workers
      summary: 'Patch Script Settings '
      description: Patch script metadata, such as bindings
      operationId: worker-script-environment-patch-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
        - name: service_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_service'
        - name: environment_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_environment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workers_script-settings-response'
      responses:
        '200':
          description: Patch script settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_script-settings-response'
        4XX:
          description: Patch script settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_api-response-common'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/workers/subdomain:
    get:
      tags:
        - Accounts
        - Subdomains
        - Workers
      summary: 'Get Subdomain '
      description: Returns a Workers subdomain for an account.
      operationId: worker-subdomain-get-subdomain
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      responses:
        '200':
          description: Get Subdomain response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_subdomain-response'
        4XX:
          description: Get Subdomain response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_subdomain-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Subdomains
        - Workers
      summary: 'Create Subdomain '
      description: Creates a Workers subdomain for an account.
      operationId: worker-subdomain-create-subdomain
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/workers_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              example: '{''subdomain'': ''example-subdomain''}'
      responses:
        '200':
          description: Create Subdomain response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workers_subdomain-response'
        4XX:
          description: Create Subdomain response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/workers_subdomain-response'
                  - $ref: '#/components/schemas/workers_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_id}/zerotrust/connectivity_settings:
    get:
      tags:
        - Accounts
        - Connectivity
        - Settings
        - Trust
        - Zero Trust
      summary: 'Get Zero Trust Connectivity Settings '
      description: Gets the Zero Trust Connectivity Settings for the given account.
      operationId: zero-trust-accounts-get-connectivity-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      responses:
        '200':
          description: Get Zero Trust Connectivity Settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tunnel_zero_trust_connectivity_settings_response
        4XX:
          description: Get Zero Trust Connectivity Settings response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Connectivity
        - Settings
        - Trust
        - Zero Trust
      summary: 'Updates The Zero Trust Connectivity Settings '
      description: Updates the Zero Trust Connectivity Settings for the given account.
      operationId: zero-trust-accounts-patch-connectivity-settings
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/tunnel_cf_account_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                icmp_proxy_enabled:
                  $ref: '#/components/schemas/tunnel_icmp_proxy_enabled'
                offramp_warp_enabled:
                  $ref: '#/components/schemas/tunnel_offramp_warp_enabled'
      responses:
        '200':
          description: Update Zero Trust Connectivity Settings response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/tunnel_zero_trust_connectivity_settings_response
        4XX:
          description: Update Zero Trust Connectivity Settings response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tunnel_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/billing/profile:
    get:
      tags:
        - Accounts
        - Billing
        - Details
        - Profiles
      summary: 'Billing Profile Details '
      description: Gets the current billing profile for the account.
      operationId: account-billing-profile-(-deprecated)-billing-profile-details
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_account_identifier'
      responses:
        '200':
          description: Billing Profile Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bill-subs-api_billing_response_single'
        4XX:
          description: Billing Profile Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bill-subs-api_billing_response_single'
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      deprecated: true
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_identifier}/cloudforce-one/requests:
    post:
      tags:
        - Accounts
        - Cloudforce
      summary: 'List Requests '
      operationId: cloudforce-one-request-list
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_request-list'
      responses:
        '200':
          description: List requests response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/cloudforce-one_request-list-item
        4XX:
          description: Create response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/{request_identifier}:
    delete:
      tags:
        - Accounts
        - Cloudforce
      summary: 'Delete A Request '
      operationId: cloudforce-one-request-delete
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: request_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      responses:
        '200':
          description: Delete a request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloudforce-one_api-response-common'
        4XX:
          description: Create response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Cloudforce
      summary: 'Get A Request '
      operationId: cloudforce-one-request-get
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: request_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      responses:
        '200':
          description: Get a request response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_request-item'
        4XX:
          description: Get a request response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Cloudforce
      summary: 'Update A Request '
      description: >-
        Updating a request alters the request in the Cloudforce One queue. This
        API may be used to update any attributes of the request after the
        initial submission. Only fields that you choose to update need to be add
        to the request body
      operationId: cloudforce-one-request-update
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: request_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_request-edit'
      responses:
        '200':
          description: Update a request response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_request-item'
        4XX:
          description: Update request response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/{request_identifier}/message:
    post:
      tags:
        - Accounts
        - Cloudforce
        - Messages
      summary: 'List Request Messages '
      operationId: cloudforce-one-request-message-list
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: request_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_request-message-list'
      responses:
        '200':
          description: List request messages response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: >-
                            #/components/schemas/cloudforce-one_request-message-item
        4XX:
          description: List requests message response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/{request_identifier}/message/{message_identifer}:
    delete:
      tags:
        - Accounts
        - Cloudforce
        - Entifer
        - Messages
      summary: 'Delete A Request Message '
      operationId: cloudforce-one-request-message-delete
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: request_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
        - name: message_identifer
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Delete a request message response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloudforce-one_api-response-common'
        4XX:
          description: Delete request message response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Cloudforce
        - Entifer
        - Messages
      summary: 'Update A Request Message '
      operationId: cloudforce-one-request-message-update
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: request_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
        - name: message_identifer
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_request-edit'
      responses:
        '200':
          description: Update a request messeage response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/cloudforce-one_request-message-item
        4XX:
          description: Update request message response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/{request_identifier}/message/new:
    post:
      tags:
        - Accounts
        - Cloudforce
        - Messages
      summary: 'Create A New Request Message '
      description: >-
        Creating a request adds the request into the Cloudforce One queue for
        analysis. In addition to the content, a short title, type, priority, and
        releasability should be provided. If one is not provided a default will
        be assigned.
      operationId: cloudforce-one-request-message-new
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: request_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_request-message-edit'
      responses:
        '200':
          description: Create request response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/cloudforce-one_request-message-item
        4XX:
          description: Create response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/constants:
    get:
      tags:
        - Accounts
        - Cloudforce
        - Constants
        - Priorities
        - Status
        - TLP
      summary: 'Get Request Priority, Status, And TLP Constants '
      operationId: cloudforce-one-request-constants
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      responses:
        '200':
          description: Get request constants response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_request-constants'
        4XX:
          description: Get request constants response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/new:
    post:
      tags:
        - Accounts
        - Cloudforce
      summary: 'Create A New Request '
      description: >-
        Creating a request adds the request into the Cloudforce One queue for
        analysis. In addition to the content, a short title, type, priority, and
        releasability should be provided. If one is not provided a default will
        be assigned.
      operationId: cloudforce-one-request-new
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_request-edit'
      responses:
        '200':
          description: Create request response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_request-item'
        4XX:
          description: Create response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/priority:
    post:
      tags:
        - Accounts
        - Cloudforce
        - Intelligence
        - Priorities
        - Requirements
      summary: 'List Priority Intelligence Requirements '
      operationId: cloudforce-one-priority-list
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_priority-list'
      responses:
        '200':
          description: List priorities response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/cloudforce-one_priority-item'
        4XX:
          description: List priorities response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/priority/{priority_identifer}:
    delete:
      tags:
        - Accounts
        - Cloudforce
        - Entifer
        - Intelligence
        - Priorities
        - Reports
      summary: 'Delete A Priority Intelligence Report '
      operationId: cloudforce-one-priority-delete
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: priority_identifer
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      responses:
        '200':
          description: Delete a priority response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cloudforce-one_api-response-common'
        4XX:
          description: Delete a priority response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Cloudforce
        - Entifer
        - Intelligence
        - Priorities
        - Requirements
      summary: 'Get A Priority Intelligence Requirement '
      operationId: cloudforce-one-priority-get
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: priority_identifer
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      responses:
        '200':
          description: Get a priority response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_request-item'
        4XX:
          description: Get a priority response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Cloudforce
        - Entifer
        - Intelligence
        - Priorities
        - Requirements
      summary: 'Update A Priority Intelligence Requirement '
      operationId: cloudforce-one-priority-update
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
        - name: priority_identifer
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_priority-edit'
      responses:
        '200':
          description: Update a priority response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_request-item'
        4XX:
          description: Update a priority response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/priority/new:
    post:
      tags:
        - Accounts
        - Cloudforce
        - Priorities
        - Requirements
      summary: 'Create A New Priority Requirement '
      operationId: cloudforce-one-priority-new
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cloudforce-one_priority-edit'
      responses:
        '200':
          description: Create priority response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_priority-item'
        4XX:
          description: Create priority response  failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/priority/quota:
    get:
      tags:
        - Accounts
        - Cloudforce
        - Intelligence
        - Priorities
        - Quota
        - Requirements
      summary: 'Get Priority Intelligence Requirement Quota '
      operationId: cloudforce-one-priority-quota
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      responses:
        '200':
          description: Get priority quota response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_quota'
        4XX:
          description: Get priority quota response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/quota:
    get:
      tags:
        - Accounts
        - Cloudforce
        - Quota
      summary: 'Get Request Quota '
      operationId: cloudforce-one-request-quota
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      responses:
        '200':
          description: Get request quota response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_quota'
        4XX:
          description: Get request quota response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/cloudforce-one/requests/types:
    get:
      tags:
        - Accounts
        - Cloudforce
        - Types
      summary: 'Get Request Types '
      operationId: cloudforce-one-request-types
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/cloudforce-one_identifier'
      responses:
        '200':
          description: Get request types response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/cloudforce-one_api-response-common'
                  - properties:
                      result:
                        $ref: '#/components/schemas/cloudforce-one_request-types'
        4XX:
          description: Get request types response failure
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/cloudforce-one_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/custom_pages:
    get:
      tags:
        - Accounts
        - Custom
        - Pages
      summary: 'List Custom Pages '
      description: Fetches all the custom pages at the account level.
      operationId: custom-pages-for-an-account-list-custom-pages
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
      responses:
        '200':
          description: List custom pages response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/custom-pages_custom_pages_response_collection
        4xx:
          description: List custom pages response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/custom-pages_custom_pages_response_collection
                  - $ref: >-
                      #/components/schemas/custom-pages_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_identifier}/custom_pages/{identifier}:
    get:
      tags:
        - Accounts
        - Custom
        - Page
        - Pages
      summary: 'Get A Custom Page '
      description: Fetches the details of a custom page.
      operationId: custom-pages-for-an-account-get-a-custom-page
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
      responses:
        '200':
          description: Get a custom page response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-pages_custom_pages_response_single'
        4xx:
          description: Get a custom page response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/custom-pages_custom_pages_response_single
                  - $ref: >-
                      #/components/schemas/custom-pages_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    put:
      tags:
        - Accounts
        - Custom
        - Page
        - Pages
      summary: 'Update A Custom Page '
      description: Updates the configuration of an existing custom page.
      operationId: custom-pages-for-an-account-update-a-custom-page
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/custom-pages_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - url
                - state
              properties:
                state:
                  $ref: '#/components/schemas/custom-pages_state'
                url:
                  $ref: '#/components/schemas/custom-pages_url'
      responses:
        '200':
          description: Update a custom page response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-pages_custom_pages_response_single'
        4xx:
          description: Update a custom page response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/custom-pages_custom_pages_response_single
                  - $ref: >-
                      #/components/schemas/custom-pages_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_identifier}/d1/database/{database_identifier}:
    delete:
      tags:
        - Accounts
        - Databases
      summary: 'Delete D1 Database '
      description: Deletes the specified D1 database.
      operationId: cloudflare-d1-delete-database
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_account-identifier'
        - name: database_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_database-identifier'
      responses:
        '200':
          description: Delete D1 database response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/d1_api-response-single'
                  - properties:
                      result:
                        type: object
                        nullable: true
        4XX:
          description: Delete D1 database response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/d1_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/d1_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Databases
      summary: 'Get D1 Database '
      description: Returns the specified D1 database.
      operationId: cloudflare-d1-get-database
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_account-identifier'
        - name: database_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_database-identifier'
      responses:
        '200':
          description: Database details response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/d1_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/d1_database-details-response'
        4XX:
          description: Database details response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/d1_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/d1_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/d1/database/{database_identifier}/query:
    post:
      tags:
        - Accounts
        - Databases
        - Queries
      summary: 'Query D1 Database '
      description: Returns the query result.
      operationId: cloudflare-d1-query-database
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_account-identifier'
        - name: database_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/d1_database-identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sql
              properties:
                params:
                  $ref: '#/components/schemas/d1_params'
                sql:
                  $ref: '#/components/schemas/d1_sql'
      responses:
        '200':
          description: Query response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/d1_api-response-single'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/d1_query-result-response'
        4XX:
          description: Query response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/d1_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/d1_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/dns_firewall/{identifier}/dns_analytics/report:
    get:
      tags:
        - Accounts
        - Analytics
        - DNS
        - Firewall
        - Reports
        - Tables
      summary: 'Table '
      description: >-
        Retrieves a list of summarised aggregate metrics over a given time
        period.


        See [Analytics API
        properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/)
        for detailed information about the available query parameters.
      operationId: dns-firewall-analytics-table
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_identifier'
        - name: metrics
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_metrics'
        - name: dimensions
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_dimensions'
        - name: since
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_since'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_until'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_limit'
        - name: sort
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_sort'
        - name: filters
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_filters'
      responses:
        '200':
          description: Table response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-single
                  - type: object
                    properties:
                      result:
                        $ref: '#/components/schemas/dns_dns_analytics_api_report'
        4XX:
          description: Table response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/dns_dns_analytics_api_api-response-single
                      - type: object
                        properties:
                          result:
                            $ref: '#/components/schemas/dns_dns_analytics_api_report'
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/dns_firewall/{identifier}/dns_analytics/report/bytime:
    get:
      tags:
        - Accounts
        - Analytics
        - DNS
        - Firewall
        - Reports
        - Time
      summary: 'By Time '
      description: >-
        Retrieves a list of aggregate metrics grouped by time interval.


        See [Analytics API
        properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/)
        for detailed information about the available query parameters.
      operationId: dns-firewall-analytics-by-time
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_identifier'
        - name: metrics
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_metrics'
        - name: dimensions
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_dimensions'
        - name: since
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_since'
        - name: until
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_until'
        - name: limit
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_limit'
        - name: sort
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_sort'
        - name: filters
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_filters'
        - name: time_delta
          in: query
          schema:
            $ref: '#/components/schemas/dns_dns_analytics_api_time_delta'
      responses:
        '200':
          description: By Time response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-single
                  - type: object
                    properties:
                      result:
                        $ref: >-
                          #/components/schemas/dns_dns_analytics_api_report_bytime
        4XX:
          description: By Time response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: >-
                          #/components/schemas/dns_dns_analytics_api_api-response-single
                      - type: object
                        properties:
                          result:
                            $ref: >-
                              #/components/schemas/dns_dns_analytics_api_report_bytime
                  - $ref: >-
                      #/components/schemas/dns_dns_analytics_api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/email/routing/addresses:
    get:
      tags:
        - Accounts
        - Addresses
        - Destinations
        - Emails
        - Routing
      summary: 'List Destination Addresses '
      description: Lists existing destination addresses.
      operationId: email-routing-destination-addresses-list-destination-addresses
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
        - name: page
          in: query
          schema:
            type: number
            description: Page number of paginated results.
            default: 1
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of results per page.
            default: 20
            minimum: 5
            maximum: 50
        - name: direction
          in: query
          schema:
            type: string
            description: Sorts results in an ascending or descending order.
            enum:
              - asc
              - desc
            default: asc
            example: asc
        - name: verified
          in: query
          schema:
            type: boolean
            description: Filter by verified destination addresses.
            enum:
              - true
              - false
            default: true
            example: true
      responses:
        '200':
          description: List destination addresses response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/email_destination_addresses_response_collection
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Addresses
        - Destinations
        - Emails
        - Routing
      summary: 'Create A Destination Address '
      description: >-
        Create a destination address to forward your emails to. Destination
        addresses need to be verified before they can be used.
      operationId: email-routing-destination-addresses-create-a-destination-address
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/email_create_destination_address_properties'
      responses:
        '200':
          description: Create a destination address response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_destination_address_response_single'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/email/routing/addresses/{destination_address_identifier}:
    delete:
      tags:
        - Accounts
        - Addresses
        - Destinations
        - Emails
        - Routing
      summary: 'Delete Destination Address '
      description: Deletes a specific destination address.
      operationId: email-routing-destination-addresses-delete-destination-address
      parameters:
        - name: destination_address_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_destination_address_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          description: Delete destination address response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_destination_address_response_single'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Addresses
        - Destinations
        - Emails
        - Routing
      summary: 'Get A Destination Address '
      description: Gets information for a specific destination email already created.
      operationId: email-routing-destination-addresses-get-a-destination-address
      parameters:
        - name: destination_address_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_destination_address_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/email_identifier'
      responses:
        '200':
          description: Get a destination address response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/email_destination_address_response_single'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/firewall/access_rules/rules:
    get:
      tags:
        - Access
        - Accounts
        - Firewall
        - IP
        - Rules
      summary: 'List IP Access Rules '
      description: >-
        Fetches IP Access rules of an account. These rules apply to all the
        zones in the account. You can filter the results using several optional
        parameters.
      operationId: ip-access-rules-for-an-account-list-ip-access-rules
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_account_identifier'
        - name: filters
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-filters'
        - name: egs-pagination.json
          in: query
          schema:
            $ref: '#/components/schemas/legacy-jhs_egs-pagination'
        - name: page
          in: query
          schema:
            type: number
            description: Requested page within paginated list of results.
            example: 1
        - name: per_page
          in: query
          schema:
            type: number
            description: Maximum number of results requested.
            example: 20
        - name: order
          in: query
          schema:
            type: string
            description: The field used to sort returned rules.
            enum:
              - configuration.target
              - configuration.value
              - mode
            example: mode
        - name: direction
          in: query
          schema:
            type: string
            description: The direction used to sort returned rules.
            enum:
              - asc
              - desc
            example: desc
      responses:
        '200':
          description: List IP Access rules response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_response_collection'
        4xx:
          description: List IP Access rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_response_collection'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    post:
      tags:
        - Access
        - Accounts
        - Firewall
        - IP
        - Rules
      summary: 'Create An IP Access Rule '
      description: >-
        Creates a new IP Access rule for an account. The rule will apply to all
        zones in the account.


        Note: To create an IP Access rule that applies to a single zone, refer
        to the [IP Access rules for a zone](#ip-access-rules-for-a-zone)
        endpoints.
      operationId: ip-access-rules-for-an-account-create-an-ip-access-rule
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - mode
                - configuration
              properties:
                configuration:
                  $ref: '#/components/schemas/legacy-jhs_schemas-configuration'
                mode:
                  $ref: '#/components/schemas/legacy-jhs_schemas-mode'
                notes:
                  $ref: '#/components/schemas/legacy-jhs_notes'
      responses:
        '200':
          description: Create an IP Access rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_response_single'
        4xx:
          description: Create an IP Access rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_identifier}/firewall/access_rules/rules/{identifier}:
    delete:
      tags:
        - Access
        - Accounts
        - Firewall
        - IP
        - Rules
      summary: 'Delete An IP Access Rule '
      description: |-
        Deletes an existing IP Access rule defined at the account level.

        Note: This operation will affect all zones in the account.
      operationId: ip-access-rules-for-an-account-delete-an-ip-access-rule
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete an IP Access rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_api-response-single-id'
        4xx:
          description: Delete an IP Access rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_api-response-single-id'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    get:
      tags:
        - Access
        - Accounts
        - Firewall
        - IP
        - Rules
      summary: 'Get An IP Access Rule '
      description: Fetches the details of an IP Access rule defined at the account level.
      operationId: ip-access-rules-for-an-account-get-an-ip-access-rule
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_account_identifier'
      responses:
        '200':
          description: Get an IP Access rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_response_single'
        4xx:
          description: Get an IP Access rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
    patch:
      tags:
        - Access
        - Accounts
        - Firewall
        - IP
        - Rules
      summary: 'Update An IP Access Rule '
      description: |-
        Updates an IP Access rule defined at the account level.

        Note: This operation will affect all zones in the account.
      operationId: ip-access-rules-for-an-account-update-an-ip-access-rule
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_schemas-identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/legacy-jhs_account_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/legacy-jhs_schemas-rule'
      responses:
        '200':
          description: Update an IP Access rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacy-jhs_response_single'
        4xx:
          description: Update an IP Access rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/legacy-jhs_response_single'
                  - $ref: >-
                      #/components/schemas/legacy-jhs_api-response-common-failure
      security:
        - api_email: []
          api_key: []
        - api_token: []
  /accounts/{account_identifier}/magic/cf_interconnects:
    get:
      tags:
        - Accounts
        - Interconnect
        - Magic
      summary: 'List Interconnects '
      description: Lists interconnects associated with an account.
      operationId: magic-interconnects-list-interconnects
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List interconnects response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic_components-schemas-tunnels_collection_response
        4xx:
          description: List interconnects response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_components-schemas-tunnels_collection_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Interconnect
        - Magic
        - Multiple
      summary: 'Update Multiple Interconnects '
      description: >-
        Updates multiple interconnects associated with an account. Use
        `?validate_only=true` as an optional query parameter to only run
        validation without persisting changes.
      operationId: magic-interconnects-update-multiple-interconnects
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update multiple interconnects response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic_components-schemas-modified_tunnels_collection_response
        4xx:
          description: Update multiple interconnects response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_components-schemas-modified_tunnels_collection_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/cf_interconnects/{tunnel_identifier}:
    get:
      tags:
        - Accounts
        - Details
        - Interconnect
        - Magic
        - Tunnels
      summary: 'List Interconnect Details '
      description: Lists details for a specific interconnect.
      operationId: magic-interconnects-list-interconnect-details
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List interconnect Details response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic_components-schemas-tunnel_single_response
        4xx:
          description: List interconnect Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_components-schemas-tunnel_single_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Interconnect
        - Magic
        - Tunnels
      summary: 'Update Interconnect '
      description: >-
        Updates a specific interconnect associated with an account. Use
        `?validate_only=true` as an optional query parameter to only run
        validation without persisting changes.
      operationId: magic-interconnects-update-interconnect
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/magic_components-schemas-tunnel_update_request
      responses:
        '200':
          description: Update interconnect response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic_components-schemas-tunnel_modified_response
        4xx:
          description: Update interconnect response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_components-schemas-tunnel_modified_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/gre_tunnels:
    get:
      tags:
        - Accounts
        - GRE
        - Gre
        - Magic
        - Tunnels
      summary: 'List GRE Tunnels '
      description: Lists GRE tunnels associated with an account.
      operationId: magic-gre-tunnels-list-gre-tunnels
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List GRE tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_tunnels_collection_response'
        4XX:
          description: List GRE tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_tunnels_collection_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - GRE
        - Gre
        - Magic
        - Tunnels
      summary: 'Create GRE Tunnels '
      description: >-
        Creates new GRE tunnels. Use `?validate_only=true` as an optional query
        parameter to only run validation without persisting changes.
      operationId: magic-gre-tunnels-create-gre-tunnels
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - customer_gre_endpoint
                - cloudflare_gre_endpoint
                - interface_address
      responses:
        '200':
          description: Create GRE tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_tunnels_collection_response'
        4XX:
          description: Create GRE tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_tunnels_collection_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - GRE
        - Gre
        - Magic
        - Multiple
        - Tunnels
      summary: 'Update Multiple GRE Tunnels '
      description: >-
        Updates multiple GRE tunnels. Use `?validate_only=true` as an optional
        query parameter to only run validation without persisting changes.
      operationId: magic-gre-tunnels-update-multiple-gre-tunnels
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update multiple GRE tunnels response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic_modified_tunnels_collection_response
        4XX:
          description: Update multiple GRE tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_modified_tunnels_collection_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/gre_tunnels/{tunnel_identifier}:
    delete:
      tags:
        - Accounts
        - GRE
        - Gre
        - Magic
        - Tunnels
      summary: 'Delete GRE Tunnel '
      description: >-
        Disables and removes a specific static GRE tunnel. Use
        `?validate_only=true` as an optional query parameter to only run
        validation without persisting changes.
      operationId: magic-gre-tunnels-delete-gre-tunnel
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete GRE Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_tunnel_deleted_response'
        4XX:
          description: Delete GRE Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_tunnel_deleted_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - GRE
        - Gre
        - Magic
        - Tunnels
      summary: 'List GRE Tunnel Details '
      description: Lists informtion for a specific GRE tunnel.
      operationId: magic-gre-tunnels-list-gre-tunnel-details
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List GRE Tunnel Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_tunnel_single_response'
        4XX:
          description: List GRE Tunnel Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_tunnel_single_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - GRE
        - Gre
        - Magic
        - Tunnels
      summary: 'Update GRE Tunnel '
      description: >-
        Updates a specific GRE tunnel. Use `?validate_only=true` as an optional
        query parameter to only run validation without persisting changes.
      operationId: magic-gre-tunnels-update-gre-tunnel
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_tunnel_update_request'
      responses:
        '200':
          description: Update GRE Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_tunnel_modified_response'
        4XX:
          description: Update GRE Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_tunnel_modified_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/ipsec_tunnels:
    get:
      tags:
        - Accounts
        - IPsec
        - Ipsec
        - Magic
        - Tunnels
      summary: 'List IPsec Tunnels '
      description: Lists IPsec tunnels associated with an account.
      operationId: magic-ipsec-tunnels-list-ipsec-tunnels
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List IPsec tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_schemas-tunnels_collection_response'
        4XX:
          description: List IPsec tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_schemas-tunnels_collection_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - IPsec
        - Ipsec
        - Magic
        - Tunnels
      summary: 'Create IPsec Tunnels '
      description: >-
        Creates new IPsec tunnels associated with an account. Use
        `?validate_only=true` as an optional query parameter to only run
        validation without persisting changes.
      operationId: magic-ipsec-tunnels-create-ipsec-tunnels
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_schemas-tunnel_add_request'
      responses:
        '200':
          description: Create IPsec tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_schemas-tunnels_collection_response'
        4XX:
          description: Create IPsec tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_schemas-tunnels_collection_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - IPsec
        - Ipsec
        - Magic
        - Multiple
        - Tunnels
      summary: 'Update Multiple IPsec Tunnels '
      description: >-
        Update multiple IPsec tunnels associated with an account. Use
        `?validate_only=true` as an optional query parameter to only run
        validation without persisting changes.
      operationId: magic-ipsec-tunnels-update-multiple-ipsec-tunnels
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
      responses:
        '200':
          description: Update multiple IPsec tunnels response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic_schemas-modified_tunnels_collection_response
        4XX:
          description: Update multiple IPsec tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_schemas-modified_tunnels_collection_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/ipsec_tunnels/{tunnel_identifier}:
    delete:
      tags:
        - Accounts
        - IPsec
        - Ipsec
        - Magic
        - Tunnels
      summary: 'Delete IPsec Tunnel '
      description: >-
        Disables and removes a specific static IPsec Tunnel associated with an
        account. Use `?validate_only=true` as an optional query parameter to
        only run validation without persisting changes.
      operationId: magic-ipsec-tunnels-delete-ipsec-tunnel
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete IPsec Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_schemas-tunnel_deleted_response'
        4XX:
          description: Delete IPsec Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_schemas-tunnel_deleted_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - IPsec
        - Ipsec
        - Magic
        - Tunnels
      summary: 'List IPsec Tunnel Details '
      description: Lists details for a specific IPsec tunnel.
      operationId: magic-ipsec-tunnels-list-ipsec-tunnel-details
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List IPsec tunnel details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_schemas-tunnel_single_response'
        4XX:
          description: List IPsec tunnel details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_schemas-tunnel_single_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - IPsec
        - Ipsec
        - Magic
        - Tunnels
      summary: 'Update IPsec Tunnel '
      description: >-
        Updates a specific IPsec tunnel associated with an account. Use
        `?validate_only=true` as an optional query parameter to only run
        validation without persisting changes.
      operationId: magic-ipsec-tunnels-update-ipsec-tunnel
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_schemas-tunnel_update_request'
      responses:
        '200':
          description: Update IPsec Tunnel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_schemas-tunnel_modified_response'
        4XX:
          description: Update IPsec Tunnel response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_schemas-tunnel_modified_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/ipsec_tunnels/{tunnel_identifier}/psk_generate:
    post:
      tags:
        - (PSK)
        - Accounts
        - Generate
        - IPsec
        - Ipsec
        - Keys
        - Magic
        - Pre
        - Psk
        - Shared
        - Tunnels
      summary: 'Generate Pre Shared Key (PSK) For IPsec Tunnels '
      description: >-
        Generates a Pre Shared Key for a specific IPsec tunnel used in the IKE
        session. Use `?validate_only=true` as an optional query parameter to
        only run validation without persisting changes. After a PSK is
        generated, the PSK is immediately persisted to Cloudflare's edge and
        cannot be retrieved later. Note the PSK in a safe place.
      operationId: magic-ipsec-tunnels-generate-pre-shared-key-(-psk)-for-ipsec-tunnels
      parameters:
        - name: tunnel_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Generate Pre Shared Key (PSK) for IPsec tunnels response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_psk_generation_response'
        4xx:
          description: Generate Pre Shared Key (PSK) for IPsec tunnels response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_psk_generation_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/routes:
    delete:
      tags:
        - Accounts
        - Magic
        - Routes
      summary: 'Delete Many Routes '
      description: Delete multiple Magic static routes.
      operationId: magic-static-routes-delete-many-routes
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_route_delete_many_request'
      responses:
        '200':
          description: Delete Many Routes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_multiple_route_delete_response'
        4XX:
          description: Delete Many Routes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_multiple_route_delete_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Magic
        - Routes
      summary: 'List Routes '
      description: List all Magic static routes.
      operationId: magic-static-routes-list-routes
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List Routes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_routes_collection_response'
        4XX:
          description: List Routes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_routes_collection_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Magic
        - Routes
      summary: 'Create Routes '
      description: >-
        Creates a new Magic static route. Use `?validate_only=true` as an
        optional query parameter to run validation only without persisting
        changes.
      operationId: magic-static-routes-create-routes
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - prefix
                - nexthop
                - priority
      responses:
        '200':
          description: Create Routes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_routes_collection_response'
        4XX:
          description: Create Routes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_routes_collection_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Magic
        - Routes
      summary: 'Update Many Routes '
      description: >-
        Update multiple Magic static routes. Use `?validate_only=true` as an
        optional query parameter to run validation only without persisting
        changes. Only fields for a route that need to be changed need be
        provided.
      operationId: magic-static-routes-update-many-routes
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_route_update_many_request'
      responses:
        '200':
          description: Update Many Routes response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_multiple_route_modified_response'
        4XX:
          description: Update Many Routes response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic_multiple_route_modified_response
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/routes/{route_identifier}:
    delete:
      tags:
        - Accounts
        - Magic
        - Routes
      summary: 'Delete Route '
      description: Disable and remove a specific Magic static route.
      operationId: magic-static-routes-delete-route
      parameters:
        - name: route_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_route_deleted_response'
        4XX:
          description: Delete Route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_route_deleted_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Magic
        - Routes
      summary: 'Route Details '
      description: Get a specific Magic static route.
      operationId: magic-static-routes-route-details
      parameters:
        - name: route_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: Route Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_route_single_response'
        4XX:
          description: Route Details response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_route_single_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Magic
        - Routes
      summary: 'Update Route '
      description: >-
        Update a specific Magic static route. Use `?validate_only=true` as an
        optional query parameter to run validation only without persisting
        changes.
      operationId: magic-static-routes-update-route
      parameters:
        - name: route_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_route_update_request'
      responses:
        '200':
          description: Update Route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_route_modified_response'
        4XX:
          description: Update Route response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/magic_route_modified_response'
                  - $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites:
    get:
      tags:
        - Accounts
        - Magic
        - Sites
      summary: 'List Sites '
      description: >-
        Lists Sites associated with an account. Use connector_identifier query
        param to return sites where connector_identifier matches either
        site.ConnectorID or site.SecondaryConnectorID.
      operationId: magic-wan-sites-list-sites
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: connector_identifier
          in: query
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List Sites response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_sites_collection_response'
        4XX:
          description: List Sites response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Magic
        - Sites
      summary: 'Create A New Site '
      description: Creates a new Site
      operationId: magic-sites-create-site
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_sites_add_single_request'
      responses:
        '200':
          description: Create Site response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_site_single_response'
        4XX:
          description: Create Site response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites/{site_identifier}:
    delete:
      tags:
        - Accounts
        - Magic
        - Sites
      summary: 'Delete Site '
      description: Remove a specific Site.
      operationId: magic-sites-delete-site
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Site response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_site_deleted_response'
        4XX:
          description: Delete Site response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Magic
        - Sites
      summary: 'Site Details '
      description: Get a specific Site.
      operationId: magic-sites-site-details
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: Site Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_site_single_response'
        4XX:
          description: Site Details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Magic
        - Sites
      summary: 'Update Site '
      description: Update a specific Site.
      operationId: magic-sites-update-site
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_site_update_request'
      responses:
        '200':
          description: Update Site response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_site_modified_response'
        4XX:
          description: Update Site response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites/{site_identifier}/acls:
    get:
      tags:
        - ACL
        - ACLs
        - Accounts
        - Magic
        - Sites
      summary: 'List Site ACLs '
      description: Lists Site ACLs associated with an account.
      operationId: magic-site-acls-list-acls
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List Site ACLs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_acls_collection_response'
        4XX:
          description: List Site ACLs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - ACL
        - Accounts
        - Magic
        - Sites
      summary: 'Create A New Site ACL '
      description: Creates a new Site ACL.
      operationId: magic-site-acls-create-site-acl
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_acls_add_single_request'
      responses:
        '200':
          description: Create Site ACL response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_acls_collection_response'
        4XX:
          description: Create Site ACL response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites/{site_identifier}/acls/{acl_identifier}:
    delete:
      tags:
        - ACL
        - Accounts
        - Magic
        - Sites
      summary: 'Delete Site ACL '
      description: Remove a specific Site ACL.
      operationId: magic-site-acls-delete-acl
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: acl_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Site ACL response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_acl_deleted_response'
        4XX:
          description: Delete Site ACL response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - ACL
        - Accounts
        - Details
        - Magic
        - Sites
      summary: 'Site ACL Details '
      description: Get a specific Site ACL.
      operationId: magic-site-acls-acl-details
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: acl_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: Site ACL Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_acl_single_response'
        4XX:
          description: Site ACL Details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - ACL
        - Accounts
        - Magic
        - Sites
      summary: 'Update Site ACL '
      description: Update a specific Site ACL.
      operationId: magic-site-acls-update-acl
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: acl_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_acl_update_request'
      responses:
        '200':
          description: Update Site ACL response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_acl_modified_response'
        4XX:
          description: Update Site ACL response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites/{site_identifier}/lans:
    get:
      tags:
        - Accounts
        - LAN
        - LANs
        - Magic
        - Sites
      summary: 'List LANs '
      description: Lists LANs associated with an account and site.
      operationId: magic-wan-connectors-lans-list-lans
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List LANs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_lans_collection_response'
        4XX:
          description: List LANs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - LAN
        - Magic
        - Sites
      summary: 'Create A New LAN '
      description: >-
        Creates a new LAN. If the site is in high availability mode,
        static_addressing is required along with secondary and virtual address.
      operationId: magic-wan-connectors-lans-create-lan
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_lans_add_single_request'
      responses:
        '200':
          description: Create LAN response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_lans_collection_response'
        4XX:
          description: Create LAN response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites/{site_identifier}/lans/{lan_identifier}:
    delete:
      tags:
        - Accounts
        - LAN
        - Lan
        - Magic
        - Sites
      summary: 'Delete LAN '
      description: Remove a specific LAN.
      operationId: magic-wan-connectors-lans-delete-lan
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: lan_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete LAN response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_lan_deleted_response'
        4XX:
          description: Delete LAN response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - LAN
        - Lan
        - Magic
        - Sites
      summary: 'LAN Details '
      description: Get a specific LAN.
      operationId: magic-wan-connectors-lans-lan-details
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: lan_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: LAN Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_lan_single_response'
        4XX:
          description: LAN Details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - LAN
        - Lan
        - Magic
        - Sites
      summary: 'Update LAN '
      description: Update a specific LAN.
      operationId: magic-wan-connectors-lans-update-lan
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: lan_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_lan_update_request'
      responses:
        '200':
          description: Update LAN response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_lan_modified_response'
        4XX:
          description: Update LAN response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites/{site_identifier}/wans:
    get:
      tags:
        - Accounts
        - Magic
        - Sites
        - WAN
        - WANs
      summary: 'List WANs '
      description: Lists WANs associated with an account and site.
      operationId: magic-wan-connectors-list-wans
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: List WANs response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_wans_collection_response'
        4XX:
          description: List WANs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Magic
        - Sites
        - WAN
      summary: 'Create A New WAN '
      description: Creates a new WAN.
      operationId: magic-wan-connectors-create-wan
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_wans_add_single_request'
      responses:
        '200':
          description: Create WAN response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_wans_collection_response'
        4XX:
          description: Create WAN response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/magic/sites/{site_identifier}/wans/{wan_identifier}:
    delete:
      tags:
        - Accounts
        - Magic
        - Sites
        - WAN
        - Wan
      summary: 'Delete WAN '
      description: Remove a specific WAN.
      operationId: magic-wan-connectors-delete-wan
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: wan_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete WAN response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_wan_deleted_response'
        4XX:
          description: Delete WAN response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Details
        - Magic
        - Sites
        - WAN
        - Wan
      summary: 'WAN Details '
      description: Get a specific WAN.
      operationId: magic-wan-connectors-wan-details
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: wan_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      responses:
        '200':
          description: WAN Details response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_wan_single_response'
        4XX:
          description: WAN Details response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Magic
        - Sites
        - WAN
        - Wan
      summary: 'Update WAN '
      description: Update a specific WAN.
      operationId: magic-wan-connectors-update-wan
      parameters:
        - name: site_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
        - name: wan_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/magic_wan_update_request'
      responses:
        '200':
          description: Update WAN response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_wan_modified_response'
        4XX:
          description: Update WAN response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/magic_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/mnm/config:
    delete:
      tags:
        - Accounts
        - Configurations
      summary: 'Delete Account Configuration '
      description: Delete an existing network monitoring configuration.
      operationId: magic-network-monitoring-configuration-delete-account-configuration
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete account configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_config_single_response
        4XX:
          description: Delete account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_config_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Configurations
      summary: 'List Account Configuration '
      description: Lists default sampling and router IPs for account.
      operationId: magic-network-monitoring-configuration-list-account-configuration
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      responses:
        '200':
          description: List account configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_config_single_response
        4XX:
          description: List account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_config_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Configurations
        - Fields
      summary: 'Update Account Configuration Fields '
      description: Update fields in an existing network monitoring configuration.
      operationId: >-
        magic-network-monitoring-configuration-update-account-configuration-fields
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Update account configuration fields response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_config_single_response
        4XX:
          description: Update account configuration fields response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_config_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Configurations
      summary: 'Create Account Configuration '
      description: Create a new network monitoring configuration.
      operationId: magic-network-monitoring-configuration-create-account-configuration
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Create account configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_config_single_response
        4XX:
          description: Create account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_config_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Configurations
        - Entire
      summary: 'Update An Entire Account Configuration '
      description: >-
        Update an existing network monitoring configuration, requires the entire
        configuration to be updated at once.
      operationId: >-
        magic-network-monitoring-configuration-update-an-entire-account-configuration
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Update an entire account configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_config_single_response
        4XX:
          description: Update an entire account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_config_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/mnm/config/full:
    get:
      tags:
        - Accounts
        - Configurations
        - Rules
      summary: 'List Rules And Account Configuration '
      description: Lists default sampling, router IPs, and rules for account.
      operationId: >-
        magic-network-monitoring-configuration-list-rules-and-account-configuration
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      responses:
        '200':
          description: List rules and account configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_config_single_response
        4XX:
          description: List rules and account configuration response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_config_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/mnm/rules:
    get:
      tags:
        - Accounts
        - Rules
      summary: 'List Rules '
      description: Lists network monitoring rules for account.
      operationId: magic-network-monitoring-rules-list-rules
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      responses:
        '200':
          description: List rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_rules_collection_response
        4XX:
          description: List rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_rules_collection_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Rules
      summary: 'Create Rules '
      description: >-
        Create network monitoring rules for account. Currently only supports
        creating a single rule per API request.
      operationId: magic-network-monitoring-rules-create-rules
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Create rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_rules_single_response
        4XX:
          description: Create rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_rules_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Rules
      summary: 'Update Rules '
      description: Update network monitoring rules for account.
      operationId: magic-network-monitoring-rules-update-rules
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Update rules response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_rules_single_response
        4XX:
          description: Update rules response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_rules_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/mnm/rules/{rule_identifier}:
    delete:
      tags:
        - Accounts
        - Rules
      summary: 'Delete Rule '
      description: Delete a network monitoring rule for account.
      operationId: magic-network-monitoring-rules-delete-rule
      parameters:
        - name: rule_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_rule_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_rules_single_response
        4XX:
          description: Delete rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_rules_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Rules
      summary: 'Get Rule '
      description: List a single network monitoring rule for account.
      operationId: magic-network-monitoring-rules-get-rule
      parameters:
        - name: rule_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_rule_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      responses:
        '200':
          description: Get rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_rules_single_response
        4XX:
          description: Get rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_rules_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
    patch:
      tags:
        - Accounts
        - Rules
      summary: 'Update Rule '
      description: Update a network monitoring rule for account.
      operationId: magic-network-monitoring-rules-update-rule
      parameters:
        - name: rule_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_rule_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Update rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_rules_single_response
        4XX:
          description: Update rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_rules_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/mnm/rules/{rule_identifier}/advertisement:
    patch:
      tags:
        - Accounts
        - Advertisement
        - Rules
      summary: 'Update Advertisement For Rule '
      description: Update advertisement for rule.
      operationId: magic-network-monitoring-rules-update-advertisement-for-rule
      parameters:
        - name: rule_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_rule_identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/magic-visibility_account_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Update advertisement for rule response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/magic-visibility_mnm_rule_advertisement_single_response
        4XX:
          description: Update advertisement for rule response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/magic-visibility_mnm_rule_advertisement_single_response
                  - $ref: >-
                      #/components/schemas/magic-visibility_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/request-tracer/trace:
    post:
      tags:
        - Accounts
        - Tracer
        - Traces
      summary: 'Request Trace '
      operationId: account-request-tracer-request-trace
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/request-tracer_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
                - method
              properties:
                body:
                  type: object
                  properties:
                    base64:
                      type: string
                      description: Base64 encoded request body
                      example: c29tZV9yZXF1ZXN0X2JvZHk=
                    json:
                      type: object
                      description: Arbitrary json as request body
                    plain_text:
                      type: string
                      description: Request body as plain text
                context:
                  type: object
                  description: Additional request parameters
                  properties:
                    bot_score:
                      type: integer
                      description: Bot score used for evaluating tracing request processing
                    geoloc:
                      type: object
                      description: Geodata for tracing request
                      properties:
                        city:
                          type: string
                          example: London
                        continent:
                          type: string
                        is_eu_country:
                          type: boolean
                        iso_code:
                          type: string
                        latitude:
                          type: number
                        longitude:
                          type: number
                        postal_code:
                          type: string
                        region_code:
                          type: string
                        subdivision_2_iso_code:
                          type: string
                        timezone:
                          type: string
                    skip_challenge:
                      type: boolean
                      description: >-
                        Whether to skip any challenges for tracing request
                        (e.g.: captcha)
                      example: true
                    threat_score:
                      type: integer
                      description: >-
                        Threat score used for evaluating tracing request
                        processing
                cookies:
                  type: object
                  description: Cookies added to tracing request
                  example:
                    cookie_name_1: cookie_value_1
                    cookie_name_2: cookie_value_2
                headers:
                  type: object
                  description: Headers added to tracing request
                  example:
                    header_name_1: header_value_1
                    header_name_2: header_value_2
                method:
                  type: string
                  description: HTTP Method of tracing request
                  example: PUT
                protocol:
                  type: string
                  description: HTTP Protocol of tracing request
                  example: HTTP/1.1
                skip_response:
                  type: boolean
                  description: >-
                    Skip sending the request to the Origin server after all
                    rules evaluation
                url:
                  type: string
                  description: URL to which perform tracing request
                  example: https://some.zone/some_path
            example:
              body:
                base64: c29tZV9yZXF1ZXN0X2JvZHk=
              context:
                geoloc:
                  city: London
                skip_challenge: true
              cookies:
                cookie_name_1: cookie_value_1
                cookie_name_2: cookie_value_2
              headers:
                header_name_1: header_value_1
                header_name_2: header_value_2
              method: PUT
              protocol: HTTP/1.1
              url: https://some.zone/some_path
      responses:
        '200':
          description: Request Trace response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/request-tracer_api-response-common'
                  - type: object
                    properties:
                      result:
                        type: object
                        description: Trace result with an origin status code
                        properties:
                          status_code:
                            type: integer
                            description: HTTP Status code of zone response
                          trace:
                            $ref: '#/components/schemas/request-tracer_trace'
                type: object
        4XX:
          description: Request Trace response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/request-tracer_api-response-common-failure
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/rules/lists/{list_id}/items/{item_id}:
    get:
      tags:
        - Accounts
        - Items
        - Rules
      summary: 'Get A List Item '
      description: Fetches a list item in the list.
      operationId: lists-get-a-list-item
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_item_id'
        - name: list_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_list_id'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      responses:
        '200':
          description: Get a list item response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_item-response-collection'
        4XX:
          description: Get a list item response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/lists_item-response-collection'
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/rules/lists/bulk_operations/{operation_id}:
    get:
      tags:
        - Accounts
        - Bulk
        - Operation
        - Operations
        - Rules
        - Status
      summary: 'Get Bulk Operation Status '
      description: >-
        Gets the current status of an asynchronous operation on a list.


        The `status` property can have one of the following values: `pending`,
        `running`, `completed`, or `failed`. If the status is `failed`, the
        `error` property will contain a message describing the error.
      operationId: lists-get-bulk-operation-status
      parameters:
        - name: operation_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_operation_id'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/lists_identifier'
      responses:
        '200':
          description: Get bulk operation status response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lists_bulk-operation-response-collection'
        4XX:
          description: Get bulk operation status response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/lists_bulk-operation-response-collection
                  - $ref: '#/components/schemas/lists_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/subscriptions:
    get:
      tags:
        - Accounts
        - Subscriptions
      summary: 'List Subscriptions '
      description: Lists all of an account's subscriptions.
      operationId: account-subscriptions-list-subscriptions
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
      responses:
        '200':
          description: List Subscriptions response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bill-subs-api_account_subscription_response_collection
        4XX:
          description: List Subscriptions response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bill-subs-api_account_subscription_response_collection
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Subscriptions
      summary: 'Create Subscription '
      description: Creates an account subscription.
      operationId: account-subscriptions-create-subscription
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bill-subs-api_subscription-v2'
      responses:
        '200':
          description: Create Subscription response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bill-subs-api_account_subscription_response_single
        4XX:
          description: Create Subscription response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bill-subs-api_account_subscription_response_single
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_identifier}/subscriptions/{subscription_identifier}:
    delete:
      tags:
        - Accounts
        - Subscriptions
      summary: 'Delete Subscription '
      description: Deletes an account's subscription.
      operationId: account-subscriptions-delete-subscription
      parameters:
        - name: subscription_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_schemas-identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete Subscription response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/bill-subs-api_api-response-single'
                  - properties:
                      result:
                        type: object
                        properties:
                          subscription_id:
                            $ref: >-
                              #/components/schemas/bill-subs-api_schemas-identifier
        4XX:
          description: Delete Subscription response failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/bill-subs-api_api-response-single'
                      - properties:
                          result:
                            type: object
                            properties:
                              subscription_id:
                                $ref: >-
                                  #/components/schemas/bill-subs-api_schemas-identifier
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
    put:
      tags:
        - Accounts
        - Subscriptions
      summary: 'Update Subscription '
      description: Updates an account subscription.
      operationId: account-subscriptions-update-subscription
      parameters:
        - name: subscription_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_schemas-identifier'
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/bill-subs-api_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bill-subs-api_subscription-v2'
      responses:
        '200':
          description: Update Subscription response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/bill-subs-api_account_subscription_response_single
        4XX:
          description: Update Subscription response failure
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/bill-subs-api_account_subscription_response_single
                  - $ref: >-
                      #/components/schemas/bill-subs-api_api-response-common-failure
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{account_identifier}/vectorize/indexes:
    get:
      tags:
        - Accounts
        - Indexes
        - Vectorize
      summary: 'List Vectorize Indexes '
      description: Returns a list of Vectorize Indexes
      operationId: vectorize-list-vectorize-indexes
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
      responses:
        '200':
          description: List Vectorize Index Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-common'
                  - properties:
                      result:
                        type: array
                        items:
                          $ref: '#/components/schemas/vectorize_create-index-response'
        4XX:
          description: List Vectorize Index Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    post:
      tags:
        - Accounts
        - Index
        - Indexes
        - Vectorize
      summary: 'Create Vectorize Index '
      description: Creates and returns a new Vectorize Index.
      operationId: vectorize-create-vectorize-index
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vectorize_create-index-request'
      responses:
        '200':
          description: Create Vectorize Index Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/vectorize_create-index-response'
        4XX:
          description: Create Vectorize Index Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/vectorize/indexes/{index_name}:
    delete:
      tags:
        - Accounts
        - Index
        - Indexes
        - Names
        - Vectorize
      summary: 'Delete Vectorize Index '
      description: Deletes the specified Vectorize Index.
      operationId: vectorize-delete-vectorize-index
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      responses:
        '200':
          description: Delete Vectorize Index Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        type: object
                        nullable: true
        4XX:
          description: Delete Vectorize Index Failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    get:
      tags:
        - Accounts
        - Index
        - Indexes
        - Names
        - Vectorize
      summary: 'Get Vectorize Index '
      description: Returns the specified Vectorize Index.
      operationId: vectorize-get-vectorize-index
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      responses:
        '200':
          description: Get Vectorize Index Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/vectorize_create-index-response'
        4XX:
          description: Get Vectorize Index Failure
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
    put:
      tags:
        - Accounts
        - Index
        - Indexes
        - Names
        - Vectorize
      summary: 'Update Vectorize Index '
      description: Updates and returns the specified Vectorize Index.
      operationId: vectorize-update-vectorize-index
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vectorize_update-index-request'
      responses:
        '200':
          description: Update Vectorize Index Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/vectorize_create-index-response'
        4XX:
          description: Update Vectorize Index Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/vectorize/indexes/{index_name}/delete-by-ids:
    post:
      tags:
        - Accounts
        - Index
        - Indexes
        - Names
        - Vectorize
        - Vectors
      summary: 'Delete Vectors By Identifier '
      description: Delete a set of vectors from an index by their vector identifiers.
      operationId: vectorize-delete-vectors-by-id
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/vectorize_index-delete-vectors-by-id-request
      responses:
        '200':
          description: Delete Vector Identifiers Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/vectorize_index-delete-vectors-by-id-response
        4XX:
          description: Delete Vector Identifiers Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/vectorize/indexes/{index_name}/get-by-ids:
    post:
      tags:
        - Accounts
        - Index
        - Indexes
        - Names
        - Vectorize
        - Vectors
      summary: 'Get Vectors By Identifier '
      description: Get a set of vectors from an index by their vector identifiers.
      operationId: vectorize-get-vectors-by-id
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vectorize_index-get-vectors-by-id-request'
      responses:
        '200':
          description: Get Vectors By Identifier Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: >-
                          #/components/schemas/vectorize_index-get-vectors-by-id-response
        4XX:
          description: Get Vectors By Identifier Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/vectorize/indexes/{index_name}/insert:
    post:
      tags:
        - Accounts
        - Index
        - Indexes
        - Insert
        - Names
        - Vectorize
        - Vectors
      summary: 'Insert Vectors '
      description: >-
        Inserts vectors into the specified index and returns the count of the
        vectors successfully inserted.
      operationId: vectorize-insert-vector
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      requestBody:
        required: true
        content:
          application/x-ndjson:
            schema:
              type: string
              format: binary
              description: ndjson file containing vectors to insert.
              example: '@/path/to/vectors.ndjson'
      responses:
        '200':
          description: Insert Vectors Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/vectorize_index-insert-response'
        4XX:
          description: Insert Vectors Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/vectorize/indexes/{index_name}/query:
    post:
      tags:
        - Accounts
        - Index
        - Indexes
        - Names
        - Queries
        - Vectorize
        - Vectors
      summary: 'Query Vectors '
      description: Finds vectors closest to a given vector in an index.
      operationId: vectorize-query-vector
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vectorize_index-query-request'
      responses:
        '200':
          description: Query Vectors Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/vectorize_index-query-response'
        4XX:
          description: Query Vectors Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{account_identifier}/vectorize/indexes/{index_name}/upsert:
    post:
      tags:
        - Accounts
        - Index
        - Indexes
        - Names
        - Vectorize
        - Vectors
      summary: 'Upsert Vectors '
      description: >-
        Upserts vectors into the specified index, creating them if they do not
        exist and returns the count of values and ids successfully inserted.
      operationId: vectorize-upsert-vector
      parameters:
        - name: account_identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_identifier'
        - name: index_name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/vectorize_index-name'
      requestBody:
        required: true
        content:
          application/x-ndjson:
            schema:
              type: string
              format: binary
              description: ndjson file containing vectors to upsert.
              example: '@/path/to/vectors.ndjson'
      responses:
        '200':
          description: Insert Vectors Response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/vectorize_api-response-single'
                  - properties:
                      result:
                        $ref: '#/components/schemas/vectorize_index-upsert-response'
        4XX:
          description: Insert Vectors Failure Response
          content:
            application/json:
              schema:
                allOf:
                  - allOf:
                      - $ref: '#/components/schemas/vectorize_api-response-single'
                      - type: object
                        properties:
                          result:
                            type: object
                            nullable: true
                  - $ref: '#/components/schemas/vectorize_api-response-common-failure'
      security:
        - api_token: []
        - api_email: []
          api_key: []
  /accounts/{accountId}/urlscanner/scan:
    get:
      tags:
        - Accounts
        - Scans
        - Search
        - URL
        - URL Scanner
      summary: 'Search URL Scans '
      description: >-
        Search scans by date and webpages' requests, including full URL (after
        redirects), hostname, and path. <br/> A successful scan will appear in
        search results a few minutes after finishing but may take much longer if
        the system in under load. By default, only successfully completed scans
        will appear in search results, unless searching by `scanId`. Please take
        into account that older scans may be removed from the search index at an
        unspecified time.
      operationId: urlscanner-search-scans
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account Id
        - name: scanId
          in: query
          schema:
            type: string
            format: uuid
            description: Scan uuid
        - name: limit
          in: query
          schema:
            type: integer
            description: Limit the number of objects in the response.
            example: 100
        - name: next_cursor
          in: query
          schema:
            type: string
            description: Pagination cursor to get the next set of results.
        - name: date_start
          in: query
          schema:
            type: string
            format: date-time
            description: Filter scans requested after date (inclusive).
        - name: date_end
          in: query
          schema:
            type: string
            format: date-time
            description: Filter scans requested before date (inclusive).
        - name: url
          in: query
          schema:
            type: string
            description: >-
              Filter scans by exact match URL of _any_ request made by the
              webpage
            example: https://example.com/?hello
        - name: hostname
          in: query
          schema:
            type: string
            description: Filter scans by hostname of _any_ request made by the webpage.
            example: example.com
        - name: path
          in: query
          schema:
            type: string
            description: Filter scans by url path of _any_ request made by the webpage.
            example: /samples/subresource-integrity/
        - name: ip
          in: query
          schema:
            type: string
            description: >-
              Filter scans by IP address (IPv4 or IPv6) of _any_ request made by
              the webpage.
            example: 1.1.1.1
        - name: asn
          in: query
          schema:
            type: string
            description: >-
              Filter scans by Autonomous System Number (ASN) of _any_ request
              made by the webpage.
            example: '13335'
        - name: page_url
          in: query
          schema:
            type: string
            description: Filter scans by exact match to scanned URL (_after redirects_)
        - name: page_hostname
          in: query
          schema:
            type: string
            description: Filter scans by main page hostname .
        - name: page_path
          in: query
          schema:
            type: string
            description: >-
              Filter scans by exact match URL path (also supports suffix
              search).
        - name: page_asn
          in: query
          schema:
            type: string
            description: Filter scans by main page Autonomous System Number (ASN).
        - name: page_ip
          in: query
          schema:
            type: string
            description: Filter scans by  main page IP address (IPv4 or IPv6).
        - name: account_scans
          in: query
          schema:
            type: boolean
            description: Return only scans created by account.
        - name: is_malicious
          in: query
          schema:
            type: boolean
            description: Filter scans by malicious verdict.
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Error
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: OK
                  result:
                    type: object
                    required:
                      - tasks
                    properties:
                      tasks:
                        type: array
                        items:
                          type: object
                          required:
                            - uuid
                            - url
                            - success
                            - time
                            - country
                            - visibility
                          properties:
                            country:
                              type: string
                              description: Alpha-2 country code
                            success:
                              type: boolean
                              description: Whether scan was successful or not
                            time:
                              type: string
                              format: date-time
                              description: When scan was submitted (UTC)
                            url:
                              type: string
                              description: Scan url (after redirects)
                              example: https://www.example.com/
                            uuid:
                              type: string
                              format: uuid
                              description: Scan id
                            visibility:
                              type: string
                              description: Visibility status.
                              example: public
                  success:
                    type: boolean
                    description: Whether search request was successful or not
        '400':
          description: Invalid params.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan ID is not a valid uuid.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
      security:
        - api_email: []
          api_key: []
          api_token: []
    post:
      tags:
        - Accounts
        - Scans
        - URL
        - URL Scanner
      summary: 'Create URL Scan '
      description: >-
        Submit a URL to scan. You can also set some options, like the visibility
        level and custom headers. Accounts are limited to 1 new scan every 10
        seconds and 8000 per month. If you need more, please reach out.
      operationId: urlscanner-create-scan
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                customHeaders:
                  type: object
                  description: Set custom headers
                screenshotsResolutions:
                  type: array
                  description: Take multiple screenshots targeting different device types
                  default:
                    - desktop
                  items:
                    type: string
                    description: Device resolutions.
                    enum:
                      - desktop
                      - mobile
                      - tablet
                    default: desktop
                url:
                  type: string
                  example: https://www.example.com
                visibility:
                  type: string
                  description: >-
                    The option `Public` means it will be included in listings
                    like recent scans and search results. `Unlisted` means it
                    will not be included in the aforementioned listings, users
                    will need to have the scan's ID to access it. A a scan will
                    be automatically marked as unlisted if it fails, if it
                    contains potential PII or other sensitive material.
                  enum:
                    - Public
                    - Unlisted
                  default: Public
      responses:
        '200':
          description: Scan request accepted successfully.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Submission unsuccessful
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Submission successful
                  result:
                    type: object
                    required:
                      - visibility
                      - uuid
                      - url
                      - time
                    properties:
                      time:
                        type: string
                        format: date-time
                        description: Time when url was submitted for scanning.
                      url:
                        type: string
                        description: >-
                          Canonical form of submitted URL. Use this if you want
                          to later search by URL.
                      uuid:
                        type: string
                        format: uuid
                        description: Scan ID.
                      visibility:
                        type: string
                        description: Submitted visibility status.
                        example: Public
                  success:
                    type: boolean
        '400':
          description: Invalid params.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan ID is not a valid uuid.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '409':
          description: 'Scan request denied: hostname was recently scanned.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Submission unsuccessful
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  result:
                    type: object
                    required:
                      - tasks
                    properties:
                      tasks:
                        type: array
                        items:
                          type: object
                          required:
                            - uuid
                            - url
                            - status
                            - success
                            - errors
                            - time
                            - timeEnd
                            - visibility
                            - clientLocation
                            - clientType
                            - effectiveUrl
                            - scannedFrom
                          properties:
                            clientLocation:
                              type: string
                              description: Submitter location
                              example: PT
                            clientType:
                              type: string
                              enum:
                                - Site
                                - Automatic
                                - Api
                            effectiveUrl:
                              type: string
                              description: >-
                                URL of the primary request, after all HTTP
                                redirects
                              example: http://example.com/
                            errors:
                              type: array
                              items:
                                type: object
                                required:
                                  - message
                                properties:
                                  message:
                                    type: string
                            scannedFrom:
                              type: object
                              required:
                                - colo
                              properties:
                                colo:
                                  type: string
                                  description: IATA code of Cloudflare datacenter
                                  example: MAD
                            status:
                              type: string
                              enum:
                                - Queued
                                - InProgress
                                - InPostProcessing
                                - Finished
                            success:
                              type: boolean
                              example: true
                            time:
                              type: string
                              example: '2023-05-03T17:05:04.843Z'
                            timeEnd:
                              type: string
                              example: '2023-05-03T17:05:19.374Z'
                            url:
                              type: string
                              description: Submitted URL
                              example: http://example.com
                            uuid:
                              type: string
                              description: Scan ID
                              example: 2ee568d0-bf70-4827-b922-b7088c0f056f
                            visibility:
                              type: string
                              enum:
                                - Public
                                - Unlisted
                  success:
                    type: boolean
                    example: true
        '429':
          description: 'Scan request denied: rate limited.'
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Submission unsuccessful
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    example: true
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{accountId}/urlscanner/scan/{scanId}:
    get:
      tags:
        - Accounts
        - Scans
        - URL
        - URL Scanner
      summary: 'Get URL Scan '
      description: Get URL scan by uuid
      operationId: urlscanner-get-scan
      parameters:
        - name: scanId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: Scan uuid
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account Id
      responses:
        '200':
          description: Scan has finished. It may or may not have been successful.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Error
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: OK
                  result:
                    type: object
                    required:
                      - scan
                    properties:
                      scan:
                        type: object
                        required:
                          - task
                          - meta
                          - page
                          - geo
                          - certificates
                          - performance
                          - verdicts
                        properties:
                          asns:
                            type: object
                            description: >-
                              Dictionary of Autonomous System Numbers where
                              ASN's are the keys
                            properties:
                              asn:
                                type: object
                                description: ASN's contacted
                                required:
                                  - asn
                                  - name
                                  - description
                                  - org_name
                                  - location_alpha2
                                properties:
                                  asn:
                                    type: string
                                    example: '15133'
                                  description:
                                    type: string
                                    example: EDGECAST
                                  location_alpha2:
                                    type: string
                                    example: US
                                  name:
                                    type: string
                                    example: EDGECAST
                                  org_name:
                                    type: string
                                    example: Edgecast Inc.
                          certificates:
                            type: array
                            items:
                              type: object
                              required:
                                - issuer
                                - subjectName
                                - validFrom
                                - validTo
                              properties:
                                issuer:
                                  type: string
                                subjectName:
                                  type: string
                                  example: rkmod.somee.com
                                validFrom:
                                  type: number
                                  example: 1682684400
                                validTo:
                                  type: number
                                  example: 1696698000
                          domains:
                            type: object
                            properties:
                              example.com:
                                type: object
                                required:
                                  - name
                                  - type
                                  - categories
                                  - dns
                                  - rank
                                properties:
                                  categories:
                                    type: object
                                    required:
                                      - inherited
                                    properties:
                                      content:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - id
                                            - name
                                          properties:
                                            id:
                                              type: integer
                                            name:
                                              type: string
                                              example: Technology
                                            super_category_id:
                                              type: integer
                                      inherited:
                                        type: object
                                        properties:
                                          content:
                                            type: array
                                            items:
                                              type: object
                                              required:
                                                - id
                                                - name
                                              properties:
                                                id:
                                                  type: integer
                                                name:
                                                  type: string
                                                  example: Technology
                                                super_category_id:
                                                  type: integer
                                          from:
                                            type: string
                                            example: example.com
                                          risks:
                                            type: array
                                            items:
                                              type: object
                                              required:
                                                - id
                                                - name
                                              properties:
                                                id:
                                                  type: integer
                                                name:
                                                  type: string
                                                  example: Technology
                                                super_category_id:
                                                  type: integer
                                      risks:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - id
                                            - name
                                          properties:
                                            id:
                                              type: integer
                                            name:
                                              type: string
                                              example: Technology
                                            super_category_id:
                                              type: integer
                                  dns:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - address
                                        - type
                                        - dnssec_valid
                                      properties:
                                        address:
                                          type: string
                                          example: 93.184.216.34
                                        dnssec_valid:
                                          type: boolean
                                        name:
                                          type: string
                                          example: example.com
                                        type:
                                          type: string
                                          example: A
                                  name:
                                    type: string
                                    example: example.com
                                  rank:
                                    type: object
                                    required:
                                      - name
                                      - bucket
                                    properties:
                                      bucket:
                                        type: string
                                        example: '500'
                                      name:
                                        type: string
                                        example: example.com
                                      rank:
                                        type: integer
                                        description: >-
                                          Rank in the Global Radar Rank, if set.
                                          See more at
                                          https://blog.cloudflare.com/radar-domain-rankings/
                                  type:
                                    type: string
                                    example: Apex domain
                          geo:
                            type: object
                            required:
                              - locations
                              - continents
                            properties:
                              continents:
                                type: array
                                description: GeoIP continent location
                                items:
                                  type: string
                                  description: GeoIP continent location
                                  example: North America
                              locations:
                                type: array
                                description: GeoIP country location
                                items:
                                  type: string
                                  description: GeoIP country location
                                  example: US
                          ips:
                            type: object
                            properties:
                              ip:
                                type: object
                                required:
                                  - ip
                                  - ipVersion
                                  - locationAlpha2
                                  - locationName
                                  - subdivision1Name
                                  - subdivision2Name
                                  - latitude
                                  - longitude
                                  - continent
                                  - geonameId
                                  - asn
                                  - asnName
                                  - asnOrgName
                                  - asnDescription
                                  - asnLocationAlpha2
                                properties:
                                  asn:
                                    type: string
                                    example: '15133'
                                  asnDescription:
                                    type: string
                                    example: EDGECAST
                                  asnLocationAlpha2:
                                    type: string
                                    example: US
                                  asnName:
                                    type: string
                                    example: EDGECAST
                                  asnOrgName:
                                    type: string
                                    example: Edgecast Inc.
                                  continent:
                                    type: string
                                    example: North America
                                  geonameId:
                                    type: string
                                    example: '6252001'
                                  ip:
                                    type: string
                                    example: 2606:2800:220:1:248:1893:25c8:1946
                                  ipVersion:
                                    type: string
                                    example: IPv6
                                  latitude:
                                    type: string
                                    example: '39.76'
                                  locationAlpha2:
                                    type: string
                                    example: US
                                  locationName:
                                    type: string
                                    example: United States
                                  longitude:
                                    type: string
                                    example: '-98.5'
                                  subdivision1Name:
                                    type: string
                                  subdivision2Name:
                                    type: string
                          links:
                            type: object
                            properties:
                              link:
                                type: object
                                required:
                                  - href
                                  - text
                                properties:
                                  href:
                                    type: string
                                    description: Outgoing link detected in the DOM
                                    example: https://www.iana.org/domains/example
                                  text:
                                    type: string
                                    example: More information...
                          meta:
                            type: object
                            required:
                              - processors
                            properties:
                              processors:
                                type: object
                                required:
                                  - tech
                                  - categories
                                  - rank
                                  - phishing
                                properties:
                                  categories:
                                    type: object
                                    required:
                                      - content
                                      - risks
                                    properties:
                                      content:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - id
                                            - name
                                          properties:
                                            id:
                                              type: integer
                                              example: 155
                                            name:
                                              type: string
                                              example: Technology
                                            super_category_id:
                                              type: integer
                                      risks:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - id
                                            - super_category_id
                                            - name
                                          properties:
                                            id:
                                              type: integer
                                              example: 17
                                            name:
                                              type: string
                                              example: Newly Seen Domains
                                            super_category_id:
                                              type: integer
                                              example: 32
                                  phishing:
                                    type: array
                                    items:
                                      type: string
                                      example: CredentialHarvester
                                  rank:
                                    type: object
                                    required:
                                      - name
                                      - bucket
                                    properties:
                                      bucket:
                                        type: string
                                        example: '500'
                                      name:
                                        type: string
                                        example: example.com
                                      rank:
                                        type: integer
                                        description: >-
                                          Rank in the Global Radar Rank, if set.
                                          See more at
                                          https://blog.cloudflare.com/radar-domain-rankings/
                                  tech:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - slug
                                        - categories
                                        - confidence
                                        - icon
                                        - website
                                        - evidence
                                      properties:
                                        categories:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - id
                                              - slug
                                              - groups
                                              - name
                                              - priority
                                            properties:
                                              groups:
                                                type: array
                                                items:
                                                  type: integer
                                              id:
                                                type: integer
                                                example: 63
                                              name:
                                                type: string
                                                example: IAAS
                                              priority:
                                                type: integer
                                                example: 8
                                              slug:
                                                type: string
                                                example: iaas
                                        confidence:
                                          type: integer
                                          example: 100
                                        description:
                                          type: string
                                        evidence:
                                          type: object
                                          required:
                                            - patterns
                                            - impliedBy
                                          properties:
                                            impliedBy:
                                              type: array
                                              items:
                                                type: string
                                            patterns:
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - type
                                                  - regex
                                                  - value
                                                  - match
                                                  - name
                                                  - confidence
                                                  - version
                                                  - implies
                                                  - excludes
                                                properties:
                                                  confidence:
                                                    type: integer
                                                    example: 100
                                                  excludes:
                                                    type: array
                                                    items:
                                                      type: string
                                                  implies:
                                                    type: array
                                                    items:
                                                      type: string
                                                  match:
                                                    type: string
                                                    example: ECS
                                                  name:
                                                    type: string
                                                    description: Header or Cookie name when set
                                                    example: server
                                                  regex:
                                                    type: string
                                                    example: ^ECS
                                                  type:
                                                    type: string
                                                    example: headers
                                                  value:
                                                    type: string
                                                    example: ECS (dcb/7EEE)
                                                  version:
                                                    type: string
                                        icon:
                                          type: string
                                          example: Amazon ECS.svg
                                        name:
                                          type: string
                                          example: Amazon ECS
                                        slug:
                                          type: string
                                          example: amazon-ecs
                                        website:
                                          type: string
                                          example: https://aws.amazon.com/ecs/
                          page:
                            type: object
                            required:
                              - url
                              - domain
                              - country
                              - countryLocationAlpha2
                              - subdivision1Name
                              - subdivision2name
                              - ip
                              - asn
                              - asnname
                              - asnLocationAlpha2
                              - cookies
                              - headers
                              - status
                              - js
                              - console
                              - securityViolations
                            properties:
                              asn:
                                type: string
                                example: '15133'
                              asnLocationAlpha2:
                                type: string
                                example: US
                              asnname:
                                type: string
                                example: EDGECAST
                              console:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                    - text
                                    - category
                                  properties:
                                    category:
                                      type: string
                                      example: network
                                    text:
                                      type: string
                                      example: >-
                                        Failed to load resource: the server
                                        responded with a status of 404 (Not
                                        Found)
                                    type:
                                      type: string
                                      example: error
                                    url:
                                      type: string
                                      example: http://example.com/favicon.ico
                              cookies:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                    - value
                                    - domain
                                    - path
                                    - expires
                                    - size
                                    - httpOnly
                                    - secure
                                    - session
                                    - sameParty
                                    - sourceScheme
                                    - sourcePort
                                  properties:
                                    domain:
                                      type: string
                                      example: rkmod.somee.com
                                    expires:
                                      type: number
                                      example: -1
                                    httpOnly:
                                      type: boolean
                                    name:
                                      type: string
                                      example: b
                                    path:
                                      type: string
                                      example: /
                                    priority:
                                      type: string
                                      example: Medium
                                    sameParty:
                                      type: boolean
                                    secure:
                                      type: boolean
                                    session:
                                      type: boolean
                                      example: true
                                    size:
                                      type: number
                                      example: 2
                                    sourcePort:
                                      type: number
                                      example: 443
                                    sourceScheme:
                                      type: string
                                      example: Secure
                                    value:
                                      type: string
                                      example: b
                              country:
                                type: string
                                example: United States
                              countryLocationAlpha2:
                                type: string
                                example: US
                              domain:
                                type: string
                                example: example.com
                              headers:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - name
                                    - value
                                  properties:
                                    name:
                                      type: string
                                      example: Content-Length
                                    value:
                                      type: string
                                      example: '648'
                              ip:
                                type: string
                                example: 2606:2800:220:1:248:1893:25c8:1946
                              js:
                                type: object
                                required:
                                  - variables
                                properties:
                                  variables:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - name
                                        - type
                                      properties:
                                        name:
                                          type: string
                                          example: checkFrame
                                        type:
                                          type: string
                                          example: string
                              securityViolations:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - text
                                    - category
                                    - url
                                  properties:
                                    category:
                                      type: string
                                      example: csp
                                    text:
                                      type: string
                                      example: >-
                                        [Report Only] Refused to load the
                                        stylesheet
                                        'https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css'
                                        because it violates the following
                                        Content Security Policy directive: ... 
                                    url:
                                      type: string
                                      example: http://example.com/
                              status:
                                type: number
                                example: 200
                              subdivision1Name:
                                type: string
                              subdivision2name:
                                type: string
                              url:
                                type: string
                                example: http://example.com/
                          performance:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - entryType
                                - startTime
                                - duration
                                - initiatorType
                                - nextHopProtocol
                                - workerStart
                                - redirectStart
                                - redirectEnd
                                - fetchStart
                                - domainLookupStart
                                - domainLookupEnd
                                - connectStart
                                - connectEnd
                                - secureConnectionStart
                                - requestStart
                                - responseStart
                                - responseEnd
                                - transferSize
                                - encodedBodySize
                                - decodedBodySize
                                - unloadEventStart
                                - unloadEventEnd
                                - domInteractive
                                - domContentLoadedEventStart
                                - domContentLoadedEventEnd
                                - domComplete
                                - loadEventStart
                                - loadEventEnd
                                - type
                                - redirectCount
                              properties:
                                connectEnd:
                                  type: number
                                  example: 82.59999999403954
                                connectStart:
                                  type: number
                                  example: 72.79999999701977
                                decodedBodySize:
                                  type: number
                                  example: 1256
                                domComplete:
                                  type: number
                                  example: 306
                                domContentLoadedEventEnd:
                                  type: number
                                  example: 305.8999999910593
                                domContentLoadedEventStart:
                                  type: number
                                  example: 305.8999999910593
                                domInteractive:
                                  type: number
                                  example: 305.8999999910593
                                domainLookupEnd:
                                  type: number
                                  example: 72.79999999701977
                                domainLookupStart:
                                  type: number
                                  example: 2.199999988079071
                                duration:
                                  type: number
                                  example: 306
                                encodedBodySize:
                                  type: number
                                  example: 648
                                entryType:
                                  type: string
                                  example: navigation
                                fetchStart:
                                  type: number
                                  example: 0.8999999910593033
                                initiatorType:
                                  type: string
                                  example: navigation
                                loadEventEnd:
                                  type: number
                                  example: 306
                                loadEventStart:
                                  type: number
                                  example: 306
                                name:
                                  type: string
                                  example: http://example.com/
                                nextHopProtocol:
                                  type: string
                                  example: http/1.1
                                redirectCount:
                                  type: number
                                redirectEnd:
                                  type: number
                                redirectStart:
                                  type: number
                                requestStart:
                                  type: number
                                  example: 82.69999998807907
                                responseEnd:
                                  type: number
                                  example: 270.8999999910593
                                responseStart:
                                  type: number
                                  example: 265.69999998807907
                                secureConnectionStart:
                                  type: number
                                startTime:
                                  type: number
                                transferSize:
                                  type: number
                                  example: 948
                                type:
                                  type: string
                                  example: navigate
                                unloadEventEnd:
                                  type: number
                                unloadEventStart:
                                  type: number
                                workerStart:
                                  type: number
                          task:
                            type: object
                            required:
                              - uuid
                              - url
                              - status
                              - success
                              - errors
                              - time
                              - timeEnd
                              - visibility
                              - clientLocation
                              - clientType
                              - effectiveUrl
                              - scannedFrom
                            properties:
                              clientLocation:
                                type: string
                                description: Submitter location
                                example: PT
                              clientType:
                                type: string
                                enum:
                                  - Site
                                  - Automatic
                                  - Api
                              effectiveUrl:
                                type: string
                                description: >-
                                  URL of the primary request, after all HTTP
                                  redirects
                                example: http://example.com/
                              errors:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - message
                                  properties:
                                    message:
                                      type: string
                              scannedFrom:
                                type: object
                                required:
                                  - colo
                                properties:
                                  colo:
                                    type: string
                                    description: IATA code of Cloudflare datacenter
                                    example: MAD
                              status:
                                type: string
                                enum:
                                  - Queued
                                  - InProgress
                                  - InPostProcessing
                                  - Finished
                              success:
                                type: boolean
                                example: true
                              time:
                                type: string
                                example: '2023-05-03T17:05:04.843Z'
                              timeEnd:
                                type: string
                                example: '2023-05-03T17:05:19.374Z'
                              url:
                                type: string
                                description: Submitted URL
                                example: http://example.com
                              uuid:
                                type: string
                                description: Scan ID
                                example: 2ee568d0-bf70-4827-b922-b7088c0f056f
                              visibility:
                                type: string
                                enum:
                                  - Public
                                  - Unlisted
                          verdicts:
                            type: object
                            required:
                              - overall
                            properties:
                              overall:
                                type: object
                                required:
                                  - malicious
                                  - categories
                                  - phishing
                                properties:
                                  categories:
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - id
                                        - super_category_id
                                        - name
                                      properties:
                                        id:
                                          type: number
                                          example: 117
                                        name:
                                          type: string
                                          example: Malware
                                        super_category_id:
                                          type: number
                                          example: 32
                                  malicious:
                                    type: boolean
                                    description: >-
                                      At least one of our subsystems marked the
                                      site as potentially malicious at the time
                                      of the scan.
                                    example: true
                                  phishing:
                                    type: array
                                    items:
                                      type: string
                                      example: Credential Harvester
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '202':
          description: >-
            Scan is in progress. Check current status in
            `result.scan.task.status`. Possible statuses:
            `Queued`,`InProgress`,`InPostProcessing`,`Finished`.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: In Progress
                  result:
                    type: object
                    required:
                      - scan
                    properties:
                      scan:
                        type: object
                        required:
                          - task
                        properties:
                          task:
                            type: object
                            required:
                              - uuid
                              - url
                              - status
                              - success
                              - errors
                              - time
                              - visibility
                              - location
                              - region
                              - effectiveUrl
                            properties:
                              effectiveUrl:
                                type: string
                                example: http://example.com/
                              errors:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - message
                                  properties:
                                    message:
                                      type: string
                              location:
                                type: string
                                example: PT
                              region:
                                type: string
                                example: enam
                              status:
                                type: string
                                example: InProgress
                              success:
                                type: boolean
                                example: true
                              time:
                                type: string
                                example: '2023-05-03T17:05:04.843Z'
                              url:
                                type: string
                                example: http://example.com
                              uuid:
                                type: string
                                example: 2ee568d0-bf70-4827-b922-b7088c0f056f
                              visibility:
                                type: string
                                example: Public
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '400':
          description: Invalid params.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan ID is not a valid uuid.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '404':
          description: Scan not found.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan not found.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{accountId}/urlscanner/scan/{scanId}/har:
    get:
      tags:
        - Accounts
        - HAR
        - Scan's
        - Scans
        - URL
        - URL Scanner
      summary: 'Get URL Scan''s HAR '
      description: >-
        Get a URL scan's HAR file. See HAR spec at
        http://www.softwareishard.com/blog/har-12-spec/.
      operationId: urlscanner-get-scan-har
      parameters:
        - name: scanId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: Scan uuid
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account Id
      responses:
        '200':
          description: Returns the scan's har.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Error
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: OK
                  result:
                    type: object
                    required:
                      - har
                    properties:
                      har:
                        type: object
                        required:
                          - log
                        properties:
                          log:
                            type: object
                            required:
                              - version
                              - creator
                              - pages
                              - entries
                            properties:
                              creator:
                                type: object
                                required:
                                  - name
                                  - version
                                  - comment
                                properties:
                                  comment:
                                    type: string
                                    example: https://github.com/sitespeedio/chrome-har
                                  name:
                                    type: string
                                    example: chrome-har
                                  version:
                                    type: string
                                    example: 0.13.1
                              entries:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - cache
                                    - startedDateTime
                                    - _requestId
                                    - _initialPriority
                                    - _priority
                                    - pageref
                                    - request
                                    - time
                                    - _initiator_type
                                    - _resourceType
                                    - response
                                    - connection
                                    - serverIPAddress
                                    - _requestTime
                                  properties:
                                    _initialPriority:
                                      type: string
                                      example: VeryHigh
                                    _initiator_type:
                                      type: string
                                      example: other
                                    _priority:
                                      type: string
                                      example: VeryHigh
                                    _requestId:
                                      type: string
                                      example: DDC779F0CB3746BAF283EC1A51B0F2F8
                                    _requestTime:
                                      type: number
                                      example: 114135.331081
                                    _resourceType:
                                      type: string
                                      example: document
                                    cache:
                                      type: object
                                    connection:
                                      type: string
                                      example: '33'
                                    pageref:
                                      type: string
                                      example: page_1
                                    request:
                                      type: object
                                      required:
                                        - method
                                        - url
                                        - headersSize
                                        - bodySize
                                        - headers
                                        - httpVersion
                                      properties:
                                        bodySize:
                                          type: number
                                        headers:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - name
                                              - value
                                            properties:
                                              name:
                                                type: string
                                                example: Upgrade-Insecure-Requests
                                              value:
                                                type: string
                                                example: '1'
                                        headersSize:
                                          type: number
                                          example: 197
                                        httpVersion:
                                          type: string
                                          example: http/1.1
                                        method:
                                          type: string
                                          example: GET
                                        url:
                                          type: string
                                          example: http://example.com/
                                    response:
                                      type: object
                                      required:
                                        - httpVersion
                                        - redirectURL
                                        - status
                                        - statusText
                                        - content
                                        - headersSize
                                        - bodySize
                                        - headers
                                        - _transferSize
                                      properties:
                                        _transferSize:
                                          type: number
                                          example: 1071
                                        bodySize:
                                          type: number
                                          example: 648
                                        content:
                                          type: object
                                          required:
                                            - mimeType
                                            - size
                                          properties:
                                            compression:
                                              type: integer
                                              example: 608
                                            mimeType:
                                              type: string
                                              example: text/html
                                            size:
                                              type: number
                                              example: 1256
                                        headers:
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - name
                                              - value
                                            properties:
                                              name:
                                                type: string
                                                example: Content-Encoding
                                              value:
                                                type: string
                                                example: gzip
                                        headersSize:
                                          type: number
                                          example: 423
                                        httpVersion:
                                          type: string
                                          example: http/1.1
                                        redirectURL:
                                          type: string
                                        status:
                                          type: number
                                          example: 200
                                        statusText:
                                          type: string
                                          example: OK
                                    serverIPAddress:
                                      type: string
                                      example: 2606:2800:220:1:248:1893:25c8:1946
                                    startedDateTime:
                                      type: string
                                      example: '2023-05-03T17:05:13.196Z'
                                    time:
                                      type: number
                                      example: 268.64
                              pages:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - startedDateTime
                                    - title
                                    - pageTimings
                                  properties:
                                    id:
                                      type: string
                                      example: page_1
                                    pageTimings:
                                      type: object
                                      required:
                                        - onLoad
                                        - onContentLoad
                                      properties:
                                        onContentLoad:
                                          type: number
                                          example: 305.408
                                        onLoad:
                                          type: number
                                          example: 305.169
                                    startedDateTime:
                                      type: string
                                      example: '2023-05-03T17:05:13.195Z'
                                    title:
                                      type: string
                                      example: http://example.com/
                              version:
                                type: string
                                example: '1.2'
                  success:
                    type: boolean
                    description: Whether search request was successful or not
        '202':
          description: >-
            Scan is in progress. Check current status in
            `result.scan.task.status`. Possible statuses:
            `Queued`,`InProgress`,`InPostProcessing`,`Finished`.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: In Progress
                  result:
                    type: object
                    required:
                      - scan
                    properties:
                      scan:
                        type: object
                        required:
                          - task
                        properties:
                          task:
                            type: object
                            required:
                              - uuid
                              - url
                              - status
                              - success
                              - errors
                              - time
                              - visibility
                              - location
                              - region
                              - effectiveUrl
                            properties:
                              effectiveUrl:
                                type: string
                                example: http://example.com/
                              errors:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - message
                                  properties:
                                    message:
                                      type: string
                              location:
                                type: string
                                example: PT
                              region:
                                type: string
                                example: enam
                              status:
                                type: string
                                example: InProgress
                              success:
                                type: boolean
                                example: true
                              time:
                                type: string
                                example: '2023-05-03T17:05:04.843Z'
                              url:
                                type: string
                                example: http://example.com
                              uuid:
                                type: string
                                example: 2ee568d0-bf70-4827-b922-b7088c0f056f
                              visibility:
                                type: string
                                example: Public
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '400':
          description: Invalid params.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan ID is not a valid uuid.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '404':
          description: Scan not found.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan not found.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{accountId}/urlscanner/scan/{scanId}/screenshot:
    get:
      tags:
        - Accounts
        - Scans
        - Screenshot
        - URL Scanner
      summary: 'Get Screenshot '
      description: Get scan's screenshot by resolution (desktop/mobile/tablet).
      operationId: urlscanner-get-scan-screenshot
      parameters:
        - name: scanId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            description: Scan uuid
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            description: Account Id
        - name: resolution
          in: query
          schema:
            type: string
            description: Target device type
            enum:
              - desktop
              - mobile
              - tablet
            default: desktop
      responses:
        '200':
          description: Returns the scan's requested screenshot.
          content:
            image/png:
              schema:
                type: string
                description: PNG Image
        '202':
          description: >-
            Scan is in progress. Check current status in
            `result.scan.task.status`. Possible statuses:
            `Queued`,`InProgress`,`InPostProcessing`,`Finished`.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                  - result
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: In Progress
                  result:
                    type: object
                    required:
                      - scan
                    properties:
                      scan:
                        type: object
                        required:
                          - task
                        properties:
                          task:
                            type: object
                            required:
                              - uuid
                              - url
                              - status
                              - success
                              - errors
                              - time
                              - visibility
                              - location
                              - region
                              - effectiveUrl
                            properties:
                              effectiveUrl:
                                type: string
                                example: http://example.com/
                              errors:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - message
                                  properties:
                                    message:
                                      type: string
                              location:
                                type: string
                                example: PT
                              region:
                                type: string
                                example: enam
                              status:
                                type: string
                                example: InProgress
                              success:
                                type: boolean
                                example: true
                              time:
                                type: string
                                example: '2023-05-03T17:05:04.843Z'
                              url:
                                type: string
                                example: http://example.com
                              uuid:
                                type: string
                                example: 2ee568d0-bf70-4827-b922-b7088c0f056f
                              visibility:
                                type: string
                                example: Public
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '400':
          description: Invalid params.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan ID is not a valid uuid.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
        '404':
          description: Scan not found.
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                  - errors
                  - success
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                          example: Scan not found.
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - message
                      properties:
                        message:
                          type: string
                  success:
                    type: boolean
                    description: Whether request was successful or not
      security:
        - api_email: []
          api_key: []
          api_token: []
  /accounts/{identifier}/access/apps:
    get:
      tags:
        - Access
        - Accounts
        - Applications
      summary: 'List Access Applications '
      description: Lists all Access applications in an account.
      operationId: access-applications-list-access-applications
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access applications response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_apps_components-schemas-response_collection
        4XX:
          description: List Access applications response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Applications
      summary: 'Add An Access Application '
      description: Adds a new application to Access.
      operationId: access-applications-add-an-application
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_apps'
      responses:
        '201':
          description: Add an application response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/access_apps_components-schemas-single_response
                  - properties:
                      result:
                        $ref: '#/components/schemas/access_apps'
        4XX:
          description: Add a Bookmark application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/apps/{app_id}:
    delete:
      tags:
        - Access
        - Accounts
        - Applications
      summary: 'Delete An Access Application '
      description: Deletes an application from Access.
      operationId: access-applications-delete-an-access-application
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Applications
      summary: 'Get An Access Application '
      description: Fetches information about an Access application.
      operationId: access-applications-get-an-access-application
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access application response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_apps_components-schemas-single_response
        4XX:
          description: Get an Access application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Applications
      summary: 'Update An Access Application '
      description: Updates an Access application.
      operationId: access-applications-update-a-bookmark-application
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_apps'
      responses:
        '200':
          description: Update an Access application response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/access_apps_components-schemas-single_response
                  - properties:
                      result:
                        $ref: '#/components/schemas/access_apps'
        4XX:
          description: Update an Access application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/apps/{app_id}/revoke_tokens:
    post:
      tags:
        - Access
        - Accounts
        - Applications
        - Revoke
        - Tokens
      summary: 'Revoke Application Tokens '
      description: Revokes all tokens issued for an application.
      operationId: access-applications-revoke-service-tokens
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Revoke application tokens response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-empty_response'
        4XX:
          description: Revoke application tokens response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/apps/{app_id}/user_policy_checks:
    get:
      tags:
        - Access
        - Accounts
        - Applications
        - Checks
        - Policies
        - Tests
        - Users
      summary: 'Test Access Policies '
      description: Tests if a specific user has permission to access an application.
      operationId: access-applications-test-access-policies
      parameters:
        - name: app_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_app_id'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Test Access policies response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_policy_check_response'
        4XX:
          description: Test Access policies response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/apps/{uuid}/ca:
    delete:
      tags:
        - Access
        - Accounts
        - Applications
        - CA
        - Certificates
        - Short lived
        - Uu
      summary: 'Delete A Short-lived Certificate CA '
      description: Deletes a short-lived certificate CA.
      operationId: access-short-lived-certificate-c-as-delete-a-short-lived-certificate-ca
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete a short-lived certificate CA response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-id_response'
        4XX:
          description: Delete a short-lived certificate CA response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Applications
        - CA
        - Certificates
        - Short lived
        - Uu
      summary: 'Get A Short-lived Certificate CA '
      description: Fetches a short-lived certificate CA and its public key.
      operationId: access-short-lived-certificate-c-as-get-a-short-lived-certificate-ca
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get a short-lived certificate CA response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_ca_components-schemas-single_response
        4XX:
          description: Get a short-lived certificate CA response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Applications
        - CA
        - Certificates
        - Short lived
        - Uu
      summary: 'Create A Short-lived Certificate CA '
      description: Generates a new short-lived certificate CA and public key.
      operationId: access-short-lived-certificate-c-as-create-a-short-lived-certificate-ca
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Create a short-lived certificate CA response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_ca_components-schemas-single_response
        4XX:
          description: Create a short-lived certificate CA response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/apps/{uuid}/policies:
    get:
      tags:
        - Access
        - Accounts
        - Applications
        - Policies
        - Uu
      summary: 'List Access Policies '
      description: Lists Access policies configured for an application.
      operationId: access-policies-list-access-policies
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access policies response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-response_collection
        4XX:
          description: List Access policies response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Applications
        - Policies
        - Uu
      summary: 'Create An Access Policy '
      description: Create a new Access policy for an application.
      operationId: access-policies-create-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - decision
                - include
              properties:
                approval_groups:
                  $ref: '#/components/schemas/access_approval_groups'
                approval_required:
                  $ref: '#/components/schemas/access_approval_required'
                decision:
                  $ref: '#/components/schemas/access_decision'
                exclude:
                  $ref: '#/components/schemas/access_schemas-exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                isolation_required:
                  $ref: '#/components/schemas/access_isolation_required'
                name:
                  $ref: '#/components/schemas/access_policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/access_precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/access_purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/access_purpose_justification_required'
                require:
                  $ref: '#/components/schemas/access_schemas-require'
                session_duration:
                  $ref: >-
                    #/components/schemas/access_components-schemas-session_duration
      responses:
        '201':
          description: Create an Access policy response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response
        4XX:
          description: Create an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/apps/{uuid1}/policies/{uuid}:
    delete:
      tags:
        - Access
        - Accounts
        - Applications
        - Policies
        - Uu
      summary: 'Delete An Access Policy '
      description: Delete an Access policy.
      operationId: access-policies-delete-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: uuid1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access policy response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Applications
        - Policies
        - Uu
      summary: 'Get An Access Policy '
      description: Fetches a single Access policy.
      operationId: access-policies-get-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: uuid1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access policy response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response
        4XX:
          description: Get an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Applications
        - Policies
        - Uu
      summary: 'Update An Access Policy '
      description: Update a configured Access policy.
      operationId: access-policies-update-an-access-policy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: uuid1
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - decision
                - include
              properties:
                approval_groups:
                  $ref: '#/components/schemas/access_approval_groups'
                approval_required:
                  $ref: '#/components/schemas/access_approval_required'
                decision:
                  $ref: '#/components/schemas/access_decision'
                exclude:
                  $ref: '#/components/schemas/access_schemas-exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                isolation_required:
                  $ref: '#/components/schemas/access_isolation_required'
                name:
                  $ref: '#/components/schemas/access_policies_components-schemas-name'
                precedence:
                  $ref: '#/components/schemas/access_precedence'
                purpose_justification_prompt:
                  $ref: '#/components/schemas/access_purpose_justification_prompt'
                purpose_justification_required:
                  $ref: '#/components/schemas/access_purpose_justification_required'
                require:
                  $ref: '#/components/schemas/access_schemas-require'
                session_duration:
                  $ref: >-
                    #/components/schemas/access_components-schemas-session_duration
      responses:
        '200':
          description: Update an Access policy response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_policies_components-schemas-single_response
        4XX:
          description: Update an Access policy response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/apps/ca:
    get:
      tags:
        - Access
        - Accounts
        - Applications
        - CAs
        - Certificates
        - Short lived
      summary: 'List Short-lived Certificate CAs '
      description: Lists short-lived certificate CAs and their public keys.
      operationId: access-short-lived-certificate-c-as-list-short-lived-certificate-c-as
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List short-lived certificate CAs response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_ca_components-schemas-response_collection
        4XX:
          description: List short-lived certificate CAs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/bookmarks:
    get:
      tags:
        - Access
        - Accounts
        - Applications
        - Bookmarks
      summary: 'List Bookmark Applications '
      description: Lists Bookmark applications.
      operationId: access-bookmark-applications-(-deprecated)-list-bookmark-applications
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      responses:
        '200':
          description: List Bookmark applications response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_bookmarks_components-schemas-response_collection
        4XX:
          description: List Bookmark applications response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/bookmarks/{uuid}:
    delete:
      tags:
        - Access
        - Accounts
        - Applications
        - Bookmarks
        - Uu
      summary: 'Delete A Bookmark Application '
      description: Deletes a Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-delete-a-bookmark-application
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Delete a Bookmark application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete a Bookmark application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Applications
        - Bookmarks
        - Uu
      summary: 'Get A Bookmark Application '
      description: Fetches a single Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-get-a-bookmark-application
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      responses:
        '200':
          description: Get a Bookmark application response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_bookmarks_components-schemas-single_response
        4XX:
          description: Get a Bookmark application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Applications
        - Bookmarks
        - Uu
      summary: 'Create A Bookmark Application '
      description: Create a new Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-create-a-bookmark-application
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Create a Bookmark application response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_bookmarks_components-schemas-single_response
        4XX:
          description: Create a Bookmark application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Applications
        - Bookmarks
        - Uu
      summary: 'Update A Bookmark Application '
      description: Updates a configured Bookmark application.
      operationId: access-bookmark-applications-(-deprecated)-update-a-bookmark-application
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_schemas-identifier'
      requestBody:
        required: true
        content:
          application/json: {}
      responses:
        '200':
          description: Update a Bookmark application response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_bookmarks_components-schemas-single_response
        4XX:
          description: Update a Bookmark application response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      deprecated: true
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/certificates:
    get:
      tags:
        - Access
        - Accounts
        - Certificates
        - TLS
      summary: 'List M TLS Certificates '
      description: Lists all mTLS root certificates.
      operationId: access-mtls-authentication-list-mtls-certificates
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List mTLS certificates response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-response_collection
        4XX:
          description: List mTLS certificates response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Certificates
        - TLS
      summary: 'Add An M TLS Certificate '
      description: Adds a new mTLS root certificate to Access.
      operationId: access-mtls-authentication-add-an-mtls-certificate
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - certificate
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/access_associated_hostnames'
                certificate:
                  type: string
                  description: The certificate content.
                  example: >-
                    --BEGIN CERTIFICATE--

                    MIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10

                    DrUtmu/B

                    --END CERTIFICATE--
                name:
                  $ref: >-
                    #/components/schemas/access_certificates_components-schemas-name
      responses:
        '201':
          description: Add an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-single_response
        4XX:
          description: Add an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/certificates/{uuid}:
    delete:
      tags:
        - Access
        - Accounts
        - Certificates
        - TLS
        - Uu
      summary: 'Delete An M TLS Certificate '
      description: Deletes an mTLS certificate.
      operationId: access-mtls-authentication-delete-an-mtls-certificate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Delete an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_components-schemas-id_response'
        4XX:
          description: Delete an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Certificates
        - TLS
        - Uu
      summary: 'Get An M TLS Certificate '
      description: Fetches a single mTLS certificate.
      operationId: access-mtls-authentication-get-an-mtls-certificate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-single_response
        4XX:
          description: Get an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Certificates
        - TLS
        - Uu
      summary: 'Update An M TLS Certificate '
      description: Updates a configured mTLS certificate.
      operationId: access-mtls-authentication-update-an-mtls-certificate
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - associated_hostnames
              properties:
                associated_hostnames:
                  $ref: '#/components/schemas/access_associated_hostnames'
                name:
                  $ref: >-
                    #/components/schemas/access_certificates_components-schemas-name
      responses:
        '200':
          description: Update an mTLS certificate response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_certificates_components-schemas-single_response
        4XX:
          description: Update an mTLS certificate response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/certificates/settings:
    get:
      tags:
        - Access
        - Accounts
        - Certificates
        - Host Names
        - Settings
        - TLS
      summary: 'List All M TLS Hostname Settings '
      description: List all mTLS hostname settings for this account.
      operationId: access-mtls-authentication-list-mtls-certificates-hostname-settings
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List mTLS hostname settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_response_collection_hostnames'
        4XX:
          description: List mTLS hostname settings response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Certificate's
        - Certificates
        - Host Names
        - Settings
        - TLS
      summary: 'Update An M TLS Certificate''s Hostname Settings '
      description: Updates an mTLS certificate's hostname settings.
      operationId: access-mtls-authentication-update-an-mtls-certificate-settings
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - settings
              properties:
                settings:
                  type: array
                  items:
                    $ref: '#/components/schemas/access_settings'
      responses:
        '202':
          description: Update an mTLS certificates hostname settings response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_response_collection_hostnames'
        4XX:
          description: Update an mTLS certificates hostname settings failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/custom_pages:
    get:
      tags:
        - Access
        - Accounts
        - Custom
        - Pages
      summary: 'List Custom Pages '
      description: List custom pages
      operationId: access-custom-pages-list-custom-pages
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List custom pages response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_custom-pages_components-schemas-response_collection
        4XX:
          description: List custom pages response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Custom
        - Page
        - Pages
      summary: 'Create A Custom Page '
      description: Create a custom page
      operationId: access-custom-pages-create-a-custom-page
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_custom_page'
      responses:
        '201':
          description: Create a custom page response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_single_response_without_html'
        4XX:
          description: Create a custom page response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/custom_pages/{uuid}:
    delete:
      tags:
        - Access
        - Accounts
        - Custom
        - Page
        - Pages
        - Uu
      summary: 'Delete A Custom Page '
      description: Delete a custom page
      operationId: access-custom-pages-delete-a-custom-page
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete a custom page response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_components-schemas-id_response'
        4XX:
          description: Delete a custom page response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Custom
        - Page
        - Pages
        - Uu
      summary: 'Get A Custom Page '
      description: Fetches a custom page and also returns its HTML.
      operationId: access-custom-pages-get-a-custom-page
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get a custom page response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_custom-pages_components-schemas-single_response
        4XX:
          description: Get a custom page response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Custom
        - Page
        - Pages
        - Uu
      summary: 'Update A Custom Page '
      description: Update a custom page
      operationId: access-custom-pages-update-a-custom-page
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_custom_page'
      responses:
        '200':
          description: Update a custom page response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_single_response_without_html'
        4XX:
          description: Update a custom page response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/groups:
    get:
      tags:
        - Access
        - Accounts
        - Groups
      summary: 'List Access Groups '
      description: Lists all Access groups.
      operationId: access-groups-list-access-groups
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access groups response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-response_collection'
        4XX:
          description: List Access groups response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Groups
      summary: 'Create An Access Group '
      description: Creates a new Access group.
      operationId: access-groups-create-an-access-group
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - include
              properties:
                exclude:
                  $ref: '#/components/schemas/access_exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                is_default:
                  $ref: '#/components/schemas/access_is_default'
                name:
                  $ref: '#/components/schemas/access_components-schemas-name'
                require:
                  $ref: '#/components/schemas/access_require'
      responses:
        '201':
          description: Create an Access group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_components-schemas-single_response'
        4XX:
          description: Create an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/groups/{uuid}:
    delete:
      tags:
        - Access
        - Accounts
        - Groups
        - Uu
      summary: 'Delete An Access Group '
      description: Deletes an Access group.
      operationId: access-groups-delete-an-access-group
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Groups
        - Uu
      summary: 'Get An Access Group '
      description: Fetches a single Access group.
      operationId: access-groups-get-an-access-group
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_components-schemas-single_response'
        4XX:
          description: Get an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Groups
        - Uu
      summary: 'Update An Access Group '
      description: Updates a configured Access group.
      operationId: access-groups-update-an-access-group
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - include
              properties:
                exclude:
                  $ref: '#/components/schemas/access_exclude'
                include:
                  $ref: '#/components/schemas/access_include'
                is_default:
                  $ref: '#/components/schemas/access_is_default'
                name:
                  $ref: '#/components/schemas/access_components-schemas-name'
                require:
                  $ref: '#/components/schemas/access_require'
      responses:
        '200':
          description: Update an Access group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_components-schemas-single_response'
        4XX:
          description: Update an Access group response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/identity_providers:
    get:
      tags:
        - Access
        - Accounts
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
      summary: 'List Access Identity Providers '
      description: Lists all configured identity providers.
      operationId: access-identity-providers-list-access-identity-providers
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List Access identity providers response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_response_collection'
        4XX:
          description: List Access identity providers response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
      summary: 'Add An Access Identity Provider '
      description: Adds a new identity provider to Access.
      operationId: access-identity-providers-add-an-access-identity-provider
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_identity-providers'
      responses:
        '201':
          description: Add an Access identity provider response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-single_response'
        4XX:
          description: Add an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/identity_providers/{uuid}:
    delete:
      tags:
        - Access
        - Accounts
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Uu
      summary: 'Delete An Access Identity Provider '
      description: Deletes an identity provider from Access.
      operationId: access-identity-providers-delete-an-access-identity-provider
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '202':
          description: Delete an Access identity provider response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_id_response'
        4XX:
          description: Delete an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Uu
      summary: 'Get An Access Identity Provider '
      description: Fetches a configured identity provider.
      operationId: access-identity-providers-get-an-access-identity-provider
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get an Access identity provider response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-single_response'
        4XX:
          description: Get an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Entities
        - Ers
        - Identity
        - Prov
        - Providers
        - Uu
      summary: 'Update An Access Identity Provider '
      description: Updates a configured identity provider.
      operationId: access-identity-providers-update-an-access-identity-provider
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_identity-providers'
      responses:
        '200':
          description: Update an Access identity provider response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_schemas-single_response'
        4XX:
          description: Update an Access identity provider response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/keys:
    get:
      tags:
        - Access
        - Accounts
        - Configurations
        - Keys
      summary: 'Get The Access Key Configuration '
      description: Gets the Access key rotation settings for an account.
      operationId: access-key-configuration-get-the-access-key-configuration
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get the Access key configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_keys_components-schemas-single_response
        4XX:
          description: Get the Access key configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Configurations
        - Keys
      summary: 'Update The Access Key Configuration '
      description: Updates the Access key rotation settings for an account.
      operationId: access-key-configuration-update-the-access-key-configuration
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - key_rotation_interval_days
              properties:
                key_rotation_interval_days:
                  $ref: '#/components/schemas/access_key_rotation_interval_days'
      responses:
        '200':
          description: Update the Access key configuration response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_keys_components-schemas-single_response
        4XX:
          description: Update the Access key configuration response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/keys/rotate:
    post:
      tags:
        - Access
        - Accounts
        - Keys
        - Rotate
      summary: 'Rotate Access Keys '
      description: Perfoms a key rotation for an account.
      operationId: access-key-configuration-rotate-access-keys
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Rotate Access keys response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_keys_components-schemas-single_response
        4XX:
          description: Rotate Access keys response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/logs/access_requests:
    get:
      tags:
        - Access
        - Accounts
        - Authentication
        - Logs
      summary: 'Get Access Authentication Logs '
      description: Gets a list of Access authentication audit logs for an account.
      operationId: access-authentication-logs-get-access-authentication-logs
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get Access authentication logs response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_access-requests_components-schemas-response_collection
        4XX:
          description: Get Access authentication logs response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/organizations:
    get:
      tags:
        - Access
        - Accounts
        - Organizations
        - Trust
        - Your
      summary: 'Get Your Zero Trust Organization '
      description: Returns the configuration for your Zero Trust organization.
      operationId: zero-trust-organization-get-your-zero-trust-organization
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get your Zero Trust organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_single_response'
        4XX:
          description: Get your Zero Trust organization response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Organizations
        - Trust
        - Your
      summary: 'Create Your Zero Trust Organization '
      description: Sets up a Zero Trust organization for your account.
      operationId: zero-trust-organization-create-your-zero-trust-organization
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - auth_domain
              properties:
                allow_authenticate_via_warp:
                  $ref: '#/components/schemas/access_allow_authenticate_via_warp'
                auth_domain:
                  $ref: '#/components/schemas/access_auth_domain'
                auto_redirect_to_identity:
                  $ref: '#/components/schemas/access_auto_redirect_to_identity'
                is_ui_read_only:
                  $ref: '#/components/schemas/access_is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/access_login_design'
                name:
                  $ref: '#/components/schemas/access_name'
                session_duration:
                  $ref: '#/components/schemas/access_session_duration'
                ui_read_only_toggle_reason:
                  $ref: '#/components/schemas/access_ui_read_only_toggle_reason'
                user_seat_expiration_inactive_time:
                  $ref: >-
                    #/components/schemas/access_user_seat_expiration_inactive_time
                warp_auth_session_duration:
                  $ref: '#/components/schemas/access_warp_auth_session_duration'
      responses:
        '201':
          description: Create your Zero Trust organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_single_response'
        4XX:
          description: Create your Zero Trust organization response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Organizations
        - Trust
        - Your
      summary: 'Update Your Zero Trust Organization '
      description: Updates the configuration for your Zero Trust organization.
      operationId: zero-trust-organization-update-your-zero-trust-organization
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                allow_authenticate_via_warp:
                  $ref: '#/components/schemas/access_allow_authenticate_via_warp'
                auth_domain:
                  $ref: '#/components/schemas/access_auth_domain'
                auto_redirect_to_identity:
                  $ref: '#/components/schemas/access_auto_redirect_to_identity'
                custom_pages:
                  $ref: '#/components/schemas/access_custom_pages'
                is_ui_read_only:
                  $ref: '#/components/schemas/access_is_ui_read_only'
                login_design:
                  $ref: '#/components/schemas/access_login_design'
                name:
                  $ref: '#/components/schemas/access_name'
                session_duration:
                  $ref: '#/components/schemas/access_session_duration'
                ui_read_only_toggle_reason:
                  $ref: '#/components/schemas/access_ui_read_only_toggle_reason'
                user_seat_expiration_inactive_time:
                  $ref: >-
                    #/components/schemas/access_user_seat_expiration_inactive_time
                warp_auth_session_duration:
                  $ref: '#/components/schemas/access_warp_auth_session_duration'
      responses:
        '200':
          description: Update your Zero Trust organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_single_response'
        4XX:
          description: Update your Zero Trust organization response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/organizations/revoke_user:
    post:
      tags:
        - Access
        - Accounts
        - Organizations
        - Revoke
        - Tokens
        - Users
      summary: 'Revoke All Access Tokens For A User '
      description: Revokes a user's access across all applications.
      operationId: zero-trust-organization-revoke-all-access-tokens-for-a-user
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - email
              properties:
                email:
                  type: string
                  description: The email of the user to revoke.
                  example: test@example.com
      responses:
        '200':
          description: Revoke all Access tokens for a user response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_empty_response'
        4xx:
          description: Revoke all Access tokens for a user response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/seats:
    patch:
      tags:
        - Access
        - Accounts
        - Seats
        - Users
      summary: 'Update A User Seat '
      description: >-
        Removes a user from a Zero Trust seat when both `access_seat` and
        `gateway_seat` are set to false.
      operationId: zero-trust-seats-update-a-user-seat
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_seats_definition'
      responses:
        '200':
          description: Update a user seat response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_seats_components-schemas-response_collection
        4XX:
          description: Update a user seat response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/service_tokens:
    get:
      tags:
        - Access
        - Accounts
        - Services
        - Tokens
      summary: 'List Service Tokens '
      description: Lists all service tokens.
      operationId: access-service-tokens-list-service-tokens
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List service tokens response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_components-schemas-response_collection
        4XX:
          description: List service tokens response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Services
        - Tokens
      summary: 'Create A Service Token '
      description: >-
        Generates a new service token. **Note:** This is the only time you can
        get the Client Secret. If you lose the Client Secret, you will have to
        rotate the Client Secret or create a new service token.
      operationId: access-service-tokens-create-a-service-token
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                duration:
                  $ref: '#/components/schemas/access_duration'
                name:
                  $ref: >-
                    #/components/schemas/access_service-tokens_components-schemas-name
      responses:
        '201':
          description: Create a service token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_create_response'
        4XX:
          description: Create a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/service_tokens/{uuid}:
    delete:
      tags:
        - Access
        - Accounts
        - Services
        - Tokens
        - Uu
      summary: 'Delete A Service Token '
      description: Deletes a service token.
      operationId: access-service-tokens-delete-a-service-token
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Delete a service token response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_service-tokens_components-schemas-single_response
        4XX:
          description: Delete a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Services
        - Tokens
        - Uu
      summary: 'Update A Service Token '
      description: Updates a configured service token.
      operationId: access-service-tokens-update-a-service-token
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                duration:
                  $ref: '#/components/schemas/access_duration'
                name:
                  $ref: >-
                    #/components/schemas/access_service-tokens_components-schemas-name
      responses:
        '200':
          description: Update a service token response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_service-tokens_components-schemas-single_response
        4XX:
          description: Update a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/service_tokens/{uuid}/refresh:
    post:
      tags:
        - Access
        - Accounts
        - Refresh
        - Services
        - Tokens
        - Uu
      summary: 'Refresh A Service Token '
      description: Refreshes the expiration of a service token.
      operationId: access-service-tokens-refresh-a-service-token
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Refresh a service token response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_service-tokens_components-schemas-single_response
        4XX:
          description: Refresh a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/service_tokens/{uuid}/rotate:
    post:
      tags:
        - Access
        - Accounts
        - Rotate
        - Services
        - Tokens
        - Uu
      summary: 'Rotate A Service Token '
      description: >-
        Generates a new Client Secret for a service token and revokes the old
        one.
      operationId: access-service-tokens-rotate-a-service-token
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Rotate a service token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_create_response'
        4XX:
          description: Rotate a service token response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/tags:
    get:
      tags:
        - Access
        - Accounts
        - Tags
      summary: 'List Tags '
      description: List tags
      operationId: access-tags-list-tags
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: List tags response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_tags_components-schemas-response_collection
        4XX:
          description: List tags response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    post:
      tags:
        - Access
        - Accounts
        - Tags
      summary: 'Create A Tag '
      description: Create a tag
      operationId: access-tags-create-tag
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_tag_without_app_count'
      responses:
        '201':
          description: Create a tag response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_tags_components-schemas-single_response
        4XX:
          description: Create a tag response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/tags/{name}:
    delete:
      tags:
        - Access
        - Accounts
        - Names
        - Tags
      summary: 'Delete A Tag '
      description: Delete a tag
      operationId: access-tags-delete-a-tag
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_tags_components-schemas-name'
      responses:
        '202':
          description: Delete a tag response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_name_response'
        4XX:
          description: Delete a tag response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    get:
      tags:
        - Access
        - Accounts
        - Names
        - Tags
      summary: 'Get A Tag '
      description: Get a tag
      operationId: access-tags-get-a-tag
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_tags_components-schemas-name'
      responses:
        '200':
          description: Get a tag response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_tags_components-schemas-single_response
        4XX:
          description: Get a tag response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
    put:
      tags:
        - Access
        - Accounts
        - Names
        - Tags
      summary: 'Update A Tag '
      description: Update a tag
      operationId: access-tags-update-a-tag
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
        - name: name
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_tags_components-schemas-name'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_tag_without_app_count'
      responses:
        '200':
          description: Update a tag response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_tags_components-schemas-single_response
        4XX:
          description: Update a tag response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/users:
    get:
      tags:
        - Access
        - Accounts
        - Users
      summary: 'Get Users '
      description: Gets a list of users for an account.
      operationId: zero-trust-users-get-users
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get users response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/access_users_components-schemas-response_collection
        4XX:
          description: Get users response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/users/{id}/active_sessions:
    get:
      tags:
        - Access
        - Accounts
        - Active
        - Sessions
        - Users
      summary: 'Get Active Sessions '
      description: Get active sessions for a single user.
      operationId: zero-trust-users-get-active-sessions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get active sessions response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_active_sessions_response'
        4XX:
          description: Get active sessions response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/users/{id}/active_sessions/{nonce}:
    get:
      tags:
        - Access
        - Accounts
        - Active
        - Nonce
        - Sessions
        - Single
        - Users
      summary: 'Get Single Active Session '
      description: Get an active session for a single user.
      operationId: zero-trust-users-get-active-session
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
        - name: nonce
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_nonce'
      responses:
        '200':
          description: Get active session response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_active_session_response'
        4XX:
          description: Get active session response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/users/{id}/failed_logins:
    get:
      tags:
        - Access
        - Accounts
        - Failed
        - Logins
        - Users
      summary: 'Get Failed Logins '
      description: Get all failed login attempts for a single user.
      operationId: zero-trust-users-get-failed-logins
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get failed logins response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_failed_login_response'
        4XX:
          description: Get failed logins response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
  /accounts/{identifier}/access/users/{id}/last_seen_identity:
    get:
      tags:
        - Access
        - Accounts
        - Entities
        - Identity
        - Last
        - Users
      summary: 'Get Last Seen Identity '
      description: Get last seen identity for a single user.
      operationId: zero-trust-users-get-last-seen-identity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_uuid'
        - name: identifier
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/access_identifier'
      responses:
        '200':
          description: Get active session response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_last_seen_identity_response'
        4XX:
          description: Get active session response failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/access_api-response-common-failure'
      security:
        - api_email: []
          api_key: []
security:
  - api_email: []
    api_key: []
  - api_token: []
  - user_service_key: []
servers:
  - url: https://api.cloudflare.com/client/v4
    description: Client API
tags: []
